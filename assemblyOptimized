    /* "test/solidity/Protocol.t.sol":1140:55422  contract ProtocolTest is Test {... */
  mstore(0x40, 0x80)
    /* "lib/forge-std/lib/ds-test/src/test.sol":1572:1598  bool public IS_TEST = true */
  0x00
  dup1
  sload
    /* "lib/forge-std/lib/ds-test/src/test.sol":1594:1598  true */
  0x01
  not(0xff)
    /* "lib/forge-std/lib/ds-test/src/test.sol":1572:1598  bool public IS_TEST = true */
  swap2
  dup3
  and
  dup2
  or
  swap1
  swap3
  sstore
    /* "lib/forge-std/src/StdChains.sol":3161:3205  bool private fallbackToDefaultRpcUrls = true */
  0x04
  dup1
  sload
  swap1
  swap2
  and
  swap1
  swap2
  or
  swap1
  sstore
    /* "test/solidity/Protocol.t.sol":1140:55422  contract ProtocolTest is Test {... */
  callvalue
  dup1
  iszero
  tag_1
  jumpi
  0x00
  dup1
  revert
tag_1:
  pop
  dataSize(sub_0)
  dup1
  dataOffset(sub_0)
  0x00
  codecopy
  0x00
  return
stop

sub_0: assembly {
        /* "test/solidity/Protocol.t.sol":1140:55422  contract ProtocolTest is Test {... */
      mstore(0x40, 0x80)
      callvalue
      dup1
      iszero
      tag_1
      jumpi
      0x00
      dup1
      revert
    tag_1:
      pop
      jumpi(tag_2, lt(calldatasize, 0x04))
      shr(0xe0, calldataload(0x00))
      dup1
      0x7790ddc6
      gt
      tag_38
      jumpi
      dup1
      0xca1954a0
      gt
      tag_39
      jumpi
      dup1
      0xec4798cb
      gt
      tag_40
      jumpi
      dup1
      0xec4798cb
      eq
      tag_33
      jumpi
      dup1
      0xf1791ed0
      eq
      tag_34
      jumpi
      dup1
      0xfa7626d4
      eq
      tag_35
      jumpi
      dup1
      0xfcb36bea
      eq
      tag_36
      jumpi
      dup1
      0xfd5c7bcf
      eq
      tag_37
      jumpi
      0x00
      dup1
      revert
    tag_40:
      dup1
      0xca1954a0
      eq
      tag_29
      jumpi
      dup1
      0xd9c27cab
      eq
      tag_30
      jumpi
      dup1
      0xe0c6e699
      eq
      tag_31
      jumpi
      dup1
      0xe20c9f71
      eq
      tag_32
      jumpi
      0x00
      dup1
      revert
    tag_39:
      dup1
      0xa68b5a56
      gt
      tag_41
      jumpi
      dup1
      0xa68b5a56
      eq
      tag_24
      jumpi
      dup1
      0xb5508aa9
      eq
      tag_25
      jumpi
      dup1
      0xb6b4ccfa
      eq
      tag_26
      jumpi
      dup1
      0xba414fa6
      eq
      tag_27
      jumpi
      dup1
      0xbc0e1d63
      eq
      tag_28
      jumpi
      0x00
      dup1
      revert
    tag_41:
      dup1
      0x7790ddc6
      eq
      tag_20
      jumpi
      dup1
      0x85226c81
      eq
      tag_21
      jumpi
      dup1
      0x916a17c6
      eq
      tag_22
      jumpi
      dup1
      0x9d87440b
      eq
      tag_23
      jumpi
      0x00
      dup1
      revert
    tag_38:
      dup1
      0x296b7cb8
      gt
      tag_42
      jumpi
      dup1
      0x3f7286f4
      gt
      tag_43
      jumpi
      dup1
      0x3f7286f4
      eq
      tag_15
      jumpi
      dup1
      0x47ab3fe0
      eq
      tag_16
      jumpi
      dup1
      0x663ee1fa
      eq
      tag_17
      jumpi
      dup1
      0x66d9a9a0
      eq
      tag_18
      jumpi
      dup1
      0x71d1991d
      eq
      tag_19
      jumpi
      0x00
      dup1
      revert
    tag_43:
      dup1
      0x296b7cb8
      eq
      tag_11
      jumpi
      dup1
      0x2e871efc
      eq
      tag_12
      jumpi
      dup1
      0x32a5f9f7
      eq
      tag_13
      jumpi
      dup1
      0x3e5e3c23
      eq
      tag_14
      jumpi
      0x00
      dup1
      revert
    tag_42:
      dup1
      0x1b66acc6
      gt
      tag_44
      jumpi
      dup1
      0x1b66acc6
      eq
      tag_7
      jumpi
      dup1
      0x1ed7831c
      eq
      tag_8
      jumpi
      dup1
      0x1f16b988
      eq
      tag_9
      jumpi
      dup1
      0x2290277f
      eq
      tag_10
      jumpi
      0x00
      dup1
      revert
    tag_44:
      dup1
      0x476a34
      eq
      tag_3
      jumpi
      dup1
      0x0a9254e4
      eq
      tag_4
      jumpi
      dup1
      0x0afc9a2e
      eq
      tag_5
      jumpi
      dup1
      0x1b21a8c4
      eq
      tag_6
      jumpi
    tag_2:
      0x00
      dup1
      revert
        /* "test/solidity/Protocol.t.sol":19779:20671  function exitMarket(bytes32 seed) external context(seed) {... */
    tag_3:
      tag_45
      tag_46
      calldatasize
      0x04
      tag_47
      jump	// in
    tag_46:
      tag_48
      jump	// in
    tag_45:
      stop
        /* "test/solidity/Protocol.t.sol":1720:5229  function setUp() external {... */
    tag_4:
      tag_45
      tag_50
      jump	// in
        /* "test/solidity/Protocol.t.sol":11924:12338  function depositAtMaturity(uint56 assets, bytes32 seed) external context(seed) {... */
    tag_5:
      tag_45
      tag_52
      calldatasize
      0x04
      tag_53
      jump	// in
    tag_52:
      tag_54
      jump	// in
        /* "test/solidity/Protocol.t.sol":23043:24676  function withdraw(uint56 assets, bytes32 seed) external context(seed) _deposit(assets, msg.sender) {... */
    tag_6:
      tag_45
      tag_56
      calldatasize
      0x04
      tag_53
      jump	// in
    tag_56:
      tag_57
      jump	// in
        /* "test/solidity/Protocol.t.sol":12342:14767  function withdrawAtMaturity(... */
    tag_7:
      tag_45
      tag_59
      calldatasize
      0x04
      tag_53
      jump	// in
    tag_59:
      tag_60
      jump	// in
        /* "lib/forge-std/src/StdInvariant.sol":2161:2295  function excludeSenders() public view returns (address[] memory excludedSenders_) {... */
    tag_8:
      tag_61
      tag_62
      jump	// in
    tag_61:
      mload(0x40)
      tag_63
      swap2
      swap1
      tag_64
      jump	// in
    tag_63:
      mload(0x40)
      dup1
      swap2
      sub
      swap1
      return
        /* "test/solidity/Protocol.t.sol":30958:31065  function warp(uint32 time) external {... */
    tag_9:
      tag_45
      tag_66
      calldatasize
      0x04
      tag_67
      jump	// in
    tag_66:
      tag_68
      jump	// in
        /* "test/solidity/Protocol.t.sol":18265:18697  function deposit(uint56 assets, bytes32 seed) external context(seed) {... */
    tag_10:
      tag_45
      tag_70
      calldatasize
      0x04
      tag_53
      jump	// in
    tag_70:
      tag_71
      jump	// in
        /* "test/solidity/Protocol.t.sol":21754:22387  function repay(uint56 assets, bytes32 seed) external context(seed) _borrow(assets, msg.sender) {... */
    tag_11:
      tag_45
      tag_73
      calldatasize
      0x04
      tag_53
      jump	// in
    tag_73:
      tag_74
      jump	// in
        /* "test/solidity/Protocol.t.sol":10714:11001  function invariantTotalSupply() external {... */
    tag_12:
      tag_45
      tag_76
      jump	// in
        /* "test/solidity/Protocol.t.sol":24680:26527  function redeem(... */
    tag_13:
      tag_45
      tag_78
      calldatasize
      0x04
      tag_53
      jump	// in
    tag_78:
      tag_79
      jump	// in
        /* "lib/forge-std/src/StdInvariant.sol":2930:3063  function targetSenders() public view returns (address[] memory targetedSenders_) {... */
    tag_14:
      tag_61
      tag_81
      jump	// in
        /* "lib/forge-std/src/StdInvariant.sol":2631:2772  function targetContracts() public view returns (address[] memory targetedContracts_) {... */
    tag_15:
      tag_61
      tag_84
      jump	// in
        /* "test/solidity/Protocol.t.sol":20675:21750  function borrow(... */
    tag_16:
      tag_45
      tag_87
      calldatasize
      0x04
      tag_53
      jump	// in
    tag_87:
      tag_88
      jump	// in
        /* "test/solidity/Protocol.t.sol":26531:27391  function transfer(... */
    tag_17:
      tag_45
      tag_90
      calldatasize
      0x04
      tag_53
      jump	// in
    tag_90:
      tag_91
      jump	// in
        /* "lib/forge-std/src/StdInvariant.sol":2447:2625  function targetArtifactSelectors() public view returns (FuzzSelector[] memory targetedArtifactSelectors_) {... */
    tag_18:
      tag_92
      tag_93
      jump	// in
    tag_92:
      mload(0x40)
      tag_63
      swap2
      swap1
      tag_95
      jump	// in
        /* "test/solidity/Protocol.t.sol":22391:23039  function refund(... */
    tag_19:
      tag_45
      tag_97
      calldatasize
      0x04
      tag_53
      jump	// in
    tag_97:
      tag_98
      jump	// in
        /* "test/solidity/Protocol.t.sol":19045:19433  function claimRewards(bytes32 seed) external context(seed) {... */
    tag_20:
      tag_45
      tag_100
      calldatasize
      0x04
      tag_47
      jump	// in
    tag_100:
      tag_101
      jump	// in
        /* "lib/forge-std/src/StdInvariant.sol":2301:2441  function targetArtifacts() public view returns (string[] memory targetedArtifacts_) {... */
    tag_21:
      tag_102
      tag_103
      jump	// in
    tag_102:
      mload(0x40)
      tag_63
      swap2
      swap1
      tag_105
      jump	// in
        /* "lib/forge-std/src/StdInvariant.sol":2778:2924  function targetSelectors() public view returns (FuzzSelector[] memory targetedSelectors_) {... */
    tag_22:
      tag_92
      tag_107
      jump	// in
        /* "test/solidity/Protocol.t.sol":19437:19775  function enterMarket(bytes32 seed) external context(seed) {... */
    tag_23:
      tag_45
      tag_110
      calldatasize
      0x04
      tag_47
      jump	// in
    tag_110:
      tag_111
      jump	// in
        /* "test/solidity/Protocol.t.sol":27637:30954  function liquidate(... */
    tag_24:
      tag_45
      tag_113
      calldatasize
      0x04
      tag_53
      jump	// in
    tag_113:
      tag_114
      jump	// in
        /* "lib/forge-std/src/StdInvariant.sol":1866:2007  function excludeArtifacts() public view returns (string[] memory excludedArtifacts_) {... */
    tag_25:
      tag_102
      tag_116
      jump	// in
        /* "test/solidity/Protocol.t.sol":27395:27633  function setPrice(uint56 price, bytes32 seed) external context(seed) {... */
    tag_26:
      tag_45
      tag_119
      calldatasize
      0x04
      tag_53
      jump	// in
    tag_119:
      tag_120
      jump	// in
        /* "lib/forge-std/lib/ds-test/src/test.sol":1819:2403  function failed() public returns (bool) {... */
    tag_27:
      tag_121
      tag_122
      jump	// in
    tag_121:
      mload(0x40)
        /* "#utility.yul":4671:4685   */
      swap1
      iszero
        /* "#utility.yul":4664:4686   */
      iszero
        /* "#utility.yul":4646:4687   */
      dup2
      mstore
        /* "#utility.yul":4634:4636   */
      0x20
        /* "#utility.yul":4619:4637   */
      add
        /* "lib/forge-std/lib/ds-test/src/test.sol":1819:2403  function failed() public returns (bool) {... */
      tag_63
        /* "#utility.yul":4506:4693   */
      jump
        /* "test/solidity/Protocol.t.sol":14771:15982  function repayAtMaturity(uint56 assets, bytes32 seed) external context(seed) {... */
    tag_28:
      tag_45
      tag_126
      calldatasize
      0x04
      tag_53
      jump	// in
    tag_126:
      tag_127
      jump	// in
        /* "test/solidity/Protocol.t.sol":11005:11247  function invariantReserveFactor() external {... */
    tag_29:
      tag_45
      tag_129
      jump	// in
        /* "test/solidity/Protocol.t.sol":18701:19041  function mint(uint56 shares, bytes32 seed) external context(seed) {... */
    tag_30:
      tag_45
      tag_131
      calldatasize
      0x04
      tag_53
      jump	// in
    tag_131:
      tag_132
      jump	// in
        /* "test/solidity/Protocol.t.sol":10407:10710  function invariantShareValue() external {... */
    tag_31:
      tag_45
      tag_134
      jump	// in
        /* "lib/forge-std/src/StdInvariant.sol":2013:2155  function excludeContracts() public view returns (address[] memory excludedContracts_) {... */
    tag_32:
      tag_61
      tag_136
      jump	// in
        /* "test/solidity/Protocol.t.sol":11251:11566  function invariantAssetTransfer() external view {... */
    tag_33:
      tag_45
      tag_139
      jump	// in
        /* "test/solidity/Protocol.t.sol":15986:18261  function borrowAtMaturity(uint56 assets, bytes32 seed) external context(seed) _collateral(assets, msg.sender) {... */
    tag_34:
      tag_45
      tag_141
      calldatasize
      0x04
      tag_53
      jump	// in
    tag_141:
      tag_142
      jump	// in
        /* "lib/forge-std/lib/ds-test/src/test.sol":1572:1598  bool public IS_TEST = true */
    tag_35:
      sload(0x00)
      tag_121
      swap1
      0xff
      and
      dup2
      jump
        /* "test/solidity/Protocol.t.sol":5233:10403  function invariants() external {... */
    tag_36:
      tag_45
      tag_147
      jump	// in
        /* "test/solidity/Protocol.t.sol":11570:11920  function invariantNoCollateralNoDebt() external {... */
    tag_37:
      tag_45
      tag_149
      jump	// in
        /* "test/solidity/Protocol.t.sol":19779:20671  function exitMarket(bytes32 seed) external context(seed) {... */
    tag_48:
        /* "test/solidity/Protocol.t.sol":31278:31285  _market */
      sload(0x23)
        /* "test/solidity/Protocol.t.sol":19830:19834  seed */
      dup2
      swap1
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":31278:31285  _market */
      and
        /* "test/solidity/Protocol.t.sol":31270:31300  address(_market) == address(0) */
      iszero
        /* "test/solidity/Protocol.t.sol":31263:31301  assert(address(_market) == address(0)) */
      tag_152
      jumpi
      tag_152
      tag_153
      jump	// in
    tag_152:
        /* "test/solidity/Protocol.t.sol":31317:31324  markets */
      0x1c
        /* "test/solidity/Protocol.t.sol":31325:31402  _bound(uint256(keccak256(abi.encode(seed, "market"))), 0, markets.length - 1) */
      tag_154
        /* "test/solidity/Protocol.t.sol":31361:31365  seed */
      dup3
        /* "test/solidity/Protocol.t.sol":31350:31376  abi.encode(seed, "market") */
      add(0x20, mload(0x40))
      tag_155
      swap2
      swap1
      tag_156
      jump	// in
    tag_155:
      0x40
      dup1
      mload
      not(0x1f)
      dup2
      dup5
      sub
      add
      dup2
      mstore
      swap2
      swap1
      mstore
        /* "test/solidity/Protocol.t.sol":31340:31377  keccak256(abi.encode(seed, "market")) */
      dup1
      mload
        /* "test/solidity/Protocol.t.sol":31350:31376  abi.encode(seed, "market") */
      0x20
        /* "test/solidity/Protocol.t.sol":31340:31377  keccak256(abi.encode(seed, "market")) */
      swap1
      swap2
      add
      keccak256
        /* "test/solidity/Protocol.t.sol":31383:31390  markets */
      0x1c
        /* "test/solidity/Protocol.t.sol":31383:31397  markets.length */
      sload
        /* "test/solidity/Protocol.t.sol":31332:31378  uint256(keccak256(abi.encode(seed, "market"))) */
      0x00
      swap1
        /* "test/solidity/Protocol.t.sol":31383:31401  markets.length - 1 */
      tag_157
      swap1
        /* "test/solidity/Protocol.t.sol":31400:31401  1 */
      0x01
      swap1
        /* "test/solidity/Protocol.t.sol":31383:31401  markets.length - 1 */
      tag_158
      jump	// in
    tag_157:
        /* "test/solidity/Protocol.t.sol":31325:31331  _bound */
      tag_159
        /* "test/solidity/Protocol.t.sol":31325:31402  _bound(uint256(keccak256(abi.encode(seed, "market"))), 0, markets.length - 1) */
      jump	// in
    tag_154:
        /* "test/solidity/Protocol.t.sol":31317:31403  markets[_bound(uint256(keccak256(abi.encode(seed, "market"))), 0, markets.length - 1)] */
      dup2
      sload
      dup2
      lt
      tag_161
      jumpi
      tag_161
      tag_162
      jump	// in
    tag_161:
      0x00
      swap2
      dup3
      mstore
      0x20
      swap2
      dup3
      swap1
      keccak256
      add
      sload
        /* "test/solidity/Protocol.t.sol":31307:31314  _market */
      0x23
        /* "test/solidity/Protocol.t.sol":31307:31403  _market = markets[_bound(uint256(keccak256(abi.encode(seed, "market"))), 0, markets.length - 1)] */
      dup1
      sload
      not(sub(shl(0xa0, 0x01), 0x01))
      and
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":31317:31403  markets[_bound(uint256(keccak256(abi.encode(seed, "market"))), 0, markets.length - 1)] */
      swap1
      swap3
      and
        /* "test/solidity/Protocol.t.sol":31307:31403  _market = markets[_bound(uint256(keccak256(abi.encode(seed, "market"))), 0, markets.length - 1)] */
      swap2
      dup3
      or
      swap1
      sstore
        /* "test/solidity/Protocol.t.sol":31436:31451  _market.asset() */
      0x40
      dup1
      mload
      shl(0xe0, 0x38d52e0f)
      dup2
      mstore
      swap1
      mload
        /* "test/solidity/Protocol.t.sol":31317:31403  markets[_bound(uint256(keccak256(abi.encode(seed, "market"))), 0, markets.length - 1)] */
      swap2
      swap3
        /* "test/solidity/Protocol.t.sol":31436:31449  _market.asset */
      0x38d52e0f
      swap3
        /* "test/solidity/Protocol.t.sol":31436:31451  _market.asset() */
      0x04
      dup1
      dup5
      add
      swap4
      dup3
      swap1
      sub
      add
      dup2
        /* "test/solidity/Protocol.t.sol":31317:31403  markets[_bound(uint256(keccak256(abi.encode(seed, "market"))), 0, markets.length - 1)] */
      dup7
        /* "test/solidity/Protocol.t.sol":31436:31451  _market.asset() */
      gas
      staticcall
      iszero
      dup1
      iszero
      tag_165
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_165:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      dup2
      add
      swap1
      tag_166
      swap2
      swap1
      tag_167
      jump	// in
    tag_166:
        /* "test/solidity/Protocol.t.sol":31409:31415  _asset */
      0x24
      0x00
        /* "test/solidity/Protocol.t.sol":31409:31453  _asset = MockERC20(address(_market.asset())) */
      0x0100
      exp
      dup2
      sload
      dup2
      sub(shl(0xa0, 0x01), 0x01)
      mul
      not
      and
      swap1
      dup4
      sub(shl(0xa0, 0x01), 0x01)
      and
      mul
      or
      swap1
      sstore
      pop
        /* "test/solidity/Protocol.t.sol":31475:31483  accounts */
      0x1d
        /* "test/solidity/Protocol.t.sol":31484:31568  _bound(uint256(keccak256(abi.encode(seed, "counterparty"))), 0, accounts.length - 1) */
      tag_168
        /* "test/solidity/Protocol.t.sol":31520:31524  seed */
      dup3
        /* "test/solidity/Protocol.t.sol":31509:31541  abi.encode(seed, "counterparty") */
      add(0x20, mload(0x40))
      tag_169
      swap2
      swap1
      tag_170
      jump	// in
    tag_169:
      0x40
      dup1
      mload
      not(0x1f)
      dup2
      dup5
      sub
      add
      dup2
      mstore
      swap2
      swap1
      mstore
        /* "test/solidity/Protocol.t.sol":31499:31542  keccak256(abi.encode(seed, "counterparty")) */
      dup1
      mload
        /* "test/solidity/Protocol.t.sol":31509:31541  abi.encode(seed, "counterparty") */
      0x20
        /* "test/solidity/Protocol.t.sol":31499:31542  keccak256(abi.encode(seed, "counterparty")) */
      swap1
      swap2
      add
      keccak256
        /* "test/solidity/Protocol.t.sol":31548:31556  accounts */
      0x1d
        /* "test/solidity/Protocol.t.sol":31548:31563  accounts.length */
      sload
        /* "test/solidity/Protocol.t.sol":31491:31543  uint256(keccak256(abi.encode(seed, "counterparty"))) */
      0x00
      swap1
        /* "test/solidity/Protocol.t.sol":31548:31567  accounts.length - 1 */
      tag_157
      swap1
        /* "test/solidity/Protocol.t.sol":31566:31567  1 */
      0x01
      swap1
        /* "test/solidity/Protocol.t.sol":31548:31567  accounts.length - 1 */
      tag_158
      jump	// in
        /* "test/solidity/Protocol.t.sol":31484:31568  _bound(uint256(keccak256(abi.encode(seed, "counterparty"))), 0, accounts.length - 1) */
    tag_168:
        /* "test/solidity/Protocol.t.sol":31475:31569  accounts[_bound(uint256(keccak256(abi.encode(seed, "counterparty"))), 0, accounts.length - 1)] */
      dup2
      sload
      dup2
      lt
      tag_173
      jumpi
      tag_173
      tag_162
      jump	// in
    tag_173:
      0x00
      swap2
      dup3
      mstore
      0x20
      swap2
      dup3
      swap1
      keccak256
      add
      sload
        /* "test/solidity/Protocol.t.sol":31459:31472  _counterparty */
      0x26
        /* "test/solidity/Protocol.t.sol":31459:31569  _counterparty = accounts[_bound(uint256(keccak256(abi.encode(seed, "counterparty"))), 0, accounts.length - 1)] */
      dup1
      sload
      not(sub(shl(0xa0, 0x01), 0x01))
      and
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":31475:31569  accounts[_bound(uint256(keccak256(abi.encode(seed, "counterparty"))), 0, accounts.length - 1)] */
      swap1
      swap3
      and
        /* "test/solidity/Protocol.t.sol":31459:31569  _counterparty = accounts[_bound(uint256(keccak256(abi.encode(seed, "counterparty"))), 0, accounts.length - 1)] */
      swap2
      swap1
      swap2
      or
      swap1
      sstore
        /* "test/solidity/Protocol.t.sol":31628:31658  abi.encode(seed, "collateral") */
      mload(0x40)
        /* "test/solidity/Protocol.t.sol":31595:31602  markets */
      0x1c
      swap2
        /* "test/solidity/Protocol.t.sol":31603:31684  _bound(uint256(keccak256(abi.encode(seed, "collateral"))), 0, markets.length - 1) */
      tag_175
      swap2
        /* "test/solidity/Protocol.t.sol":31628:31658  abi.encode(seed, "collateral") */
      tag_155
      swap2
        /* "test/solidity/Protocol.t.sol":31639:31643  seed */
      dup6
      swap2
        /* "test/solidity/Protocol.t.sol":31628:31658  abi.encode(seed, "collateral") */
      add
      tag_177
      jump	// in
        /* "test/solidity/Protocol.t.sol":31603:31684  _bound(uint256(keccak256(abi.encode(seed, "collateral"))), 0, markets.length - 1) */
    tag_175:
        /* "test/solidity/Protocol.t.sol":31595:31685  markets[_bound(uint256(keccak256(abi.encode(seed, "collateral"))), 0, markets.length - 1)] */
      dup2
      sload
      dup2
      lt
      tag_180
      jumpi
      tag_180
      tag_162
      jump	// in
    tag_180:
      0x00
      swap2
      dup3
      mstore
      0x20
      swap1
      swap2
      keccak256
      add
      sload
        /* "test/solidity/Protocol.t.sol":31575:31592  _collateralMarket */
      0x27
        /* "test/solidity/Protocol.t.sol":31575:31685  _collateralMarket = markets[_bound(uint256(keccak256(abi.encode(seed, "collateral"))), 0, markets.length - 1)] */
      dup1
      sload
      not(sub(shl(0xa0, 0x01), 0x01))
      and
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":31595:31685  markets[_bound(uint256(keccak256(abi.encode(seed, "collateral"))), 0, markets.length - 1)] */
      swap1
      swap3
      and
        /* "test/solidity/Protocol.t.sol":31575:31685  _collateralMarket = markets[_bound(uint256(keccak256(abi.encode(seed, "collateral"))), 0, markets.length - 1)] */
      swap2
      swap1
      swap2
      or
      swap1
      sstore
        /* "contracts/utils/FixedLib.sol":306:313  4 weeks */
      0x24ea00
        /* "test/solidity/Protocol.t.sol":31722:31757  block.timestamp % FixedLib.INTERVAL */
      tag_182
        /* "contracts/utils/FixedLib.sol":306:313  4 weeks */
      dup2
        /* "test/solidity/Protocol.t.sol":31722:31737  block.timestamp */
      timestamp
        /* "test/solidity/Protocol.t.sol":31722:31757  block.timestamp % FixedLib.INTERVAL */
      tag_183
      jump	// in
    tag_182:
        /* "test/solidity/Protocol.t.sol":31703:31758  block.timestamp - (block.timestamp % FixedLib.INTERVAL) */
      tag_184
      swap1
        /* "test/solidity/Protocol.t.sol":31703:31718  block.timestamp */
      timestamp
        /* "test/solidity/Protocol.t.sol":31703:31758  block.timestamp - (block.timestamp % FixedLib.INTERVAL) */
      tag_158
      jump	// in
    tag_184:
        /* "test/solidity/Protocol.t.sol":31703:31778  block.timestamp - (block.timestamp % FixedLib.INTERVAL) + FixedLib.INTERVAL */
      tag_185
      swap2
      swap1
      tag_186
      jump	// in
    tag_185:
        /* "test/solidity/Protocol.t.sol":31691:31700  _maturity */
      0x25
        /* "test/solidity/Protocol.t.sol":31691:31778  _maturity = block.timestamp - (block.timestamp % FixedLib.INTERVAL) + FixedLib.INTERVAL */
      sstore
        /* "test/solidity/Protocol.t.sol":31784:31809  vm.startPrank(msg.sender) */
      mload(0x40)
      shl(0xe1, 0x03223eab)
      dup2
      mstore
        /* "test/solidity/Protocol.t.sol":31798:31808  msg.sender */
      caller
        /* "test/solidity/Protocol.t.sol":31784:31809  vm.startPrank(msg.sender) */
      0x04
      dup3
      add
        /* "#utility.yul":7560:7611   */
      mstore
      0x00
      dup1
      mload
      0x20
      data_1a390d6c2ee89e11d2dffeb86f753e43f966d02cbb0b3bd3e6e1cdf50245ef50
      dup4
      codecopy
      dup2
      mload
      swap2
      mstore
        /* "test/solidity/Protocol.t.sol":31784:31797  vm.startPrank */
      swap1
      0x06447d56
      swap1
        /* "#utility.yul":7533:7551   */
      0x24
      add
        /* "test/solidity/Protocol.t.sol":31784:31809  vm.startPrank(msg.sender) */
      0x00
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      0x00
      dup8
      dup1
      extcodesize
      iszero
      dup1
      iszero
      tag_189
      jumpi
      0x00
      dup1
      revert
    tag_189:
      pop
      gas
      call
      iszero
      dup1
      iszero
      tag_191
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_191:
      pop
      pop
        /* "test/solidity/Protocol.t.sol":19868:19875  auditor */
      sload(0x1b)
        /* "test/solidity/Protocol.t.sol":19884:19891  _market */
      sload(0x23)
        /* "test/solidity/Protocol.t.sol":19868:19892  auditor.markets(_market) */
      mload(0x40)
      shl(0xe0, 0x8e8f294b)
      dup2
      mstore
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":19884:19891  _market */
      swap2
      dup3
      and
        /* "test/solidity/Protocol.t.sol":19868:19892  auditor.markets(_market) */
      0x04
      dup3
      add
        /* "#utility.yul":7560:7611   */
      mstore
        /* "test/solidity/Protocol.t.sol":19847:19860  uint256 index */
      0x00
      swap5
      pop
        /* "test/solidity/Protocol.t.sol":19868:19875  auditor */
      swap2
      and
      swap2
      pop
        /* "test/solidity/Protocol.t.sol":19868:19883  auditor.markets */
      0x8e8f294b
      swap1
        /* "#utility.yul":7533:7551   */
      0x24
      add
        /* "test/solidity/Protocol.t.sol":19868:19892  auditor.markets(_market) */
      0xa0
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      dup7
      gas
      staticcall
      iszero
      dup1
      iszero
      tag_196
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_196:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      dup2
      add
      swap1
      tag_197
      swap2
      swap1
      tag_198
      jump	// in
    tag_197:
      pop
      pop
        /* "test/solidity/Protocol.t.sol":19932:19939  _market */
      sload(0x23)
        /* "test/solidity/Protocol.t.sol":19932:19967  _market.accountSnapshot(msg.sender) */
      mload(0x40)
      shl(0xe0, 0x014a296f)
      dup2
      mstore
        /* "test/solidity/Protocol.t.sol":19956:19966  msg.sender */
      caller
        /* "test/solidity/Protocol.t.sol":19932:19967  _market.accountSnapshot(msg.sender) */
      0x04
      dup3
      add
        /* "#utility.yul":7560:7611   */
      mstore
        /* "test/solidity/Protocol.t.sol":19842:19892  (, , uint256 index, , ) = auditor.markets(_market) */
      0xff
      swap3
      swap1
      swap3
      and
      swap5
      pop
        /* "test/solidity/Protocol.t.sol":19899:19914  uint256 balance */
      0x00
      swap4
      pop
      dup4
      swap3
      pop
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":19932:19939  _market */
      and
      swap1
        /* "test/solidity/Protocol.t.sol":19932:19955  _market.accountSnapshot */
      0x014a296f
      swap1
        /* "#utility.yul":7533:7551   */
      0x24
      add
        /* "test/solidity/Protocol.t.sol":19932:19967  _market.accountSnapshot(msg.sender) */
      0x40
      dup1
      mload
      dup1
      dup4
      sub
      dup2
      dup7
      gas
      staticcall
      iszero
      dup1
      iszero
      tag_201
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_201:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      dup2
      add
      swap1
      tag_202
      swap2
      swap1
      tag_203
      jump	// in
    tag_202:
        /* "test/solidity/Protocol.t.sol":19898:19967  (uint256 balance, uint256 debt) = _market.accountSnapshot(msg.sender) */
      swap2
      pop
      swap2
      pop
        /* "test/solidity/Protocol.t.sol":19973:19996  Binary memory liquidity */
      tag_204
      mload(0x40)
      dup1
      0x40
      add
      0x40
      mstore
      dup1
      0x00
      dup2
      mstore
      0x20
      add
      0x00
      dup2
      mstore
      pop
      swap1
      jump
    tag_204:
        /* "test/solidity/Protocol.t.sol":20074:20081  _market */
      sload(0x23)
        /* "test/solidity/Protocol.t.sol":20045:20094  accountLiquidity(msg.sender, _market, 0, balance) */
      tag_206
      swap1
        /* "test/solidity/Protocol.t.sol":20062:20072  msg.sender */
      caller
      swap1
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":20074:20081  _market */
      and
      0x00
        /* "test/solidity/Protocol.t.sol":20086:20093  balance */
      dup7
        /* "test/solidity/Protocol.t.sol":20045:20061  accountLiquidity */
      tag_207
        /* "test/solidity/Protocol.t.sol":20045:20094  accountLiquidity(msg.sender, _market, 0, balance) */
      jump	// in
    tag_206:
        /* "test/solidity/Protocol.t.sol":20023:20041  liquidity.negative */
      0x20
      dup4
      add
        /* "test/solidity/Protocol.t.sol":20002:20094  (liquidity.positive, liquidity.negative) = accountLiquidity(msg.sender, _market, 0, balance) */
      mstore
      dup2
      mstore
        /* "test/solidity/Protocol.t.sol":20120:20127  auditor */
      sload(0x1b)
        /* "test/solidity/Protocol.t.sol":20120:20154  auditor.accountMarkets(msg.sender) */
      mload(0x40)
      not(sub(shl(0xe1, 0x63e28d), 0x01))
      dup2
      mstore
        /* "test/solidity/Protocol.t.sol":20143:20153  msg.sender */
      caller
        /* "test/solidity/Protocol.t.sol":20120:20154  auditor.accountMarkets(msg.sender) */
      0x04
      dup3
      add
        /* "#utility.yul":7560:7611   */
      mstore
      0x00
      swap2
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":20120:20127  auditor */
      and
      swap1
        /* "test/solidity/Protocol.t.sol":20120:20142  auditor.accountMarkets */
      0xff383ae6
      swap1
        /* "#utility.yul":7533:7551   */
      0x24
      add
        /* "test/solidity/Protocol.t.sol":20120:20154  auditor.accountMarkets(msg.sender) */
      0x20
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      dup7
      gas
      staticcall
      iszero
      dup1
      iszero
      tag_210
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_210:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      dup2
      add
      swap1
      tag_211
      swap2
      swap1
      tag_212
      jump	// in
    tag_211:
        /* "test/solidity/Protocol.t.sol":20100:20154  uint256 marketMap = auditor.accountMarkets(msg.sender) */
      swap1
      pop
        /* "test/solidity/Protocol.t.sol":20179:20180  1 */
      0x01
        /* "test/solidity/Protocol.t.sol":20179:20189  1 << index */
      dup6
      shl
        /* "test/solidity/Protocol.t.sol":20166:20190  marketMap & (1 << index) */
      dup2
      and
        /* "test/solidity/Protocol.t.sol":20165:20196  (marketMap & (1 << index)) != 0 */
      iszero
        /* "test/solidity/Protocol.t.sol":20161:20536  if ((marketMap & (1 << index)) != 0) {... */
      tag_226
      jumpi
        /* "test/solidity/Protocol.t.sol":20210:20218  debt > 0 */
      dup3
      iszero
        /* "test/solidity/Protocol.t.sol":20206:20530  if (debt > 0) {... */
      tag_214
      jumpi
        /* "test/solidity/Protocol.t.sol":20230:20269  vm.expectRevert(RemainingDebt.selector) */
      mload(0x40)
      shl(0xe5, 0x0618f587)
      dup2
      mstore
      0x00
      dup1
      mload
      0x20
      data_1a390d6c2ee89e11d2dffeb86f753e43f966d02cbb0b3bd3e6e1cdf50245ef50
      dup4
      codecopy
      dup2
      mload
      swap2
      mstore
        /* "test/solidity/Protocol.t.sol":20230:20245  vm.expectRevert */
      swap1
      0xc31eb0e0
      swap1
        /* "test/solidity/Protocol.t.sol":20230:20269  vm.expectRevert(RemainingDebt.selector) */
      tag_215
      swap1
      shl(0xe5, 0x04fdb011)
        /* "test/solidity/Protocol.t.sol":20246:20268  RemainingDebt.selector */
      swap1
        /* "test/solidity/Protocol.t.sol":20230:20269  vm.expectRevert(RemainingDebt.selector) */
      0x04
      add
      tag_216
      jump	// in
    tag_215:
      0x00
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      0x00
      dup8
      dup1
      extcodesize
      iszero
      dup1
      iszero
      tag_217
      jumpi
      0x00
      dup1
      revert
    tag_217:
      pop
      gas
      call
      iszero
      dup1
      iszero
      tag_219
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_219:
      pop
      pop
      pop
      pop
        /* "test/solidity/Protocol.t.sol":20206:20530  if (debt > 0) {... */
      jump(tag_226)
    tag_214:
        /* "test/solidity/Protocol.t.sol":20309:20327  liquidity.negative */
      0x20
      dup3
      add
      mload
        /* "test/solidity/Protocol.t.sol":20288:20306  liquidity.positive */
      dup3
      mload
        /* "test/solidity/Protocol.t.sol":20288:20327  liquidity.positive < liquidity.negative */
      lt
        /* "test/solidity/Protocol.t.sol":20284:20530  if (liquidity.positive < liquidity.negative) {... */
      iszero
      tag_221
      jumpi
        /* "test/solidity/Protocol.t.sol":20339:20393  vm.expectRevert(InsufficientAccountLiquidity.selector) */
      mload(0x40)
      shl(0xe5, 0x0618f587)
      dup2
      mstore
      0x00
      dup1
      mload
      0x20
      data_1a390d6c2ee89e11d2dffeb86f753e43f966d02cbb0b3bd3e6e1cdf50245ef50
      dup4
      codecopy
      dup2
      mload
      swap2
      mstore
        /* "test/solidity/Protocol.t.sol":20339:20354  vm.expectRevert */
      swap1
      0xc31eb0e0
      swap1
        /* "test/solidity/Protocol.t.sol":20339:20393  vm.expectRevert(InsufficientAccountLiquidity.selector) */
      tag_215
      swap1
      shl(0xe1, 0x0aeac0bb)
        /* "test/solidity/Protocol.t.sol":20355:20392  InsufficientAccountLiquidity.selector */
      swap1
        /* "test/solidity/Protocol.t.sol":20339:20393  vm.expectRevert(InsufficientAccountLiquidity.selector) */
      0x04
      add
      tag_216
      jump	// in
        /* "test/solidity/Protocol.t.sol":20284:20530  if (liquidity.positive < liquidity.negative) {... */
    tag_221:
        /* "test/solidity/Protocol.t.sol":20464:20471  auditor */
      sload(0x1b)
        /* "test/solidity/Protocol.t.sol":20418:20473  vm.expectEmit(true, true, true, true, address(auditor)) */
      mload(0x40)
      shl(0xe0, 0x81bad6f3)
      dup2
      mstore
      0x00
      dup1
      mload
      0x20
      data_1a390d6c2ee89e11d2dffeb86f753e43f966d02cbb0b3bd3e6e1cdf50245ef50
      dup4
      codecopy
      dup2
      mload
      swap2
      mstore
        /* "test/solidity/Protocol.t.sol":20418:20431  vm.expectEmit */
      swap2
      0x81bad6f3
      swap2
        /* "test/solidity/Protocol.t.sol":20418:20473  vm.expectEmit(true, true, true, true, address(auditor)) */
      tag_227
      swap2
        /* "test/solidity/Protocol.t.sol":20432:20436  true */
      0x01
      swap2
      dup3
      swap2
      dup3
      swap2
      dup3
      swap2
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":20464:20471  auditor */
      and
      swap1
        /* "test/solidity/Protocol.t.sol":20418:20473  vm.expectEmit(true, true, true, true, address(auditor)) */
      0x04
      add
      tag_228
      jump	// in
    tag_227:
      0x00
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      0x00
      dup8
      dup1
      extcodesize
      iszero
      dup1
      iszero
      tag_229
      jumpi
      0x00
      dup1
      revert
    tag_229:
      pop
      gas
      call
      iszero
      dup1
      iszero
      tag_231
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_231:
      pop
      pop
        /* "test/solidity/Protocol.t.sol":20501:20508  _market */
      sload(0x23)
        /* "test/solidity/Protocol.t.sol":20488:20521  MarketExited(_market, msg.sender) */
      mload(0x40)
        /* "test/solidity/Protocol.t.sol":20510:20520  msg.sender */
      caller
      swap4
      pop
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":20501:20508  _market */
      swap1
      swap2
      and
      swap2
      pop
        /* "test/solidity/Protocol.t.sol":20488:20521  MarketExited(_market, msg.sender) */
      0xe699a64c18b07ac5b7301aa273f36a2287239eb9501d81950672794afba29a0d
      swap1
        /* "test/solidity/Protocol.t.sol":20501:20508  _market */
      0x00
      swap1
        /* "test/solidity/Protocol.t.sol":20488:20521  MarketExited(_market, msg.sender) */
      log3
        /* "test/solidity/Protocol.t.sol":20284:20530  if (liquidity.positive < liquidity.negative) {... */
    tag_226:
        /* "test/solidity/Protocol.t.sol":20541:20548  auditor */
      sload(0x1b)
        /* "test/solidity/Protocol.t.sol":20560:20567  _market */
      sload(0x23)
        /* "test/solidity/Protocol.t.sol":20541:20568  auditor.exitMarket(_market) */
      mload(0x40)
      shl(0xe4, 0x0ede4edd)
      dup2
      mstore
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":20560:20567  _market */
      swap2
      dup3
      and
        /* "test/solidity/Protocol.t.sol":20541:20568  auditor.exitMarket(_market) */
      0x04
      dup3
      add
        /* "#utility.yul":7560:7611   */
      mstore
        /* "test/solidity/Protocol.t.sol":20541:20548  auditor */
      swap2
      and
      swap1
        /* "test/solidity/Protocol.t.sol":20541:20559  auditor.exitMarket */
      0xede4edd0
      swap1
        /* "#utility.yul":7533:7551   */
      0x24
      add
        /* "test/solidity/Protocol.t.sol":20541:20568  auditor.exitMarket(_market) */
      0x00
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      0x00
      dup8
      dup1
      extcodesize
      iszero
      dup1
      iszero
      tag_233
      jumpi
      0x00
      dup1
      revert
    tag_233:
      pop
      gas
      call
      iszero
      dup1
      iszero
      tag_235
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_235:
      pop
      pop
      pop
      pop
        /* "test/solidity/Protocol.t.sol":20592:20593  1 */
      0x01
        /* "test/solidity/Protocol.t.sol":20592:20602  1 << index */
      dup6
      shl
        /* "test/solidity/Protocol.t.sol":20579:20603  marketMap & (1 << index) */
      dup2
      and
        /* "test/solidity/Protocol.t.sol":20608:20609  0 */
      0x00
        /* "test/solidity/Protocol.t.sol":20578:20609  (marketMap & (1 << index)) == 0 */
      sub
        /* "test/solidity/Protocol.t.sol":20574:20666  if ((marketMap & (1 << index)) == 0) assertEq(marketMap, auditor.accountMarkets(msg.sender)) */
      tag_237
      jumpi
        /* "test/solidity/Protocol.t.sol":20631:20638  auditor */
      sload(0x1b)
        /* "test/solidity/Protocol.t.sol":20631:20665  auditor.accountMarkets(msg.sender) */
      mload(0x40)
      not(sub(shl(0xe1, 0x63e28d), 0x01))
      dup2
      mstore
        /* "test/solidity/Protocol.t.sol":20654:20664  msg.sender */
      caller
        /* "test/solidity/Protocol.t.sol":20631:20665  auditor.accountMarkets(msg.sender) */
      0x04
      dup3
      add
        /* "#utility.yul":7560:7611   */
      mstore
        /* "test/solidity/Protocol.t.sol":20611:20666  assertEq(marketMap, auditor.accountMarkets(msg.sender)) */
      tag_237
      swap2
        /* "test/solidity/Protocol.t.sol":20620:20629  marketMap */
      dup4
      swap2
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":20631:20638  auditor */
      swap1
      swap2
      and
      swap1
        /* "test/solidity/Protocol.t.sol":20631:20653  auditor.accountMarkets */
      0xff383ae6
      swap1
        /* "#utility.yul":7533:7551   */
      0x24
      add
        /* "test/solidity/Protocol.t.sol":20631:20665  auditor.accountMarkets(msg.sender) */
      0x20
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      dup7
      gas
      staticcall
      iszero
      dup1
      iszero
      tag_240
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_240:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      dup2
      add
      swap1
      tag_241
      swap2
      swap1
      tag_212
      jump	// in
    tag_241:
        /* "test/solidity/Protocol.t.sol":20611:20619  assertEq */
      tag_242
        /* "test/solidity/Protocol.t.sol":20611:20666  assertEq(marketMap, auditor.accountMarkets(msg.sender)) */
      jump	// in
    tag_237:
        /* "test/solidity/Protocol.t.sol":19836:20671  {... */
      pop
      pop
      pop
      pop
      pop
      0x00
      dup1
      mload
      0x20
      data_b627c71dec38ae7fa273aa3bb9b6210fd4a76d47f44ae646db16da401b96db40
      dup4
      codecopy
      dup2
      mload
      swap2
      mstore
        /* "lib/forge-std/src/Base.sol":309:346  uint256(keccak256("hevm cheat code")) */
      0x00
      shr
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":31822:31834  vm.stopPrank */
      and
      0x90c5013b
        /* "test/solidity/Protocol.t.sol":31822:31836  vm.stopPrank() */
      mload(0x40)
      dup2
      0xffffffff
      and
      0xe0
      shl
      dup2
      mstore
      0x04
      add
      0x00
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      0x00
      dup8
      dup1
      extcodesize
      iszero
      dup1
      iszero
      tag_243
      jumpi
      0x00
      dup1
      revert
    tag_243:
      pop
      gas
      call
      iszero
      dup1
      iszero
      tag_245
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_245:
      pop
      pop
        /* "test/solidity/Protocol.t.sol":31842:31849  _market */
      0x23
        /* "test/solidity/Protocol.t.sol":31842:31870  _market = Market(address(0)) */
      dup1
      sload
      not(sub(shl(0xa0, 0x01), 0x01))
      and
      swap1
      sstore
      pop
      pop
      pop
      pop
        /* "test/solidity/Protocol.t.sol":19779:20671  function exitMarket(bytes32 seed) external context(seed) {... */
      jump	// out
        /* "test/solidity/Protocol.t.sol":1720:5229  function setUp() external {... */
    tag_50:
        /* "test/solidity/Protocol.t.sol":1815:1817  18 */
      0x12
        /* "test/solidity/Protocol.t.sol":1803:1818  new Auditor(18) */
      mload(0x40)
      tag_247
      swap1
      tag_248
      jump	// in
    tag_247:
        /* "#utility.yul":10439:10464   */
      swap1
      dup2
      mstore
        /* "#utility.yul":10427:10429   */
      0x20
        /* "#utility.yul":10412:10430   */
      add
        /* "test/solidity/Protocol.t.sol":1803:1818  new Auditor(18) */
      mload(0x40)
      dup1
      swap2
      sub
      swap1
      0x00
      create
      dup1
      iszero
      dup1
      iszero
      tag_251
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_251:
      pop
        /* "test/solidity/Protocol.t.sol":1778:1824  new ERC1967Proxy(address(new Auditor(18)), "") */
      mload(0x40)
      tag_252
      swap1
      tag_253
      jump	// in
    tag_252:
      sub(shl(0xa0, 0x01), 0x01)
        /* "#utility.yul":10704:10736   */
      swap1
      swap2
      and
        /* "#utility.yul":10686:10737   */
      dup2
      mstore
        /* "#utility.yul":10773:10775   */
      0x40
        /* "#utility.yul":10768:10770   */
      0x20
        /* "#utility.yul":10753:10771   */
      dup3
      add
        /* "#utility.yul":10746:10776   */
      dup2
      swap1
      mstore
      0x00
        /* "#utility.yul":10792:10810   */
      swap1
      dup3
      add
        /* "#utility.yul":10785:10814   */
      mstore
        /* "#utility.yul":10846:10848   */
      0x60
        /* "#utility.yul":10831:10849   */
      add
        /* "test/solidity/Protocol.t.sol":1778:1824  new ERC1967Proxy(address(new Auditor(18)), "") */
      mload(0x40)
      dup1
      swap2
      sub
      swap1
      0x00
      create
      dup1
      iszero
      dup1
      iszero
      tag_256
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_256:
      pop
        /* "test/solidity/Protocol.t.sol":1752:1759  auditor */
      0x1b
        /* "test/solidity/Protocol.t.sol":1752:1826  auditor = Auditor(address(new ERC1967Proxy(address(new Auditor(18)), ""))) */
      dup1
      sload
      not(sub(shl(0xa0, 0x01), 0x01))
      and
      sub(shl(0xa0, 0x01), 0x01)
      swap3
      swap1
      swap3
      and
      swap2
      dup3
      or
      swap1
      sstore
        /* "test/solidity/Protocol.t.sol":1851:1897  Auditor.LiquidationIncentive(0.09e18, 0.01e18) */
      0x40
      dup1
      mload
      dup1
      dup3
      add
      dup3
      mstore
        /* "test/solidity/Protocol.t.sol":1880:1887  0.09e18 */
      0x013fbe85edc90000
        /* "test/solidity/Protocol.t.sol":1851:1897  Auditor.LiquidationIncentive(0.09e18, 0.01e18) */
      dup2
      mstore
        /* "test/solidity/Protocol.t.sol":1889:1896  0.01e18 */
      0x2386f26fc10000
        /* "test/solidity/Protocol.t.sol":1851:1897  Auditor.LiquidationIncentive(0.09e18, 0.01e18) */
      0x20
      dup3
      add
      swap1
      dup2
      mstore
        /* "test/solidity/Protocol.t.sol":1832:1898  auditor.initialize(Auditor.LiquidationIncentive(0.09e18, 0.01e18)) */
      swap2
      mload
      shl(0xe1, 0x01f950f5)
      dup2
      mstore
        /* "#utility.yul":11157:11170   */
      swap1
      mload
      sub(shl(0x80, 0x01), 0x01)
        /* "#utility.yul":11153:11175   */
      swap1
      dup2
      and
        /* "test/solidity/Protocol.t.sol":1832:1898  auditor.initialize(Auditor.LiquidationIncentive(0.09e18, 0.01e18)) */
      0x04
      dup4
      add
        /* "#utility.yul":11135:11176   */
      mstore
        /* "#utility.yul":11218:11242   */
      swap2
      mload
        /* "#utility.yul":11214:11247   */
      swap1
      swap2
      and
        /* "#utility.yul":11192:11212   */
      0x24
      dup3
      add
        /* "#utility.yul":11185:11248   */
      mstore
        /* "test/solidity/Protocol.t.sol":1832:1850  auditor.initialize */
      0x03f2a1ea
      swap1
        /* "#utility.yul":11055:11073   */
      0x44
      add
        /* "test/solidity/Protocol.t.sol":1832:1898  auditor.initialize(Auditor.LiquidationIncentive(0.09e18, 0.01e18)) */
      0x00
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      0x00
      dup8
      dup1
      extcodesize
      iszero
      dup1
      iszero
      tag_259
      jumpi
      0x00
      dup1
      revert
    tag_259:
      pop
      gas
      call
      iszero
      dup1
      iszero
      tag_261
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_261:
      pop
      pop
        /* "test/solidity/Protocol.t.sol":1921:1928  auditor */
      sload(0x1b)
        /* "test/solidity/Protocol.t.sol":1904:1941  vm.label(address(auditor), "Auditor") */
      0x40
      dup1
      mload
      shl(0xe3, 0x18caf8e3)
      dup2
      mstore
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":1921:1928  auditor */
      swap1
      swap3
      and
        /* "test/solidity/Protocol.t.sol":1904:1941  vm.label(address(auditor), "Auditor") */
      0x04
      dup4
      add
        /* "#utility.yul":11471:11522   */
      mstore
        /* "#utility.yul":11538:11556   */
      0x24
      dup3
      add
        /* "#utility.yul":11531:11561   */
      mstore
        /* "#utility.yul":11597:11598   */
      0x07
        /* "#utility.yul":11577:11595   */
      0x44
      dup3
      add
        /* "#utility.yul":11570:11599   */
      mstore
      shl(0xc9, 0x20bab234ba37b9)
        /* "#utility.yul":11615:11633   */
      0x64
      dup3
      add
        /* "#utility.yul":11608:11645   */
      mstore
      0x00
      dup1
      mload
      0x20
      data_1a390d6c2ee89e11d2dffeb86f753e43f966d02cbb0b3bd3e6e1cdf50245ef50
      dup4
      codecopy
      dup2
      mload
      swap2
      mstore
        /* "test/solidity/Protocol.t.sol":1904:1912  vm.label */
      swap3
      pop
      0xc657c718
      swap2
      pop
        /* "#utility.yul":11662:11681   */
      0x84
      add
        /* "test/solidity/Protocol.t.sol":1904:1941  vm.label(address(auditor), "Auditor") */
      0x00
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      0x00
      dup8
      dup1
      extcodesize
      iszero
      dup1
      iszero
      tag_264
      jumpi
      0x00
      dup1
      revert
    tag_264:
      pop
      gas
      call
      iszero
      dup1
      iszero
      tag_266
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_266:
      pop
      pop
      pop
      pop
        /* "test/solidity/Protocol.t.sol":1947:1968  InterestRateModel irm */
      0x00
        /* "test/solidity/Protocol.t.sol":1993:2001  0.023e18 */
      0x51b660cdd58000
      not(0x08e1bc9bf03fff)
        /* "test/solidity/Protocol.t.sol":2015:2022  1.02e18 */
      0x0e27c49886e60000
        /* "test/solidity/Protocol.t.sol":2024:2032  0.023e18 */
      0x51b660cdd58000
      not(0x08e1bc9bf03fff)
        /* "test/solidity/Protocol.t.sol":2046:2053  1.02e18 */
      0x0e27c49886e60000
        /* "test/solidity/Protocol.t.sol":1971:2054  new InterestRateModel(0.023e18, -0.0025e18, 1.02e18, 0.023e18, -0.0025e18, 1.02e18) */
      mload(0x40)
      tag_267
      swap1
      tag_268
      jump	// in
    tag_267:
        /* "#utility.yul":12135:12160   */
      swap6
      dup7
      mstore
        /* "#utility.yul":12191:12193   */
      0x20
        /* "#utility.yul":12176:12194   */
      dup7
      add
        /* "#utility.yul":12169:12203   */
      swap5
      swap1
      swap5
      mstore
        /* "#utility.yul":12234:12236   */
      0x40
        /* "#utility.yul":12219:12237   */
      dup6
      add
        /* "#utility.yul":12212:12246   */
      swap3
      swap1
      swap3
      mstore
        /* "#utility.yul":12277:12279   */
      0x60
        /* "#utility.yul":12262:12280   */
      dup5
      add
        /* "#utility.yul":12255:12289   */
      mstore
        /* "#utility.yul":12320:12323   */
      0x80
        /* "#utility.yul":12305:12324   */
      dup4
      add
        /* "#utility.yul":12298:12333   */
      mstore
        /* "#utility.yul":12364:12367   */
      0xa0
        /* "#utility.yul":12349:12368   */
      dup3
      add
        /* "#utility.yul":12342:12377   */
      mstore
        /* "#utility.yul":12122:12125   */
      0xc0
        /* "#utility.yul":12107:12126   */
      add
        /* "test/solidity/Protocol.t.sol":1971:2054  new InterestRateModel(0.023e18, -0.0025e18, 1.02e18, 0.023e18, -0.0025e18, 1.02e18) */
      mload(0x40)
      dup1
      swap2
      sub
      swap1
      0x00
      create
      dup1
      iszero
      dup1
      iszero
      tag_271
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_271:
      pop
        /* "test/solidity/Protocol.t.sol":1947:2054  InterestRateModel irm = new InterestRateModel(0.023e18, -0.0025e18, 1.02e18, 0.023e18, -0.0025e18, 1.02e18) */
      swap1
      pop
        /* "test/solidity/Protocol.t.sol":2066:2075  uint256 i */
      0x00
        /* "test/solidity/Protocol.t.sol":2061:2325  for (uint256 i = 0; i < 2; ++i) {... */
    tag_272:
        /* "test/solidity/Protocol.t.sol":2085:2086  2 */
      0x02
        /* "test/solidity/Protocol.t.sol":2081:2082  i */
      dup2
        /* "test/solidity/Protocol.t.sol":2081:2086  i < 2 */
      lt
        /* "test/solidity/Protocol.t.sol":2061:2325  for (uint256 i = 0; i < 2; ++i) {... */
      iszero
      tag_273
      jumpi
        /* "test/solidity/Protocol.t.sol":2101:2116  address account */
      0x00
        /* "test/solidity/Protocol.t.sol":2146:2176  uint256(type(uint152).max) + 1 */
      tag_275
        /* "test/solidity/Protocol.t.sol":2154:2171  type(uint152).max */
      0xffffffffffffffffffffffffffffffffffffff
        /* "test/solidity/Protocol.t.sol":2175:2176  1 */
      0x01
        /* "test/solidity/Protocol.t.sol":2146:2176  uint256(type(uint152).max) + 1 */
      tag_186
      jump	// in
    tag_275:
        /* "test/solidity/Protocol.t.sol":2136:2141  i + 1 */
      tag_276
        /* "test/solidity/Protocol.t.sol":2136:2137  i */
      dup4
        /* "test/solidity/Protocol.t.sol":2140:2141  1 */
      0x01
        /* "test/solidity/Protocol.t.sol":2136:2141  i + 1 */
      tag_186
      jump	// in
    tag_276:
        /* "test/solidity/Protocol.t.sol":2135:2177  (i + 1) * (uint256(type(uint152).max) + 1) */
      tag_277
      swap2
      swap1
      tag_278
      jump	// in
    tag_277:
        /* "test/solidity/Protocol.t.sol":2101:2179  address account = address(uint160((i + 1) * (uint256(type(uint152).max) + 1))) */
      swap1
      pop
      0x00
      dup1
      mload
      0x20
      data_1a390d6c2ee89e11d2dffeb86f753e43f966d02cbb0b3bd3e6e1cdf50245ef50
      dup4
      codecopy
      dup2
      mload
      swap2
      mstore
        /* "test/solidity/Protocol.t.sol":2187:2195  vm.label */
      0xc657c718
        /* "test/solidity/Protocol.t.sol":2101:2179  address account = address(uint160((i + 1) * (uint256(type(uint152).max) + 1))) */
      dup3
        /* "test/solidity/Protocol.t.sol":2239:2257  (i + 1).toString() */
      tag_279
        /* "test/solidity/Protocol.t.sol":2240:2245  i + 1 */
      tag_280
        /* "test/solidity/Protocol.t.sol":2240:2241  i */
      dup7
        /* "test/solidity/Protocol.t.sol":2244:2245  1 */
      0x01
        /* "test/solidity/Protocol.t.sol":2240:2245  i + 1 */
      tag_186
      jump	// in
    tag_280:
        /* "test/solidity/Protocol.t.sol":2239:2255  (i + 1).toString */
      tag_281
        /* "test/solidity/Protocol.t.sol":2239:2257  (i + 1).toString() */
      jump	// in
    tag_279:
        /* "test/solidity/Protocol.t.sol":2214:2258  string.concat("account", (i + 1).toString()) */
      add(0x20, mload(0x40))
      tag_282
      swap2
      swap1
      tag_283
      jump	// in
    tag_282:
      mload(0x40)
      0x20
      dup2
      dup4
      sub
      sub
      dup2
      mstore
      swap1
      0x40
      mstore
        /* "test/solidity/Protocol.t.sol":2187:2259  vm.label(address(account), string.concat("account", (i + 1).toString())) */
      mload(0x40)
      dup4
      0xffffffff
      and
      0xe0
      shl
      dup2
      mstore
      0x04
      add
      tag_284
      swap3
      swap2
      swap1
      tag_285
      jump	// in
    tag_284:
      0x00
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      0x00
      dup8
      dup1
      extcodesize
      iszero
      dup1
      iszero
      tag_286
      jumpi
      0x00
      dup1
      revert
    tag_286:
      pop
      gas
      call
      iszero
      dup1
      iszero
      tag_288
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_288:
      pop
      pop
        /* "lib/forge-std/src/StdInvariant.sol":1689:1705  _targetedSenders */
      0x0f
        /* "lib/forge-std/src/StdInvariant.sol":1689:1730  _targetedSenders.push(newTargetedSender_) */
      dup1
      sload
      0x01
      dup2
      add
      dup3
      sstore
      0x00
      swap2
      swap1
      swap2
      mstore
      0x8d1108e10bcb7c27dddfc02ed9d693a074039d026cf4ea4240b40f7d581ac802
      add
      dup1
      sload
      not(sub(shl(0xa0, 0x01), 0x01))
      and
      sub(shl(0xa0, 0x01), 0x01)
      dup6
      and
      or
      swap1
      sstore
      pop
        /* "test/solidity/Protocol.t.sol":2267:2288  targetSender(account) */
      tag_289
      swap1
      pop
        /* "lib/forge-std/src/StdInvariant.sol":1620:1737  function targetSender(address newTargetedSender_) internal {... */
      jump
        /* "test/solidity/Protocol.t.sol":2267:2288  targetSender(account) */
    tag_289:
        /* "test/solidity/Protocol.t.sol":2296:2304  accounts */
      0x1d
        /* "test/solidity/Protocol.t.sol":2296:2318  accounts.push(account) */
      dup1
      sload
      0x01
      dup2
      add
      dup3
      sstore
      0x00
      swap2
      swap1
      swap2
      mstore
      0x6d4407e7be21f808e6509aa9fa9143369579dd7d760fe20a2c09680fc146134f
      add
      dup1
      sload
      not(sub(shl(0xa0, 0x01), 0x01))
      and
      sub(shl(0xa0, 0x01), 0x01)
      swap3
      swap1
      swap3
      and
      swap2
      swap1
      swap2
      or
      swap1
      sstore
        /* "test/solidity/Protocol.t.sol":2088:2091  ++i */
      tag_292
      dup2
      tag_293
      jump	// in
    tag_292:
      swap1
      pop
        /* "test/solidity/Protocol.t.sol":2061:2325  for (uint256 i = 0; i < 2; ++i) {... */
      jump(tag_272)
    tag_273:
      pop
        /* "test/solidity/Protocol.t.sol":2330:2338  accounts */
      0x1d
        /* "test/solidity/Protocol.t.sol":2330:2358  accounts.push(address(this)) */
      dup1
      sload
      0x01
      dup2
      add
      dup3
      sstore
      0x00
      swap2
      dup3
      mstore
      0x6d4407e7be21f808e6509aa9fa9143369579dd7d760fe20a2c09680fc146134f
      add
      dup1
      sload
      not(sub(shl(0xa0, 0x01), 0x01))
      and
        /* "test/solidity/Protocol.t.sol":2352:2356  this */
      address
        /* "test/solidity/Protocol.t.sol":2330:2358  accounts.push(address(this)) */
      or
      swap1
      sstore
        /* "test/solidity/Protocol.t.sol":2365:3225  for (uint256 i = 0; i < 2; ++i) {... */
    tag_295:
        /* "test/solidity/Protocol.t.sol":2389:2390  2 */
      0x02
        /* "test/solidity/Protocol.t.sol":2385:2386  i */
      dup2
        /* "test/solidity/Protocol.t.sol":2385:2390  i < 2 */
      lt
        /* "test/solidity/Protocol.t.sol":2365:3225  for (uint256 i = 0; i < 2; ++i) {... */
      iszero
      tag_296
      jumpi
        /* "test/solidity/Protocol.t.sol":2405:2425  string memory symbol */
      0x00
        /* "test/solidity/Protocol.t.sol":2452:2465  uint8(i) + 65 */
      tag_298
        /* "test/solidity/Protocol.t.sol":2458:2459  i */
      dup3
        /* "test/solidity/Protocol.t.sol":2463:2465  65 */
      0x41
        /* "test/solidity/Protocol.t.sol":2452:2465  uint8(i) + 65 */
      tag_299
      jump	// in
    tag_298:
        /* "test/solidity/Protocol.t.sol":2435:2466  abi.encodePacked(uint8(i) + 65) */
      add(0x20, mload(0x40))
      tag_300
      swap2
      swap1
        /* "#utility.yul":13770:13773   */
      0xf8
        /* "#utility.yul":13748:13764   */
      swap2
      swap1
      swap2
      shl
      not(sub(shl(0xf8, 0x01), 0x01))
        /* "#utility.yul":13744:13780   */
      and
        /* "#utility.yul":13732:13781   */
      dup2
      mstore
        /* "#utility.yul":13806:13807   */
      0x01
        /* "#utility.yul":13797:13808   */
      add
      swap1
        /* "#utility.yul":13607:13814   */
      jump
        /* "test/solidity/Protocol.t.sol":2435:2466  abi.encodePacked(uint8(i) + 65) */
    tag_300:
      mload(0x40)
      0x20
      dup2
      dup4
      sub
      sub
      dup2
      mstore
      swap1
      0x40
      mstore
        /* "test/solidity/Protocol.t.sol":2405:2467  string memory symbol = string(abi.encodePacked(uint8(i) + 65)) */
      swap1
      pop
        /* "test/solidity/Protocol.t.sol":2475:2490  MockERC20 asset */
      0x00
        /* "test/solidity/Protocol.t.sol":2507:2513  symbol */
      dup2
        /* "test/solidity/Protocol.t.sol":2515:2521  symbol */
      dup3
        /* "test/solidity/Protocol.t.sol":2523:2525  18 */
      0x12
        /* "test/solidity/Protocol.t.sol":2493:2526  new MockERC20(symbol, symbol, 18) */
      mload(0x40)
      tag_302
      swap1
      tag_303
      jump	// in
    tag_302:
      tag_304
      swap4
      swap3
      swap2
      swap1
      tag_305
      jump	// in
    tag_304:
      mload(0x40)
      dup1
      swap2
      sub
      swap1
      0x00
      create
      dup1
      iszero
      dup1
      iszero
      tag_306
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_306:
      pop
        /* "test/solidity/Protocol.t.sol":2534:2566  vm.label(address(asset), symbol) */
      mload(0x40)
      shl(0xe3, 0x18caf8e3)
      dup2
      mstore
        /* "test/solidity/Protocol.t.sol":2475:2526  MockERC20 asset = new MockERC20(symbol, symbol, 18) */
      swap1
      swap2
      pop
      0x00
      dup1
      mload
      0x20
      data_1a390d6c2ee89e11d2dffeb86f753e43f966d02cbb0b3bd3e6e1cdf50245ef50
      dup4
      codecopy
      dup2
      mload
      swap2
      mstore
        /* "test/solidity/Protocol.t.sol":2534:2542  vm.label */
      swap1
      0xc657c718
      swap1
        /* "test/solidity/Protocol.t.sol":2534:2566  vm.label(address(asset), symbol) */
      tag_307
      swap1
        /* "test/solidity/Protocol.t.sol":2475:2526  MockERC20 asset = new MockERC20(symbol, symbol, 18) */
      dup5
      swap1
        /* "test/solidity/Protocol.t.sol":2559:2565  symbol */
      dup7
      swap1
        /* "test/solidity/Protocol.t.sol":2534:2566  vm.label(address(asset), symbol) */
      0x04
      add
      tag_285
      jump	// in
    tag_307:
      0x00
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      0x00
      dup8
      dup1
      extcodesize
      iszero
      dup1
      iszero
      tag_308
      jumpi
      0x00
      dup1
      revert
    tag_308:
      pop
      gas
      call
      iszero
      dup1
      iszero
      tag_310
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_310:
      pop
      pop
        /* "test/solidity/Protocol.t.sol":2648:2655  auditor */
      sload(0x1b)
        /* "test/solidity/Protocol.t.sol":2630:2656  new Market(asset, auditor) */
      mload(0x40)
        /* "test/solidity/Protocol.t.sol":2574:2587  Market market */
      0x00
      swap4
      pop
        /* "test/solidity/Protocol.t.sol":2641:2646  asset */
      dup5
      swap3
      pop
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":2648:2655  auditor */
      swap1
      swap2
      and
      swap1
        /* "test/solidity/Protocol.t.sol":2630:2656  new Market(asset, auditor) */
      tag_311
      swap1
      tag_312
      jump	// in
    tag_311:
      sub(shl(0xa0, 0x01), 0x01)
        /* "#utility.yul":14561:14576   */
      swap3
      dup4
      and
        /* "#utility.yul":14543:14577   */
      dup2
      mstore
        /* "#utility.yul":14613:14628   */
      swap2
      and
        /* "#utility.yul":14608:14610   */
      0x20
        /* "#utility.yul":14593:14611   */
      dup3
      add
        /* "#utility.yul":14586:14629   */
      mstore
        /* "#utility.yul":14493:14495   */
      0x40
        /* "#utility.yul":14478:14496   */
      add
        /* "test/solidity/Protocol.t.sol":2630:2656  new Market(asset, auditor) */
      mload(0x40)
      dup1
      swap2
      sub
      swap1
      0x00
      create
      dup1
      iszero
      dup1
      iszero
      tag_315
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_315:
      pop
        /* "test/solidity/Protocol.t.sol":2605:2662  new ERC1967Proxy(address(new Market(asset, auditor)), "") */
      mload(0x40)
      tag_316
      swap1
      tag_253
      jump	// in
    tag_316:
      sub(shl(0xa0, 0x01), 0x01)
        /* "#utility.yul":10704:10736   */
      swap1
      swap2
      and
        /* "#utility.yul":10686:10737   */
      dup2
      mstore
        /* "#utility.yul":10773:10775   */
      0x40
        /* "#utility.yul":10768:10770   */
      0x20
        /* "#utility.yul":10753:10771   */
      dup3
      add
        /* "#utility.yul":10746:10776   */
      dup2
      swap1
      mstore
      0x00
        /* "#utility.yul":10792:10810   */
      swap1
      dup3
      add
        /* "#utility.yul":10785:10814   */
      mstore
        /* "#utility.yul":10846:10848   */
      0x60
        /* "#utility.yul":10831:10849   */
      add
        /* "test/solidity/Protocol.t.sol":2605:2662  new ERC1967Proxy(address(new Market(asset, auditor)), "") */
      mload(0x40)
      dup1
      swap2
      sub
      swap1
      0x00
      create
      dup1
      iszero
      dup1
      iszero
      tag_318
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_318:
      pop
        /* "test/solidity/Protocol.t.sol":2574:2664  Market market = Market(address(new ERC1967Proxy(address(new Market(asset, auditor)), ""))) */
      swap1
      pop
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":2672:2689  market.initialize */
      dup2
      and
      0x9f73066e
        /* "test/solidity/Protocol.t.sol":2690:2691  3 */
      0x03
        /* "test/solidity/Protocol.t.sol":2693:2697  2e18 */
      0x1bc16d674ec80000
        /* "test/solidity/Protocol.t.sol":2699:2702  irm */
      dup9
        /* "test/solidity/Protocol.t.sol":2704:2729  0.02e18 / uint256(1 days) */
      tag_319
        /* "test/solidity/Protocol.t.sol":2722:2728  1 days */
      0x015180
        /* "test/solidity/Protocol.t.sol":2704:2711  0.02e18 */
      0x470de4df820000
        /* "test/solidity/Protocol.t.sol":2704:2729  0.02e18 / uint256(1 days) */
      tag_320
      jump	// in
    tag_319:
        /* "test/solidity/Protocol.t.sol":2672:2762  market.initialize(3, 2e18, irm, 0.02e18 / uint256(1 days), 1e17, 1e17, 0.0046e18, 0.42e18) */
      mload(0x40)
      not(sub(shl(0xe0, 0x01), 0x01))
      0xe0
      dup8
      swap1
      shl
      and
      dup2
      mstore
        /* "#utility.yul":15294:15298   */
      0xff
        /* "#utility.yul":15282:15299   */
      swap1
      swap5
      and
        /* "test/solidity/Protocol.t.sol":2672:2762  market.initialize(3, 2e18, irm, 0.02e18 / uint256(1 days), 1e17, 1e17, 0.0046e18, 0.42e18) */
      0x04
      dup6
      add
        /* "#utility.yul":15264:15300   */
      mstore
      sub(shl(0x80, 0x01), 0x01)
        /* "#utility.yul":15389:15404   */
      swap1
      swap3
      and
        /* "#utility.yul":15369:15387   */
      0x24
      dup5
      add
        /* "#utility.yul":15362:15405   */
      mstore
      sub(shl(0xa0, 0x01), 0x01)
        /* "#utility.yul":15441:15473   */
      and
        /* "#utility.yul":15421:15439   */
      0x44
      dup4
      add
        /* "#utility.yul":15414:15474   */
      mstore
        /* "#utility.yul":15490:15508   */
      0x64
      dup3
      add
        /* "#utility.yul":15483:15517   */
      mstore
        /* "test/solidity/Protocol.t.sol":2731:2735  1e17 */
      0x016345785d8a0000
        /* "#utility.yul":15533:15552   */
      0x84
      dup3
      add
        /* "#utility.yul":15526:15561   */
      dup2
      swap1
      mstore
        /* "#utility.yul":15577:15596   */
      0xa4
      dup3
      add
        /* "#utility.yul":15570:15614   */
      mstore
        /* "test/solidity/Protocol.t.sol":2743:2752  0.0046e18 */
      0x1057acf5f78000
        /* "#utility.yul":15630:15649   */
      0xc4
      dup3
      add
        /* "#utility.yul":15623:15658   */
      mstore
        /* "test/solidity/Protocol.t.sol":2754:2761  0.42e18 */
      0x05d423c655aa0000
        /* "#utility.yul":15674:15693   */
      0xe4
      dup3
      add
        /* "#utility.yul":15667:15702   */
      mstore
        /* "#utility.yul":15236:15255   */
      0x0104
      add
        /* "test/solidity/Protocol.t.sol":2672:2762  market.initialize(3, 2e18, irm, 0.02e18 / uint256(1 days), 1e17, 1e17, 0.0046e18, 0.42e18) */
      0x00
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      0x00
      dup8
      dup1
      extcodesize
      iszero
      dup1
      iszero
      tag_323
      jumpi
      0x00
      dup1
      revert
    tag_323:
      pop
      gas
      call
      iszero
      dup1
      iszero
      tag_325
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_325:
      pop
      pop
      pop
      pop
      0x00
      dup1
      mload
      0x20
      data_b627c71dec38ae7fa273aa3bb9b6210fd4a76d47f44ae646db16da401b96db40
      dup4
      codecopy
      dup2
      mload
      swap2
      mstore
        /* "lib/forge-std/src/Base.sol":309:346  uint256(keccak256("hevm cheat code")) */
      0x00
      shr
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":2770:2778  vm.label */
      and
      0xc657c718
        /* "test/solidity/Protocol.t.sol":2787:2793  market */
      dup3
        /* "test/solidity/Protocol.t.sol":2796:2802  market */
      dup4
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":2796:2809  market.symbol */
      and
      0x95d89b41
        /* "test/solidity/Protocol.t.sol":2796:2811  market.symbol() */
      mload(0x40)
      dup2
      0xffffffff
      and
      0xe0
      shl
      dup2
      mstore
      0x04
      add
      0x00
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      dup7
      gas
      staticcall
      iszero
      dup1
      iszero
      tag_327
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_327:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      0x00
      dup3
      returndatacopy
      0x1f
      returndatasize
      swap1
      dup2
      add
      not(0x1f)
      and
      dup3
      add
      0x40
      mstore
      tag_328
      swap2
      swap1
      dup2
      add
      swap1
      tag_329
      jump	// in
    tag_328:
        /* "test/solidity/Protocol.t.sol":2770:2812  vm.label(address(market), market.symbol()) */
      mload(0x40)
      dup4
      0xffffffff
      and
      0xe0
      shl
      dup2
      mstore
      0x04
      add
      tag_330
      swap3
      swap2
      swap1
      tag_285
      jump	// in
    tag_330:
      0x00
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      0x00
      dup8
      dup1
      extcodesize
      iszero
      dup1
      iszero
      tag_331
      jumpi
      0x00
      dup1
      revert
    tag_331:
      pop
      gas
      call
      iszero
      dup1
      iszero
      tag_333
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_333:
      pop
      pop
      pop
      pop
        /* "test/solidity/Protocol.t.sol":2820:2843  MockPriceFeed priceFeed */
      0x00
        /* "test/solidity/Protocol.t.sol":2864:2866  18 */
      0x12
        /* "test/solidity/Protocol.t.sol":2868:2872  1e18 */
      0x0de0b6b3a7640000
        /* "test/solidity/Protocol.t.sol":2846:2873  new MockPriceFeed(18, 1e18) */
      mload(0x40)
      tag_334
      swap1
      tag_335
      jump	// in
    tag_334:
        /* "#utility.yul":17342:17346   */
      0xff
        /* "#utility.yul":17330:17347   */
      swap1
      swap3
      and
        /* "#utility.yul":17312:17348   */
      dup3
      mstore
        /* "#utility.yul":17379:17381   */
      0x20
        /* "#utility.yul":17364:17382   */
      dup3
      add
        /* "#utility.yul":17357:17391   */
      mstore
        /* "#utility.yul":17300:17302   */
      0x40
        /* "#utility.yul":17285:17303   */
      add
        /* "test/solidity/Protocol.t.sol":2846:2873  new MockPriceFeed(18, 1e18) */
      mload(0x40)
      dup1
      swap2
      sub
      swap1
      0x00
      create
      dup1
      iszero
      dup1
      iszero
      tag_338
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_338:
      pop
        /* "test/solidity/Protocol.t.sol":2933:2940  auditor */
      sload(0x1b)
        /* "test/solidity/Protocol.t.sol":2933:2980  auditor.enableMarket(market, priceFeed, 0.9e18) */
      mload(0x40)
      shl(0xe0, 0xe037945b)
      dup2
      mstore
      sub(shl(0xa0, 0x01), 0x01)
        /* "#utility.yul":17722:17737   */
      dup6
      dup2
      and
        /* "test/solidity/Protocol.t.sol":2933:2980  auditor.enableMarket(market, priceFeed, 0.9e18) */
      0x04
      dup4
      add
        /* "#utility.yul":17704:17738   */
      mstore
        /* "#utility.yul":17774:17789   */
      dup1
      dup5
      and
        /* "#utility.yul":17754:17772   */
      0x24
      dup4
      add
        /* "#utility.yul":17747:17790   */
      mstore
        /* "test/solidity/Protocol.t.sol":2973:2979  0.9e18 */
      0x0c7d713b49da0000
        /* "#utility.yul":17806:17824   */
      0x44
      dup4
      add
        /* "#utility.yul":17799:17874   */
      mstore
        /* "test/solidity/Protocol.t.sol":2820:2873  MockPriceFeed priceFeed = new MockPriceFeed(18, 1e18) */
      swap3
      swap4
      pop
        /* "test/solidity/Protocol.t.sol":2933:2940  auditor */
      swap2
      and
      swap1
        /* "test/solidity/Protocol.t.sol":2933:2953  auditor.enableMarket */
      0xe037945b
      swap1
        /* "#utility.yul":17639:17657   */
      0x64
      add
        /* "test/solidity/Protocol.t.sol":2933:2980  auditor.enableMarket(market, priceFeed, 0.9e18) */
      0x00
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      0x00
      dup8
      dup1
      extcodesize
      iszero
      dup1
      iszero
      tag_341
      jumpi
      0x00
      dup1
      revert
    tag_341:
      pop
      gas
      call
      iszero
      dup1
      iszero
      tag_343
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_343:
      pop
      pop
        /* "test/solidity/Protocol.t.sol":2989:3038  asset.approve(address(market), type(uint256).max) */
      mload(0x40)
      shl(0xe0, 0x095ea7b3)
      dup2
      mstore
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":2989:3002  asset.approve */
      dup7
      and
      swap3
      pop
      0x095ea7b3
      swap2
      pop
        /* "test/solidity/Protocol.t.sol":2989:3038  asset.approve(address(market), type(uint256).max) */
      tag_344
      swap1
        /* "test/solidity/Protocol.t.sol":3011:3017  market */
      dup6
      swap1
      not(0x00)
        /* "test/solidity/Protocol.t.sol":3020:3037  type(uint256).max */
      swap1
        /* "test/solidity/Protocol.t.sol":2989:3038  asset.approve(address(market), type(uint256).max) */
      0x04
      add
      tag_345
      jump	// in
    tag_344:
      0x20
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      0x00
      dup8
      gas
      call
      iszero
      dup1
      iszero
      tag_347
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_347:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      dup2
      add
      swap1
      tag_348
      swap2
      swap1
      tag_349
      jump	// in
    tag_348:
      pop
        /* "test/solidity/Protocol.t.sol":3051:3060  uint256 j */
      0x00
        /* "test/solidity/Protocol.t.sol":3046:3191  for (uint256 j = 0; j < accounts.length; ++j) {... */
    tag_350:
        /* "test/solidity/Protocol.t.sol":3070:3078  accounts */
      0x1d
        /* "test/solidity/Protocol.t.sol":3070:3085  accounts.length */
      sload
        /* "test/solidity/Protocol.t.sol":3066:3085  j < accounts.length */
      dup2
      lt
        /* "test/solidity/Protocol.t.sol":3046:3191  for (uint256 j = 0; j < accounts.length; ++j) {... */
      iszero
      tag_351
      jumpi
        /* "test/solidity/Protocol.t.sol":3111:3119  accounts */
      0x1d
        /* "test/solidity/Protocol.t.sol":3111:3122  accounts[j] */
      dup1
      sload
      0x00
      dup1
      mload
      0x20
      data_1a390d6c2ee89e11d2dffeb86f753e43f966d02cbb0b3bd3e6e1cdf50245ef50
      dup4
      codecopy
      dup2
      mload
      swap2
      mstore
        /* "test/solidity/Protocol.t.sol":3102:3110  vm.prank */
      swap2
      0xca669fa7
      swap2
        /* "test/solidity/Protocol.t.sol":3120:3121  j */
      dup5
      swap1
        /* "test/solidity/Protocol.t.sol":3111:3122  accounts[j] */
      dup2
      lt
      tag_354
      jumpi
      tag_354
      tag_162
      jump	// in
    tag_354:
      0x00
      swap2
      dup3
      mstore
      0x20
      swap1
      swap2
      keccak256
      add
      sload
        /* "test/solidity/Protocol.t.sol":3102:3123  vm.prank(accounts[j]) */
      mload(0x40)
      0xe0
      dup4
      swap1
      shl
      not(sub(shl(0xe0, 0x01), 0x01))
      and
      dup2
      mstore
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":3111:3122  accounts[j] */
      swap1
      swap2
      and
        /* "test/solidity/Protocol.t.sol":3102:3123  vm.prank(accounts[j]) */
      0x04
      dup3
      add
        /* "#utility.yul":7560:7611   */
      mstore
        /* "#utility.yul":7533:7551   */
      0x24
      add
        /* "test/solidity/Protocol.t.sol":3102:3123  vm.prank(accounts[j]) */
      0x00
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      0x00
      dup8
      dup1
      extcodesize
      iszero
      dup1
      iszero
      tag_357
      jumpi
      0x00
      dup1
      revert
    tag_357:
      pop
      gas
      call
      iszero
      dup1
      iszero
      tag_359
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_359:
      pop
      pop
        /* "test/solidity/Protocol.t.sol":3133:3182  asset.approve(address(market), type(uint256).max) */
      mload(0x40)
      shl(0xe0, 0x095ea7b3)
      dup2
      mstore
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":3133:3146  asset.approve */
      dup8
      and
      swap3
      pop
      0x095ea7b3
      swap2
      pop
        /* "test/solidity/Protocol.t.sol":3133:3182  asset.approve(address(market), type(uint256).max) */
      tag_360
      swap1
        /* "test/solidity/Protocol.t.sol":3155:3161  market */
      dup7
      swap1
      not(0x00)
        /* "test/solidity/Protocol.t.sol":3164:3181  type(uint256).max */
      swap1
        /* "test/solidity/Protocol.t.sol":3133:3182  asset.approve(address(market), type(uint256).max) */
      0x04
      add
      tag_345
      jump	// in
    tag_360:
      0x20
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      0x00
      dup8
      gas
      call
      iszero
      dup1
      iszero
      tag_362
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_362:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      dup2
      add
      swap1
      tag_363
      swap2
      swap1
      tag_349
      jump	// in
    tag_363:
      pop
        /* "test/solidity/Protocol.t.sol":3087:3090  ++j */
      tag_364
      dup2
      tag_293
      jump	// in
    tag_364:
      swap1
      pop
        /* "test/solidity/Protocol.t.sol":3046:3191  for (uint256 j = 0; j < accounts.length; ++j) {... */
      jump(tag_350)
    tag_351:
      pop
      pop
        /* "test/solidity/Protocol.t.sol":3198:3205  markets */
      0x1c
        /* "test/solidity/Protocol.t.sol":3198:3218  markets.push(market) */
      dup1
      sload
      0x01
      dup2
      add
      dup3
      sstore
      0x00
      swap2
      swap1
      swap2
      mstore
      0x0e4562a10381dec21b205ed72637e6b1b523bdd0e4d4d50af5cd23dd4500a211
      add
      dup1
      sload
      not(sub(shl(0xa0, 0x01), 0x01))
      and
      sub(shl(0xa0, 0x01), 0x01)
      swap3
      swap1
      swap3
      and
      swap2
      swap1
      swap2
      or
      swap1
      sstore
      pop
        /* "test/solidity/Protocol.t.sol":2392:2395  ++i */
      tag_366
      swap1
      pop
      dup2
      tag_293
      jump	// in
    tag_366:
      swap1
      pop
        /* "test/solidity/Protocol.t.sol":2365:3225  for (uint256 i = 0; i < 2; ++i) {... */
      jump(tag_295)
    tag_296:
      pop
        /* "test/solidity/Protocol.t.sol":3302:3325  new RewardsController() */
      mload(0x40)
      tag_367
      swap1
      tag_368
      jump	// in
    tag_367:
      mload(0x40)
      dup1
      swap2
      sub
      swap1
      0x00
      create
      dup1
      iszero
      dup1
      iszero
      tag_369
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_369:
      pop
        /* "test/solidity/Protocol.t.sol":3277:3331  new ERC1967Proxy(address(new RewardsController()), "") */
      mload(0x40)
      tag_370
      swap1
      tag_253
      jump	// in
    tag_370:
      sub(shl(0xa0, 0x01), 0x01)
        /* "#utility.yul":10704:10736   */
      swap1
      swap2
      and
        /* "#utility.yul":10686:10737   */
      dup2
      mstore
        /* "#utility.yul":10773:10775   */
      0x40
        /* "#utility.yul":10768:10770   */
      0x20
        /* "#utility.yul":10753:10771   */
      dup3
      add
        /* "#utility.yul":10746:10776   */
      dup2
      swap1
      mstore
      0x00
        /* "#utility.yul":10792:10810   */
      swap1
      dup3
      add
        /* "#utility.yul":10785:10814   */
      mstore
        /* "#utility.yul":10846:10848   */
      0x60
        /* "#utility.yul":10831:10849   */
      add
        /* "test/solidity/Protocol.t.sol":3277:3331  new ERC1967Proxy(address(new RewardsController()), "") */
      mload(0x40)
      dup1
      swap2
      sub
      swap1
      0x00
      create
      dup1
      iszero
      dup1
      iszero
      tag_372
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_372:
      pop
        /* "test/solidity/Protocol.t.sol":3231:3248  rewardsController */
      0x1e
        /* "test/solidity/Protocol.t.sol":3231:3333  rewardsController = RewardsController(address(new ERC1967Proxy(address(new RewardsController()), ""))) */
      dup1
      sload
      not(sub(shl(0xa0, 0x01), 0x01))
      and
      sub(shl(0xa0, 0x01), 0x01)
      swap3
      swap1
      swap3
      and
      swap2
      dup3
      or
      swap1
      sstore
        /* "test/solidity/Protocol.t.sol":3339:3369  rewardsController.initialize() */
      0x40
      dup1
      mload
      shl(0xe2, 0x204a7f07)
      dup2
      mstore
      swap1
      mload
        /* "test/solidity/Protocol.t.sol":3339:3367  rewardsController.initialize */
      0x8129fc1c
      swap2
        /* "test/solidity/Protocol.t.sol":3339:3369  rewardsController.initialize() */
      0x04
      dup1
      dup3
      add
      swap3
      0x00
      swap3
      swap1
      swap2
      swap1
      dup3
      swap1
      sub
      add
      dup2
      dup4
        /* "test/solidity/Protocol.t.sol":3231:3333  rewardsController = RewardsController(address(new ERC1967Proxy(address(new RewardsController()), ""))) */
      dup8
        /* "test/solidity/Protocol.t.sol":3339:3369  rewardsController.initialize() */
      dup1
      extcodesize
      iszero
      dup1
      iszero
      tag_373
      jumpi
      0x00
      dup1
      revert
    tag_373:
      pop
      gas
      call
      iszero
      dup1
      iszero
      tag_375
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_375:
      pop
      pop
        /* "test/solidity/Protocol.t.sol":3392:3409  rewardsController */
      sload(0x1e)
        /* "test/solidity/Protocol.t.sol":3375:3432  vm.label(address(rewardsController), "RewardsController") */
      0x40
      dup1
      mload
      shl(0xe3, 0x18caf8e3)
      dup2
      mstore
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":3392:3409  rewardsController */
      swap1
      swap3
      and
        /* "test/solidity/Protocol.t.sol":3375:3432  vm.label(address(rewardsController), "RewardsController") */
      0x04
      dup4
      add
        /* "#utility.yul":18583:18634   */
      mstore
        /* "#utility.yul":18650:18668   */
      0x24
      dup3
      add
        /* "#utility.yul":18643:18673   */
      mstore
        /* "#utility.yul":18709:18711   */
      0x11
        /* "#utility.yul":18689:18707   */
      0x44
      dup3
      add
        /* "#utility.yul":18682:18712   */
      mstore
      shl(0x79, 0x2932bbb0b93239a1b7b73a3937b63632b9)
        /* "#utility.yul":18728:18746   */
      0x64
      dup3
      add
        /* "#utility.yul":18721:18768   */
      mstore
      0x00
      dup1
      mload
      0x20
      data_1a390d6c2ee89e11d2dffeb86f753e43f966d02cbb0b3bd3e6e1cdf50245ef50
      dup4
      codecopy
      dup2
      mload
      swap2
      mstore
        /* "test/solidity/Protocol.t.sol":3375:3383  vm.label */
      swap3
      pop
      0xc657c718
      swap2
      pop
        /* "#utility.yul":18785:18804   */
      0x84
      add
        /* "test/solidity/Protocol.t.sol":3375:3432  vm.label(address(rewardsController), "RewardsController") */
      0x00
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      0x00
      dup8
      dup1
      extcodesize
      iszero
      dup1
      iszero
      tag_378
      jumpi
      0x00
      dup1
      revert
    tag_378:
      pop
      gas
      call
      iszero
      dup1
      iszero
      tag_380
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_380:
      pop
      pop
      pop
      pop
        /* "test/solidity/Protocol.t.sol":3478:3480  18 */
      0x12
        /* "test/solidity/Protocol.t.sol":3452:3481  new MockERC20("OP", "OP", 18) */
      mload(0x40)
      tag_381
      swap1
      tag_303
      jump	// in
    tag_381:
      tag_382
      swap2
      swap1
      tag_383
      jump	// in
    tag_382:
      mload(0x40)
      dup1
      swap2
      sub
      swap1
      0x00
      create
      dup1
      iszero
      dup1
      iszero
      tag_384
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_384:
      pop
        /* "test/solidity/Protocol.t.sol":3438:3449  rewardAsset */
      0x1f
        /* "test/solidity/Protocol.t.sol":3438:3481  rewardAsset = new MockERC20("OP", "OP", 18) */
      dup1
      sload
      not(sub(shl(0xa0, 0x01), 0x01))
      and
      sub(shl(0xa0, 0x01), 0x01)
      swap3
      dup4
      and
      swap1
      dup2
      or
      swap1
      swap2
      sstore
        /* "test/solidity/Protocol.t.sol":3512:3529  rewardsController */
      sload(0x1e)
        /* "test/solidity/Protocol.t.sol":3487:3544  rewardAsset.mint(address(rewardsController), 2_000 ether) */
      mload(0x40)
      shl(0xe0, 0x40c10f19)
      dup2
      mstore
        /* "test/solidity/Protocol.t.sol":3438:3481  rewardAsset = new MockERC20("OP", "OP", 18) */
      swap2
      swap3
        /* "test/solidity/Protocol.t.sol":3487:3503  rewardAsset.mint */
      0x40c10f19
      swap3
        /* "test/solidity/Protocol.t.sol":3487:3544  rewardAsset.mint(address(rewardsController), 2_000 ether) */
      tag_385
      swap3
        /* "test/solidity/Protocol.t.sol":3512:3529  rewardsController */
      swap1
      swap2
      and
      swap1
        /* "test/solidity/Protocol.t.sol":3532:3543  2_000 ether */
      0x6c6b935b8bbd400000
      swap1
        /* "test/solidity/Protocol.t.sol":3487:3544  rewardAsset.mint(address(rewardsController), 2_000 ether) */
      0x04
      add
      tag_345
      jump	// in
    tag_385:
      0x00
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      0x00
      dup8
      dup1
      extcodesize
      iszero
      dup1
      iszero
      tag_387
      jumpi
      0x00
      dup1
      revert
    tag_387:
      pop
      gas
      call
      iszero
      dup1
      iszero
      tag_389
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_389:
      pop
        /* "test/solidity/Protocol.t.sol":3550:3591  RewardsController.Config[] memory configs */
      0x00
      swap3
      pop
        /* "test/solidity/Protocol.t.sol":3625:3626  1 */
      0x01
      swap2
      pop
        /* "test/solidity/Protocol.t.sol":3594:3627  new RewardsController.Config[](1) */
      tag_391
      swap1
      pop
      jump
    tag_391:
      mload(0x40)
      swap1
      dup1
      dup3
      mstore
      dup1
      0x20
      mul
      0x20
      add
      dup3
      add
      0x40
      mstore
      dup1
      iszero
      tag_393
      jumpi
      dup2
      0x20
      add
    tag_394:
      0x40
      dup1
      mload
      0x01c0
      dup2
      add
      dup3
      mstore
      0x00
      dup1
      dup3
      mstore
      0x20
      dup1
      dup4
      add
      dup3
      swap1
      mstore
      swap3
      dup3
      add
      dup2
      swap1
      mstore
      0x60
      dup3
      add
      dup2
      swap1
      mstore
      0x80
      dup3
      add
      dup2
      swap1
      mstore
      0xa0
      dup3
      add
      dup2
      swap1
      mstore
      0xc0
      dup3
      add
      dup2
      swap1
      mstore
      0xe0
      dup3
      add
      dup2
      swap1
      mstore
      0x0100
      dup3
      add
      dup2
      swap1
      mstore
      0x0120
      dup3
      add
      dup2
      swap1
      mstore
      0x0140
      dup3
      add
      dup2
      swap1
      mstore
      0x0160
      dup3
      add
      dup2
      swap1
      mstore
      0x0180
      dup3
      add
      dup2
      swap1
      mstore
      0x01a0
      dup3
      add
      mstore
      dup3
      mstore
      not(0x00)
      swap1
      swap3
      add
      swap2
      add
      dup2
      tag_394
      jumpi
      swap1
      pop
    tag_393:
      pop
        /* "test/solidity/Protocol.t.sol":3550:3627  RewardsController.Config[] memory configs = new RewardsController.Config[](1) */
      swap1
      pop
        /* "test/solidity/Protocol.t.sol":3646:4175  RewardsController.Config({... */
      mload(0x40)
      dup1
      0x01c0
      add
      0x40
      mstore
      dup1
        /* "test/solidity/Protocol.t.sol":3687:3694  markets */
      0x1c
        /* "test/solidity/Protocol.t.sol":3695:3696  0 */
      0x00
        /* "test/solidity/Protocol.t.sol":3687:3697  markets[0] */
      dup2
      sload
      dup2
      lt
      tag_398
      jumpi
      tag_398
      tag_162
      jump	// in
    tag_398:
      0x00
      swap2
      dup3
      mstore
      0x20
      dup1
      dup4
      keccak256
      swap1
      swap2
      add
      sload
      sub(shl(0xa0, 0x01), 0x01)
      swap1
      dup2
      and
        /* "test/solidity/Protocol.t.sol":3646:4175  RewardsController.Config({... */
      dup5
      mstore
        /* "test/solidity/Protocol.t.sol":3713:3724  rewardAsset */
      sload(0x1f)
      and
        /* "test/solidity/Protocol.t.sol":3646:4175  RewardsController.Config({... */
      swap1
      dup4
      add
      mstore
      0x40
      dup3
      add
      dup2
      swap1
      mstore
      0xffffffff
        /* "test/solidity/Protocol.t.sol":3860:3875  block.timestamp */
      timestamp
        /* "test/solidity/Protocol.t.sol":3646:4175  RewardsController.Config({... */
      and
      0x60
      dup4
      add
      mstore
        /* "test/solidity/Protocol.t.sol":3904:3911  4 weeks */
      0x24ea00
        /* "test/solidity/Protocol.t.sol":3646:4175  RewardsController.Config({... */
      0x80
      dup4
      add
      mstore
        /* "test/solidity/Protocol.t.sol":3744:3756  20_000 ether */
      0x043c33c1937564800000
        /* "test/solidity/Protocol.t.sol":3646:4175  RewardsController.Config({... */
      0xa0
      dup4
      add
      mstore
        /* "test/solidity/Protocol.t.sol":3827:3838  2_000 ether */
      0x6c6b935b8bbd400000
        /* "test/solidity/Protocol.t.sol":3646:4175  RewardsController.Config({... */
      0xc0
      dup4
      add
      mstore
        /* "test/solidity/Protocol.t.sol":3940:3946  0.5e18 */
      0x06f05b59d3b20000
        /* "test/solidity/Protocol.t.sol":3646:4175  RewardsController.Config({... */
      0xe0
      dup4
      add
      mstore
        /* "test/solidity/Protocol.t.sol":3965:3969  2e18 */
      0x1bc16d674ec80000
        /* "test/solidity/Protocol.t.sol":3687:3697  markets[0] */
      0x0100
        /* "test/solidity/Protocol.t.sol":3646:4175  RewardsController.Config({... */
      dup4
      add
      mstore
        /* "test/solidity/Protocol.t.sol":3997:4004  0.85e18 */
      0x0bcbce7f1b150000
        /* "test/solidity/Protocol.t.sol":3646:4175  RewardsController.Config({... */
      0x0120
      dup4
      add
      mstore
        /* "test/solidity/Protocol.t.sol":4030:4037  0.64e18 */
      0x08e1bc9bf0400000
        /* "test/solidity/Protocol.t.sol":3646:4175  RewardsController.Config({... */
      0x0140
      dup4
      add
      mstore
      0x0160
      dup3
      add
      dup2
      swap1
      mstore
        /* "test/solidity/Protocol.t.sol":4115:4122  0.02e18 */
      0x470de4df820000
        /* "test/solidity/Protocol.t.sol":3646:4175  RewardsController.Config({... */
      0x0180
      dup4
      add
      mstore
        /* "test/solidity/Protocol.t.sol":4161:4168  0.01e18 */
      0x2386f26fc10000
        /* "test/solidity/Protocol.t.sol":3646:4175  RewardsController.Config({... */
      0x01a0
      swap1
      swap3
      add
      swap2
      swap1
      swap2
      mstore
        /* "test/solidity/Protocol.t.sol":3633:3643  configs[0] */
      dup3
      mload
        /* "test/solidity/Protocol.t.sol":3633:3640  configs */
      dup4
      swap2
        /* "test/solidity/Protocol.t.sol":3687:3697  markets[0] */
      swap1
        /* "test/solidity/Protocol.t.sol":3633:3643  configs[0] */
      tag_401
      jumpi
      tag_401
      tag_162
      jump	// in
    tag_401:
      0x20
      swap1
      dup2
      mul
      swap2
      swap1
      swap2
      add
      add
        /* "test/solidity/Protocol.t.sol":3633:4175  configs[0] = RewardsController.Config({... */
      mstore
        /* "test/solidity/Protocol.t.sol":4181:4198  rewardsController */
      sload(0x1e)
        /* "test/solidity/Protocol.t.sol":4181:4214  rewardsController.config(configs) */
      mload(0x40)
      shl(0xe1, 0x6f3f53e3)
      dup2
      mstore
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":4181:4198  rewardsController */
      swap1
      swap2
      and
      swap1
        /* "test/solidity/Protocol.t.sol":4181:4205  rewardsController.config */
      0xde7ea7c6
      swap1
        /* "test/solidity/Protocol.t.sol":4181:4214  rewardsController.config(configs) */
      tag_402
      swap1
        /* "test/solidity/Protocol.t.sol":4206:4213  configs */
      dup5
      swap1
        /* "test/solidity/Protocol.t.sol":4181:4214  rewardsController.config(configs) */
      0x04
      add
      tag_403
      jump	// in
    tag_402:
      0x00
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      0x00
      dup8
      dup1
      extcodesize
      iszero
      dup1
      iszero
      tag_404
      jumpi
      0x00
      dup1
      revert
    tag_404:
      pop
      gas
      call
      iszero
      dup1
      iszero
      tag_406
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_406:
      pop
      pop
      pop
      pop
        /* "test/solidity/Protocol.t.sol":4220:4227  markets */
      0x1c
        /* "test/solidity/Protocol.t.sol":4228:4229  0 */
      0x00
        /* "test/solidity/Protocol.t.sol":4220:4230  markets[0] */
      dup2
      sload
      dup2
      lt
      tag_408
      jumpi
      tag_408
      tag_162
      jump	// in
    tag_408:
      0x00
      swap2
      dup3
      mstore
      0x20
      swap1
      swap2
      keccak256
      add
      sload
        /* "test/solidity/Protocol.t.sol":4252:4269  rewardsController */
      sload(0x1e)
        /* "test/solidity/Protocol.t.sol":4220:4270  markets[0].setRewardsController(rewardsController) */
      mload(0x40)
      shl(0xe0, 0xbee36bb3)
      dup2
      mstore
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":4252:4269  rewardsController */
      swap2
      dup3
      and
        /* "test/solidity/Protocol.t.sol":4220:4270  markets[0].setRewardsController(rewardsController) */
      0x04
      dup3
      add
        /* "#utility.yul":7560:7611   */
      mstore
        /* "test/solidity/Protocol.t.sol":4220:4230  markets[0] */
      swap2
      and
      swap1
        /* "test/solidity/Protocol.t.sol":4220:4251  markets[0].setRewardsController */
      0xbee36bb3
      swap1
        /* "#utility.yul":7533:7551   */
      0x24
      add
        /* "test/solidity/Protocol.t.sol":4220:4270  markets[0].setRewardsController(rewardsController) */
      0x00
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      0x00
      dup8
      dup1
      extcodesize
      iszero
      dup1
      iszero
      tag_412
      jumpi
      0x00
      dup1
      revert
    tag_412:
      pop
      gas
      call
      iszero
      dup1
      iszero
      tag_414
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_414:
      pop
      pop
        /* "lib/forge-std/src/StdInvariant.sol":1419:1437  _targetedContracts */
      0x0e
        /* "lib/forge-std/src/StdInvariant.sol":1419:1464  _targetedContracts.push(newTargetedContract_) */
      dup1
      sload
      0x01
      dup2
      add
      dup3
      sstore
      0x00
      swap2
      swap1
      swap2
      mstore
      0xbb7b4a454dc3493923482f07822329ed19e8244eff582cc204f8554c3620c3fd
      add
      dup1
      sload
      not(sub(shl(0xa0, 0x01), 0x01))
      and
        /* "test/solidity/Protocol.t.sol":4300:4304  this */
      address
        /* "lib/forge-std/src/StdInvariant.sol":1419:1464  _targetedContracts.push(newTargetedContract_) */
      or
      swap1
      sstore
      pop
        /* "test/solidity/Protocol.t.sol":4277:4306  targetContract(address(this)) */
      tag_415
      swap1
      pop
        /* "lib/forge-std/src/StdInvariant.sol":1346:1471  function targetContract(address newTargetedContract_) internal {... */
      jump
        /* "test/solidity/Protocol.t.sol":4277:4306  targetContract(address(this)) */
    tag_415:
        /* "test/solidity/Protocol.t.sol":4340:4356  new bytes4[](18) */
      0x40
      dup1
      mload
        /* "test/solidity/Protocol.t.sol":4353:4355  18 */
      0x12
        /* "test/solidity/Protocol.t.sol":4340:4356  new bytes4[](18) */
      dup1
      dup3
      mstore
      0x0260
      dup3
      add
      swap1
      swap3
      mstore
        /* "test/solidity/Protocol.t.sol":4312:4337  bytes4[] memory selectors */
      0x00
      swap2
        /* "test/solidity/Protocol.t.sol":4340:4356  new bytes4[](18) */
      0x20
      dup3
      add
      0x0240
      dup1
      calldatasize
      dup4
      calldatacopy
      add
      swap1
      pop
      pop
        /* "test/solidity/Protocol.t.sol":4312:4356  bytes4[] memory selectors = new bytes4[](18) */
      swap1
      pop
        /* "test/solidity/Protocol.t.sol":4377:4402  this.enterMarket.selector */
      shl(0xe0, 0x9d87440b)
        /* "test/solidity/Protocol.t.sol":4362:4371  selectors */
      dup2
        /* "test/solidity/Protocol.t.sol":4372:4373  0 */
      0x00
        /* "test/solidity/Protocol.t.sol":4362:4374  selectors[0] */
      dup2
      mload
      dup2
      lt
      tag_421
      jumpi
      tag_421
      tag_162
      jump	// in
    tag_421:
      not(sub(shl(0xe0, 0x01), 0x01))
        /* "test/solidity/Protocol.t.sol":4362:4402  selectors[0] = this.enterMarket.selector */
      swap1
      swap3
      and
        /* "test/solidity/Protocol.t.sol":4362:4374  selectors[0] */
      0x20
      swap3
      dup4
      mul
      swap2
      swap1
      swap2
      add
      swap1
      swap2
      add
        /* "test/solidity/Protocol.t.sol":4362:4402  selectors[0] = this.enterMarket.selector */
      mstore
        /* "test/solidity/Protocol.t.sol":4408:4420  selectors[1] */
      dup1
      mload
      shl(0xe2, 0x11da8d)
        /* "test/solidity/Protocol.t.sol":4423:4447  this.exitMarket.selector */
      swap1
        /* "test/solidity/Protocol.t.sol":4408:4417  selectors */
      dup3
      swap1
        /* "test/solidity/Protocol.t.sol":4418:4419  1 */
      0x01
      swap1
        /* "test/solidity/Protocol.t.sol":4408:4420  selectors[1] */
      dup2
      lt
      tag_423
      jumpi
      tag_423
      tag_162
      jump	// in
    tag_423:
      not(sub(shl(0xe0, 0x01), 0x01))
        /* "test/solidity/Protocol.t.sol":4408:4447  selectors[1] = this.exitMarket.selector */
      swap1
      swap3
      and
        /* "test/solidity/Protocol.t.sol":4408:4420  selectors[1] */
      0x20
      swap3
      dup4
      mul
      swap2
      swap1
      swap2
      add
      swap1
      swap2
      add
        /* "test/solidity/Protocol.t.sol":4408:4447  selectors[1] = this.exitMarket.selector */
      mstore
        /* "test/solidity/Protocol.t.sol":4453:4465  selectors[2] */
      dup1
      mload
      shl(0xe0, 0x2290277f)
        /* "test/solidity/Protocol.t.sol":4468:4489  this.deposit.selector */
      swap1
        /* "test/solidity/Protocol.t.sol":4453:4462  selectors */
      dup3
      swap1
        /* "test/solidity/Protocol.t.sol":4463:4464  2 */
      0x02
      swap1
        /* "test/solidity/Protocol.t.sol":4453:4465  selectors[2] */
      dup2
      lt
      tag_425
      jumpi
      tag_425
      tag_162
      jump	// in
    tag_425:
      not(sub(shl(0xe0, 0x01), 0x01))
        /* "test/solidity/Protocol.t.sol":4453:4489  selectors[2] = this.deposit.selector */
      swap1
      swap3
      and
        /* "test/solidity/Protocol.t.sol":4453:4465  selectors[2] */
      0x20
      swap3
      dup4
      mul
      swap2
      swap1
      swap2
      add
      swap1
      swap2
      add
        /* "test/solidity/Protocol.t.sol":4453:4489  selectors[2] = this.deposit.selector */
      mstore
        /* "test/solidity/Protocol.t.sol":4495:4507  selectors[3] */
      dup1
      mload
      shl(0xe0, 0xd9c27cab)
        /* "test/solidity/Protocol.t.sol":4510:4528  this.mint.selector */
      swap1
        /* "test/solidity/Protocol.t.sol":4495:4504  selectors */
      dup3
      swap1
        /* "test/solidity/Protocol.t.sol":4505:4506  3 */
      0x03
      swap1
        /* "test/solidity/Protocol.t.sol":4495:4507  selectors[3] */
      dup2
      lt
      tag_427
      jumpi
      tag_427
      tag_162
      jump	// in
    tag_427:
      not(sub(shl(0xe0, 0x01), 0x01))
        /* "test/solidity/Protocol.t.sol":4495:4528  selectors[3] = this.mint.selector */
      swap1
      swap3
      and
        /* "test/solidity/Protocol.t.sol":4495:4507  selectors[3] */
      0x20
      swap3
      dup4
      mul
      swap2
      swap1
      swap2
      add
      swap1
      swap2
      add
        /* "test/solidity/Protocol.t.sol":4495:4528  selectors[3] = this.mint.selector */
      mstore
        /* "test/solidity/Protocol.t.sol":4534:4546  selectors[4] */
      dup1
      mload
      shl(0xe2, 0x06c86a31)
        /* "test/solidity/Protocol.t.sol":4549:4571  this.withdraw.selector */
      swap1
        /* "test/solidity/Protocol.t.sol":4534:4543  selectors */
      dup3
      swap1
        /* "test/solidity/Protocol.t.sol":4544:4545  4 */
      0x04
      swap1
        /* "test/solidity/Protocol.t.sol":4534:4546  selectors[4] */
      dup2
      lt
      tag_429
      jumpi
      tag_429
      tag_162
      jump	// in
    tag_429:
      not(sub(shl(0xe0, 0x01), 0x01))
        /* "test/solidity/Protocol.t.sol":4534:4571  selectors[4] = this.withdraw.selector */
      swap1
      swap3
      and
        /* "test/solidity/Protocol.t.sol":4534:4546  selectors[4] */
      0x20
      swap3
      dup4
      mul
      swap2
      swap1
      swap2
      add
      swap1
      swap2
      add
        /* "test/solidity/Protocol.t.sol":4534:4571  selectors[4] = this.withdraw.selector */
      mstore
        /* "test/solidity/Protocol.t.sol":4577:4589  selectors[5] */
      dup1
      mload
      shl(0xe0, 0x32a5f9f7)
        /* "test/solidity/Protocol.t.sol":4592:4612  this.redeem.selector */
      swap1
        /* "test/solidity/Protocol.t.sol":4577:4586  selectors */
      dup3
      swap1
        /* "test/solidity/Protocol.t.sol":4587:4588  5 */
      0x05
      swap1
        /* "test/solidity/Protocol.t.sol":4577:4589  selectors[5] */
      dup2
      lt
      tag_431
      jumpi
      tag_431
      tag_162
      jump	// in
    tag_431:
      not(sub(shl(0xe0, 0x01), 0x01))
        /* "test/solidity/Protocol.t.sol":4577:4612  selectors[5] = this.redeem.selector */
      swap1
      swap3
      and
        /* "test/solidity/Protocol.t.sol":4577:4589  selectors[5] */
      0x20
      swap3
      dup4
      mul
      swap2
      swap1
      swap2
      add
      swap1
      swap2
      add
        /* "test/solidity/Protocol.t.sol":4577:4612  selectors[5] = this.redeem.selector */
      mstore
        /* "test/solidity/Protocol.t.sol":4618:4630  selectors[6] */
      dup1
      mload
      shl(0xe1, 0x331f70fd)
        /* "test/solidity/Protocol.t.sol":4633:4655  this.transfer.selector */
      swap1
        /* "test/solidity/Protocol.t.sol":4618:4627  selectors */
      dup3
      swap1
        /* "test/solidity/Protocol.t.sol":4628:4629  6 */
      0x06
      swap1
        /* "test/solidity/Protocol.t.sol":4618:4630  selectors[6] */
      dup2
      lt
      tag_433
      jumpi
      tag_433
      tag_162
      jump	// in
    tag_433:
      not(sub(shl(0xe0, 0x01), 0x01))
        /* "test/solidity/Protocol.t.sol":4618:4655  selectors[6] = this.transfer.selector */
      swap1
      swap3
      and
        /* "test/solidity/Protocol.t.sol":4618:4630  selectors[6] */
      0x20
      swap3
      dup4
      mul
      swap2
      swap1
      swap2
      add
      swap1
      swap2
      add
        /* "test/solidity/Protocol.t.sol":4618:4655  selectors[6] = this.transfer.selector */
      mstore
        /* "test/solidity/Protocol.t.sol":4661:4673  selectors[7] */
      dup1
      mload
      shl(0xe5, 0x023d59ff)
        /* "test/solidity/Protocol.t.sol":4676:4696  this.borrow.selector */
      swap1
        /* "test/solidity/Protocol.t.sol":4661:4670  selectors */
      dup3
      swap1
        /* "test/solidity/Protocol.t.sol":4671:4672  7 */
      0x07
      swap1
        /* "test/solidity/Protocol.t.sol":4661:4673  selectors[7] */
      dup2
      lt
      tag_435
      jumpi
      tag_435
      tag_162
      jump	// in
    tag_435:
      not(sub(shl(0xe0, 0x01), 0x01))
        /* "test/solidity/Protocol.t.sol":4661:4696  selectors[7] = this.borrow.selector */
      swap1
      swap3
      and
        /* "test/solidity/Protocol.t.sol":4661:4673  selectors[7] */
      0x20
      swap3
      dup4
      mul
      swap2
      swap1
      swap2
      add
      swap1
      swap2
      add
        /* "test/solidity/Protocol.t.sol":4661:4696  selectors[7] = this.borrow.selector */
      mstore
        /* "test/solidity/Protocol.t.sol":4702:4714  selectors[8] */
      dup1
      mload
      shl(0xe3, 0x052d6f97)
        /* "test/solidity/Protocol.t.sol":4717:4736  this.repay.selector */
      swap1
        /* "test/solidity/Protocol.t.sol":4702:4711  selectors */
      dup3
      swap1
        /* "test/solidity/Protocol.t.sol":4712:4713  8 */
      0x08
      swap1
        /* "test/solidity/Protocol.t.sol":4702:4714  selectors[8] */
      dup2
      lt
      tag_437
      jumpi
      tag_437
      tag_162
      jump	// in
    tag_437:
      not(sub(shl(0xe0, 0x01), 0x01))
        /* "test/solidity/Protocol.t.sol":4702:4736  selectors[8] = this.repay.selector */
      swap1
      swap3
      and
        /* "test/solidity/Protocol.t.sol":4702:4714  selectors[8] */
      0x20
      swap3
      dup4
      mul
      swap2
      swap1
      swap2
      add
      swap1
      swap2
      add
        /* "test/solidity/Protocol.t.sol":4702:4736  selectors[8] = this.repay.selector */
      mstore
        /* "test/solidity/Protocol.t.sol":4742:4754  selectors[9] */
      dup1
      mload
      shl(0xe0, 0x71d1991d)
        /* "test/solidity/Protocol.t.sol":4757:4777  this.refund.selector */
      swap1
        /* "test/solidity/Protocol.t.sol":4742:4751  selectors */
      dup3
      swap1
        /* "test/solidity/Protocol.t.sol":4752:4753  9 */
      0x09
      swap1
        /* "test/solidity/Protocol.t.sol":4742:4754  selectors[9] */
      dup2
      lt
      tag_439
      jumpi
      tag_439
      tag_162
      jump	// in
    tag_439:
      not(sub(shl(0xe0, 0x01), 0x01))
        /* "test/solidity/Protocol.t.sol":4742:4777  selectors[9] = this.refund.selector */
      swap1
      swap3
      and
        /* "test/solidity/Protocol.t.sol":4742:4754  selectors[9] */
      0x20
      swap3
      dup4
      mul
      swap2
      swap1
      swap2
      add
      swap1
      swap2
      add
        /* "test/solidity/Protocol.t.sol":4742:4777  selectors[9] = this.refund.selector */
      mstore
        /* "test/solidity/Protocol.t.sol":4783:4796  selectors[10] */
      dup1
      mload
      shl(0xe1, 0x057e4d17)
        /* "test/solidity/Protocol.t.sol":4799:4830  this.depositAtMaturity.selector */
      swap1
        /* "test/solidity/Protocol.t.sol":4783:4792  selectors */
      dup3
      swap1
        /* "test/solidity/Protocol.t.sol":4793:4795  10 */
      0x0a
      swap1
        /* "test/solidity/Protocol.t.sol":4783:4796  selectors[10] */
      dup2
      lt
      tag_441
      jumpi
      tag_441
      tag_162
      jump	// in
    tag_441:
      not(sub(shl(0xe0, 0x01), 0x01))
        /* "test/solidity/Protocol.t.sol":4783:4830  selectors[10] = this.depositAtMaturity.selector */
      swap1
      swap3
      and
        /* "test/solidity/Protocol.t.sol":4783:4796  selectors[10] */
      0x20
      swap3
      dup4
      mul
      swap2
      swap1
      swap2
      add
      swap1
      swap2
      add
        /* "test/solidity/Protocol.t.sol":4783:4830  selectors[10] = this.depositAtMaturity.selector */
      mstore
        /* "test/solidity/Protocol.t.sol":4836:4849  selectors[11] */
      dup1
      mload
      shl(0xe1, 0x0db35663)
        /* "test/solidity/Protocol.t.sol":4852:4884  this.withdrawAtMaturity.selector */
      swap1
        /* "test/solidity/Protocol.t.sol":4836:4845  selectors */
      dup3
      swap1
        /* "test/solidity/Protocol.t.sol":4846:4848  11 */
      0x0b
      swap1
        /* "test/solidity/Protocol.t.sol":4836:4849  selectors[11] */
      dup2
      lt
      tag_443
      jumpi
      tag_443
      tag_162
      jump	// in
    tag_443:
      not(sub(shl(0xe0, 0x01), 0x01))
        /* "test/solidity/Protocol.t.sol":4836:4884  selectors[11] = this.withdrawAtMaturity.selector */
      swap1
      swap3
      and
        /* "test/solidity/Protocol.t.sol":4836:4849  selectors[11] */
      0x20
      swap3
      dup4
      mul
      swap2
      swap1
      swap2
      add
      swap1
      swap2
      add
        /* "test/solidity/Protocol.t.sol":4836:4884  selectors[11] = this.withdrawAtMaturity.selector */
      mstore
        /* "test/solidity/Protocol.t.sol":4890:4903  selectors[12] */
      dup1
      mload
      shl(0xe4, 0x0f1791ed)
        /* "test/solidity/Protocol.t.sol":4906:4936  this.borrowAtMaturity.selector */
      swap1
        /* "test/solidity/Protocol.t.sol":4890:4899  selectors */
      dup3
      swap1
        /* "test/solidity/Protocol.t.sol":4900:4902  12 */
      0x0c
      swap1
        /* "test/solidity/Protocol.t.sol":4890:4903  selectors[12] */
      dup2
      lt
      tag_445
      jumpi
      tag_445
      tag_162
      jump	// in
    tag_445:
      not(sub(shl(0xe0, 0x01), 0x01))
        /* "test/solidity/Protocol.t.sol":4890:4936  selectors[12] = this.borrowAtMaturity.selector */
      swap1
      swap3
      and
        /* "test/solidity/Protocol.t.sol":4890:4903  selectors[12] */
      0x20
      swap3
      dup4
      mul
      swap2
      swap1
      swap2
      add
      swap1
      swap2
      add
        /* "test/solidity/Protocol.t.sol":4890:4936  selectors[12] = this.borrowAtMaturity.selector */
      mstore
        /* "test/solidity/Protocol.t.sol":4942:4955  selectors[13] */
      dup1
      mload
      shl(0xe0, 0xbc0e1d63)
        /* "test/solidity/Protocol.t.sol":4958:4987  this.repayAtMaturity.selector */
      swap1
        /* "test/solidity/Protocol.t.sol":4942:4951  selectors */
      dup3
      swap1
        /* "test/solidity/Protocol.t.sol":4952:4954  13 */
      0x0d
      swap1
        /* "test/solidity/Protocol.t.sol":4942:4955  selectors[13] */
      dup2
      lt
      tag_447
      jumpi
      tag_447
      tag_162
      jump	// in
    tag_447:
      not(sub(shl(0xe0, 0x01), 0x01))
        /* "test/solidity/Protocol.t.sol":4942:4987  selectors[13] = this.repayAtMaturity.selector */
      swap1
      swap3
      and
        /* "test/solidity/Protocol.t.sol":4942:4955  selectors[13] */
      0x20
      swap3
      dup4
      mul
      swap2
      swap1
      swap2
      add
      swap1
      swap2
      add
        /* "test/solidity/Protocol.t.sol":4942:4987  selectors[13] = this.repayAtMaturity.selector */
      mstore
        /* "test/solidity/Protocol.t.sol":4993:5006  selectors[14] */
      dup1
      mload
      shl(0xe1, 0x3bc86ee3)
        /* "test/solidity/Protocol.t.sol":5009:5035  this.claimRewards.selector */
      swap1
        /* "test/solidity/Protocol.t.sol":4993:5002  selectors */
      dup3
      swap1
        /* "test/solidity/Protocol.t.sol":5003:5005  14 */
      0x0e
      swap1
        /* "test/solidity/Protocol.t.sol":4993:5006  selectors[14] */
      dup2
      lt
      tag_449
      jumpi
      tag_449
      tag_162
      jump	// in
    tag_449:
      not(sub(shl(0xe0, 0x01), 0x01))
        /* "test/solidity/Protocol.t.sol":4993:5035  selectors[14] = this.claimRewards.selector */
      swap1
      swap3
      and
        /* "test/solidity/Protocol.t.sol":4993:5006  selectors[14] */
      0x20
      swap3
      dup4
      mul
      swap2
      swap1
      swap2
      add
      swap1
      swap2
      add
        /* "test/solidity/Protocol.t.sol":4993:5035  selectors[14] = this.claimRewards.selector */
      mstore
        /* "test/solidity/Protocol.t.sol":5041:5054  selectors[15] */
      dup1
      mload
      shl(0xe1, 0x5b5a667d)
        /* "test/solidity/Protocol.t.sol":5057:5079  this.setPrice.selector */
      swap1
        /* "test/solidity/Protocol.t.sol":5041:5050  selectors */
      dup3
      swap1
        /* "test/solidity/Protocol.t.sol":5051:5053  15 */
      0x0f
      swap1
        /* "test/solidity/Protocol.t.sol":5041:5054  selectors[15] */
      dup2
      lt
      tag_451
      jumpi
      tag_451
      tag_162
      jump	// in
    tag_451:
      not(sub(shl(0xe0, 0x01), 0x01))
        /* "test/solidity/Protocol.t.sol":5041:5079  selectors[15] = this.setPrice.selector */
      swap1
      swap3
      and
        /* "test/solidity/Protocol.t.sol":5041:5054  selectors[15] */
      0x20
      swap3
      dup4
      mul
      swap2
      swap1
      swap2
      add
      swap1
      swap2
      add
        /* "test/solidity/Protocol.t.sol":5041:5079  selectors[15] = this.setPrice.selector */
      mstore
        /* "test/solidity/Protocol.t.sol":5085:5098  selectors[16] */
      dup1
      mload
      shl(0xe1, 0x5345ad2b)
        /* "test/solidity/Protocol.t.sol":5101:5124  this.liquidate.selector */
      swap1
        /* "test/solidity/Protocol.t.sol":5085:5094  selectors */
      dup3
      swap1
        /* "test/solidity/Protocol.t.sol":5095:5097  16 */
      0x10
      swap1
        /* "test/solidity/Protocol.t.sol":5085:5098  selectors[16] */
      dup2
      lt
      tag_453
      jumpi
      tag_453
      tag_162
      jump	// in
    tag_453:
      not(sub(shl(0xe0, 0x01), 0x01))
        /* "test/solidity/Protocol.t.sol":5085:5124  selectors[16] = this.liquidate.selector */
      swap1
      swap3
      and
        /* "test/solidity/Protocol.t.sol":5085:5098  selectors[16] */
      0x20
      swap3
      dup4
      mul
      swap2
      swap1
      swap2
      add
      swap1
      swap2
      add
        /* "test/solidity/Protocol.t.sol":5085:5124  selectors[16] = this.liquidate.selector */
      mstore
        /* "test/solidity/Protocol.t.sol":5130:5143  selectors[17] */
      dup1
      mload
      shl(0xe3, 0x03e2d731)
        /* "test/solidity/Protocol.t.sol":5146:5164  this.warp.selector */
      swap1
        /* "test/solidity/Protocol.t.sol":5130:5139  selectors */
      dup3
      swap1
        /* "test/solidity/Protocol.t.sol":5140:5142  17 */
      0x11
      swap1
        /* "test/solidity/Protocol.t.sol":5130:5143  selectors[17] */
      dup2
      lt
      tag_455
      jumpi
      tag_455
      tag_162
      jump	// in
    tag_455:
      not(sub(shl(0xe0, 0x01), 0x01))
        /* "test/solidity/Protocol.t.sol":5130:5164  selectors[17] = this.warp.selector */
      swap1
      swap3
      and
        /* "test/solidity/Protocol.t.sol":5130:5143  selectors[17] */
      0x20
      swap3
      dup4
      mul
      swap2
      swap1
      swap2
      add
      dup3
      add
        /* "test/solidity/Protocol.t.sol":5130:5164  selectors[17] = this.warp.selector */
      mstore
        /* "test/solidity/Protocol.t.sol":5185:5223  FuzzSelector(address(this), selectors) */
      0x40
      dup1
      mload
      dup1
      dup3
      add
      swap1
      swap2
      mstore
        /* "test/solidity/Protocol.t.sol":5206:5210  this */
      address
        /* "test/solidity/Protocol.t.sol":5185:5223  FuzzSelector(address(this), selectors) */
      dup2
      mstore
      swap1
      dup2
      add
      dup3
      swap1
      mstore
        /* "test/solidity/Protocol.t.sol":5170:5224  targetSelector(FuzzSelector(address(this), selectors)) */
      tag_456
      swap1
        /* "test/solidity/Protocol.t.sol":5170:5184  targetSelector */
      tag_457
        /* "test/solidity/Protocol.t.sol":5170:5224  targetSelector(FuzzSelector(address(this), selectors)) */
      jump	// in
    tag_456:
        /* "test/solidity/Protocol.t.sol":1746:5229  {... */
      pop
      pop
      pop
        /* "test/solidity/Protocol.t.sol":1720:5229  function setUp() external {... */
      jump	// out
        /* "test/solidity/Protocol.t.sol":11924:12338  function depositAtMaturity(uint56 assets, bytes32 seed) external context(seed) {... */
    tag_54:
        /* "test/solidity/Protocol.t.sol":31278:31285  _market */
      sload(0x23)
        /* "test/solidity/Protocol.t.sol":11997:12001  seed */
      dup2
      swap1
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":31278:31285  _market */
      and
        /* "test/solidity/Protocol.t.sol":31270:31300  address(_market) == address(0) */
      iszero
        /* "test/solidity/Protocol.t.sol":31263:31301  assert(address(_market) == address(0)) */
      tag_460
      jumpi
      tag_460
      tag_153
      jump	// in
    tag_460:
        /* "test/solidity/Protocol.t.sol":31317:31324  markets */
      0x1c
        /* "test/solidity/Protocol.t.sol":31325:31402  _bound(uint256(keccak256(abi.encode(seed, "market"))), 0, markets.length - 1) */
      tag_461
        /* "test/solidity/Protocol.t.sol":31361:31365  seed */
      dup3
        /* "test/solidity/Protocol.t.sol":31350:31376  abi.encode(seed, "market") */
      add(0x20, mload(0x40))
      tag_155
      swap2
      swap1
      tag_156
      jump	// in
        /* "test/solidity/Protocol.t.sol":31325:31402  _bound(uint256(keccak256(abi.encode(seed, "market"))), 0, markets.length - 1) */
    tag_461:
        /* "test/solidity/Protocol.t.sol":31317:31403  markets[_bound(uint256(keccak256(abi.encode(seed, "market"))), 0, markets.length - 1)] */
      dup2
      sload
      dup2
      lt
      tag_465
      jumpi
      tag_465
      tag_162
      jump	// in
    tag_465:
      0x00
      swap2
      dup3
      mstore
      0x20
      swap2
      dup3
      swap1
      keccak256
      add
      sload
        /* "test/solidity/Protocol.t.sol":31307:31314  _market */
      0x23
        /* "test/solidity/Protocol.t.sol":31307:31403  _market = markets[_bound(uint256(keccak256(abi.encode(seed, "market"))), 0, markets.length - 1)] */
      dup1
      sload
      not(sub(shl(0xa0, 0x01), 0x01))
      and
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":31317:31403  markets[_bound(uint256(keccak256(abi.encode(seed, "market"))), 0, markets.length - 1)] */
      swap1
      swap3
      and
        /* "test/solidity/Protocol.t.sol":31307:31403  _market = markets[_bound(uint256(keccak256(abi.encode(seed, "market"))), 0, markets.length - 1)] */
      swap2
      dup3
      or
      swap1
      sstore
        /* "test/solidity/Protocol.t.sol":31436:31451  _market.asset() */
      0x40
      dup1
      mload
      shl(0xe0, 0x38d52e0f)
      dup2
      mstore
      swap1
      mload
        /* "test/solidity/Protocol.t.sol":31317:31403  markets[_bound(uint256(keccak256(abi.encode(seed, "market"))), 0, markets.length - 1)] */
      swap2
      swap3
        /* "test/solidity/Protocol.t.sol":31436:31449  _market.asset */
      0x38d52e0f
      swap3
        /* "test/solidity/Protocol.t.sol":31436:31451  _market.asset() */
      0x04
      dup1
      dup5
      add
      swap4
      dup3
      swap1
      sub
      add
      dup2
        /* "test/solidity/Protocol.t.sol":31317:31403  markets[_bound(uint256(keccak256(abi.encode(seed, "market"))), 0, markets.length - 1)] */
      dup7
        /* "test/solidity/Protocol.t.sol":31436:31451  _market.asset() */
      gas
      staticcall
      iszero
      dup1
      iszero
      tag_468
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_468:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      dup2
      add
      swap1
      tag_469
      swap2
      swap1
      tag_167
      jump	// in
    tag_469:
        /* "test/solidity/Protocol.t.sol":31409:31415  _asset */
      0x24
      0x00
        /* "test/solidity/Protocol.t.sol":31409:31453  _asset = MockERC20(address(_market.asset())) */
      0x0100
      exp
      dup2
      sload
      dup2
      sub(shl(0xa0, 0x01), 0x01)
      mul
      not
      and
      swap1
      dup4
      sub(shl(0xa0, 0x01), 0x01)
      and
      mul
      or
      swap1
      sstore
      pop
        /* "test/solidity/Protocol.t.sol":31475:31483  accounts */
      0x1d
        /* "test/solidity/Protocol.t.sol":31484:31568  _bound(uint256(keccak256(abi.encode(seed, "counterparty"))), 0, accounts.length - 1) */
      tag_470
        /* "test/solidity/Protocol.t.sol":31520:31524  seed */
      dup3
        /* "test/solidity/Protocol.t.sol":31509:31541  abi.encode(seed, "counterparty") */
      add(0x20, mload(0x40))
      tag_169
      swap2
      swap1
      tag_170
      jump	// in
        /* "test/solidity/Protocol.t.sol":31484:31568  _bound(uint256(keccak256(abi.encode(seed, "counterparty"))), 0, accounts.length - 1) */
    tag_470:
        /* "test/solidity/Protocol.t.sol":31475:31569  accounts[_bound(uint256(keccak256(abi.encode(seed, "counterparty"))), 0, accounts.length - 1)] */
      dup2
      sload
      dup2
      lt
      tag_474
      jumpi
      tag_474
      tag_162
      jump	// in
    tag_474:
      0x00
      swap2
      dup3
      mstore
      0x20
      swap2
      dup3
      swap1
      keccak256
      add
      sload
        /* "test/solidity/Protocol.t.sol":31459:31472  _counterparty */
      0x26
        /* "test/solidity/Protocol.t.sol":31459:31569  _counterparty = accounts[_bound(uint256(keccak256(abi.encode(seed, "counterparty"))), 0, accounts.length - 1)] */
      dup1
      sload
      not(sub(shl(0xa0, 0x01), 0x01))
      and
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":31475:31569  accounts[_bound(uint256(keccak256(abi.encode(seed, "counterparty"))), 0, accounts.length - 1)] */
      swap1
      swap3
      and
        /* "test/solidity/Protocol.t.sol":31459:31569  _counterparty = accounts[_bound(uint256(keccak256(abi.encode(seed, "counterparty"))), 0, accounts.length - 1)] */
      swap2
      swap1
      swap2
      or
      swap1
      sstore
        /* "test/solidity/Protocol.t.sol":31628:31658  abi.encode(seed, "collateral") */
      mload(0x40)
        /* "test/solidity/Protocol.t.sol":31595:31602  markets */
      0x1c
      swap2
        /* "test/solidity/Protocol.t.sol":31603:31684  _bound(uint256(keccak256(abi.encode(seed, "collateral"))), 0, markets.length - 1) */
      tag_476
      swap2
        /* "test/solidity/Protocol.t.sol":31628:31658  abi.encode(seed, "collateral") */
      tag_155
      swap2
        /* "test/solidity/Protocol.t.sol":31639:31643  seed */
      dup6
      swap2
        /* "test/solidity/Protocol.t.sol":31628:31658  abi.encode(seed, "collateral") */
      add
      tag_177
      jump	// in
        /* "test/solidity/Protocol.t.sol":31603:31684  _bound(uint256(keccak256(abi.encode(seed, "collateral"))), 0, markets.length - 1) */
    tag_476:
        /* "test/solidity/Protocol.t.sol":31595:31685  markets[_bound(uint256(keccak256(abi.encode(seed, "collateral"))), 0, markets.length - 1)] */
      dup2
      sload
      dup2
      lt
      tag_480
      jumpi
      tag_480
      tag_162
      jump	// in
    tag_480:
      0x00
      swap2
      dup3
      mstore
      0x20
      swap1
      swap2
      keccak256
      add
      sload
        /* "test/solidity/Protocol.t.sol":31575:31592  _collateralMarket */
      0x27
        /* "test/solidity/Protocol.t.sol":31575:31685  _collateralMarket = markets[_bound(uint256(keccak256(abi.encode(seed, "collateral"))), 0, markets.length - 1)] */
      dup1
      sload
      not(sub(shl(0xa0, 0x01), 0x01))
      and
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":31595:31685  markets[_bound(uint256(keccak256(abi.encode(seed, "collateral"))), 0, markets.length - 1)] */
      swap1
      swap3
      and
        /* "test/solidity/Protocol.t.sol":31575:31685  _collateralMarket = markets[_bound(uint256(keccak256(abi.encode(seed, "collateral"))), 0, markets.length - 1)] */
      swap2
      swap1
      swap2
      or
      swap1
      sstore
        /* "contracts/utils/FixedLib.sol":306:313  4 weeks */
      0x24ea00
        /* "test/solidity/Protocol.t.sol":31722:31757  block.timestamp % FixedLib.INTERVAL */
      tag_482
        /* "contracts/utils/FixedLib.sol":306:313  4 weeks */
      dup2
        /* "test/solidity/Protocol.t.sol":31722:31737  block.timestamp */
      timestamp
        /* "test/solidity/Protocol.t.sol":31722:31757  block.timestamp % FixedLib.INTERVAL */
      tag_183
      jump	// in
    tag_482:
        /* "test/solidity/Protocol.t.sol":31703:31758  block.timestamp - (block.timestamp % FixedLib.INTERVAL) */
      tag_483
      swap1
        /* "test/solidity/Protocol.t.sol":31703:31718  block.timestamp */
      timestamp
        /* "test/solidity/Protocol.t.sol":31703:31758  block.timestamp - (block.timestamp % FixedLib.INTERVAL) */
      tag_158
      jump	// in
    tag_483:
        /* "test/solidity/Protocol.t.sol":31703:31778  block.timestamp - (block.timestamp % FixedLib.INTERVAL) + FixedLib.INTERVAL */
      tag_484
      swap2
      swap1
      tag_186
      jump	// in
    tag_484:
        /* "test/solidity/Protocol.t.sol":31691:31700  _maturity */
      0x25
        /* "test/solidity/Protocol.t.sol":31691:31778  _maturity = block.timestamp - (block.timestamp % FixedLib.INTERVAL) + FixedLib.INTERVAL */
      sstore
        /* "test/solidity/Protocol.t.sol":31784:31809  vm.startPrank(msg.sender) */
      mload(0x40)
      shl(0xe1, 0x03223eab)
      dup2
      mstore
        /* "test/solidity/Protocol.t.sol":31798:31808  msg.sender */
      caller
        /* "test/solidity/Protocol.t.sol":31784:31809  vm.startPrank(msg.sender) */
      0x04
      dup3
      add
        /* "#utility.yul":7560:7611   */
      mstore
      0x00
      dup1
      mload
      0x20
      data_1a390d6c2ee89e11d2dffeb86f753e43f966d02cbb0b3bd3e6e1cdf50245ef50
      dup4
      codecopy
      dup2
      mload
      swap2
      mstore
        /* "test/solidity/Protocol.t.sol":31784:31797  vm.startPrank */
      swap1
      0x06447d56
      swap1
        /* "#utility.yul":7533:7551   */
      0x24
      add
        /* "test/solidity/Protocol.t.sol":31784:31809  vm.startPrank(msg.sender) */
      0x00
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      0x00
      dup8
      dup1
      extcodesize
      iszero
      dup1
      iszero
      tag_486
      jumpi
      0x00
      dup1
      revert
    tag_486:
      pop
      gas
      call
      iszero
      dup1
      iszero
      tag_488
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_488:
      pop
      pop
      pop
      pop
        /* "test/solidity/Protocol.t.sol":12013:12019  assets */
      dup3
        /* "test/solidity/Protocol.t.sol":12013:12024  assets == 0 */
      0xffffffffffffff
      and
        /* "test/solidity/Protocol.t.sol":12023:12024  0 */
      0x00
        /* "test/solidity/Protocol.t.sol":12013:12024  assets == 0 */
      sub
        /* "test/solidity/Protocol.t.sol":12009:12269  if (assets == 0) {... */
      tag_490
      jumpi
        /* "test/solidity/Protocol.t.sol":12034:12071  vm.expectRevert(ZeroDeposit.selector) */
      mload(0x40)
      shl(0xe5, 0x0618f587)
      dup2
      mstore
      0x00
      dup1
      mload
      0x20
      data_1a390d6c2ee89e11d2dffeb86f753e43f966d02cbb0b3bd3e6e1cdf50245ef50
      dup4
      codecopy
      dup2
      mload
      swap2
      mstore
        /* "test/solidity/Protocol.t.sol":12034:12049  vm.expectRevert */
      swap1
      0xc31eb0e0
      swap1
        /* "test/solidity/Protocol.t.sol":12034:12071  vm.expectRevert(ZeroDeposit.selector) */
      tag_491
      swap1
      shl(0xe0, 0x56316e87)
        /* "test/solidity/Protocol.t.sol":12050:12070  ZeroDeposit.selector */
      swap1
        /* "test/solidity/Protocol.t.sol":12034:12071  vm.expectRevert(ZeroDeposit.selector) */
      0x04
      add
      tag_216
      jump	// in
    tag_491:
      0x00
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      0x00
      dup8
      dup1
      extcodesize
      iszero
      dup1
      iszero
      tag_492
      jumpi
      0x00
      dup1
      revert
    tag_492:
      pop
      gas
      call
      iszero
      dup1
      iszero
      tag_494
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_494:
      pop
      pop
      pop
      pop
        /* "test/solidity/Protocol.t.sol":12009:12269  if (assets == 0) {... */
      jump(tag_495)
    tag_490:
        /* "test/solidity/Protocol.t.sol":12092:12098  _asset */
      sload(0x24)
        /* "test/solidity/Protocol.t.sol":12092:12123  _asset.mint(msg.sender, assets) */
      mload(0x40)
      shl(0xe0, 0x40c10f19)
      dup2
      mstore
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":12092:12098  _asset */
      swap1
      swap2
      and
      swap1
        /* "test/solidity/Protocol.t.sol":12092:12103  _asset.mint */
      0x40c10f19
      swap1
        /* "test/solidity/Protocol.t.sol":12092:12123  _asset.mint(msg.sender, assets) */
      tag_496
      swap1
        /* "test/solidity/Protocol.t.sol":12104:12114  msg.sender */
      caller
      swap1
        /* "test/solidity/Protocol.t.sol":12116:12122  assets */
      dup8
      swap1
        /* "test/solidity/Protocol.t.sol":12092:12123  _asset.mint(msg.sender, assets) */
      0x04
      add
      tag_497
      jump	// in
    tag_496:
      0x00
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      0x00
      dup8
      dup1
      extcodesize
      iszero
      dup1
      iszero
      tag_498
      jumpi
      0x00
      dup1
      revert
    tag_498:
      pop
      gas
      call
      iszero
      dup1
      iszero
      tag_500
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_500:
      pop
      pop
        /* "test/solidity/Protocol.t.sol":12177:12184  _market */
      sload(0x23)
        /* "test/solidity/Protocol.t.sol":12131:12186  vm.expectEmit(true, true, true, true, address(_market)) */
      mload(0x40)
      shl(0xe0, 0x81bad6f3)
      dup2
      mstore
      0x00
      dup1
      mload
      0x20
      data_1a390d6c2ee89e11d2dffeb86f753e43f966d02cbb0b3bd3e6e1cdf50245ef50
      dup4
      codecopy
      dup2
      mload
      swap2
      mstore
        /* "test/solidity/Protocol.t.sol":12131:12144  vm.expectEmit */
      swap4
      pop
      0x81bad6f3
      swap3
      pop
        /* "test/solidity/Protocol.t.sol":12131:12186  vm.expectEmit(true, true, true, true, address(_market)) */
      tag_501
      swap2
        /* "test/solidity/Protocol.t.sol":12145:12149  true */
      0x01
      swap2
      dup3
      swap2
      dup3
      swap2
      dup3
      swap2
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":12177:12184  _market */
      and
      swap1
        /* "test/solidity/Protocol.t.sol":12131:12186  vm.expectEmit(true, true, true, true, address(_market)) */
      0x04
      add
      tag_228
      jump	// in
    tag_501:
      0x00
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      0x00
      dup8
      dup1
      extcodesize
      iszero
      dup1
      iszero
      tag_502
      jumpi
      0x00
      dup1
      revert
    tag_502:
      pop
      gas
      call
      iszero
      dup1
      iszero
      tag_504
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_504:
      pop
      pop
        /* "test/solidity/Protocol.t.sol":12217:12226  _maturity */
      sload(0x25)
        /* "test/solidity/Protocol.t.sol":12199:12262  DepositAtMaturity(_maturity, msg.sender, msg.sender, assets, 0) */
      0x40
      dup1
      mload
        /* "#utility.yul":23248:23264   */
      0xffffffffffffff
        /* "#utility.yul":23236:23265   */
      dup9
      and
        /* "#utility.yul":23218:23266   */
      dup2
      mstore
        /* "test/solidity/Protocol.t.sol":12260:12261  0 */
      0x00
        /* "#utility.yul":23297:23299   */
      0x20
        /* "#utility.yul":23282:23300   */
      dup3
      add
        /* "#utility.yul":23275:23309   */
      mstore
        /* "test/solidity/Protocol.t.sol":12240:12250  msg.sender */
      caller
      swap5
      pop
      dup5
      swap4
      pop
        /* "test/solidity/Protocol.t.sol":12199:12262  DepositAtMaturity(_maturity, msg.sender, msg.sender, assets, 0) */
      0xd9900507c64720c1a5e11858a42769b599616268b832495aa6afe8b9dc566e76
      swap2
        /* "#utility.yul":23191:23209   */
      add
        /* "test/solidity/Protocol.t.sol":12199:12262  DepositAtMaturity(_maturity, msg.sender, msg.sender, assets, 0) */
      mload(0x40)
      dup1
      swap2
      sub
      swap1
      log4
        /* "test/solidity/Protocol.t.sol":12009:12269  if (assets == 0) {... */
    tag_495:
        /* "test/solidity/Protocol.t.sol":12274:12281  _market */
      sload(0x23)
        /* "test/solidity/Protocol.t.sol":12300:12309  _maturity */
      sload(0x25)
        /* "test/solidity/Protocol.t.sol":12274:12333  _market.depositAtMaturity(_maturity, assets, 0, msg.sender) */
      mload(0x40)
      shl(0xe1, 0x1a7be8f9)
      dup2
      mstore
      0x04
      dup2
      add
        /* "#utility.yul":23558:23583   */
      swap2
      swap1
      swap2
      mstore
        /* "#utility.yul":23631:23647   */
      0xffffffffffffff
        /* "#utility.yul":23619:23648   */
      dup6
      and
        /* "#utility.yul":23599:23617   */
      0x24
      dup3
      add
        /* "#utility.yul":23592:23649   */
      mstore
        /* "test/solidity/Protocol.t.sol":12274:12281  _market */
      0x00
        /* "#utility.yul":23665:23683   */
      0x44
      dup3
      add
        /* "#utility.yul":23658:23692   */
      mstore
        /* "test/solidity/Protocol.t.sol":12322:12332  msg.sender */
      caller
        /* "#utility.yul":23708:23726   */
      0x64
      dup3
      add
        /* "#utility.yul":23701:23761   */
      mstore
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":12274:12281  _market */
      swap1
      swap2
      and
      swap1
        /* "test/solidity/Protocol.t.sol":12274:12299  _market.depositAtMaturity */
      0x34f7d1f2
      swap1
        /* "#utility.yul":23530:23549   */
      0x84
      add
        /* "test/solidity/Protocol.t.sol":12274:12333  _market.depositAtMaturity(_maturity, assets, 0, msg.sender) */
      0x20
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      0x00
      dup8
      gas
      call
      iszero
      dup1
      iszero
      tag_510
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_510:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      dup2
      add
      swap1
      tag_511
      swap2
      swap1
      tag_212
      jump	// in
    tag_511:
      pop
      0x00
      dup1
      mload
      0x20
      data_b627c71dec38ae7fa273aa3bb9b6210fd4a76d47f44ae646db16da401b96db40
      dup4
      codecopy
      dup2
      mload
      swap2
      mstore
        /* "lib/forge-std/src/Base.sol":309:346  uint256(keccak256("hevm cheat code")) */
      0x00
      shr
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":31822:31834  vm.stopPrank */
      and
      0x90c5013b
        /* "test/solidity/Protocol.t.sol":31822:31836  vm.stopPrank() */
      mload(0x40)
      dup2
      0xffffffff
      and
      0xe0
      shl
      dup2
      mstore
      0x04
      add
      0x00
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      0x00
      dup8
      dup1
      extcodesize
      iszero
      dup1
      iszero
      tag_512
      jumpi
      0x00
      dup1
      revert
    tag_512:
      pop
      gas
      call
      iszero
      dup1
      iszero
      tag_514
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_514:
      pop
      pop
        /* "test/solidity/Protocol.t.sol":31842:31849  _market */
      0x23
        /* "test/solidity/Protocol.t.sol":31842:31870  _market = Market(address(0)) */
      dup1
      sload
      not(sub(shl(0xa0, 0x01), 0x01))
      and
      swap1
      sstore
      pop
      pop
      pop
      pop
      pop
        /* "test/solidity/Protocol.t.sol":11924:12338  function depositAtMaturity(uint56 assets, bytes32 seed) external context(seed) {... */
      jump	// out
        /* "test/solidity/Protocol.t.sol":23043:24676  function withdraw(uint56 assets, bytes32 seed) external context(seed) _deposit(assets, msg.sender) {... */
    tag_57:
        /* "test/solidity/Protocol.t.sol":31278:31285  _market */
      sload(0x23)
        /* "test/solidity/Protocol.t.sol":23107:23111  seed */
      dup2
      swap1
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":31278:31285  _market */
      and
        /* "test/solidity/Protocol.t.sol":31270:31300  address(_market) == address(0) */
      iszero
        /* "test/solidity/Protocol.t.sol":31263:31301  assert(address(_market) == address(0)) */
      tag_517
      jumpi
      tag_517
      tag_153
      jump	// in
    tag_517:
        /* "test/solidity/Protocol.t.sol":31317:31324  markets */
      0x1c
        /* "test/solidity/Protocol.t.sol":31325:31402  _bound(uint256(keccak256(abi.encode(seed, "market"))), 0, markets.length - 1) */
      tag_518
        /* "test/solidity/Protocol.t.sol":31361:31365  seed */
      dup3
        /* "test/solidity/Protocol.t.sol":31350:31376  abi.encode(seed, "market") */
      add(0x20, mload(0x40))
      tag_155
      swap2
      swap1
      tag_156
      jump	// in
        /* "test/solidity/Protocol.t.sol":31325:31402  _bound(uint256(keccak256(abi.encode(seed, "market"))), 0, markets.length - 1) */
    tag_518:
        /* "test/solidity/Protocol.t.sol":31317:31403  markets[_bound(uint256(keccak256(abi.encode(seed, "market"))), 0, markets.length - 1)] */
      dup2
      sload
      dup2
      lt
      tag_522
      jumpi
      tag_522
      tag_162
      jump	// in
    tag_522:
      0x00
      swap2
      dup3
      mstore
      0x20
      swap2
      dup3
      swap1
      keccak256
      add
      sload
        /* "test/solidity/Protocol.t.sol":31307:31314  _market */
      0x23
        /* "test/solidity/Protocol.t.sol":31307:31403  _market = markets[_bound(uint256(keccak256(abi.encode(seed, "market"))), 0, markets.length - 1)] */
      dup1
      sload
      not(sub(shl(0xa0, 0x01), 0x01))
      and
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":31317:31403  markets[_bound(uint256(keccak256(abi.encode(seed, "market"))), 0, markets.length - 1)] */
      swap1
      swap3
      and
        /* "test/solidity/Protocol.t.sol":31307:31403  _market = markets[_bound(uint256(keccak256(abi.encode(seed, "market"))), 0, markets.length - 1)] */
      swap2
      dup3
      or
      swap1
      sstore
        /* "test/solidity/Protocol.t.sol":31436:31451  _market.asset() */
      0x40
      dup1
      mload
      shl(0xe0, 0x38d52e0f)
      dup2
      mstore
      swap1
      mload
        /* "test/solidity/Protocol.t.sol":31317:31403  markets[_bound(uint256(keccak256(abi.encode(seed, "market"))), 0, markets.length - 1)] */
      swap2
      swap3
        /* "test/solidity/Protocol.t.sol":31436:31449  _market.asset */
      0x38d52e0f
      swap3
        /* "test/solidity/Protocol.t.sol":31436:31451  _market.asset() */
      0x04
      dup1
      dup5
      add
      swap4
      dup3
      swap1
      sub
      add
      dup2
        /* "test/solidity/Protocol.t.sol":31317:31403  markets[_bound(uint256(keccak256(abi.encode(seed, "market"))), 0, markets.length - 1)] */
      dup7
        /* "test/solidity/Protocol.t.sol":31436:31451  _market.asset() */
      gas
      staticcall
      iszero
      dup1
      iszero
      tag_525
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_525:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      dup2
      add
      swap1
      tag_526
      swap2
      swap1
      tag_167
      jump	// in
    tag_526:
        /* "test/solidity/Protocol.t.sol":31409:31415  _asset */
      0x24
      0x00
        /* "test/solidity/Protocol.t.sol":31409:31453  _asset = MockERC20(address(_market.asset())) */
      0x0100
      exp
      dup2
      sload
      dup2
      sub(shl(0xa0, 0x01), 0x01)
      mul
      not
      and
      swap1
      dup4
      sub(shl(0xa0, 0x01), 0x01)
      and
      mul
      or
      swap1
      sstore
      pop
        /* "test/solidity/Protocol.t.sol":31475:31483  accounts */
      0x1d
        /* "test/solidity/Protocol.t.sol":31484:31568  _bound(uint256(keccak256(abi.encode(seed, "counterparty"))), 0, accounts.length - 1) */
      tag_527
        /* "test/solidity/Protocol.t.sol":31520:31524  seed */
      dup3
        /* "test/solidity/Protocol.t.sol":31509:31541  abi.encode(seed, "counterparty") */
      add(0x20, mload(0x40))
      tag_169
      swap2
      swap1
      tag_170
      jump	// in
        /* "test/solidity/Protocol.t.sol":31484:31568  _bound(uint256(keccak256(abi.encode(seed, "counterparty"))), 0, accounts.length - 1) */
    tag_527:
        /* "test/solidity/Protocol.t.sol":31475:31569  accounts[_bound(uint256(keccak256(abi.encode(seed, "counterparty"))), 0, accounts.length - 1)] */
      dup2
      sload
      dup2
      lt
      tag_531
      jumpi
      tag_531
      tag_162
      jump	// in
    tag_531:
      0x00
      swap2
      dup3
      mstore
      0x20
      swap2
      dup3
      swap1
      keccak256
      add
      sload
        /* "test/solidity/Protocol.t.sol":31459:31472  _counterparty */
      0x26
        /* "test/solidity/Protocol.t.sol":31459:31569  _counterparty = accounts[_bound(uint256(keccak256(abi.encode(seed, "counterparty"))), 0, accounts.length - 1)] */
      dup1
      sload
      not(sub(shl(0xa0, 0x01), 0x01))
      and
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":31475:31569  accounts[_bound(uint256(keccak256(abi.encode(seed, "counterparty"))), 0, accounts.length - 1)] */
      swap1
      swap3
      and
        /* "test/solidity/Protocol.t.sol":31459:31569  _counterparty = accounts[_bound(uint256(keccak256(abi.encode(seed, "counterparty"))), 0, accounts.length - 1)] */
      swap2
      swap1
      swap2
      or
      swap1
      sstore
        /* "test/solidity/Protocol.t.sol":31628:31658  abi.encode(seed, "collateral") */
      mload(0x40)
        /* "test/solidity/Protocol.t.sol":31595:31602  markets */
      0x1c
      swap2
        /* "test/solidity/Protocol.t.sol":31603:31684  _bound(uint256(keccak256(abi.encode(seed, "collateral"))), 0, markets.length - 1) */
      tag_533
      swap2
        /* "test/solidity/Protocol.t.sol":31628:31658  abi.encode(seed, "collateral") */
      tag_155
      swap2
        /* "test/solidity/Protocol.t.sol":31639:31643  seed */
      dup6
      swap2
        /* "test/solidity/Protocol.t.sol":31628:31658  abi.encode(seed, "collateral") */
      add
      tag_177
      jump	// in
        /* "test/solidity/Protocol.t.sol":31603:31684  _bound(uint256(keccak256(abi.encode(seed, "collateral"))), 0, markets.length - 1) */
    tag_533:
        /* "test/solidity/Protocol.t.sol":31595:31685  markets[_bound(uint256(keccak256(abi.encode(seed, "collateral"))), 0, markets.length - 1)] */
      dup2
      sload
      dup2
      lt
      tag_537
      jumpi
      tag_537
      tag_162
      jump	// in
    tag_537:
      0x00
      swap2
      dup3
      mstore
      0x20
      swap1
      swap2
      keccak256
      add
      sload
        /* "test/solidity/Protocol.t.sol":31575:31592  _collateralMarket */
      0x27
        /* "test/solidity/Protocol.t.sol":31575:31685  _collateralMarket = markets[_bound(uint256(keccak256(abi.encode(seed, "collateral"))), 0, markets.length - 1)] */
      dup1
      sload
      not(sub(shl(0xa0, 0x01), 0x01))
      and
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":31595:31685  markets[_bound(uint256(keccak256(abi.encode(seed, "collateral"))), 0, markets.length - 1)] */
      swap1
      swap3
      and
        /* "test/solidity/Protocol.t.sol":31575:31685  _collateralMarket = markets[_bound(uint256(keccak256(abi.encode(seed, "collateral"))), 0, markets.length - 1)] */
      swap2
      swap1
      swap2
      or
      swap1
      sstore
        /* "contracts/utils/FixedLib.sol":306:313  4 weeks */
      0x24ea00
        /* "test/solidity/Protocol.t.sol":31722:31757  block.timestamp % FixedLib.INTERVAL */
      tag_539
        /* "contracts/utils/FixedLib.sol":306:313  4 weeks */
      dup2
        /* "test/solidity/Protocol.t.sol":31722:31737  block.timestamp */
      timestamp
        /* "test/solidity/Protocol.t.sol":31722:31757  block.timestamp % FixedLib.INTERVAL */
      tag_183
      jump	// in
    tag_539:
        /* "test/solidity/Protocol.t.sol":31703:31758  block.timestamp - (block.timestamp % FixedLib.INTERVAL) */
      tag_540
      swap1
        /* "test/solidity/Protocol.t.sol":31703:31718  block.timestamp */
      timestamp
        /* "test/solidity/Protocol.t.sol":31703:31758  block.timestamp - (block.timestamp % FixedLib.INTERVAL) */
      tag_158
      jump	// in
    tag_540:
        /* "test/solidity/Protocol.t.sol":31703:31778  block.timestamp - (block.timestamp % FixedLib.INTERVAL) + FixedLib.INTERVAL */
      tag_541
      swap2
      swap1
      tag_186
      jump	// in
    tag_541:
        /* "test/solidity/Protocol.t.sol":31691:31700  _maturity */
      0x25
        /* "test/solidity/Protocol.t.sol":31691:31778  _maturity = block.timestamp - (block.timestamp % FixedLib.INTERVAL) + FixedLib.INTERVAL */
      sstore
        /* "test/solidity/Protocol.t.sol":31784:31809  vm.startPrank(msg.sender) */
      mload(0x40)
      shl(0xe1, 0x03223eab)
      dup2
      mstore
        /* "test/solidity/Protocol.t.sol":31798:31808  msg.sender */
      caller
        /* "test/solidity/Protocol.t.sol":31784:31809  vm.startPrank(msg.sender) */
      0x04
      dup3
      add
        /* "#utility.yul":7560:7611   */
      mstore
      0x00
      dup1
      mload
      0x20
      data_1a390d6c2ee89e11d2dffeb86f753e43f966d02cbb0b3bd3e6e1cdf50245ef50
      dup4
      codecopy
      dup2
      mload
      swap2
      mstore
        /* "test/solidity/Protocol.t.sol":31784:31797  vm.startPrank */
      swap1
      0x06447d56
      swap1
        /* "#utility.yul":7533:7551   */
      0x24
      add
        /* "test/solidity/Protocol.t.sol":31784:31809  vm.startPrank(msg.sender) */
      0x00
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      0x00
      dup8
      dup1
      extcodesize
      iszero
      dup1
      iszero
      tag_543
      jumpi
      0x00
      dup1
      revert
    tag_543:
      pop
      gas
      call
      iszero
      dup1
      iszero
      tag_545
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_545:
      pop
      pop
      pop
      pop
        /* "test/solidity/Protocol.t.sol":23122:23128  assets */
      dup3
        /* "test/solidity/Protocol.t.sol":32746:33004  modifier _deposit(uint256 assets, address account) {... */
      0xffffffffffffff
      and
        /* "test/solidity/Protocol.t.sol":23130:23140  msg.sender */
      caller
        /* "test/solidity/Protocol.t.sol":32807:32813  assets */
      dup2
        /* "test/solidity/Protocol.t.sol":32817:32818  0 */
      0x00
        /* "test/solidity/Protocol.t.sol":32807:32818  assets != 0 */
      eq
        /* "test/solidity/Protocol.t.sol":32803:32993  if (assets != 0) {... */
      tag_547
      jumpi
        /* "test/solidity/Protocol.t.sol":32845:32855  msg.sender */
      caller
        /* "test/solidity/Protocol.t.sol":32863:32883  changePrank(account) */
      tag_548
        /* "test/solidity/Protocol.t.sol":32875:32882  account */
      dup3
        /* "test/solidity/Protocol.t.sol":32863:32874  changePrank */
      tag_549
        /* "test/solidity/Protocol.t.sol":32863:32883  changePrank(account) */
      jump	// in
    tag_548:
        /* "test/solidity/Protocol.t.sol":32891:32897  _asset */
      sload(0x24)
        /* "test/solidity/Protocol.t.sol":32891:32919  _asset.mint(account, assets) */
      mload(0x40)
      shl(0xe0, 0x40c10f19)
      dup2
      mstore
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":32891:32897  _asset */
      swap1
      swap2
      and
      swap1
        /* "test/solidity/Protocol.t.sol":32891:32902  _asset.mint */
      0x40c10f19
      swap1
        /* "test/solidity/Protocol.t.sol":32891:32919  _asset.mint(account, assets) */
      tag_550
      swap1
        /* "test/solidity/Protocol.t.sol":32903:32910  account */
      dup6
      swap1
        /* "test/solidity/Protocol.t.sol":32912:32918  assets */
      dup8
      swap1
        /* "test/solidity/Protocol.t.sol":32891:32919  _asset.mint(account, assets) */
      0x04
      add
      tag_345
      jump	// in
    tag_550:
      0x00
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      0x00
      dup8
      dup1
      extcodesize
      iszero
      dup1
      iszero
      tag_551
      jumpi
      0x00
      dup1
      revert
    tag_551:
      pop
      gas
      call
      iszero
      dup1
      iszero
      tag_553
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_553:
      pop
      pop
        /* "test/solidity/Protocol.t.sol":32927:32934  _market */
      sload(0x23)
        /* "test/solidity/Protocol.t.sol":32927:32959  _market.deposit(assets, account) */
      mload(0x40)
      shl(0xe0, 0x6e553f65)
      dup2
      mstore
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":32927:32934  _market */
      swap1
      swap2
      and
      swap3
      pop
        /* "test/solidity/Protocol.t.sol":32927:32942  _market.deposit */
      0x6e553f65
      swap2
      pop
        /* "test/solidity/Protocol.t.sol":32927:32959  _market.deposit(assets, account) */
      tag_554
      swap1
        /* "test/solidity/Protocol.t.sol":32943:32949  assets */
      dup7
      swap1
        /* "test/solidity/Protocol.t.sol":32951:32958  account */
      dup7
      swap1
        /* "test/solidity/Protocol.t.sol":32927:32959  _market.deposit(assets, account) */
      0x04
      add
      tag_555
      jump	// in
    tag_554:
      0x20
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      0x00
      dup8
      gas
      call
      iszero
      dup1
      iszero
      tag_557
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_557:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      dup2
      add
      swap1
      tag_558
      swap2
      swap1
      tag_212
      jump	// in
    tag_558:
      pop
        /* "test/solidity/Protocol.t.sol":32967:32986  changePrank(sender) */
      tag_559
        /* "test/solidity/Protocol.t.sol":32979:32985  sender */
      dup2
        /* "test/solidity/Protocol.t.sol":32967:32978  changePrank */
      tag_549
        /* "test/solidity/Protocol.t.sol":32967:32986  changePrank(sender) */
      jump	// in
    tag_559:
        /* "test/solidity/Protocol.t.sol":32820:32993  {... */
      pop
        /* "test/solidity/Protocol.t.sol":32803:32993  if (assets != 0) {... */
    tag_547:
        /* "test/solidity/Protocol.t.sol":23174:23181  auditor */
      sload(0x1b)
        /* "test/solidity/Protocol.t.sol":23190:23197  _market */
      sload(0x23)
        /* "test/solidity/Protocol.t.sol":23174:23198  auditor.markets(_market) */
      mload(0x40)
      shl(0xe0, 0x8e8f294b)
      dup2
      mstore
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":23190:23197  _market */
      swap2
      dup3
      and
        /* "test/solidity/Protocol.t.sol":23174:23198  auditor.markets(_market) */
      0x04
      dup3
      add
        /* "#utility.yul":7560:7611   */
      mstore
        /* "test/solidity/Protocol.t.sol":23153:23166  uint256 index */
      0x00
      swap3
        /* "test/solidity/Protocol.t.sol":23174:23181  auditor */
      swap2
      swap1
      swap2
      and
      swap1
        /* "test/solidity/Protocol.t.sol":23174:23189  auditor.markets */
      0x8e8f294b
      swap1
        /* "#utility.yul":7533:7551   */
      0x24
      add
        /* "test/solidity/Protocol.t.sol":23174:23198  auditor.markets(_market) */
      0xa0
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      dup7
      gas
      staticcall
      iszero
      dup1
      iszero
      tag_563
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_563:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      dup2
      add
      swap1
      tag_564
      swap2
      swap1
      tag_198
      jump	// in
    tag_564:
        /* "test/solidity/Protocol.t.sol":23148:23198  (, , uint256 index, , ) = auditor.markets(_market) */
      pop
      pop
      0xff
      and
      swap3
      pop
      pop
      pop
        /* "test/solidity/Protocol.t.sol":23204:23226  uint256 expectedShares */
      0x00
        /* "test/solidity/Protocol.t.sol":23229:23236  _market */
      0x23
      0x00
      swap1
      sload
      swap1
      0x0100
      exp
      swap1
      div
      sub(shl(0xa0, 0x01), 0x01)
      and
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":23229:23248  _market.totalAssets */
      and
      0x01e1d114
        /* "test/solidity/Protocol.t.sol":23229:23250  _market.totalAssets() */
      mload(0x40)
      dup2
      0xffffffff
      and
      0xe0
      shl
      dup2
      mstore
      0x04
      add
      0x20
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      dup7
      gas
      staticcall
      iszero
      dup1
      iszero
      tag_566
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_566:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      dup2
      add
      swap1
      tag_567
      swap2
      swap1
      tag_212
      jump	// in
    tag_567:
        /* "test/solidity/Protocol.t.sol":23254:23255  0 */
      0x00
        /* "test/solidity/Protocol.t.sol":23229:23255  _market.totalAssets() != 0 */
      sub
        /* "test/solidity/Protocol.t.sol":23229:23293  _market.totalAssets() != 0 ? _market.previewWithdraw(assets) : 0 */
      tag_568
      jumpi
        /* "test/solidity/Protocol.t.sol":23292:23293  0 */
      0x00
        /* "test/solidity/Protocol.t.sol":23229:23293  _market.totalAssets() != 0 ? _market.previewWithdraw(assets) : 0 */
      jump(tag_574)
    tag_568:
        /* "test/solidity/Protocol.t.sol":23258:23265  _market */
      sload(0x23)
        /* "test/solidity/Protocol.t.sol":23258:23289  _market.previewWithdraw(assets) */
      mload(0x40)
      shl(0xe0, 0x0a28a477)
      dup2
      mstore
        /* "#utility.yul":24226:24242   */
      0xffffffffffffff
        /* "#utility.yul":24214:24243   */
      dup10
      and
        /* "test/solidity/Protocol.t.sol":23258:23289  _market.previewWithdraw(assets) */
      0x04
      dup3
      add
        /* "#utility.yul":24196:24244   */
      mstore
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":23258:23265  _market */
      swap1
      swap2
      and
      swap1
        /* "test/solidity/Protocol.t.sol":23258:23281  _market.previewWithdraw */
      0x0a28a477
      swap1
        /* "#utility.yul":24169:24187   */
      0x24
      add
        /* "test/solidity/Protocol.t.sol":23258:23289  _market.previewWithdraw(assets) */
      0x20
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      dup7
      gas
      staticcall
      iszero
      dup1
      iszero
      tag_573
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_573:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      dup2
      add
      swap1
      tag_574
      swap2
      swap1
      tag_212
      jump	// in
    tag_574:
        /* "test/solidity/Protocol.t.sol":23204:23293  uint256 expectedShares = _market.totalAssets() != 0 ? _market.previewWithdraw(assets) : 0 */
      swap1
      pop
        /* "test/solidity/Protocol.t.sol":23299:23322  Binary memory liquidity */
      tag_575
      mload(0x40)
      dup1
      0x40
      add
      0x40
      mstore
      dup1
      0x00
      dup2
      mstore
      0x20
      add
      0x00
      dup2
      mstore
      pop
      swap1
      jump
    tag_575:
        /* "test/solidity/Protocol.t.sol":23400:23407  _market */
      sload(0x23)
        /* "test/solidity/Protocol.t.sol":23371:23419  accountLiquidity(msg.sender, _market, 0, assets) */
      tag_576
      swap1
        /* "test/solidity/Protocol.t.sol":23388:23398  msg.sender */
      caller
      swap1
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":23400:23407  _market */
      and
      0x00
        /* "test/solidity/Protocol.t.sol":23371:23419  accountLiquidity(msg.sender, _market, 0, assets) */
      0xffffffffffffff
      dup13
      and
        /* "test/solidity/Protocol.t.sol":23371:23387  accountLiquidity */
      tag_207
        /* "test/solidity/Protocol.t.sol":23371:23419  accountLiquidity(msg.sender, _market, 0, assets) */
      jump	// in
    tag_576:
        /* "test/solidity/Protocol.t.sol":23349:23367  liquidity.negative */
      0x20
      dup4
      add
        /* "test/solidity/Protocol.t.sol":23328:23419  (liquidity.positive, liquidity.negative) = accountLiquidity(msg.sender, _market, 0, assets) */
      mstore
      dup2
      mstore
        /* "test/solidity/Protocol.t.sol":23471:23478  _market */
      sload(0x23)
        /* "test/solidity/Protocol.t.sol":23329:23347  liquidity.positive */
      0x00
      swap1
        /* "test/solidity/Protocol.t.sol":23444:23479  previewAccumulatedEarnings(_market) */
      tag_577
      swap1
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":23471:23478  _market */
      and
        /* "test/solidity/Protocol.t.sol":23444:23470  previewAccumulatedEarnings */
      tag_578
        /* "test/solidity/Protocol.t.sol":23444:23479  previewAccumulatedEarnings(_market) */
      jump	// in
    tag_577:
        /* "test/solidity/Protocol.t.sol":23491:23498  auditor */
      sload(0x1b)
        /* "test/solidity/Protocol.t.sol":23491:23525  auditor.accountMarkets(msg.sender) */
      mload(0x40)
      not(sub(shl(0xe1, 0x63e28d), 0x01))
      dup2
      mstore
        /* "test/solidity/Protocol.t.sol":23514:23524  msg.sender */
      caller
        /* "test/solidity/Protocol.t.sol":23491:23525  auditor.accountMarkets(msg.sender) */
      0x04
      dup3
      add
        /* "#utility.yul":7560:7611   */
      mstore
        /* "test/solidity/Protocol.t.sol":23425:23479  uint256 earnings = previewAccumulatedEarnings(_market) */
      swap2
      swap3
      pop
        /* "test/solidity/Protocol.t.sol":23529:23530  1 */
      0x01
        /* "test/solidity/Protocol.t.sol":23529:23539  1 << index */
      dup7
      shl
      swap2
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":23491:23498  auditor */
      swap1
      swap2
      and
      swap1
        /* "test/solidity/Protocol.t.sol":23491:23513  auditor.accountMarkets */
      0xff383ae6
      swap1
        /* "#utility.yul":7533:7551   */
      0x24
      add
        /* "test/solidity/Protocol.t.sol":23491:23525  auditor.accountMarkets(msg.sender) */
      0x20
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      dup7
      gas
      staticcall
      iszero
      dup1
      iszero
      tag_581
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_581:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      dup2
      add
      swap1
      tag_582
      swap2
      swap1
      tag_212
      jump	// in
    tag_582:
        /* "test/solidity/Protocol.t.sol":23491:23540  auditor.accountMarkets(msg.sender) & (1 << index) */
      and
        /* "test/solidity/Protocol.t.sol":23490:23546  (auditor.accountMarkets(msg.sender) & (1 << index)) != 0 */
      iszero
      dup1
      iszero
      swap1
        /* "test/solidity/Protocol.t.sol":23490:23589  (auditor.accountMarkets(msg.sender) & (1 << index)) != 0 && liquidity.negative > liquidity.positive */
      tag_583
      jumpi
      pop
        /* "test/solidity/Protocol.t.sol":23571:23589  liquidity.positive */
      dup2
      mload
        /* "test/solidity/Protocol.t.sol":23550:23568  liquidity.negative */
      0x20
      dup4
      add
      mload
        /* "test/solidity/Protocol.t.sol":23550:23589  liquidity.negative > liquidity.positive */
      gt
        /* "test/solidity/Protocol.t.sol":23490:23589  (auditor.accountMarkets(msg.sender) & (1 << index)) != 0 && liquidity.negative > liquidity.positive */
    tag_583:
        /* "test/solidity/Protocol.t.sol":23486:24532  if ((auditor.accountMarkets(msg.sender) & (1 << index)) != 0 && liquidity.negative > liquidity.positive) {... */
      iszero
      tag_584
      jumpi
        /* "test/solidity/Protocol.t.sol":23599:23653  vm.expectRevert(InsufficientAccountLiquidity.selector) */
      mload(0x40)
      shl(0xe5, 0x0618f587)
      dup2
      mstore
      0x00
      dup1
      mload
      0x20
      data_1a390d6c2ee89e11d2dffeb86f753e43f966d02cbb0b3bd3e6e1cdf50245ef50
      dup4
      codecopy
      dup2
      mload
      swap2
      mstore
        /* "test/solidity/Protocol.t.sol":23599:23614  vm.expectRevert */
      swap1
      0xc31eb0e0
      swap1
        /* "test/solidity/Protocol.t.sol":23599:23653  vm.expectRevert(InsufficientAccountLiquidity.selector) */
      tag_585
      swap1
      shl(0xe1, 0x0aeac0bb)
        /* "test/solidity/Protocol.t.sol":23615:23652  InsufficientAccountLiquidity.selector */
      swap1
        /* "test/solidity/Protocol.t.sol":23599:23653  vm.expectRevert(InsufficientAccountLiquidity.selector) */
      0x04
      add
      tag_216
      jump	// in
    tag_585:
      0x00
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      0x00
      dup8
      dup1
      extcodesize
      iszero
      dup1
      iszero
      tag_586
      jumpi
      0x00
      dup1
      revert
    tag_586:
      pop
      gas
      call
      iszero
      dup1
      iszero
      tag_588
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_588:
      pop
      pop
      pop
      pop
        /* "test/solidity/Protocol.t.sol":23486:24532  if ((auditor.accountMarkets(msg.sender) & (1 << index)) != 0 && liquidity.negative > liquidity.positive) {... */
      jump(tag_659)
    tag_584:
        /* "test/solidity/Protocol.t.sol":23670:23677  _market */
      sload(0x23)
        /* "test/solidity/Protocol.t.sol":23670:23691  _market.totalSupply() */
      0x40
      dup1
      mload
      shl(0xe0, 0x18160ddd)
      dup2
      mstore
      swap1
      mload
        /* "test/solidity/Protocol.t.sol":23694:23695  0 */
      0x00
      swap3
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":23670:23677  _market */
      and
      swap2
        /* "test/solidity/Protocol.t.sol":23670:23689  _market.totalSupply */
      0x18160ddd
      swap2
        /* "test/solidity/Protocol.t.sol":23670:23691  _market.totalSupply() */
      0x04
      dup1
      dup4
      add
      swap3
      0x20
      swap3
      swap2
      swap1
      dup3
      swap1
      sub
      add
      dup2
        /* "test/solidity/Protocol.t.sol":23670:23677  _market */
      dup7
        /* "test/solidity/Protocol.t.sol":23670:23691  _market.totalSupply() */
      gas
      staticcall
      iszero
      dup1
      iszero
      tag_591
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_591:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      dup2
      add
      swap1
      tag_592
      swap2
      swap1
      tag_212
      jump	// in
    tag_592:
        /* "test/solidity/Protocol.t.sol":23670:23695  _market.totalSupply() > 0 */
      gt
        /* "test/solidity/Protocol.t.sol":23670:23725  _market.totalSupply() > 0 && _market.totalAssets() == 0 */
      dup1
      iszero
      tag_593
      jumpi
      pop
        /* "test/solidity/Protocol.t.sol":23699:23706  _market */
      0x23
      0x00
      swap1
      sload
      swap1
      0x0100
      exp
      swap1
      div
      sub(shl(0xa0, 0x01), 0x01)
      and
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":23699:23718  _market.totalAssets */
      and
      0x01e1d114
        /* "test/solidity/Protocol.t.sol":23699:23720  _market.totalAssets() */
      mload(0x40)
      dup2
      0xffffffff
      and
      0xe0
      shl
      dup2
      mstore
      0x04
      add
      0x20
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      dup7
      gas
      staticcall
      iszero
      dup1
      iszero
      tag_595
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_595:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      dup2
      add
      swap1
      tag_596
      swap2
      swap1
      tag_212
      jump	// in
    tag_596:
        /* "test/solidity/Protocol.t.sol":23699:23725  _market.totalAssets() == 0 */
      iszero
        /* "test/solidity/Protocol.t.sol":23670:23725  _market.totalSupply() > 0 && _market.totalAssets() == 0 */
    tag_593:
        /* "test/solidity/Protocol.t.sol":23666:24532  if (_market.totalSupply() > 0 && _market.totalAssets() == 0) {... */
      iszero
      tag_597
      jumpi
        /* "test/solidity/Protocol.t.sol":23751:23760  bytes("") */
      0x40
      dup1
      mload
      0x20
      dup2
      add
      dup3
      mstore
        /* "lib/forge-std/src/Base.sol":309:346  uint256(keccak256("hevm cheat code")) */
      0x00
        /* "test/solidity/Protocol.t.sol":23751:23760  bytes("") */
      dup2
      mstore
        /* "test/solidity/Protocol.t.sol":23735:23761  vm.expectRevert(bytes("")) */
      swap1
      mload
      shl(0xe0, 0xf28dceb3)
      dup2
      mstore
      0x00
      dup1
      mload
      0x20
      data_1a390d6c2ee89e11d2dffeb86f753e43f966d02cbb0b3bd3e6e1cdf50245ef50
      dup4
      codecopy
      dup2
      mload
      swap2
      mstore
        /* "test/solidity/Protocol.t.sol":23735:23750  vm.expectRevert */
      swap2
      0xf28dceb3
      swap2
        /* "test/solidity/Protocol.t.sol":23735:23761  vm.expectRevert(bytes("")) */
      tag_585
      swap2
        /* "test/solidity/Protocol.t.sol":23751:23760  bytes("") */
      swap1
        /* "test/solidity/Protocol.t.sol":23735:23761  vm.expectRevert(bytes("")) */
      0x04
      add
      tag_599
      jump	// in
        /* "test/solidity/Protocol.t.sol":23666:24532  if (_market.totalSupply() > 0 && _market.totalAssets() == 0) {... */
    tag_597:
        /* "test/solidity/Protocol.t.sol":23837:23844  _market */
      sload(0x23)
        /* "test/solidity/Protocol.t.sol":23848:23856  earnings */
      dup2
      swap1
        /* "test/solidity/Protocol.t.sol":23814:23845  previewNewFloatingDebt(_market) */
      tag_604
      swap1
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":23837:23844  _market */
      and
        /* "test/solidity/Protocol.t.sol":23814:23836  previewNewFloatingDebt */
      tag_605
        /* "test/solidity/Protocol.t.sol":23814:23845  previewNewFloatingDebt(_market) */
      jump	// in
    tag_604:
        /* "test/solidity/Protocol.t.sol":23787:23794  _market */
      0x23
      0x00
      swap1
      sload
      swap1
      0x0100
      exp
      swap1
      div
      sub(shl(0xa0, 0x01), 0x01)
      and
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":23787:23809  _market.floatingAssets */
      and
      0x2e0af008
        /* "test/solidity/Protocol.t.sol":23787:23811  _market.floatingAssets() */
      mload(0x40)
      dup2
      0xffffffff
      and
      0xe0
      shl
      dup2
      mstore
      0x04
      add
      0x20
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      dup7
      gas
      staticcall
      iszero
      dup1
      iszero
      tag_607
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_607:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      dup2
      add
      swap1
      tag_608
      swap2
      swap1
      tag_212
      jump	// in
    tag_608:
        /* "test/solidity/Protocol.t.sol":23787:23845  _market.floatingAssets() + previewNewFloatingDebt(_market) */
      tag_609
      swap2
      swap1
      tag_186
      jump	// in
    tag_609:
        /* "test/solidity/Protocol.t.sol":23787:23856  _market.floatingAssets() + previewNewFloatingDebt(_market) + earnings */
      tag_610
      swap2
      swap1
      tag_186
      jump	// in
    tag_610:
        /* "test/solidity/Protocol.t.sol":23778:23784  assets */
      dup10
        /* "test/solidity/Protocol.t.sol":23778:23856  assets > _market.floatingAssets() + previewNewFloatingDebt(_market) + earnings */
      0xffffffffffffff
      and
      gt
        /* "test/solidity/Protocol.t.sol":23774:24532  if (assets > _market.floatingAssets() + previewNewFloatingDebt(_market) + earnings) {... */
      iszero
      tag_611
      jumpi
        /* "lib/forge-std/src/StdError.sol":317:364  abi.encodeWithSignature("Panic(uint256)", 0x11) */
      mload(0x40)
        /* "lib/forge-std/src/StdError.sol":359:363  0x11 */
      0x11
        /* "lib/forge-std/src/StdError.sol":317:364  abi.encodeWithSignature("Panic(uint256)", 0x11) */
      0x24
      dup3
      add
        /* "#utility.yul":24631:24667   */
      mstore
      0x00
      dup1
      mload
      0x20
      data_1a390d6c2ee89e11d2dffeb86f753e43f966d02cbb0b3bd3e6e1cdf50245ef50
      dup4
      codecopy
      dup2
      mload
      swap2
      mstore
        /* "test/solidity/Protocol.t.sol":23866:23881  vm.expectRevert */
      swap1
      0xf28dceb3
      swap1
        /* "#utility.yul":24604:24622   */
      0x44
      add
        /* "lib/forge-std/src/StdError.sol":317:364  abi.encodeWithSignature("Panic(uint256)", 0x11) */
    tag_612:
      0x40
      dup1
      mload
      not(0x1f)
      dup2
      dup5
      sub
      add
      dup2
      mstore
      swap2
      dup2
      mstore
      0x20
      dup3
      add
      dup1
      mload
      sub(shl(0xe0, 0x01), 0x01)
      and
      shl(0xe0, 0x4e487b71)
      or
      swap1
      mstore
        /* "test/solidity/Protocol.t.sol":23866:23907  vm.expectRevert(stdError.arithmeticError) */
      mload
      0xe0
      dup4
      swap1
      shl
      not(sub(shl(0xe0, 0x01), 0x01))
      and
      dup2
      mstore
      tag_585
      swap2
        /* "lib/forge-std/src/StdError.sol":317:364  abi.encodeWithSignature("Panic(uint256)", 0x11) */
      swap1
        /* "test/solidity/Protocol.t.sol":23866:23907  vm.expectRevert(stdError.arithmeticError) */
      0x04
      add
      tag_599
      jump	// in
        /* "test/solidity/Protocol.t.sol":23774:24532  if (assets > _market.floatingAssets() + previewNewFloatingDebt(_market) + earnings) {... */
    tag_611:
        /* "test/solidity/Protocol.t.sol":24060:24067  _market */
      sload(0x23)
        /* "test/solidity/Protocol.t.sol":24010:24088  _market.floatingAssets() + previewNewFloatingDebt(_market) + earnings - assets */
      0xffffffffffffff
      dup11
      and
      swap1
        /* "test/solidity/Protocol.t.sol":24071:24079  earnings */
      dup3
      swap1
        /* "test/solidity/Protocol.t.sol":24037:24068  previewNewFloatingDebt(_market) */
      tag_619
      swap1
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":24060:24067  _market */
      and
        /* "test/solidity/Protocol.t.sol":24037:24059  previewNewFloatingDebt */
      tag_605
        /* "test/solidity/Protocol.t.sol":24037:24068  previewNewFloatingDebt(_market) */
      jump	// in
    tag_619:
        /* "test/solidity/Protocol.t.sol":24010:24017  _market */
      0x23
      0x00
      swap1
      sload
      swap1
      0x0100
      exp
      swap1
      div
      sub(shl(0xa0, 0x01), 0x01)
      and
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":24010:24032  _market.floatingAssets */
      and
      0x2e0af008
        /* "test/solidity/Protocol.t.sol":24010:24034  _market.floatingAssets() */
      mload(0x40)
      dup2
      0xffffffff
      and
      0xe0
      shl
      dup2
      mstore
      0x04
      add
      0x20
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      dup7
      gas
      staticcall
      iszero
      dup1
      iszero
      tag_621
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_621:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      dup2
      add
      swap1
      tag_622
      swap2
      swap1
      tag_212
      jump	// in
    tag_622:
        /* "test/solidity/Protocol.t.sol":24010:24068  _market.floatingAssets() + previewNewFloatingDebt(_market) */
      tag_623
      swap2
      swap1
      tag_186
      jump	// in
    tag_623:
        /* "test/solidity/Protocol.t.sol":24010:24079  _market.floatingAssets() + previewNewFloatingDebt(_market) + earnings */
      tag_624
      swap2
      swap1
      tag_186
      jump	// in
    tag_624:
        /* "test/solidity/Protocol.t.sol":24010:24088  _market.floatingAssets() + previewNewFloatingDebt(_market) + earnings - assets */
      tag_625
      swap2
      swap1
      tag_158
      jump	// in
    tag_625:
        /* "test/solidity/Protocol.t.sol":23966:23973  _market */
      0x23
      0x00
      swap1
      sload
      swap1
      0x0100
      exp
      swap1
      div
      sub(shl(0xa0, 0x01), 0x01)
      and
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":23966:23999  _market.totalFloatingBorrowAssets */
      and
      0xeee8c9e0
        /* "test/solidity/Protocol.t.sol":23966:24001  _market.totalFloatingBorrowAssets() */
      mload(0x40)
      dup2
      0xffffffff
      and
      0xe0
      shl
      dup2
      mstore
      0x04
      add
      0x20
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      dup7
      gas
      staticcall
      iszero
      dup1
      iszero
      tag_627
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_627:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      dup2
      add
      swap1
      tag_628
      swap2
      swap1
      tag_212
      jump	// in
    tag_628:
        /* "test/solidity/Protocol.t.sol":23931:23938  _market */
      0x23
      0x00
      swap1
      sload
      swap1
      0x0100
      exp
      swap1
      div
      sub(shl(0xa0, 0x01), 0x01)
      and
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":23931:23961  _market.floatingBackupBorrowed */
      and
      0x8c3cba5a
        /* "test/solidity/Protocol.t.sol":23931:23963  _market.floatingBackupBorrowed() */
      mload(0x40)
      dup2
      0xffffffff
      and
      0xe0
      shl
      dup2
      mstore
      0x04
      add
      0x20
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      dup7
      gas
      staticcall
      iszero
      dup1
      iszero
      tag_630
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_630:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      dup2
      add
      swap1
      tag_631
      swap2
      swap1
      tag_212
      jump	// in
    tag_631:
        /* "test/solidity/Protocol.t.sol":23931:24001  _market.floatingBackupBorrowed() + _market.totalFloatingBorrowAssets() */
      tag_632
      swap2
      swap1
      tag_186
      jump	// in
    tag_632:
        /* "test/solidity/Protocol.t.sol":23931:24088  _market.floatingBackupBorrowed() + _market.totalFloatingBorrowAssets() >... */
      gt
        /* "test/solidity/Protocol.t.sol":23920:24532  if (... */
      iszero
      tag_633
      jumpi
        /* "test/solidity/Protocol.t.sol":24103:24158  vm.expectRevert(InsufficientProtocolLiquidity.selector) */
      mload(0x40)
      shl(0xe5, 0x0618f587)
      dup2
      mstore
      0x00
      dup1
      mload
      0x20
      data_1a390d6c2ee89e11d2dffeb86f753e43f966d02cbb0b3bd3e6e1cdf50245ef50
      dup4
      codecopy
      dup2
      mload
      swap2
      mstore
        /* "test/solidity/Protocol.t.sol":24103:24118  vm.expectRevert */
      swap1
      0xc31eb0e0
      swap1
        /* "test/solidity/Protocol.t.sol":24103:24158  vm.expectRevert(InsufficientProtocolLiquidity.selector) */
      tag_585
      swap1
      shl(0xe3, 0x2d41ad)
        /* "test/solidity/Protocol.t.sol":24119:24157  InsufficientProtocolLiquidity.selector */
      swap1
        /* "test/solidity/Protocol.t.sol":24103:24158  vm.expectRevert(InsufficientProtocolLiquidity.selector) */
      0x04
      add
      tag_216
      jump	// in
        /* "test/solidity/Protocol.t.sol":23920:24532  if (... */
    tag_633:
        /* "test/solidity/Protocol.t.sol":24192:24199  _market */
      sload(0x23)
        /* "test/solidity/Protocol.t.sol":24192:24221  _market.balanceOf(msg.sender) */
      mload(0x40)
      shl(0xe0, 0x70a08231)
      dup2
      mstore
        /* "test/solidity/Protocol.t.sol":24210:24220  msg.sender */
      caller
        /* "test/solidity/Protocol.t.sol":24192:24221  _market.balanceOf(msg.sender) */
      0x04
      dup3
      add
        /* "#utility.yul":7560:7611   */
      mstore
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":24192:24199  _market */
      swap1
      swap2
      and
      swap1
        /* "test/solidity/Protocol.t.sol":24192:24209  _market.balanceOf */
      0x70a08231
      swap1
        /* "#utility.yul":7533:7551   */
      0x24
      add
        /* "test/solidity/Protocol.t.sol":24192:24221  _market.balanceOf(msg.sender) */
      0x20
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      dup7
      gas
      staticcall
      iszero
      dup1
      iszero
      tag_641
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_641:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      dup2
      add
      swap1
      tag_642
      swap2
      swap1
      tag_212
      jump	// in
    tag_642:
        /* "test/solidity/Protocol.t.sol":24175:24189  expectedShares */
      dup4
        /* "test/solidity/Protocol.t.sol":24175:24221  expectedShares > _market.balanceOf(msg.sender) */
      gt
        /* "test/solidity/Protocol.t.sol":24171:24532  if (expectedShares > _market.balanceOf(msg.sender)) {... */
      iszero
      tag_643
      jumpi
        /* "lib/forge-std/src/StdError.sol":317:364  abi.encodeWithSignature("Panic(uint256)", 0x11) */
      mload(0x40)
        /* "lib/forge-std/src/StdError.sol":359:363  0x11 */
      0x11
        /* "lib/forge-std/src/StdError.sol":317:364  abi.encodeWithSignature("Panic(uint256)", 0x11) */
      0x24
      dup3
      add
        /* "#utility.yul":24631:24667   */
      mstore
      0x00
      dup1
      mload
      0x20
      data_1a390d6c2ee89e11d2dffeb86f753e43f966d02cbb0b3bd3e6e1cdf50245ef50
      dup4
      codecopy
      dup2
      mload
      swap2
      mstore
        /* "test/solidity/Protocol.t.sol":24231:24246  vm.expectRevert */
      swap1
      0xf28dceb3
      swap1
        /* "#utility.yul":24604:24622   */
      0x44
      add
        /* "lib/forge-std/src/StdError.sol":317:364  abi.encodeWithSignature("Panic(uint256)", 0x11) */
      tag_612
        /* "#utility.yul":24478:24673   */
      jump
        /* "test/solidity/Protocol.t.sol":24171:24532  if (expectedShares > _market.balanceOf(msg.sender)) {... */
    tag_643:
        /* "test/solidity/Protocol.t.sol":24298:24304  _asset */
      0x24
      dup1
      sload
        /* "test/solidity/Protocol.t.sol":24323:24330  _market */
      sload(0x23)
        /* "test/solidity/Protocol.t.sol":24298:24332  _asset.balanceOf(address(_market)) */
      mload(0x40)
      shl(0xe0, 0x70a08231)
      dup2
      mstore
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":24323:24330  _market */
      swap2
      dup3
      and
        /* "test/solidity/Protocol.t.sol":24298:24332  _asset.balanceOf(address(_market)) */
      0x04
      dup3
      add
        /* "#utility.yul":7560:7611   */
      mstore
        /* "test/solidity/Protocol.t.sol":24298:24304  _asset */
      swap2
      and
      swap2
        /* "test/solidity/Protocol.t.sol":24298:24314  _asset.balanceOf */
      0x70a08231
      swap2
        /* "#utility.yul":7533:7551   */
      add
        /* "test/solidity/Protocol.t.sol":24298:24332  _asset.balanceOf(address(_market)) */
      0x20
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      dup7
      gas
      staticcall
      iszero
      dup1
      iszero
      tag_652
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_652:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      dup2
      add
      swap1
      tag_653
      swap2
      swap1
      tag_212
      jump	// in
    tag_653:
        /* "test/solidity/Protocol.t.sol":24289:24295  assets */
      dup10
        /* "test/solidity/Protocol.t.sol":24289:24332  assets > _asset.balanceOf(address(_market)) */
      0xffffffffffffff
      and
      gt
        /* "test/solidity/Protocol.t.sol":24285:24532  if (assets > _asset.balanceOf(address(_market))) {... */
      iszero
      tag_654
      jumpi
        /* "test/solidity/Protocol.t.sol":24358:24367  bytes("") */
      0x40
      dup1
      mload
      0x20
      dup2
      add
      dup3
      mstore
        /* "lib/forge-std/src/Base.sol":309:346  uint256(keccak256("hevm cheat code")) */
      0x00
        /* "test/solidity/Protocol.t.sol":24358:24367  bytes("") */
      dup2
      mstore
        /* "test/solidity/Protocol.t.sol":24342:24368  vm.expectRevert(bytes("")) */
      swap1
      mload
      shl(0xe0, 0xf28dceb3)
      dup2
      mstore
      0x00
      dup1
      mload
      0x20
      data_1a390d6c2ee89e11d2dffeb86f753e43f966d02cbb0b3bd3e6e1cdf50245ef50
      dup4
      codecopy
      dup2
      mload
      swap2
      mstore
        /* "test/solidity/Protocol.t.sol":24342:24357  vm.expectRevert */
      swap2
      0xf28dceb3
      swap2
        /* "test/solidity/Protocol.t.sol":24342:24368  vm.expectRevert(bytes("")) */
      tag_585
      swap2
        /* "test/solidity/Protocol.t.sol":24358:24367  bytes("") */
      swap1
        /* "test/solidity/Protocol.t.sol":24342:24368  vm.expectRevert(bytes("")) */
      0x04
      add
      tag_599
      jump	// in
        /* "test/solidity/Protocol.t.sol":24285:24532  if (assets > _asset.balanceOf(address(_market))) {... */
    tag_654:
        /* "test/solidity/Protocol.t.sol":24435:24442  _market */
      sload(0x23)
        /* "test/solidity/Protocol.t.sol":24389:24444  vm.expectEmit(true, true, true, true, address(_market)) */
      mload(0x40)
      shl(0xe0, 0x81bad6f3)
      dup2
      mstore
      0x00
      dup1
      mload
      0x20
      data_1a390d6c2ee89e11d2dffeb86f753e43f966d02cbb0b3bd3e6e1cdf50245ef50
      dup4
      codecopy
      dup2
      mload
      swap2
      mstore
        /* "test/solidity/Protocol.t.sol":24389:24402  vm.expectEmit */
      swap2
      0x81bad6f3
      swap2
        /* "test/solidity/Protocol.t.sol":24389:24444  vm.expectEmit(true, true, true, true, address(_market)) */
      tag_660
      swap2
        /* "test/solidity/Protocol.t.sol":24403:24407  true */
      0x01
      swap2
      dup3
      swap2
      dup3
      swap2
      dup3
      swap2
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":24435:24442  _market */
      and
      swap1
        /* "test/solidity/Protocol.t.sol":24389:24444  vm.expectEmit(true, true, true, true, address(_market)) */
      0x04
      add
      tag_228
      jump	// in
    tag_660:
      0x00
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      0x00
      dup8
      dup1
      extcodesize
      iszero
      dup1
      iszero
      tag_661
      jumpi
      0x00
      dup1
      revert
    tag_661:
      pop
      gas
      call
      iszero
      dup1
      iszero
      tag_663
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_663:
      pop
      pop
        /* "test/solidity/Protocol.t.sol":24457:24525  Withdraw(msg.sender, msg.sender, msg.sender, assets, expectedShares) */
      0x40
      dup1
      mload
        /* "#utility.yul":23248:23264   */
      0xffffffffffffff
        /* "#utility.yul":23236:23265   */
      dup14
      and
        /* "#utility.yul":23218:23266   */
      dup2
      mstore
        /* "#utility.yul":23297:23299   */
      0x20
        /* "#utility.yul":23282:23300   */
      dup2
      add
        /* "#utility.yul":23275:23309   */
      dup8
      swap1
      mstore
        /* "test/solidity/Protocol.t.sol":24490:24500  msg.sender */
      caller
      swap4
      pop
      dup4
      swap3
      pop
      dup3
      swap2
        /* "test/solidity/Protocol.t.sol":24457:24525  Withdraw(msg.sender, msg.sender, msg.sender, assets, expectedShares) */
      0xfbde797d201c681b91056529119e0b02407c7bb96a4a2c75c01fc9667232c8db
      swap2
        /* "#utility.yul":23191:23209   */
      add
        /* "test/solidity/Protocol.t.sol":24457:24525  Withdraw(msg.sender, msg.sender, msg.sender, assets, expectedShares) */
      mload(0x40)
      dup1
      swap2
      sub
      swap1
      log4
        /* "test/solidity/Protocol.t.sol":24285:24532  if (assets > _asset.balanceOf(address(_market))) {... */
    tag_659:
        /* "test/solidity/Protocol.t.sol":24562:24569  _market */
      sload(0x23)
        /* "test/solidity/Protocol.t.sol":24562:24610  _market.withdraw(assets, msg.sender, msg.sender) */
      mload(0x40)
      shl(0xe2, 0x2d182be5)
      dup2
      mstore
        /* "test/solidity/Protocol.t.sol":24537:24559  uint256 withdrawShares */
      0x00
      swap2
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":24562:24569  _market */
      and
      swap1
        /* "test/solidity/Protocol.t.sol":24562:24578  _market.withdraw */
      0xb460af94
      swap1
        /* "test/solidity/Protocol.t.sol":24562:24610  _market.withdraw(assets, msg.sender, msg.sender) */
      tag_666
      swap1
        /* "test/solidity/Protocol.t.sol":24579:24585  assets */
      dup14
      swap1
        /* "test/solidity/Protocol.t.sol":24587:24597  msg.sender */
      caller
      swap1
      dup2
      swap1
        /* "test/solidity/Protocol.t.sol":24562:24610  _market.withdraw(assets, msg.sender, msg.sender) */
      0x04
      add
      tag_667
      jump	// in
    tag_666:
      0x20
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      0x00
      dup8
      gas
      call
      iszero
      dup1
      iszero
      tag_669
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_669:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      dup2
      add
      swap1
      tag_670
      swap2
      swap1
      tag_212
      jump	// in
    tag_670:
        /* "test/solidity/Protocol.t.sol":24537:24610  uint256 withdrawShares = _market.withdraw(assets, msg.sender, msg.sender) */
      swap1
      pop
        /* "test/solidity/Protocol.t.sol":24620:24638  withdrawShares > 0 */
      dup1
      iszero
        /* "test/solidity/Protocol.t.sol":24616:24671  if (withdrawShares > 0) _asset.burn(msg.sender, assets) */
      tag_671
      jumpi
        /* "test/solidity/Protocol.t.sol":24640:24646  _asset */
      sload(0x24)
        /* "test/solidity/Protocol.t.sol":24640:24671  _asset.burn(msg.sender, assets) */
      mload(0x40)
      shl(0xe2, 0x2770a7eb)
      dup2
      mstore
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":24640:24646  _asset */
      swap1
      swap2
      and
      swap1
        /* "test/solidity/Protocol.t.sol":24640:24651  _asset.burn */
      0x9dc29fac
      swap1
        /* "test/solidity/Protocol.t.sol":24640:24671  _asset.burn(msg.sender, assets) */
      tag_672
      swap1
        /* "test/solidity/Protocol.t.sol":24652:24662  msg.sender */
      caller
      swap1
        /* "test/solidity/Protocol.t.sol":24664:24670  assets */
      dup15
      swap1
        /* "test/solidity/Protocol.t.sol":24640:24671  _asset.burn(msg.sender, assets) */
      0x04
      add
      tag_497
      jump	// in
    tag_672:
      0x00
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      0x00
      dup8
      dup1
      extcodesize
      iszero
      dup1
      iszero
      tag_673
      jumpi
      0x00
      dup1
      revert
    tag_673:
      pop
      gas
      call
      iszero
      dup1
      iszero
      tag_675
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_675:
      pop
      pop
      pop
      pop
        /* "test/solidity/Protocol.t.sol":24616:24671  if (withdrawShares > 0) _asset.burn(msg.sender, assets) */
    tag_671:
        /* "test/solidity/Protocol.t.sol":23142:24676  {... */
      pop
      pop
      pop
      pop
      pop
        /* "test/solidity/Protocol.t.sol":31815:31816  _ */
      pop
      pop
      0x00
      dup1
      mload
      0x20
      data_b627c71dec38ae7fa273aa3bb9b6210fd4a76d47f44ae646db16da401b96db40
      dup4
      codecopy
      dup2
      mload
      swap2
      mstore
        /* "lib/forge-std/src/Base.sol":309:346  uint256(keccak256("hevm cheat code")) */
      0x00
      shr
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":31822:31834  vm.stopPrank */
      and
      0x90c5013b
        /* "test/solidity/Protocol.t.sol":31822:31836  vm.stopPrank() */
      mload(0x40)
      dup2
      0xffffffff
      and
      0xe0
      shl
      dup2
      mstore
      0x04
      add
      0x00
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      0x00
      dup8
      dup1
      extcodesize
      iszero
      dup1
      iszero
      tag_512
      jumpi
      0x00
      dup1
      revert
        /* "test/solidity/Protocol.t.sol":12342:14767  function withdrawAtMaturity(... */
    tag_60:
        /* "test/solidity/Protocol.t.sol":31278:31285  _market */
      sload(0x23)
        /* "test/solidity/Protocol.t.sol":12428:12432  seed */
      dup2
      swap1
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":31278:31285  _market */
      and
        /* "test/solidity/Protocol.t.sol":31270:31300  address(_market) == address(0) */
      iszero
        /* "test/solidity/Protocol.t.sol":31263:31301  assert(address(_market) == address(0)) */
      tag_681
      jumpi
      tag_681
      tag_153
      jump	// in
    tag_681:
        /* "test/solidity/Protocol.t.sol":31317:31324  markets */
      0x1c
        /* "test/solidity/Protocol.t.sol":31325:31402  _bound(uint256(keccak256(abi.encode(seed, "market"))), 0, markets.length - 1) */
      tag_682
        /* "test/solidity/Protocol.t.sol":31361:31365  seed */
      dup3
        /* "test/solidity/Protocol.t.sol":31350:31376  abi.encode(seed, "market") */
      add(0x20, mload(0x40))
      tag_155
      swap2
      swap1
      tag_156
      jump	// in
        /* "test/solidity/Protocol.t.sol":31325:31402  _bound(uint256(keccak256(abi.encode(seed, "market"))), 0, markets.length - 1) */
    tag_682:
        /* "test/solidity/Protocol.t.sol":31317:31403  markets[_bound(uint256(keccak256(abi.encode(seed, "market"))), 0, markets.length - 1)] */
      dup2
      sload
      dup2
      lt
      tag_686
      jumpi
      tag_686
      tag_162
      jump	// in
    tag_686:
      0x00
      swap2
      dup3
      mstore
      0x20
      swap2
      dup3
      swap1
      keccak256
      add
      sload
        /* "test/solidity/Protocol.t.sol":31307:31314  _market */
      0x23
        /* "test/solidity/Protocol.t.sol":31307:31403  _market = markets[_bound(uint256(keccak256(abi.encode(seed, "market"))), 0, markets.length - 1)] */
      dup1
      sload
      not(sub(shl(0xa0, 0x01), 0x01))
      and
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":31317:31403  markets[_bound(uint256(keccak256(abi.encode(seed, "market"))), 0, markets.length - 1)] */
      swap1
      swap3
      and
        /* "test/solidity/Protocol.t.sol":31307:31403  _market = markets[_bound(uint256(keccak256(abi.encode(seed, "market"))), 0, markets.length - 1)] */
      swap2
      dup3
      or
      swap1
      sstore
        /* "test/solidity/Protocol.t.sol":31436:31451  _market.asset() */
      0x40
      dup1
      mload
      shl(0xe0, 0x38d52e0f)
      dup2
      mstore
      swap1
      mload
        /* "test/solidity/Protocol.t.sol":31317:31403  markets[_bound(uint256(keccak256(abi.encode(seed, "market"))), 0, markets.length - 1)] */
      swap2
      swap3
        /* "test/solidity/Protocol.t.sol":31436:31449  _market.asset */
      0x38d52e0f
      swap3
        /* "test/solidity/Protocol.t.sol":31436:31451  _market.asset() */
      0x04
      dup1
      dup5
      add
      swap4
      dup3
      swap1
      sub
      add
      dup2
        /* "test/solidity/Protocol.t.sol":31317:31403  markets[_bound(uint256(keccak256(abi.encode(seed, "market"))), 0, markets.length - 1)] */
      dup7
        /* "test/solidity/Protocol.t.sol":31436:31451  _market.asset() */
      gas
      staticcall
      iszero
      dup1
      iszero
      tag_689
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_689:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      dup2
      add
      swap1
      tag_690
      swap2
      swap1
      tag_167
      jump	// in
    tag_690:
        /* "test/solidity/Protocol.t.sol":31409:31415  _asset */
      0x24
      0x00
        /* "test/solidity/Protocol.t.sol":31409:31453  _asset = MockERC20(address(_market.asset())) */
      0x0100
      exp
      dup2
      sload
      dup2
      sub(shl(0xa0, 0x01), 0x01)
      mul
      not
      and
      swap1
      dup4
      sub(shl(0xa0, 0x01), 0x01)
      and
      mul
      or
      swap1
      sstore
      pop
        /* "test/solidity/Protocol.t.sol":31475:31483  accounts */
      0x1d
        /* "test/solidity/Protocol.t.sol":31484:31568  _bound(uint256(keccak256(abi.encode(seed, "counterparty"))), 0, accounts.length - 1) */
      tag_691
        /* "test/solidity/Protocol.t.sol":31520:31524  seed */
      dup3
        /* "test/solidity/Protocol.t.sol":31509:31541  abi.encode(seed, "counterparty") */
      add(0x20, mload(0x40))
      tag_169
      swap2
      swap1
      tag_170
      jump	// in
        /* "test/solidity/Protocol.t.sol":31484:31568  _bound(uint256(keccak256(abi.encode(seed, "counterparty"))), 0, accounts.length - 1) */
    tag_691:
        /* "test/solidity/Protocol.t.sol":31475:31569  accounts[_bound(uint256(keccak256(abi.encode(seed, "counterparty"))), 0, accounts.length - 1)] */
      dup2
      sload
      dup2
      lt
      tag_695
      jumpi
      tag_695
      tag_162
      jump	// in
    tag_695:
      0x00
      swap2
      dup3
      mstore
      0x20
      swap2
      dup3
      swap1
      keccak256
      add
      sload
        /* "test/solidity/Protocol.t.sol":31459:31472  _counterparty */
      0x26
        /* "test/solidity/Protocol.t.sol":31459:31569  _counterparty = accounts[_bound(uint256(keccak256(abi.encode(seed, "counterparty"))), 0, accounts.length - 1)] */
      dup1
      sload
      not(sub(shl(0xa0, 0x01), 0x01))
      and
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":31475:31569  accounts[_bound(uint256(keccak256(abi.encode(seed, "counterparty"))), 0, accounts.length - 1)] */
      swap1
      swap3
      and
        /* "test/solidity/Protocol.t.sol":31459:31569  _counterparty = accounts[_bound(uint256(keccak256(abi.encode(seed, "counterparty"))), 0, accounts.length - 1)] */
      swap2
      swap1
      swap2
      or
      swap1
      sstore
        /* "test/solidity/Protocol.t.sol":31628:31658  abi.encode(seed, "collateral") */
      mload(0x40)
        /* "test/solidity/Protocol.t.sol":31595:31602  markets */
      0x1c
      swap2
        /* "test/solidity/Protocol.t.sol":31603:31684  _bound(uint256(keccak256(abi.encode(seed, "collateral"))), 0, markets.length - 1) */
      tag_697
      swap2
        /* "test/solidity/Protocol.t.sol":31628:31658  abi.encode(seed, "collateral") */
      tag_155
      swap2
        /* "test/solidity/Protocol.t.sol":31639:31643  seed */
      dup6
      swap2
        /* "test/solidity/Protocol.t.sol":31628:31658  abi.encode(seed, "collateral") */
      add
      tag_177
      jump	// in
        /* "test/solidity/Protocol.t.sol":31603:31684  _bound(uint256(keccak256(abi.encode(seed, "collateral"))), 0, markets.length - 1) */
    tag_697:
        /* "test/solidity/Protocol.t.sol":31595:31685  markets[_bound(uint256(keccak256(abi.encode(seed, "collateral"))), 0, markets.length - 1)] */
      dup2
      sload
      dup2
      lt
      tag_701
      jumpi
      tag_701
      tag_162
      jump	// in
    tag_701:
      0x00
      swap2
      dup3
      mstore
      0x20
      swap1
      swap2
      keccak256
      add
      sload
        /* "test/solidity/Protocol.t.sol":31575:31592  _collateralMarket */
      0x27
        /* "test/solidity/Protocol.t.sol":31575:31685  _collateralMarket = markets[_bound(uint256(keccak256(abi.encode(seed, "collateral"))), 0, markets.length - 1)] */
      dup1
      sload
      not(sub(shl(0xa0, 0x01), 0x01))
      and
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":31595:31685  markets[_bound(uint256(keccak256(abi.encode(seed, "collateral"))), 0, markets.length - 1)] */
      swap1
      swap3
      and
        /* "test/solidity/Protocol.t.sol":31575:31685  _collateralMarket = markets[_bound(uint256(keccak256(abi.encode(seed, "collateral"))), 0, markets.length - 1)] */
      swap2
      swap1
      swap2
      or
      swap1
      sstore
        /* "contracts/utils/FixedLib.sol":306:313  4 weeks */
      0x24ea00
        /* "test/solidity/Protocol.t.sol":31722:31757  block.timestamp % FixedLib.INTERVAL */
      tag_703
        /* "contracts/utils/FixedLib.sol":306:313  4 weeks */
      dup2
        /* "test/solidity/Protocol.t.sol":31722:31737  block.timestamp */
      timestamp
        /* "test/solidity/Protocol.t.sol":31722:31757  block.timestamp % FixedLib.INTERVAL */
      tag_183
      jump	// in
    tag_703:
        /* "test/solidity/Protocol.t.sol":31703:31758  block.timestamp - (block.timestamp % FixedLib.INTERVAL) */
      tag_704
      swap1
        /* "test/solidity/Protocol.t.sol":31703:31718  block.timestamp */
      timestamp
        /* "test/solidity/Protocol.t.sol":31703:31758  block.timestamp - (block.timestamp % FixedLib.INTERVAL) */
      tag_158
      jump	// in
    tag_704:
        /* "test/solidity/Protocol.t.sol":31703:31778  block.timestamp - (block.timestamp % FixedLib.INTERVAL) + FixedLib.INTERVAL */
      tag_705
      swap2
      swap1
      tag_186
      jump	// in
    tag_705:
        /* "test/solidity/Protocol.t.sol":31691:31700  _maturity */
      0x25
        /* "test/solidity/Protocol.t.sol":31691:31778  _maturity = block.timestamp - (block.timestamp % FixedLib.INTERVAL) + FixedLib.INTERVAL */
      sstore
        /* "test/solidity/Protocol.t.sol":31784:31809  vm.startPrank(msg.sender) */
      mload(0x40)
      shl(0xe1, 0x03223eab)
      dup2
      mstore
        /* "test/solidity/Protocol.t.sol":31798:31808  msg.sender */
      caller
        /* "test/solidity/Protocol.t.sol":31784:31809  vm.startPrank(msg.sender) */
      0x04
      dup3
      add
        /* "#utility.yul":7560:7611   */
      mstore
      0x00
      dup1
      mload
      0x20
      data_1a390d6c2ee89e11d2dffeb86f753e43f966d02cbb0b3bd3e6e1cdf50245ef50
      dup4
      codecopy
      dup2
      mload
      swap2
      mstore
        /* "test/solidity/Protocol.t.sol":31784:31797  vm.startPrank */
      swap1
      0x06447d56
      swap1
        /* "#utility.yul":7533:7551   */
      0x24
      add
        /* "test/solidity/Protocol.t.sol":31784:31809  vm.startPrank(msg.sender) */
      0x00
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      0x00
      dup8
      dup1
      extcodesize
      iszero
      dup1
      iszero
      tag_707
      jumpi
      0x00
      dup1
      revert
    tag_707:
      pop
      gas
      call
      iszero
      dup1
      iszero
      tag_709
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_709:
      pop
      pop
      pop
      pop
        /* "test/solidity/Protocol.t.sol":12453:12459  assets */
      dup3
        /* "test/solidity/Protocol.t.sol":33008:33300  modifier _depositAtMaturity(uint256 assets, address account) {... */
      0xffffffffffffff
      and
        /* "test/solidity/Protocol.t.sol":12461:12471  msg.sender */
      caller
        /* "test/solidity/Protocol.t.sol":33079:33085  assets */
      dup2
        /* "test/solidity/Protocol.t.sol":33089:33090  0 */
      0x00
        /* "test/solidity/Protocol.t.sol":33079:33090  assets != 0 */
      eq
        /* "test/solidity/Protocol.t.sol":33075:33289  if (assets != 0) {... */
      tag_711
      jumpi
        /* "test/solidity/Protocol.t.sol":33117:33127  msg.sender */
      caller
        /* "test/solidity/Protocol.t.sol":33135:33155  changePrank(account) */
      tag_712
        /* "test/solidity/Protocol.t.sol":33147:33154  account */
      dup3
        /* "test/solidity/Protocol.t.sol":33135:33146  changePrank */
      tag_549
        /* "test/solidity/Protocol.t.sol":33135:33155  changePrank(account) */
      jump	// in
    tag_712:
        /* "test/solidity/Protocol.t.sol":33163:33169  _asset */
      sload(0x24)
        /* "test/solidity/Protocol.t.sol":33163:33191  _asset.mint(account, assets) */
      mload(0x40)
      shl(0xe0, 0x40c10f19)
      dup2
      mstore
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":33163:33169  _asset */
      swap1
      swap2
      and
      swap1
        /* "test/solidity/Protocol.t.sol":33163:33174  _asset.mint */
      0x40c10f19
      swap1
        /* "test/solidity/Protocol.t.sol":33163:33191  _asset.mint(account, assets) */
      tag_713
      swap1
        /* "test/solidity/Protocol.t.sol":33175:33182  account */
      dup6
      swap1
        /* "test/solidity/Protocol.t.sol":33184:33190  assets */
      dup8
      swap1
        /* "test/solidity/Protocol.t.sol":33163:33191  _asset.mint(account, assets) */
      0x04
      add
      tag_345
      jump	// in
    tag_713:
      0x00
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      0x00
      dup8
      dup1
      extcodesize
      iszero
      dup1
      iszero
      tag_714
      jumpi
      0x00
      dup1
      revert
    tag_714:
      pop
      gas
      call
      iszero
      dup1
      iszero
      tag_716
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_716:
      pop
      pop
        /* "test/solidity/Protocol.t.sol":33199:33206  _market */
      sload(0x23)
        /* "test/solidity/Protocol.t.sol":33225:33234  _maturity */
      sload(0x25)
        /* "test/solidity/Protocol.t.sol":33199:33255  _market.depositAtMaturity(_maturity, assets, 0, account) */
      mload(0x40)
      shl(0xe1, 0x1a7be8f9)
      dup2
      mstore
      0x04
      dup2
      add
        /* "#utility.yul":25594:25619   */
      swap2
      swap1
      swap2
      mstore
        /* "#utility.yul":25635:25653   */
      0x24
      dup2
      add
        /* "#utility.yul":25628:25662   */
      dup8
      swap1
      mstore
        /* "test/solidity/Protocol.t.sol":33199:33206  _market */
      0x00
        /* "#utility.yul":25678:25696   */
      0x44
      dup3
      add
        /* "#utility.yul":25671:25705   */
      mstore
      sub(shl(0xa0, 0x01), 0x01)
        /* "#utility.yul":25741:25773   */
      dup7
      dup2
      and
        /* "#utility.yul":25721:25739   */
      0x64
      dup4
      add
        /* "#utility.yul":25714:25774   */
      mstore
        /* "test/solidity/Protocol.t.sol":33199:33206  _market */
      swap1
      swap2
      and
      swap3
      pop
        /* "test/solidity/Protocol.t.sol":33199:33224  _market.depositAtMaturity */
      0x34f7d1f2
      swap2
      pop
        /* "#utility.yul":25566:25585   */
      0x84
      add
        /* "test/solidity/Protocol.t.sol":33199:33255  _market.depositAtMaturity(_maturity, assets, 0, account) */
      0x20
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      0x00
      dup8
      gas
      call
      iszero
      dup1
      iszero
      tag_720
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_720:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      dup2
      add
      swap1
      tag_721
      swap2
      swap1
      tag_212
      jump	// in
    tag_721:
      pop
        /* "test/solidity/Protocol.t.sol":33263:33282  changePrank(sender) */
      tag_722
        /* "test/solidity/Protocol.t.sol":33275:33281  sender */
      dup2
        /* "test/solidity/Protocol.t.sol":33263:33274  changePrank */
      tag_549
        /* "test/solidity/Protocol.t.sol":33263:33282  changePrank(sender) */
      jump	// in
    tag_722:
        /* "test/solidity/Protocol.t.sol":33092:33289  {... */
      pop
        /* "test/solidity/Protocol.t.sol":33075:33289  if (assets != 0) {... */
    tag_711:
      0x40
      dup1
      mload
      dup1
      dup3
      add
      swap1
      swap2
      mstore
      0x00
      dup1
      dup3
      mstore
      0x20
      dup3
      add
      mstore
        /* "test/solidity/Protocol.t.sol":12540:12547  _market */
      sload(0x23)
        /* "test/solidity/Protocol.t.sol":12559:12568  _maturity */
      sload(0x25)
        /* "test/solidity/Protocol.t.sol":12540:12569  _market.fixedPools(_maturity) */
      mload(0x40)
      shl(0xe0, 0x4e7c5059)
      dup2
      mstore
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":12540:12547  _market */
      swap1
      swap3
      and
      swap2
        /* "test/solidity/Protocol.t.sol":12540:12558  _market.fixedPools */
      0x4e7c5059
      swap2
        /* "test/solidity/Protocol.t.sol":12540:12569  _market.fixedPools(_maturity) */
      tag_725
      swap2
      0x04
      add
        /* "#utility.yul":10439:10464   */
      swap1
      dup2
      mstore
        /* "#utility.yul":10427:10429   */
      0x20
        /* "#utility.yul":10412:10430   */
      add
      swap1
        /* "#utility.yul":10284:10470   */
      jump
        /* "test/solidity/Protocol.t.sol":12540:12569  _market.fixedPools(_maturity) */
    tag_725:
      0x80
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      dup7
      gas
      staticcall
      iszero
      dup1
      iszero
      tag_728
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_728:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      dup2
      add
      swap1
      tag_729
      swap2
      swap1
      tag_730
      jump	// in
    tag_729:
      pop
      pop
        /* "test/solidity/Protocol.t.sol":12503:12569  (pool.negative, pool.positive, , ) = _market.fixedPools(_maturity) */
      dup3
      mstore
        /* "test/solidity/Protocol.t.sol":12504:12517  pool.negative */
      0x20
      dup3
      add
        /* "test/solidity/Protocol.t.sol":12503:12569  (pool.negative, pool.positive, , ) = _market.fixedPools(_maturity) */
      mstore
        /* "test/solidity/Protocol.t.sol":12610:12617  _market */
      sload(0x23)
        /* "test/solidity/Protocol.t.sol":12640:12649  _maturity */
      sload(0x25)
        /* "test/solidity/Protocol.t.sol":12610:12662  _market.fixedDepositPositions(_maturity, msg.sender) */
      mload(0x40)
      shl(0xe0, 0xccfd8b11)
      dup2
      mstore
        /* "test/solidity/Protocol.t.sol":12519:12532  pool.positive */
      0x00
      swap3
      dup4
      swap3
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":12610:12617  _market */
      swap1
      swap2
      and
      swap2
        /* "test/solidity/Protocol.t.sol":12610:12639  _market.fixedDepositPositions */
      0xccfd8b11
      swap2
        /* "test/solidity/Protocol.t.sol":12610:12662  _market.fixedDepositPositions(_maturity, msg.sender) */
      tag_731
      swap2
        /* "test/solidity/Protocol.t.sol":12651:12661  msg.sender */
      caller
      swap1
        /* "test/solidity/Protocol.t.sol":12610:12662  _market.fixedDepositPositions(_maturity, msg.sender) */
      0x04
      add
      tag_555
      jump	// in
    tag_731:
      0x40
      dup1
      mload
      dup1
      dup4
      sub
      dup2
      dup7
      gas
      staticcall
      iszero
      dup1
      iszero
      tag_733
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_733:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      dup2
      add
      swap1
      tag_734
      swap2
      swap1
      tag_203
      jump	// in
    tag_734:
        /* "test/solidity/Protocol.t.sol":12575:12662  (uint256 principal, uint256 fee) = _market.fixedDepositPositions(_maturity, msg.sender) */
      swap1
      swap3
      pop
      swap1
      pop
        /* "test/solidity/Protocol.t.sol":12668:12690  uint256 positionAssets */
      0x00
        /* "test/solidity/Protocol.t.sol":12702:12717  principal + fee */
      tag_735
        /* "test/solidity/Protocol.t.sol":12575:12662  (uint256 principal, uint256 fee) = _market.fixedDepositPositions(_maturity, msg.sender) */
      dup3
      dup5
        /* "test/solidity/Protocol.t.sol":12702:12717  principal + fee */
      tag_186
      jump	// in
    tag_735:
        /* "test/solidity/Protocol.t.sol":12693:12699  assets */
      dup10
        /* "test/solidity/Protocol.t.sol":12693:12717  assets > principal + fee */
      0xffffffffffffff
      and
      gt
        /* "test/solidity/Protocol.t.sol":12693:12744  assets > principal + fee ? principal + fee : assets */
      tag_736
      jumpi
        /* "test/solidity/Protocol.t.sol":12738:12744  assets */
      dup9
        /* "test/solidity/Protocol.t.sol":12693:12744  assets > principal + fee ? principal + fee : assets */
      0xffffffffffffff
      and
      jump(tag_738)
    tag_736:
        /* "test/solidity/Protocol.t.sol":12720:12735  principal + fee */
      tag_738
        /* "test/solidity/Protocol.t.sol":12732:12735  fee */
      dup3
        /* "test/solidity/Protocol.t.sol":12720:12729  principal */
      dup5
        /* "test/solidity/Protocol.t.sol":12720:12735  principal + fee */
      tag_186
      jump	// in
    tag_738:
        /* "test/solidity/Protocol.t.sol":12802:12809  _market */
      sload(0x23)
        /* "test/solidity/Protocol.t.sol":12668:12744  uint256 positionAssets = assets > principal + fee ? principal + fee : assets */
      swap1
      swap2
      pop
        /* "test/solidity/Protocol.t.sol":12750:12770  uint256 backupAssets */
      0x00
      swap1
        /* "test/solidity/Protocol.t.sol":12773:12810  previewFloatingAssetsAverage(_market) */
      tag_739
      swap1
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":12802:12809  _market */
      and
        /* "test/solidity/Protocol.t.sol":12773:12801  previewFloatingAssetsAverage */
      tag_740
        /* "test/solidity/Protocol.t.sol":12773:12810  previewFloatingAssetsAverage(_market) */
      jump	// in
    tag_739:
        /* "test/solidity/Protocol.t.sol":12750:12810  uint256 backupAssets = previewFloatingAssetsAverage(_market) */
      swap1
      pop
        /* "test/solidity/Protocol.t.sol":12816:12840  uint256 assetsDiscounted */
      0x00
        /* "test/solidity/Protocol.t.sol":12851:12857  assets */
      dup11
        /* "test/solidity/Protocol.t.sol":12851:12862  assets == 0 */
      0xffffffffffffff
      and
        /* "test/solidity/Protocol.t.sol":12861:12862  0 */
      0x00
        /* "test/solidity/Protocol.t.sol":12851:12862  assets == 0 */
      sub
        /* "test/solidity/Protocol.t.sol":12847:14593  if (assets == 0) {... */
      tag_741
      jumpi
        /* "test/solidity/Protocol.t.sol":12872:12910  vm.expectRevert(ZeroWithdraw.selector) */
      mload(0x40)
      shl(0xe5, 0x0618f587)
      dup2
      mstore
      0x00
      dup1
      mload
      0x20
      data_1a390d6c2ee89e11d2dffeb86f753e43f966d02cbb0b3bd3e6e1cdf50245ef50
      dup4
      codecopy
      dup2
      mload
      swap2
      mstore
        /* "test/solidity/Protocol.t.sol":12872:12887  vm.expectRevert */
      swap1
      0xc31eb0e0
      swap1
        /* "test/solidity/Protocol.t.sol":12872:12910  vm.expectRevert(ZeroWithdraw.selector) */
      tag_742
      swap1
      shl(0xe0, 0xb8cb6219)
        /* "test/solidity/Protocol.t.sol":12888:12909  ZeroWithdraw.selector */
      swap1
        /* "test/solidity/Protocol.t.sol":12872:12910  vm.expectRevert(ZeroWithdraw.selector) */
      0x04
      add
      tag_216
      jump	// in
    tag_742:
      0x00
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      0x00
      dup8
      dup1
      extcodesize
      iszero
      dup1
      iszero
      tag_743
      jumpi
      0x00
      dup1
      revert
    tag_743:
      pop
      gas
      call
      iszero
      dup1
      iszero
      tag_745
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_745:
      pop
      pop
      pop
      pop
        /* "test/solidity/Protocol.t.sol":12847:14593  if (assets == 0) {... */
      jump(tag_828)
    tag_741:
        /* "test/solidity/Protocol.t.sol":12945:12954  _maturity */
      sload(0x25)
        /* "test/solidity/Protocol.t.sol":12927:12942  block.timestamp */
      timestamp
        /* "test/solidity/Protocol.t.sol":12927:12954  block.timestamp < _maturity */
      lt
        /* "test/solidity/Protocol.t.sol":12927:12991  block.timestamp < _maturity && pool.positive + backupAssets == 0 */
      dup1
      iszero
      tag_747
      jumpi
      pop
        /* "test/solidity/Protocol.t.sol":12958:12971  pool.positive */
      dup6
      mload
        /* "test/solidity/Protocol.t.sol":12958:12986  pool.positive + backupAssets */
      tag_748
      swap1
        /* "test/solidity/Protocol.t.sol":12974:12986  backupAssets */
      dup4
      swap1
        /* "test/solidity/Protocol.t.sol":12958:12986  pool.positive + backupAssets */
      tag_186
      jump	// in
    tag_748:
        /* "test/solidity/Protocol.t.sol":12958:12991  pool.positive + backupAssets == 0 */
      iszero
        /* "test/solidity/Protocol.t.sol":12927:12991  block.timestamp < _maturity && pool.positive + backupAssets == 0 */
    tag_747:
        /* "test/solidity/Protocol.t.sol":12923:14593  if (block.timestamp < _maturity && pool.positive + backupAssets == 0) {... */
      iszero
      tag_749
      jumpi
        /* "test/solidity/Protocol.t.sol":13017:13026  bytes("") */
      0x40
      dup1
      mload
      0x20
      dup2
      add
      dup3
      mstore
        /* "lib/forge-std/src/Base.sol":309:346  uint256(keccak256("hevm cheat code")) */
      0x00
        /* "test/solidity/Protocol.t.sol":13017:13026  bytes("") */
      dup2
      mstore
        /* "test/solidity/Protocol.t.sol":13001:13027  vm.expectRevert(bytes("")) */
      swap1
      mload
      shl(0xe0, 0xf28dceb3)
      dup2
      mstore
      0x00
      dup1
      mload
      0x20
      data_1a390d6c2ee89e11d2dffeb86f753e43f966d02cbb0b3bd3e6e1cdf50245ef50
      dup4
      codecopy
      dup2
      mload
      swap2
      mstore
        /* "test/solidity/Protocol.t.sol":13001:13016  vm.expectRevert */
      swap2
      0xf28dceb3
      swap2
        /* "test/solidity/Protocol.t.sol":13001:13027  vm.expectRevert(bytes("")) */
      tag_742
      swap2
        /* "test/solidity/Protocol.t.sol":13017:13026  bytes("") */
      swap1
        /* "test/solidity/Protocol.t.sol":13001:13027  vm.expectRevert(bytes("")) */
      0x04
      add
      tag_599
      jump	// in
        /* "test/solidity/Protocol.t.sol":12923:14593  if (block.timestamp < _maturity && pool.positive + backupAssets == 0) {... */
    tag_749:
        /* "test/solidity/Protocol.t.sol":13070:13079  _maturity */
      sload(0x25)
        /* "test/solidity/Protocol.t.sol":13052:13067  block.timestamp */
      timestamp
        /* "test/solidity/Protocol.t.sol":13052:13079  block.timestamp < _maturity */
      lt
        /* "test/solidity/Protocol.t.sol":13052:13128  block.timestamp < _maturity && positionAssets > backupAssets + pool.positive */
      dup1
      iszero
      tag_755
      jumpi
      pop
        /* "test/solidity/Protocol.t.sol":13115:13128  pool.positive */
      dup6
      mload
        /* "test/solidity/Protocol.t.sol":13100:13128  backupAssets + pool.positive */
      tag_756
      swap1
        /* "test/solidity/Protocol.t.sol":13100:13112  backupAssets */
      dup4
        /* "test/solidity/Protocol.t.sol":13100:13128  backupAssets + pool.positive */
      tag_186
      jump	// in
    tag_756:
        /* "test/solidity/Protocol.t.sol":13083:13097  positionAssets */
      dup4
        /* "test/solidity/Protocol.t.sol":13083:13128  positionAssets > backupAssets + pool.positive */
      gt
        /* "test/solidity/Protocol.t.sol":13052:13128  block.timestamp < _maturity && positionAssets > backupAssets + pool.positive */
    tag_755:
        /* "test/solidity/Protocol.t.sol":13051:13217  (block.timestamp < _maturity && positionAssets > backupAssets + pool.positive) ||... */
      dup1
      tag_757
      jumpi
      pop
        /* "test/solidity/Protocol.t.sol":13196:13209  pool.positive */
      dup6
      mload
        /* "test/solidity/Protocol.t.sol":13213:13217  1e18 */
      0x0de0b6b3a7640000
      swap1
        /* "test/solidity/Protocol.t.sol":13139:13210  (pool.negative + positionAssets).divWadUp(backupAssets + pool.positive) */
      tag_758
      swap1
        /* "test/solidity/Protocol.t.sol":13181:13209  backupAssets + pool.positive */
      tag_759
      swap1
        /* "test/solidity/Protocol.t.sol":13181:13193  backupAssets */
      dup6
        /* "test/solidity/Protocol.t.sol":13181:13209  backupAssets + pool.positive */
      tag_186
      jump	// in
    tag_759:
        /* "test/solidity/Protocol.t.sol":13156:13170  positionAssets */
      dup6
        /* "test/solidity/Protocol.t.sol":13140:13144  pool */
      dup10
        /* "test/solidity/Protocol.t.sol":13140:13153  pool.negative */
      0x20
      add
      mload
        /* "test/solidity/Protocol.t.sol":13140:13170  pool.negative + positionAssets */
      tag_760
      swap2
      swap1
      tag_186
      jump	// in
    tag_760:
        /* "test/solidity/Protocol.t.sol":13139:13180  (pool.negative + positionAssets).divWadUp */
      swap1
      tag_761
        /* "test/solidity/Protocol.t.sol":13139:13210  (pool.negative + positionAssets).divWadUp(backupAssets + pool.positive) */
      jump	// in
    tag_758:
        /* "test/solidity/Protocol.t.sol":13139:13217  (pool.negative + positionAssets).divWadUp(backupAssets + pool.positive) > 1e18 */
      gt
        /* "test/solidity/Protocol.t.sol":13051:13217  (block.timestamp < _maturity && positionAssets > backupAssets + pool.positive) ||... */
    tag_757:
        /* "test/solidity/Protocol.t.sol":13040:14593  if (... */
      iszero
      tag_762
      jumpi
        /* "test/solidity/Protocol.t.sol":13232:13277  vm.expectRevert(UtilizationExceeded.selector) */
      mload(0x40)
      shl(0xe5, 0x0618f587)
      dup2
      mstore
      0x00
      dup1
      mload
      0x20
      data_1a390d6c2ee89e11d2dffeb86f753e43f966d02cbb0b3bd3e6e1cdf50245ef50
      dup4
      codecopy
      dup2
      mload
      swap2
      mstore
        /* "test/solidity/Protocol.t.sol":13232:13247  vm.expectRevert */
      swap1
      0xc31eb0e0
      swap1
        /* "test/solidity/Protocol.t.sol":13232:13277  vm.expectRevert(UtilizationExceeded.selector) */
      tag_742
      swap1
      shl(0xe0, 0x86a8c2bd)
        /* "test/solidity/Protocol.t.sol":13248:13276  UtilizationExceeded.selector */
      swap1
        /* "test/solidity/Protocol.t.sol":13232:13277  vm.expectRevert(UtilizationExceeded.selector) */
      0x04
      add
      tag_216
      jump	// in
        /* "test/solidity/Protocol.t.sol":13040:14593  if (... */
    tag_762:
        /* "test/solidity/Protocol.t.sol":13319:13328  _maturity */
      sload(0x25)
        /* "test/solidity/Protocol.t.sol":13301:13316  block.timestamp */
      timestamp
        /* "test/solidity/Protocol.t.sol":13301:13328  block.timestamp < _maturity */
      lt
        /* "test/solidity/Protocol.t.sol":13301:13424  block.timestamp < _maturity &&... */
      dup1
      iszero
      tag_771
      jumpi
      pop
        /* "test/solidity/Protocol.t.sol":13385:13392  _market */
      sload(0x23)
        /* "test/solidity/Protocol.t.sol":13356:13393  previewFloatingAssetsAverage(_market) */
      tag_769
      swap1
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":13385:13392  _market */
      and
        /* "test/solidity/Protocol.t.sol":13356:13384  previewFloatingAssetsAverage */
      tag_740
        /* "test/solidity/Protocol.t.sol":13356:13393  previewFloatingAssetsAverage(_market) */
      jump	// in
    tag_769:
        /* "test/solidity/Protocol.t.sol":13340:13353  pool.positive */
      dup7
      mload
        /* "test/solidity/Protocol.t.sol":13340:13393  pool.positive + previewFloatingAssetsAverage(_market) */
      tag_770
      swap2
      swap1
      tag_186
      jump	// in
    tag_770:
        /* "test/solidity/Protocol.t.sol":13340:13398  pool.positive + previewFloatingAssetsAverage(_market) == 0 */
      iszero
      dup1
        /* "test/solidity/Protocol.t.sol":13339:13423  (pool.positive + previewFloatingAssetsAverage(_market) == 0) || principal + fee == 0 */
      tag_771
      jumpi
      pop
        /* "test/solidity/Protocol.t.sol":13403:13418  principal + fee */
      tag_772
        /* "test/solidity/Protocol.t.sol":13415:13418  fee */
      dup5
        /* "test/solidity/Protocol.t.sol":13403:13412  principal */
      dup7
        /* "test/solidity/Protocol.t.sol":13403:13418  principal + fee */
      tag_186
      jump	// in
    tag_772:
        /* "test/solidity/Protocol.t.sol":13403:13423  principal + fee == 0 */
      iszero
        /* "test/solidity/Protocol.t.sol":13339:13423  (pool.positive + previewFloatingAssetsAverage(_market) == 0) || principal + fee == 0 */
    tag_771:
        /* "test/solidity/Protocol.t.sol":13290:14593  if (... */
      iszero
      tag_773
      jumpi
        /* "test/solidity/Protocol.t.sol":13455:13464  bytes("") */
      0x40
      dup1
      mload
      0x20
      dup2
      add
      dup3
      mstore
        /* "lib/forge-std/src/Base.sol":309:346  uint256(keccak256("hevm cheat code")) */
      0x00
        /* "test/solidity/Protocol.t.sol":13455:13464  bytes("") */
      dup2
      mstore
        /* "test/solidity/Protocol.t.sol":13439:13465  vm.expectRevert(bytes("")) */
      swap1
      mload
      shl(0xe0, 0xf28dceb3)
      dup2
      mstore
      0x00
      dup1
      mload
      0x20
      data_1a390d6c2ee89e11d2dffeb86f753e43f966d02cbb0b3bd3e6e1cdf50245ef50
      dup4
      codecopy
      dup2
      mload
      swap2
      mstore
        /* "test/solidity/Protocol.t.sol":13439:13454  vm.expectRevert */
      swap2
      0xf28dceb3
      swap2
        /* "test/solidity/Protocol.t.sol":13439:13465  vm.expectRevert(bytes("")) */
      tag_742
      swap2
        /* "test/solidity/Protocol.t.sol":13455:13464  bytes("") */
      swap1
        /* "test/solidity/Protocol.t.sol":13439:13465  vm.expectRevert(bytes("")) */
      0x04
      add
      tag_599
      jump	// in
        /* "test/solidity/Protocol.t.sol":13290:14593  if (... */
    tag_773:
        /* "test/solidity/Protocol.t.sol":13836:13843  _market */
      sload(0x23)
        /* "test/solidity/Protocol.t.sol":13813:13844  previewNewFloatingDebt(_market) */
      tag_779
      swap1
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":13836:13843  _market */
      and
        /* "test/solidity/Protocol.t.sol":13813:13835  previewNewFloatingDebt */
      tag_605
        /* "test/solidity/Protocol.t.sol":13813:13844  previewNewFloatingDebt(_market) */
      jump	// in
    tag_779:
        /* "test/solidity/Protocol.t.sol":13786:13793  _market */
      0x23
      0x00
      swap1
      sload
      swap1
      0x0100
      exp
      swap1
      div
      sub(shl(0xa0, 0x01), 0x01)
      and
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":13786:13808  _market.floatingAssets */
      and
      0x2e0af008
        /* "test/solidity/Protocol.t.sol":13786:13810  _market.floatingAssets() */
      mload(0x40)
      dup2
      0xffffffff
      and
      0xe0
      shl
      dup2
      mstore
      0x04
      add
      0x20
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      dup7
      gas
      staticcall
      iszero
      dup1
      iszero
      tag_781
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_781:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      dup2
      add
      swap1
      tag_782
      swap2
      swap1
      tag_212
      jump	// in
    tag_782:
        /* "test/solidity/Protocol.t.sol":13786:13844  _market.floatingAssets() + previewNewFloatingDebt(_market) */
      tag_783
      swap2
      swap1
      tag_186
      jump	// in
    tag_783:
        /* "test/solidity/Protocol.t.sol":13742:13749  _market */
      0x23
      0x00
      swap1
      sload
      swap1
      0x0100
      exp
      swap1
      div
      sub(shl(0xa0, 0x01), 0x01)
      and
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":13742:13775  _market.totalFloatingBorrowAssets */
      and
      0xeee8c9e0
        /* "test/solidity/Protocol.t.sol":13742:13777  _market.totalFloatingBorrowAssets() */
      mload(0x40)
      dup2
      0xffffffff
      and
      0xe0
      shl
      dup2
      mstore
      0x04
      add
      0x20
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      dup7
      gas
      staticcall
      iszero
      dup1
      iszero
      tag_785
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_785:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      dup2
      add
      swap1
      tag_786
      swap2
      swap1
      tag_212
      jump	// in
    tag_786:
        /* "test/solidity/Protocol.t.sol":13581:13731  Math.min(... */
      tag_787
        /* "test/solidity/Protocol.t.sol":13617:13686  FixedLib.Position(principal, fee).scaleProportionally(positionAssets) */
      tag_788
        /* "test/solidity/Protocol.t.sol":13671:13685  positionAssets */
      dup7
        /* "test/solidity/Protocol.t.sol":13617:13650  FixedLib.Position(principal, fee) */
      mload(0x40)
      dup1
      0x40
      add
      0x40
      mstore
      dup1
        /* "test/solidity/Protocol.t.sol":13635:13644  principal */
      dup12
        /* "test/solidity/Protocol.t.sol":13617:13650  FixedLib.Position(principal, fee) */
      dup2
      mstore
      0x20
      add
        /* "test/solidity/Protocol.t.sol":13646:13649  fee */
      dup11
        /* "test/solidity/Protocol.t.sol":13617:13650  FixedLib.Position(principal, fee) */
      dup2
      mstore
      pop
        /* "test/solidity/Protocol.t.sol":13617:13670  FixedLib.Position(principal, fee).scaleProportionally */
      tag_789
      swap1
        /* "test/solidity/Protocol.t.sol":13617:13686  FixedLib.Position(principal, fee).scaleProportionally(positionAssets) */
      swap2
      swap1
      0xffffffff
      and
      jump	// in
    tag_788:
        /* "test/solidity/Protocol.t.sol":13617:13696  FixedLib.Position(principal, fee).scaleProportionally(positionAssets).principal */
      mload
        /* "test/solidity/Protocol.t.sol":13601:13614  pool.positive */
      dup10
      mload
        /* "test/solidity/Protocol.t.sol":13601:13696  pool.positive - FixedLib.Position(principal, fee).scaleProportionally(positionAssets).principal */
      tag_790
      swap2
        /* "test/solidity/Protocol.t.sol":13617:13696  FixedLib.Position(principal, fee).scaleProportionally(positionAssets).principal */
      swap1
        /* "test/solidity/Protocol.t.sol":13601:13696  pool.positive - FixedLib.Position(principal, fee).scaleProportionally(positionAssets).principal */
      tag_158
      jump	// in
    tag_790:
        /* "test/solidity/Protocol.t.sol":13708:13712  pool */
      dup10
        /* "test/solidity/Protocol.t.sol":13708:13721  pool.negative */
      0x20
      add
      mload
        /* "test/solidity/Protocol.t.sol":13581:13589  Math.min */
      tag_791
        /* "test/solidity/Protocol.t.sol":13581:13731  Math.min(... */
      jump	// in
    tag_787:
        /* "test/solidity/Protocol.t.sol":13532:13570  Math.min(pool.positive, pool.negative) */
      tag_792
        /* "test/solidity/Protocol.t.sol":13541:13545  pool */
      dup10
        /* "test/solidity/Protocol.t.sol":13541:13554  pool.positive */
      0x00
      add
      mload
        /* "test/solidity/Protocol.t.sol":13556:13560  pool */
      dup11
        /* "test/solidity/Protocol.t.sol":13556:13569  pool.negative */
      0x20
      add
      mload
        /* "test/solidity/Protocol.t.sol":13532:13540  Math.min */
      tag_791
        /* "test/solidity/Protocol.t.sol":13532:13570  Math.min(pool.positive, pool.negative) */
      jump	// in
    tag_792:
        /* "test/solidity/Protocol.t.sol":13489:13496  _market */
      0x23
      0x00
      swap1
      sload
      swap1
      0x0100
      exp
      swap1
      div
      sub(shl(0xa0, 0x01), 0x01)
      and
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":13489:13519  _market.floatingBackupBorrowed */
      and
      0x8c3cba5a
        /* "test/solidity/Protocol.t.sol":13489:13521  _market.floatingBackupBorrowed() */
      mload(0x40)
      dup2
      0xffffffff
      and
      0xe0
      shl
      dup2
      mstore
      0x04
      add
      0x20
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      dup7
      gas
      staticcall
      iszero
      dup1
      iszero
      tag_794
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_794:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      dup2
      add
      swap1
      tag_795
      swap2
      swap1
      tag_212
      jump	// in
    tag_795:
        /* "test/solidity/Protocol.t.sol":13489:13570  _market.floatingBackupBorrowed() +... */
      tag_796
      swap2
      swap1
      tag_186
      jump	// in
    tag_796:
        /* "test/solidity/Protocol.t.sol":13489:13731  _market.floatingBackupBorrowed() +... */
      tag_797
      swap2
      swap1
      tag_158
      jump	// in
    tag_797:
        /* "test/solidity/Protocol.t.sol":13489:13777  _market.floatingBackupBorrowed() +... */
      tag_798
      swap2
      swap1
      tag_186
      jump	// in
    tag_798:
        /* "test/solidity/Protocol.t.sol":13489:13844  _market.floatingBackupBorrowed() +... */
      gt
        /* "test/solidity/Protocol.t.sol":13478:14593  if (... */
      iszero
      tag_799
      jumpi
        /* "test/solidity/Protocol.t.sol":13859:13914  vm.expectRevert(InsufficientProtocolLiquidity.selector) */
      mload(0x40)
      shl(0xe5, 0x0618f587)
      dup2
      mstore
      0x00
      dup1
      mload
      0x20
      data_1a390d6c2ee89e11d2dffeb86f753e43f966d02cbb0b3bd3e6e1cdf50245ef50
      dup4
      codecopy
      dup2
      mload
      swap2
      mstore
        /* "test/solidity/Protocol.t.sol":13859:13874  vm.expectRevert */
      swap1
      0xc31eb0e0
      swap1
        /* "test/solidity/Protocol.t.sol":13859:13914  vm.expectRevert(InsufficientProtocolLiquidity.selector) */
      tag_742
      swap1
      shl(0xe3, 0x2d41ad)
        /* "test/solidity/Protocol.t.sol":13875:13913  InsufficientProtocolLiquidity.selector */
      swap1
        /* "test/solidity/Protocol.t.sol":13859:13914  vm.expectRevert(InsufficientProtocolLiquidity.selector) */
      0x04
      add
      tag_216
      jump	// in
        /* "test/solidity/Protocol.t.sol":13478:14593  if (... */
    tag_799:
        /* "test/solidity/Protocol.t.sol":13972:13981  _maturity */
      sload(0x25)
        /* "test/solidity/Protocol.t.sol":13954:13969  block.timestamp */
      timestamp
        /* "test/solidity/Protocol.t.sol":13954:13981  block.timestamp < _maturity */
      lt
        /* "test/solidity/Protocol.t.sol":13954:14281  block.timestamp < _maturity... */
      tag_805
      jumpi
        /* "test/solidity/Protocol.t.sol":14267:14281  positionAssets */
      dup3
        /* "test/solidity/Protocol.t.sol":13954:14281  block.timestamp < _maturity... */
      jump(tag_807)
    tag_805:
        /* "test/solidity/Protocol.t.sol":14048:14055  _market */
      sload(0x23)
        /* "test/solidity/Protocol.t.sol":14048:14075  _market.interestRateModel() */
      0x40
      dup1
      mload
      shl(0xe1, 0x79fed8ad)
      dup2
      mstore
      swap1
      mload
        /* "test/solidity/Protocol.t.sol":13992:14256  positionAssets.divWadDown(... */
      tag_807
      swap3
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":14048:14055  _market */
      and
      swap2
        /* "test/solidity/Protocol.t.sol":14048:14073  _market.interestRateModel */
      0xf3fdb15a
      swap2
        /* "test/solidity/Protocol.t.sol":14048:14075  _market.interestRateModel() */
      0x04
      dup1
      dup4
      add
      swap3
      0x20
      swap3
      swap2
      swap1
      dup3
      swap1
      sub
      add
      dup2
        /* "test/solidity/Protocol.t.sol":14048:14055  _market */
      dup7
        /* "test/solidity/Protocol.t.sol":14048:14075  _market.interestRateModel() */
      gas
      staticcall
      iszero
      dup1
      iszero
      tag_809
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_809:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      dup2
      add
      swap1
      tag_810
      swap2
      swap1
      tag_167
      jump	// in
    tag_810:
        /* "test/solidity/Protocol.t.sol":14107:14116  _maturity */
      sload(0x25)
        /* "test/solidity/Protocol.t.sol":14162:14175  pool.negative */
      0x20
      dup10
      add
      mload
        /* "test/solidity/Protocol.t.sol":14191:14204  pool.positive */
      dup10
      mload
        /* "test/solidity/Protocol.t.sol":14048:14246  _market.interestRateModel().fixedBorrowRate(... */
      mload(0x40)
      shl(0xe0, 0xdf635f3d)
      dup2
      mstore
      0x04
      dup2
      add
        /* "#utility.yul":26888:26913   */
      swap4
      swap1
      swap4
      mstore
        /* "#utility.yul":26929:26947   */
      0x24
      dup4
      add
        /* "#utility.yul":26922:26956   */
      dup9
      swap1
      mstore
        /* "#utility.yul":26972:26990   */
      0x44
      dup4
      add
        /* "#utility.yul":26965:26999   */
      swap2
      swap1
      swap2
      mstore
        /* "#utility.yul":27015:27033   */
      0x64
      dup3
      add
        /* "#utility.yul":27008:27042   */
      mstore
        /* "#utility.yul":27058:27077   */
      0x84
      dup2
      add
        /* "#utility.yul":27051:27086   */
      dup6
      swap1
      mstore
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":14048:14091  _market.interestRateModel().fixedBorrowRate */
      swap2
      swap1
      swap2
      and
      swap1
      0xdf635f3d
      swap1
        /* "#utility.yul":26860:26879   */
      0xa4
      add
        /* "test/solidity/Protocol.t.sol":14048:14246  _market.interestRateModel().fixedBorrowRate(... */
      0x20
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      dup7
      gas
      staticcall
      iszero
      dup1
      iszero
      tag_815
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_815:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      dup2
      add
      swap1
      tag_816
      swap2
      swap1
      tag_212
      jump	// in
    tag_816:
        /* "test/solidity/Protocol.t.sol":14029:14246  1e18 +... */
      tag_817
      swap1
        /* "test/solidity/Protocol.t.sol":14029:14033  1e18 */
      0x0de0b6b3a7640000
        /* "test/solidity/Protocol.t.sol":14029:14246  1e18 +... */
      tag_186
      jump	// in
    tag_817:
        /* "test/solidity/Protocol.t.sol":13992:14006  positionAssets */
      dup5
      swap1
        /* "test/solidity/Protocol.t.sol":13992:14017  positionAssets.divWadDown */
      tag_818
        /* "test/solidity/Protocol.t.sol":13992:14256  positionAssets.divWadDown(... */
      jump	// in
    tag_807:
        /* "test/solidity/Protocol.t.sol":14312:14318  _asset */
      0x24
      dup1
      sload
        /* "test/solidity/Protocol.t.sol":14337:14344  _market */
      sload(0x23)
        /* "test/solidity/Protocol.t.sol":14312:14346  _asset.balanceOf(address(_market)) */
      mload(0x40)
      shl(0xe0, 0x70a08231)
      dup2
      mstore
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":14337:14344  _market */
      swap2
      dup3
      and
        /* "test/solidity/Protocol.t.sol":14312:14346  _asset.balanceOf(address(_market)) */
      0x04
      dup3
      add
        /* "#utility.yul":7560:7611   */
      mstore
        /* "test/solidity/Protocol.t.sol":13935:14281  assetsDiscounted = block.timestamp < _maturity... */
      swap4
      swap5
      pop
        /* "test/solidity/Protocol.t.sol":14312:14318  _asset */
      and
      swap2
        /* "test/solidity/Protocol.t.sol":14312:14328  _asset.balanceOf */
      0x70a08231
      swap2
        /* "#utility.yul":7533:7551   */
      add
        /* "test/solidity/Protocol.t.sol":14312:14346  _asset.balanceOf(address(_market)) */
      0x20
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      dup7
      gas
      staticcall
      iszero
      dup1
      iszero
      tag_821
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_821:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      dup2
      add
      swap1
      tag_822
      swap2
      swap1
      tag_212
      jump	// in
    tag_822:
        /* "test/solidity/Protocol.t.sol":14293:14309  assetsDiscounted */
      dup2
        /* "test/solidity/Protocol.t.sol":14293:14346  assetsDiscounted > _asset.balanceOf(address(_market)) */
      gt
        /* "test/solidity/Protocol.t.sol":14289:14587  if (assetsDiscounted > _asset.balanceOf(address(_market))) {... */
      iszero
      tag_823
      jumpi
        /* "test/solidity/Protocol.t.sol":14374:14383  bytes("") */
      0x40
      dup1
      mload
      0x20
      dup2
      add
      dup3
      mstore
        /* "lib/forge-std/src/Base.sol":309:346  uint256(keccak256("hevm cheat code")) */
      0x00
        /* "test/solidity/Protocol.t.sol":14374:14383  bytes("") */
      dup2
      mstore
        /* "test/solidity/Protocol.t.sol":14358:14384  vm.expectRevert(bytes("")) */
      swap1
      mload
      shl(0xe0, 0xf28dceb3)
      dup2
      mstore
      0x00
      dup1
      mload
      0x20
      data_1a390d6c2ee89e11d2dffeb86f753e43f966d02cbb0b3bd3e6e1cdf50245ef50
      dup4
      codecopy
      dup2
      mload
      swap2
      mstore
        /* "test/solidity/Protocol.t.sol":14358:14373  vm.expectRevert */
      swap2
      0xf28dceb3
      swap2
        /* "test/solidity/Protocol.t.sol":14358:14384  vm.expectRevert(bytes("")) */
      tag_742
      swap2
        /* "test/solidity/Protocol.t.sol":14374:14383  bytes("") */
      swap1
        /* "test/solidity/Protocol.t.sol":14358:14384  vm.expectRevert(bytes("")) */
      0x04
      add
      tag_599
      jump	// in
        /* "test/solidity/Protocol.t.sol":14289:14587  if (assetsDiscounted > _asset.balanceOf(address(_market))) {... */
    tag_823:
        /* "test/solidity/Protocol.t.sol":14455:14462  _market */
      sload(0x23)
        /* "test/solidity/Protocol.t.sol":14409:14464  vm.expectEmit(true, true, true, true, address(_market)) */
      mload(0x40)
      shl(0xe0, 0x81bad6f3)
      dup2
      mstore
      0x00
      dup1
      mload
      0x20
      data_1a390d6c2ee89e11d2dffeb86f753e43f966d02cbb0b3bd3e6e1cdf50245ef50
      dup4
      codecopy
      dup2
      mload
      swap2
      mstore
        /* "test/solidity/Protocol.t.sol":14409:14422  vm.expectEmit */
      swap2
      0x81bad6f3
      swap2
        /* "test/solidity/Protocol.t.sol":14409:14464  vm.expectEmit(true, true, true, true, address(_market)) */
      tag_829
      swap2
        /* "test/solidity/Protocol.t.sol":14423:14427  true */
      0x01
      swap2
      dup3
      swap2
      dup3
      swap2
      dup3
      swap2
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":14455:14462  _market */
      and
      swap1
        /* "test/solidity/Protocol.t.sol":14409:14464  vm.expectEmit(true, true, true, true, address(_market)) */
      0x04
      add
      tag_228
      jump	// in
    tag_829:
      0x00
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      0x00
      dup8
      dup1
      extcodesize
      iszero
      dup1
      iszero
      tag_830
      jumpi
      0x00
      dup1
      revert
    tag_830:
      pop
      gas
      call
      iszero
      dup1
      iszero
      tag_832
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_832:
      pop
      pop
        /* "test/solidity/Protocol.t.sol":14498:14507  _maturity */
      sload(0x25)
        /* "test/solidity/Protocol.t.sol":14479:14578  WithdrawAtMaturity(_maturity, msg.sender, msg.sender, msg.sender, positionAssets, assetsDiscounted) */
      0x40
      dup1
      mload
        /* "test/solidity/Protocol.t.sol":14533:14543  msg.sender */
      caller
        /* "#utility.yul":27299:27350   */
      dup1
      dup3
      mstore
        /* "#utility.yul":27381:27383   */
      0x20
        /* "#utility.yul":27366:27384   */
      dup3
      add
        /* "#utility.yul":27359:27393   */
      dup10
      swap1
      mstore
        /* "#utility.yul":27409:27427   */
      swap2
      dup2
      add
        /* "#utility.yul":27402:27436   */
      dup7
      swap1
      mstore
        /* "test/solidity/Protocol.t.sol":14533:14543  msg.sender */
      swap1
      swap4
      pop
      dup4
      swap3
      pop
        /* "test/solidity/Protocol.t.sol":14479:14578  WithdrawAtMaturity(_maturity, msg.sender, msg.sender, msg.sender, positionAssets, assetsDiscounted) */
      0xe57dbac0e7c42ad5f3b0fadb9c065565377cf771054fca70d35c96e01f9ec53c
      swap1
        /* "#utility.yul":27287:27289   */
      0x60
        /* "#utility.yul":27272:27290   */
      add
        /* "test/solidity/Protocol.t.sol":14479:14578  WithdrawAtMaturity(_maturity, msg.sender, msg.sender, msg.sender, positionAssets, assetsDiscounted) */
      mload(0x40)
      dup1
      swap2
      sub
      swap1
      log4
        /* "test/solidity/Protocol.t.sol":14289:14587  if (assetsDiscounted > _asset.balanceOf(address(_market))) {... */
    tag_828:
        /* "test/solidity/Protocol.t.sol":14617:14624  _market */
      sload(0x23)
        /* "test/solidity/Protocol.t.sol":14644:14653  _maturity */
      sload(0x25)
        /* "test/solidity/Protocol.t.sol":14617:14689  _market.withdrawAtMaturity(_maturity, assets, 0, msg.sender, msg.sender) */
      mload(0x40)
      shl(0xe1, 0x502d048d)
      dup2
      mstore
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":14617:14624  _market */
      swap1
      swap3
      and
      swap2
        /* "test/solidity/Protocol.t.sol":14617:14643  _market.withdrawAtMaturity */
      0xa05a091a
      swap2
        /* "test/solidity/Protocol.t.sol":14617:14689  _market.withdrawAtMaturity(_maturity, assets, 0, msg.sender, msg.sender) */
      tag_835
      swap2
        /* "test/solidity/Protocol.t.sol":14655:14661  assets */
      dup16
      swap1
        /* "test/solidity/Protocol.t.sol":14617:14624  _market */
      0x00
      swap1
        /* "test/solidity/Protocol.t.sol":14666:14676  msg.sender */
      caller
      swap1
      dup2
      swap1
        /* "test/solidity/Protocol.t.sol":14617:14689  _market.withdrawAtMaturity(_maturity, assets, 0, msg.sender, msg.sender) */
      0x04
      add
      tag_836
      jump	// in
    tag_835:
      0x20
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      0x00
      dup8
      gas
      call
      iszero
      dup1
      iszero
      tag_838
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_838:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      dup2
      add
      swap1
      tag_839
      swap2
      swap1
      tag_212
      jump	// in
    tag_839:
        /* "test/solidity/Protocol.t.sol":14598:14689  assetsDiscounted = _market.withdrawAtMaturity(_maturity, assets, 0, msg.sender, msg.sender) */
      swap1
      pop
        /* "test/solidity/Protocol.t.sol":14699:14719  assetsDiscounted > 0 */
      dup1
      iszero
        /* "test/solidity/Protocol.t.sol":14695:14762  if (assetsDiscounted > 0) _asset.burn(msg.sender, assetsDiscounted) */
      tag_840
      jumpi
        /* "test/solidity/Protocol.t.sol":14721:14727  _asset */
      sload(0x24)
        /* "test/solidity/Protocol.t.sol":14721:14762  _asset.burn(msg.sender, assetsDiscounted) */
      mload(0x40)
      shl(0xe2, 0x2770a7eb)
      dup2
      mstore
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":14721:14727  _asset */
      swap1
      swap2
      and
      swap1
        /* "test/solidity/Protocol.t.sol":14721:14732  _asset.burn */
      0x9dc29fac
      swap1
        /* "test/solidity/Protocol.t.sol":14721:14762  _asset.burn(msg.sender, assetsDiscounted) */
      tag_841
      swap1
        /* "test/solidity/Protocol.t.sol":14733:14743  msg.sender */
      caller
      swap1
        /* "test/solidity/Protocol.t.sol":14745:14761  assetsDiscounted */
      dup6
      swap1
        /* "test/solidity/Protocol.t.sol":14721:14762  _asset.burn(msg.sender, assetsDiscounted) */
      0x04
      add
      tag_345
      jump	// in
    tag_841:
      0x00
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      0x00
      dup8
      dup1
      extcodesize
      iszero
      dup1
      iszero
      tag_842
      jumpi
      0x00
      dup1
      revert
    tag_842:
      pop
      gas
      call
      iszero
      dup1
      iszero
      tag_844
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_844:
      pop
      pop
      pop
      pop
        /* "test/solidity/Protocol.t.sol":14695:14762  if (assetsDiscounted > 0) _asset.burn(msg.sender, assetsDiscounted) */
    tag_840:
        /* "test/solidity/Protocol.t.sol":12473:14767  {... */
      pop
      pop
      pop
      pop
      pop
      pop
        /* "test/solidity/Protocol.t.sol":31815:31816  _ */
      pop
      pop
      0x00
      dup1
      mload
      0x20
      data_b627c71dec38ae7fa273aa3bb9b6210fd4a76d47f44ae646db16da401b96db40
      dup4
      codecopy
      dup2
      mload
      swap2
      mstore
        /* "lib/forge-std/src/Base.sol":309:346  uint256(keccak256("hevm cheat code")) */
      0x00
      shr
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":31822:31834  vm.stopPrank */
      and
      0x90c5013b
        /* "test/solidity/Protocol.t.sol":31822:31836  vm.stopPrank() */
      mload(0x40)
      dup2
      0xffffffff
      and
      0xe0
      shl
      dup2
      mstore
      0x04
      add
      0x00
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      0x00
      dup8
      dup1
      extcodesize
      iszero
      dup1
      iszero
      tag_512
      jumpi
      0x00
      dup1
      revert
        /* "lib/forge-std/src/StdInvariant.sol":2161:2295  function excludeSenders() public view returns (address[] memory excludedSenders_) {... */
    tag_62:
        /* "lib/forge-std/src/StdInvariant.sol":2208:2241  address[] memory excludedSenders_ */
      0x60
        /* "lib/forge-std/src/StdInvariant.sol":2272:2288  _excludedSenders */
      0x0d
        /* "lib/forge-std/src/StdInvariant.sol":2253:2288  excludedSenders_ = _excludedSenders */
      dup1
      sload
      dup1
      0x20
      mul
      0x20
      add
      mload(0x40)
      swap1
      dup2
      add
      0x40
      mstore
      dup1
      swap3
      swap2
      swap1
      dup2
      dup2
      mstore
      0x20
      add
      dup3
      dup1
      sload
      dup1
      iszero
      tag_849
      jumpi
      0x20
      mul
      dup3
      add
      swap2
      swap1
      0x00
      mstore
      keccak256(0x00, 0x20)
      swap1
    tag_850:
      dup2
      sload
      sub(shl(0xa0, 0x01), 0x01)
      and
      dup2
      mstore
      0x01
      swap1
      swap2
      add
      swap1
      0x20
      add
      dup1
      dup4
      gt
      tag_850
      jumpi
    tag_849:
      pop
      pop
      pop
      pop
      pop
      swap1
      pop
        /* "lib/forge-std/src/StdInvariant.sol":2161:2295  function excludeSenders() public view returns (address[] memory excludedSenders_) {... */
      swap1
      jump	// out
        /* "test/solidity/Protocol.t.sol":30958:31065  function warp(uint32 time) external {... */
    tag_68:
      0x00
      dup1
      mload
      0x20
      data_1a390d6c2ee89e11d2dffeb86f753e43f966d02cbb0b3bd3e6e1cdf50245ef50
      dup4
      codecopy
      dup2
      mload
      swap2
      mstore
        /* "test/solidity/Protocol.t.sol":31000:31007  vm.warp */
      0xe5d6bf02
        /* "test/solidity/Protocol.t.sol":31026:31059  _bound(time, 1, type(uint32).max) */
      tag_852
      0xffffffff
      dup1
      dup6
      and
      swap1
        /* "test/solidity/Protocol.t.sol":31039:31040  1 */
      0x01
      swap1
        /* "test/solidity/Protocol.t.sol":31026:31032  _bound */
      tag_159
        /* "test/solidity/Protocol.t.sol":31026:31059  _bound(time, 1, type(uint32).max) */
      jump	// in
    tag_852:
        /* "test/solidity/Protocol.t.sol":31008:31059  block.timestamp + _bound(time, 1, type(uint32).max) */
      tag_853
      swap1
        /* "test/solidity/Protocol.t.sol":31008:31023  block.timestamp */
      timestamp
        /* "test/solidity/Protocol.t.sol":31008:31059  block.timestamp + _bound(time, 1, type(uint32).max) */
      tag_186
      jump	// in
    tag_853:
        /* "test/solidity/Protocol.t.sol":31000:31060  vm.warp(block.timestamp + _bound(time, 1, type(uint32).max)) */
      mload(0x40)
      dup3
      0xffffffff
      and
      0xe0
      shl
      dup2
      mstore
      0x04
      add
      tag_854
      swap2
        /* "#utility.yul":10439:10464   */
      dup2
      mstore
        /* "#utility.yul":10427:10429   */
      0x20
        /* "#utility.yul":10412:10430   */
      add
      swap1
        /* "#utility.yul":10284:10470   */
      jump
        /* "test/solidity/Protocol.t.sol":31000:31060  vm.warp(block.timestamp + _bound(time, 1, type(uint32).max)) */
    tag_854:
      0x00
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      0x00
      dup8
      dup1
      extcodesize
      iszero
      dup1
      iszero
      tag_855
      jumpi
      0x00
      dup1
      revert
    tag_855:
      pop
      gas
      call
      iszero
      dup1
      iszero
      tag_857
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_857:
      pop
      pop
      pop
      pop
        /* "test/solidity/Protocol.t.sol":30958:31065  function warp(uint32 time) external {... */
      pop
      jump	// out
        /* "test/solidity/Protocol.t.sol":18265:18697  function deposit(uint56 assets, bytes32 seed) external context(seed) {... */
    tag_71:
        /* "test/solidity/Protocol.t.sol":31278:31285  _market */
      sload(0x23)
        /* "test/solidity/Protocol.t.sol":18328:18332  seed */
      dup2
      swap1
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":31278:31285  _market */
      and
        /* "test/solidity/Protocol.t.sol":31270:31300  address(_market) == address(0) */
      iszero
        /* "test/solidity/Protocol.t.sol":31263:31301  assert(address(_market) == address(0)) */
      tag_860
      jumpi
      tag_860
      tag_153
      jump	// in
    tag_860:
        /* "test/solidity/Protocol.t.sol":31317:31324  markets */
      0x1c
        /* "test/solidity/Protocol.t.sol":31325:31402  _bound(uint256(keccak256(abi.encode(seed, "market"))), 0, markets.length - 1) */
      tag_861
        /* "test/solidity/Protocol.t.sol":31361:31365  seed */
      dup3
        /* "test/solidity/Protocol.t.sol":31350:31376  abi.encode(seed, "market") */
      add(0x20, mload(0x40))
      tag_155
      swap2
      swap1
      tag_156
      jump	// in
        /* "test/solidity/Protocol.t.sol":31325:31402  _bound(uint256(keccak256(abi.encode(seed, "market"))), 0, markets.length - 1) */
    tag_861:
        /* "test/solidity/Protocol.t.sol":31317:31403  markets[_bound(uint256(keccak256(abi.encode(seed, "market"))), 0, markets.length - 1)] */
      dup2
      sload
      dup2
      lt
      tag_865
      jumpi
      tag_865
      tag_162
      jump	// in
    tag_865:
      0x00
      swap2
      dup3
      mstore
      0x20
      swap2
      dup3
      swap1
      keccak256
      add
      sload
        /* "test/solidity/Protocol.t.sol":31307:31314  _market */
      0x23
        /* "test/solidity/Protocol.t.sol":31307:31403  _market = markets[_bound(uint256(keccak256(abi.encode(seed, "market"))), 0, markets.length - 1)] */
      dup1
      sload
      not(sub(shl(0xa0, 0x01), 0x01))
      and
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":31317:31403  markets[_bound(uint256(keccak256(abi.encode(seed, "market"))), 0, markets.length - 1)] */
      swap1
      swap3
      and
        /* "test/solidity/Protocol.t.sol":31307:31403  _market = markets[_bound(uint256(keccak256(abi.encode(seed, "market"))), 0, markets.length - 1)] */
      swap2
      dup3
      or
      swap1
      sstore
        /* "test/solidity/Protocol.t.sol":31436:31451  _market.asset() */
      0x40
      dup1
      mload
      shl(0xe0, 0x38d52e0f)
      dup2
      mstore
      swap1
      mload
        /* "test/solidity/Protocol.t.sol":31317:31403  markets[_bound(uint256(keccak256(abi.encode(seed, "market"))), 0, markets.length - 1)] */
      swap2
      swap3
        /* "test/solidity/Protocol.t.sol":31436:31449  _market.asset */
      0x38d52e0f
      swap3
        /* "test/solidity/Protocol.t.sol":31436:31451  _market.asset() */
      0x04
      dup1
      dup5
      add
      swap4
      dup3
      swap1
      sub
      add
      dup2
        /* "test/solidity/Protocol.t.sol":31317:31403  markets[_bound(uint256(keccak256(abi.encode(seed, "market"))), 0, markets.length - 1)] */
      dup7
        /* "test/solidity/Protocol.t.sol":31436:31451  _market.asset() */
      gas
      staticcall
      iszero
      dup1
      iszero
      tag_868
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_868:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      dup2
      add
      swap1
      tag_869
      swap2
      swap1
      tag_167
      jump	// in
    tag_869:
        /* "test/solidity/Protocol.t.sol":31409:31415  _asset */
      0x24
      0x00
        /* "test/solidity/Protocol.t.sol":31409:31453  _asset = MockERC20(address(_market.asset())) */
      0x0100
      exp
      dup2
      sload
      dup2
      sub(shl(0xa0, 0x01), 0x01)
      mul
      not
      and
      swap1
      dup4
      sub(shl(0xa0, 0x01), 0x01)
      and
      mul
      or
      swap1
      sstore
      pop
        /* "test/solidity/Protocol.t.sol":31475:31483  accounts */
      0x1d
        /* "test/solidity/Protocol.t.sol":31484:31568  _bound(uint256(keccak256(abi.encode(seed, "counterparty"))), 0, accounts.length - 1) */
      tag_870
        /* "test/solidity/Protocol.t.sol":31520:31524  seed */
      dup3
        /* "test/solidity/Protocol.t.sol":31509:31541  abi.encode(seed, "counterparty") */
      add(0x20, mload(0x40))
      tag_169
      swap2
      swap1
      tag_170
      jump	// in
        /* "test/solidity/Protocol.t.sol":31484:31568  _bound(uint256(keccak256(abi.encode(seed, "counterparty"))), 0, accounts.length - 1) */
    tag_870:
        /* "test/solidity/Protocol.t.sol":31475:31569  accounts[_bound(uint256(keccak256(abi.encode(seed, "counterparty"))), 0, accounts.length - 1)] */
      dup2
      sload
      dup2
      lt
      tag_874
      jumpi
      tag_874
      tag_162
      jump	// in
    tag_874:
      0x00
      swap2
      dup3
      mstore
      0x20
      swap2
      dup3
      swap1
      keccak256
      add
      sload
        /* "test/solidity/Protocol.t.sol":31459:31472  _counterparty */
      0x26
        /* "test/solidity/Protocol.t.sol":31459:31569  _counterparty = accounts[_bound(uint256(keccak256(abi.encode(seed, "counterparty"))), 0, accounts.length - 1)] */
      dup1
      sload
      not(sub(shl(0xa0, 0x01), 0x01))
      and
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":31475:31569  accounts[_bound(uint256(keccak256(abi.encode(seed, "counterparty"))), 0, accounts.length - 1)] */
      swap1
      swap3
      and
        /* "test/solidity/Protocol.t.sol":31459:31569  _counterparty = accounts[_bound(uint256(keccak256(abi.encode(seed, "counterparty"))), 0, accounts.length - 1)] */
      swap2
      swap1
      swap2
      or
      swap1
      sstore
        /* "test/solidity/Protocol.t.sol":31628:31658  abi.encode(seed, "collateral") */
      mload(0x40)
        /* "test/solidity/Protocol.t.sol":31595:31602  markets */
      0x1c
      swap2
        /* "test/solidity/Protocol.t.sol":31603:31684  _bound(uint256(keccak256(abi.encode(seed, "collateral"))), 0, markets.length - 1) */
      tag_876
      swap2
        /* "test/solidity/Protocol.t.sol":31628:31658  abi.encode(seed, "collateral") */
      tag_155
      swap2
        /* "test/solidity/Protocol.t.sol":31639:31643  seed */
      dup6
      swap2
        /* "test/solidity/Protocol.t.sol":31628:31658  abi.encode(seed, "collateral") */
      add
      tag_177
      jump	// in
        /* "test/solidity/Protocol.t.sol":31603:31684  _bound(uint256(keccak256(abi.encode(seed, "collateral"))), 0, markets.length - 1) */
    tag_876:
        /* "test/solidity/Protocol.t.sol":31595:31685  markets[_bound(uint256(keccak256(abi.encode(seed, "collateral"))), 0, markets.length - 1)] */
      dup2
      sload
      dup2
      lt
      tag_880
      jumpi
      tag_880
      tag_162
      jump	// in
    tag_880:
      0x00
      swap2
      dup3
      mstore
      0x20
      swap1
      swap2
      keccak256
      add
      sload
        /* "test/solidity/Protocol.t.sol":31575:31592  _collateralMarket */
      0x27
        /* "test/solidity/Protocol.t.sol":31575:31685  _collateralMarket = markets[_bound(uint256(keccak256(abi.encode(seed, "collateral"))), 0, markets.length - 1)] */
      dup1
      sload
      not(sub(shl(0xa0, 0x01), 0x01))
      and
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":31595:31685  markets[_bound(uint256(keccak256(abi.encode(seed, "collateral"))), 0, markets.length - 1)] */
      swap1
      swap3
      and
        /* "test/solidity/Protocol.t.sol":31575:31685  _collateralMarket = markets[_bound(uint256(keccak256(abi.encode(seed, "collateral"))), 0, markets.length - 1)] */
      swap2
      swap1
      swap2
      or
      swap1
      sstore
        /* "contracts/utils/FixedLib.sol":306:313  4 weeks */
      0x24ea00
        /* "test/solidity/Protocol.t.sol":31722:31757  block.timestamp % FixedLib.INTERVAL */
      tag_882
        /* "contracts/utils/FixedLib.sol":306:313  4 weeks */
      dup2
        /* "test/solidity/Protocol.t.sol":31722:31737  block.timestamp */
      timestamp
        /* "test/solidity/Protocol.t.sol":31722:31757  block.timestamp % FixedLib.INTERVAL */
      tag_183
      jump	// in
    tag_882:
        /* "test/solidity/Protocol.t.sol":31703:31758  block.timestamp - (block.timestamp % FixedLib.INTERVAL) */
      tag_883
      swap1
        /* "test/solidity/Protocol.t.sol":31703:31718  block.timestamp */
      timestamp
        /* "test/solidity/Protocol.t.sol":31703:31758  block.timestamp - (block.timestamp % FixedLib.INTERVAL) */
      tag_158
      jump	// in
    tag_883:
        /* "test/solidity/Protocol.t.sol":31703:31778  block.timestamp - (block.timestamp % FixedLib.INTERVAL) + FixedLib.INTERVAL */
      tag_884
      swap2
      swap1
      tag_186
      jump	// in
    tag_884:
        /* "test/solidity/Protocol.t.sol":31691:31700  _maturity */
      0x25
        /* "test/solidity/Protocol.t.sol":31691:31778  _maturity = block.timestamp - (block.timestamp % FixedLib.INTERVAL) + FixedLib.INTERVAL */
      sstore
        /* "test/solidity/Protocol.t.sol":31784:31809  vm.startPrank(msg.sender) */
      mload(0x40)
      shl(0xe1, 0x03223eab)
      dup2
      mstore
        /* "test/solidity/Protocol.t.sol":31798:31808  msg.sender */
      caller
        /* "test/solidity/Protocol.t.sol":31784:31809  vm.startPrank(msg.sender) */
      0x04
      dup3
      add
        /* "#utility.yul":7560:7611   */
      mstore
      0x00
      dup1
      mload
      0x20
      data_1a390d6c2ee89e11d2dffeb86f753e43f966d02cbb0b3bd3e6e1cdf50245ef50
      dup4
      codecopy
      dup2
      mload
      swap2
      mstore
        /* "test/solidity/Protocol.t.sol":31784:31797  vm.startPrank */
      swap1
      0x06447d56
      swap1
        /* "#utility.yul":7533:7551   */
      0x24
      add
        /* "test/solidity/Protocol.t.sol":31784:31809  vm.startPrank(msg.sender) */
      0x00
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      0x00
      dup8
      dup1
      extcodesize
      iszero
      dup1
      iszero
      tag_886
      jumpi
      0x00
      dup1
      revert
    tag_886:
      pop
      gas
      call
      iszero
      dup1
      iszero
      tag_888
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_888:
      pop
      pop
        /* "test/solidity/Protocol.t.sol":18365:18372  _market */
      sload(0x23)
        /* "test/solidity/Protocol.t.sol":18365:18396  _market.convertToShares(assets) */
      mload(0x40)
      shl(0xe1, 0x63737ac9)
      dup2
      mstore
        /* "#utility.yul":24226:24242   */
      0xffffffffffffff
        /* "#utility.yul":24214:24243   */
      dup8
      and
        /* "test/solidity/Protocol.t.sol":18365:18396  _market.convertToShares(assets) */
      0x04
      dup3
      add
        /* "#utility.yul":24196:24244   */
      mstore
        /* "test/solidity/Protocol.t.sol":18340:18362  uint256 expectedShares */
      0x00
      swap4
      pop
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":18365:18372  _market */
      swap1
      swap2
      and
      swap2
      pop
        /* "test/solidity/Protocol.t.sol":18365:18388  _market.convertToShares */
      0xc6e6f592
      swap1
        /* "#utility.yul":24169:24187   */
      0x24
      add
        /* "test/solidity/Protocol.t.sol":18365:18396  _market.convertToShares(assets) */
      0x20
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      dup7
      gas
      staticcall
      iszero
      dup1
      iszero
      tag_892
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_892:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      dup2
      add
      swap1
      tag_893
      swap2
      swap1
      tag_212
      jump	// in
    tag_893:
        /* "test/solidity/Protocol.t.sol":18340:18396  uint256 expectedShares = _market.convertToShares(assets) */
      swap1
      pop
        /* "test/solidity/Protocol.t.sol":18407:18421  expectedShares */
      dup1
        /* "test/solidity/Protocol.t.sol":18425:18426  0 */
      0x00
        /* "test/solidity/Protocol.t.sol":18407:18426  expectedShares == 0 */
      sub
        /* "test/solidity/Protocol.t.sol":18403:18652  if (expectedShares == 0) {... */
      tag_894
      jumpi
        /* "test/solidity/Protocol.t.sol":18452:18461  bytes("") */
      0x40
      dup1
      mload
      0x20
      dup2
      add
      dup3
      mstore
        /* "lib/forge-std/src/Base.sol":309:346  uint256(keccak256("hevm cheat code")) */
      0x00
        /* "test/solidity/Protocol.t.sol":18452:18461  bytes("") */
      dup2
      mstore
        /* "test/solidity/Protocol.t.sol":18436:18462  vm.expectRevert(bytes("")) */
      swap1
      mload
      shl(0xe0, 0xf28dceb3)
      dup2
      mstore
      0x00
      dup1
      mload
      0x20
      data_1a390d6c2ee89e11d2dffeb86f753e43f966d02cbb0b3bd3e6e1cdf50245ef50
      dup4
      codecopy
      dup2
      mload
      swap2
      mstore
        /* "test/solidity/Protocol.t.sol":18436:18451  vm.expectRevert */
      swap2
      0xf28dceb3
      swap2
        /* "test/solidity/Protocol.t.sol":18436:18462  vm.expectRevert(bytes("")) */
      tag_895
      swap2
        /* "test/solidity/Protocol.t.sol":18452:18461  bytes("") */
      swap1
        /* "test/solidity/Protocol.t.sol":18436:18462  vm.expectRevert(bytes("")) */
      0x04
      add
      tag_599
      jump	// in
    tag_895:
      0x00
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      0x00
      dup8
      dup1
      extcodesize
      iszero
      dup1
      iszero
      tag_896
      jumpi
      0x00
      dup1
      revert
    tag_896:
      pop
      gas
      call
      iszero
      dup1
      iszero
      tag_898
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_898:
      pop
      pop
      pop
      pop
        /* "test/solidity/Protocol.t.sol":18403:18652  if (expectedShares == 0) {... */
      jump(tag_899)
    tag_894:
        /* "test/solidity/Protocol.t.sol":18483:18489  _asset */
      sload(0x24)
        /* "test/solidity/Protocol.t.sol":18483:18514  _asset.mint(msg.sender, assets) */
      mload(0x40)
      shl(0xe0, 0x40c10f19)
      dup2
      mstore
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":18483:18489  _asset */
      swap1
      swap2
      and
      swap1
        /* "test/solidity/Protocol.t.sol":18483:18494  _asset.mint */
      0x40c10f19
      swap1
        /* "test/solidity/Protocol.t.sol":18483:18514  _asset.mint(msg.sender, assets) */
      tag_900
      swap1
        /* "test/solidity/Protocol.t.sol":18495:18505  msg.sender */
      caller
      swap1
        /* "test/solidity/Protocol.t.sol":18507:18513  assets */
      dup9
      swap1
        /* "test/solidity/Protocol.t.sol":18483:18514  _asset.mint(msg.sender, assets) */
      0x04
      add
      tag_497
      jump	// in
    tag_900:
      0x00
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      0x00
      dup8
      dup1
      extcodesize
      iszero
      dup1
      iszero
      tag_901
      jumpi
      0x00
      dup1
      revert
    tag_901:
      pop
      gas
      call
      iszero
      dup1
      iszero
      tag_903
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_903:
      pop
      pop
        /* "test/solidity/Protocol.t.sol":18568:18575  _market */
      sload(0x23)
        /* "test/solidity/Protocol.t.sol":18522:18577  vm.expectEmit(true, true, true, true, address(_market)) */
      mload(0x40)
      shl(0xe0, 0x81bad6f3)
      dup2
      mstore
      0x00
      dup1
      mload
      0x20
      data_1a390d6c2ee89e11d2dffeb86f753e43f966d02cbb0b3bd3e6e1cdf50245ef50
      dup4
      codecopy
      dup2
      mload
      swap2
      mstore
        /* "test/solidity/Protocol.t.sol":18522:18535  vm.expectEmit */
      swap4
      pop
      0x81bad6f3
      swap3
      pop
        /* "test/solidity/Protocol.t.sol":18522:18577  vm.expectEmit(true, true, true, true, address(_market)) */
      tag_904
      swap2
        /* "test/solidity/Protocol.t.sol":18536:18540  true */
      0x01
      swap2
      dup3
      swap2
      dup3
      swap2
      dup3
      swap2
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":18568:18575  _market */
      and
      swap1
        /* "test/solidity/Protocol.t.sol":18522:18577  vm.expectEmit(true, true, true, true, address(_market)) */
      0x04
      add
      tag_228
      jump	// in
    tag_904:
      0x00
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      0x00
      dup8
      dup1
      extcodesize
      iszero
      dup1
      iszero
      tag_905
      jumpi
      0x00
      dup1
      revert
    tag_905:
      pop
      gas
      call
      iszero
      dup1
      iszero
      tag_907
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_907:
      pop
      pop
        /* "test/solidity/Protocol.t.sol":18590:18645  Deposit(msg.sender, msg.sender, assets, expectedShares) */
      0x40
      dup1
      mload
        /* "#utility.yul":23248:23264   */
      0xffffffffffffff
        /* "#utility.yul":23236:23265   */
      dup9
      and
        /* "#utility.yul":23218:23266   */
      dup2
      mstore
        /* "#utility.yul":23297:23299   */
      0x20
        /* "#utility.yul":23282:23300   */
      dup2
      add
        /* "#utility.yul":23275:23309   */
      dup6
      swap1
      mstore
        /* "test/solidity/Protocol.t.sol":18610:18620  msg.sender */
      caller
      swap4
      pop
      dup4
      swap3
      pop
        /* "test/solidity/Protocol.t.sol":18590:18645  Deposit(msg.sender, msg.sender, assets, expectedShares) */
      0xdcbc1c05240f31ff3ad067ef1ee35ce4997762752e3a095284754544f4c709d7
      swap2
        /* "#utility.yul":23191:23209   */
      add
        /* "test/solidity/Protocol.t.sol":18590:18645  Deposit(msg.sender, msg.sender, assets, expectedShares) */
      mload(0x40)
      dup1
      swap2
      sub
      swap1
      log3
        /* "test/solidity/Protocol.t.sol":18403:18652  if (expectedShares == 0) {... */
    tag_899:
        /* "test/solidity/Protocol.t.sol":18657:18664  _market */
      sload(0x23)
        /* "test/solidity/Protocol.t.sol":18657:18692  _market.deposit(assets, msg.sender) */
      mload(0x40)
      shl(0xe0, 0x6e553f65)
      dup2
      mstore
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":18657:18664  _market */
      swap1
      swap2
      and
      swap1
        /* "test/solidity/Protocol.t.sol":18657:18672  _market.deposit */
      0x6e553f65
      swap1
        /* "test/solidity/Protocol.t.sol":18657:18692  _market.deposit(assets, msg.sender) */
      tag_909
      swap1
        /* "test/solidity/Protocol.t.sol":18673:18679  assets */
      dup8
      swap1
        /* "test/solidity/Protocol.t.sol":18681:18691  msg.sender */
      caller
      swap1
        /* "test/solidity/Protocol.t.sol":18657:18692  _market.deposit(assets, msg.sender) */
      0x04
      add
      tag_910
      jump	// in
    tag_909:
      0x20
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      0x00
      dup8
      gas
      call
      iszero
      dup1
      iszero
      tag_912
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_912:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      dup2
      add
      swap1
      tag_913
      swap2
      swap1
      tag_212
      jump	// in
    tag_913:
      pop
        /* "test/solidity/Protocol.t.sol":18334:18697  {... */
      pop
      0x00
      dup1
      mload
      0x20
      data_b627c71dec38ae7fa273aa3bb9b6210fd4a76d47f44ae646db16da401b96db40
      dup4
      codecopy
      dup2
      mload
      swap2
      mstore
        /* "lib/forge-std/src/Base.sol":309:346  uint256(keccak256("hevm cheat code")) */
      0x00
      shr
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":31822:31834  vm.stopPrank */
      and
      0x90c5013b
        /* "test/solidity/Protocol.t.sol":31822:31836  vm.stopPrank() */
      mload(0x40)
      dup2
      0xffffffff
      and
      0xe0
      shl
      dup2
      mstore
      0x04
      add
      0x00
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      0x00
      dup8
      dup1
      extcodesize
      iszero
      dup1
      iszero
      tag_512
      jumpi
      0x00
      dup1
      revert
        /* "test/solidity/Protocol.t.sol":21754:22387  function repay(uint56 assets, bytes32 seed) external context(seed) _borrow(assets, msg.sender) {... */
    tag_74:
        /* "test/solidity/Protocol.t.sol":31278:31285  _market */
      sload(0x23)
        /* "test/solidity/Protocol.t.sol":21815:21819  seed */
      dup2
      swap1
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":31278:31285  _market */
      and
        /* "test/solidity/Protocol.t.sol":31270:31300  address(_market) == address(0) */
      iszero
        /* "test/solidity/Protocol.t.sol":31263:31301  assert(address(_market) == address(0)) */
      tag_919
      jumpi
      tag_919
      tag_153
      jump	// in
    tag_919:
        /* "test/solidity/Protocol.t.sol":31317:31324  markets */
      0x1c
        /* "test/solidity/Protocol.t.sol":31325:31402  _bound(uint256(keccak256(abi.encode(seed, "market"))), 0, markets.length - 1) */
      tag_920
        /* "test/solidity/Protocol.t.sol":31361:31365  seed */
      dup3
        /* "test/solidity/Protocol.t.sol":31350:31376  abi.encode(seed, "market") */
      add(0x20, mload(0x40))
      tag_155
      swap2
      swap1
      tag_156
      jump	// in
        /* "test/solidity/Protocol.t.sol":31325:31402  _bound(uint256(keccak256(abi.encode(seed, "market"))), 0, markets.length - 1) */
    tag_920:
        /* "test/solidity/Protocol.t.sol":31317:31403  markets[_bound(uint256(keccak256(abi.encode(seed, "market"))), 0, markets.length - 1)] */
      dup2
      sload
      dup2
      lt
      tag_924
      jumpi
      tag_924
      tag_162
      jump	// in
    tag_924:
      0x00
      swap2
      dup3
      mstore
      0x20
      swap2
      dup3
      swap1
      keccak256
      add
      sload
        /* "test/solidity/Protocol.t.sol":31307:31314  _market */
      0x23
        /* "test/solidity/Protocol.t.sol":31307:31403  _market = markets[_bound(uint256(keccak256(abi.encode(seed, "market"))), 0, markets.length - 1)] */
      dup1
      sload
      not(sub(shl(0xa0, 0x01), 0x01))
      and
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":31317:31403  markets[_bound(uint256(keccak256(abi.encode(seed, "market"))), 0, markets.length - 1)] */
      swap1
      swap3
      and
        /* "test/solidity/Protocol.t.sol":31307:31403  _market = markets[_bound(uint256(keccak256(abi.encode(seed, "market"))), 0, markets.length - 1)] */
      swap2
      dup3
      or
      swap1
      sstore
        /* "test/solidity/Protocol.t.sol":31436:31451  _market.asset() */
      0x40
      dup1
      mload
      shl(0xe0, 0x38d52e0f)
      dup2
      mstore
      swap1
      mload
        /* "test/solidity/Protocol.t.sol":31317:31403  markets[_bound(uint256(keccak256(abi.encode(seed, "market"))), 0, markets.length - 1)] */
      swap2
      swap3
        /* "test/solidity/Protocol.t.sol":31436:31449  _market.asset */
      0x38d52e0f
      swap3
        /* "test/solidity/Protocol.t.sol":31436:31451  _market.asset() */
      0x04
      dup1
      dup5
      add
      swap4
      dup3
      swap1
      sub
      add
      dup2
        /* "test/solidity/Protocol.t.sol":31317:31403  markets[_bound(uint256(keccak256(abi.encode(seed, "market"))), 0, markets.length - 1)] */
      dup7
        /* "test/solidity/Protocol.t.sol":31436:31451  _market.asset() */
      gas
      staticcall
      iszero
      dup1
      iszero
      tag_927
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_927:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      dup2
      add
      swap1
      tag_928
      swap2
      swap1
      tag_167
      jump	// in
    tag_928:
        /* "test/solidity/Protocol.t.sol":31409:31415  _asset */
      0x24
      0x00
        /* "test/solidity/Protocol.t.sol":31409:31453  _asset = MockERC20(address(_market.asset())) */
      0x0100
      exp
      dup2
      sload
      dup2
      sub(shl(0xa0, 0x01), 0x01)
      mul
      not
      and
      swap1
      dup4
      sub(shl(0xa0, 0x01), 0x01)
      and
      mul
      or
      swap1
      sstore
      pop
        /* "test/solidity/Protocol.t.sol":31475:31483  accounts */
      0x1d
        /* "test/solidity/Protocol.t.sol":31484:31568  _bound(uint256(keccak256(abi.encode(seed, "counterparty"))), 0, accounts.length - 1) */
      tag_929
        /* "test/solidity/Protocol.t.sol":31520:31524  seed */
      dup3
        /* "test/solidity/Protocol.t.sol":31509:31541  abi.encode(seed, "counterparty") */
      add(0x20, mload(0x40))
      tag_169
      swap2
      swap1
      tag_170
      jump	// in
        /* "test/solidity/Protocol.t.sol":31484:31568  _bound(uint256(keccak256(abi.encode(seed, "counterparty"))), 0, accounts.length - 1) */
    tag_929:
        /* "test/solidity/Protocol.t.sol":31475:31569  accounts[_bound(uint256(keccak256(abi.encode(seed, "counterparty"))), 0, accounts.length - 1)] */
      dup2
      sload
      dup2
      lt
      tag_933
      jumpi
      tag_933
      tag_162
      jump	// in
    tag_933:
      0x00
      swap2
      dup3
      mstore
      0x20
      swap2
      dup3
      swap1
      keccak256
      add
      sload
        /* "test/solidity/Protocol.t.sol":31459:31472  _counterparty */
      0x26
        /* "test/solidity/Protocol.t.sol":31459:31569  _counterparty = accounts[_bound(uint256(keccak256(abi.encode(seed, "counterparty"))), 0, accounts.length - 1)] */
      dup1
      sload
      not(sub(shl(0xa0, 0x01), 0x01))
      and
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":31475:31569  accounts[_bound(uint256(keccak256(abi.encode(seed, "counterparty"))), 0, accounts.length - 1)] */
      swap1
      swap3
      and
        /* "test/solidity/Protocol.t.sol":31459:31569  _counterparty = accounts[_bound(uint256(keccak256(abi.encode(seed, "counterparty"))), 0, accounts.length - 1)] */
      swap2
      swap1
      swap2
      or
      swap1
      sstore
        /* "test/solidity/Protocol.t.sol":31628:31658  abi.encode(seed, "collateral") */
      mload(0x40)
        /* "test/solidity/Protocol.t.sol":31595:31602  markets */
      0x1c
      swap2
        /* "test/solidity/Protocol.t.sol":31603:31684  _bound(uint256(keccak256(abi.encode(seed, "collateral"))), 0, markets.length - 1) */
      tag_935
      swap2
        /* "test/solidity/Protocol.t.sol":31628:31658  abi.encode(seed, "collateral") */
      tag_155
      swap2
        /* "test/solidity/Protocol.t.sol":31639:31643  seed */
      dup6
      swap2
        /* "test/solidity/Protocol.t.sol":31628:31658  abi.encode(seed, "collateral") */
      add
      tag_177
      jump	// in
        /* "test/solidity/Protocol.t.sol":31603:31684  _bound(uint256(keccak256(abi.encode(seed, "collateral"))), 0, markets.length - 1) */
    tag_935:
        /* "test/solidity/Protocol.t.sol":31595:31685  markets[_bound(uint256(keccak256(abi.encode(seed, "collateral"))), 0, markets.length - 1)] */
      dup2
      sload
      dup2
      lt
      tag_939
      jumpi
      tag_939
      tag_162
      jump	// in
    tag_939:
      0x00
      swap2
      dup3
      mstore
      0x20
      swap1
      swap2
      keccak256
      add
      sload
        /* "test/solidity/Protocol.t.sol":31575:31592  _collateralMarket */
      0x27
        /* "test/solidity/Protocol.t.sol":31575:31685  _collateralMarket = markets[_bound(uint256(keccak256(abi.encode(seed, "collateral"))), 0, markets.length - 1)] */
      dup1
      sload
      not(sub(shl(0xa0, 0x01), 0x01))
      and
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":31595:31685  markets[_bound(uint256(keccak256(abi.encode(seed, "collateral"))), 0, markets.length - 1)] */
      swap1
      swap3
      and
        /* "test/solidity/Protocol.t.sol":31575:31685  _collateralMarket = markets[_bound(uint256(keccak256(abi.encode(seed, "collateral"))), 0, markets.length - 1)] */
      swap2
      swap1
      swap2
      or
      swap1
      sstore
        /* "contracts/utils/FixedLib.sol":306:313  4 weeks */
      0x24ea00
        /* "test/solidity/Protocol.t.sol":31722:31757  block.timestamp % FixedLib.INTERVAL */
      tag_941
        /* "contracts/utils/FixedLib.sol":306:313  4 weeks */
      dup2
        /* "test/solidity/Protocol.t.sol":31722:31737  block.timestamp */
      timestamp
        /* "test/solidity/Protocol.t.sol":31722:31757  block.timestamp % FixedLib.INTERVAL */
      tag_183
      jump	// in
    tag_941:
        /* "test/solidity/Protocol.t.sol":31703:31758  block.timestamp - (block.timestamp % FixedLib.INTERVAL) */
      tag_942
      swap1
        /* "test/solidity/Protocol.t.sol":31703:31718  block.timestamp */
      timestamp
        /* "test/solidity/Protocol.t.sol":31703:31758  block.timestamp - (block.timestamp % FixedLib.INTERVAL) */
      tag_158
      jump	// in
    tag_942:
        /* "test/solidity/Protocol.t.sol":31703:31778  block.timestamp - (block.timestamp % FixedLib.INTERVAL) + FixedLib.INTERVAL */
      tag_943
      swap2
      swap1
      tag_186
      jump	// in
    tag_943:
        /* "test/solidity/Protocol.t.sol":31691:31700  _maturity */
      0x25
        /* "test/solidity/Protocol.t.sol":31691:31778  _maturity = block.timestamp - (block.timestamp % FixedLib.INTERVAL) + FixedLib.INTERVAL */
      sstore
        /* "test/solidity/Protocol.t.sol":31784:31809  vm.startPrank(msg.sender) */
      mload(0x40)
      shl(0xe1, 0x03223eab)
      dup2
      mstore
        /* "test/solidity/Protocol.t.sol":31798:31808  msg.sender */
      caller
        /* "test/solidity/Protocol.t.sol":31784:31809  vm.startPrank(msg.sender) */
      0x04
      dup3
      add
        /* "#utility.yul":7560:7611   */
      mstore
      0x00
      dup1
      mload
      0x20
      data_1a390d6c2ee89e11d2dffeb86f753e43f966d02cbb0b3bd3e6e1cdf50245ef50
      dup4
      codecopy
      dup2
      mload
      swap2
      mstore
        /* "test/solidity/Protocol.t.sol":31784:31797  vm.startPrank */
      swap1
      0x06447d56
      swap1
        /* "#utility.yul":7533:7551   */
      0x24
      add
        /* "test/solidity/Protocol.t.sol":31784:31809  vm.startPrank(msg.sender) */
      0x00
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      0x00
      dup8
      dup1
      extcodesize
      iszero
      dup1
      iszero
      tag_945
      jumpi
      0x00
      dup1
      revert
    tag_945:
      pop
      gas
      call
      iszero
      dup1
      iszero
      tag_947
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_947:
      pop
      pop
      pop
      pop
        /* "test/solidity/Protocol.t.sol":21829:21835  assets */
      dup3
        /* "test/solidity/Protocol.t.sol":34237:35740  modifier _borrow(uint256 assets, address account) {... */
      0xffffffffffffff
      and
        /* "test/solidity/Protocol.t.sol":21837:21847  msg.sender */
      caller
        /* "test/solidity/Protocol.t.sol":34297:34303  assets */
      dup2
        /* "test/solidity/Protocol.t.sol":34307:34308  0 */
      0x00
        /* "test/solidity/Protocol.t.sol":34297:34308  assets != 0 */
      eq
        /* "test/solidity/Protocol.t.sol":34293:35729  if (assets != 0) {... */
      tag_949
      jumpi
        /* "test/solidity/Protocol.t.sol":34335:34345  msg.sender */
      caller
        /* "test/solidity/Protocol.t.sol":34353:34379  changePrank(address(this)) */
      tag_950
        /* "test/solidity/Protocol.t.sol":34373:34377  this */
      address
        /* "test/solidity/Protocol.t.sol":34353:34364  changePrank */
      tag_549
        /* "test/solidity/Protocol.t.sol":34353:34379  changePrank(address(this)) */
      jump	// in
    tag_950:
        /* "test/solidity/Protocol.t.sol":34397:34414  uint256 liquidity */
      0x00
        /* "test/solidity/Protocol.t.sol":34417:34464  assets.divWadUp(1e18 - _market.reserveFactor()) */
      tag_951
        /* "test/solidity/Protocol.t.sol":34440:34447  _market */
      0x23
      0x00
      swap1
      sload
      swap1
      0x0100
      exp
      swap1
      div
      sub(shl(0xa0, 0x01), 0x01)
      and
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":34440:34461  _market.reserveFactor */
      and
      0x4322b714
        /* "test/solidity/Protocol.t.sol":34440:34463  _market.reserveFactor() */
      mload(0x40)
      dup2
      0xffffffff
      and
      0xe0
      shl
      dup2
      mstore
      0x04
      add
      0x20
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      dup7
      gas
      staticcall
      iszero
      dup1
      iszero
      tag_953
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_953:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      dup2
      add
      swap1
      tag_954
      swap2
      swap1
      tag_955
      jump	// in
    tag_954:
        /* "test/solidity/Protocol.t.sol":34433:34463  1e18 - _market.reserveFactor() */
      tag_956
      swap1
        /* "test/solidity/Protocol.t.sol":34433:34437  1e18 */
      0x0de0b6b3a7640000
        /* "test/solidity/Protocol.t.sol":34433:34463  1e18 - _market.reserveFactor() */
      tag_957
      jump	// in
    tag_956:
        /* "test/solidity/Protocol.t.sol":34417:34423  assets */
      dup6
      swap1
      sub(shl(0x80, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":34417:34464  assets.divWadUp(1e18 - _market.reserveFactor()) */
      and
        /* "test/solidity/Protocol.t.sol":34417:34432  assets.divWadUp */
      tag_761
        /* "test/solidity/Protocol.t.sol":34417:34464  assets.divWadUp(1e18 - _market.reserveFactor()) */
      jump	// in
    tag_951:
        /* "test/solidity/Protocol.t.sol":34474:34480  _asset */
      sload(0x24)
        /* "test/solidity/Protocol.t.sol":34474:34511  _asset.mint(address(this), liquidity) */
      mload(0x40)
      shl(0xe0, 0x40c10f19)
      dup2
      mstore
        /* "test/solidity/Protocol.t.sol":34397:34464  uint256 liquidity = assets.divWadUp(1e18 - _market.reserveFactor()) */
      swap2
      swap3
      pop
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":34474:34480  _asset */
      and
      swap1
        /* "test/solidity/Protocol.t.sol":34474:34485  _asset.mint */
      0x40c10f19
      swap1
        /* "test/solidity/Protocol.t.sol":34474:34511  _asset.mint(address(this), liquidity) */
      tag_958
      swap1
        /* "test/solidity/Protocol.t.sol":34494:34498  this */
      address
      swap1
        /* "test/solidity/Protocol.t.sol":34397:34464  uint256 liquidity = assets.divWadUp(1e18 - _market.reserveFactor()) */
      dup6
      swap1
        /* "test/solidity/Protocol.t.sol":34474:34511  _asset.mint(address(this), liquidity) */
      0x04
      add
      tag_345
      jump	// in
    tag_958:
      0x00
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      0x00
      dup8
      dup1
      extcodesize
      iszero
      dup1
      iszero
      tag_959
      jumpi
      0x00
      dup1
      revert
    tag_959:
      pop
      gas
      call
      iszero
      dup1
      iszero
      tag_961
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_961:
      pop
      pop
        /* "test/solidity/Protocol.t.sol":34521:34528  _market */
      sload(0x23)
        /* "test/solidity/Protocol.t.sol":34521:34562  _market.deposit(liquidity, address(this)) */
      mload(0x40)
      shl(0xe0, 0x6e553f65)
      dup2
      mstore
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":34521:34528  _market */
      swap1
      swap2
      and
      swap3
      pop
        /* "test/solidity/Protocol.t.sol":34521:34536  _market.deposit */
      0x6e553f65
      swap2
      pop
        /* "test/solidity/Protocol.t.sol":34521:34562  _market.deposit(liquidity, address(this)) */
      tag_962
      swap1
        /* "test/solidity/Protocol.t.sol":34537:34546  liquidity */
      dup5
      swap1
        /* "test/solidity/Protocol.t.sol":34556:34560  this */
      address
      swap1
        /* "test/solidity/Protocol.t.sol":34521:34562  _market.deposit(liquidity, address(this)) */
      0x04
      add
      tag_555
      jump	// in
    tag_962:
      0x20
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      0x00
      dup8
      gas
      call
      iszero
      dup1
      iszero
      tag_964
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_964:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      dup2
      add
      swap1
      tag_965
      swap2
      swap1
      tag_212
      jump	// in
    tag_965:
      pop
        /* "test/solidity/Protocol.t.sol":34387:34571  {... */
      pop
        /* "test/solidity/Protocol.t.sol":34578:34598  changePrank(account) */
      tag_966
        /* "test/solidity/Protocol.t.sol":34590:34597  account */
      dup3
        /* "test/solidity/Protocol.t.sol":34578:34589  changePrank */
      tag_549
        /* "test/solidity/Protocol.t.sol":34578:34598  changePrank(account) */
      jump	// in
    tag_966:
      0x40
      dup1
      mload
      dup1
      dup3
      add
      swap1
      swap2
      mstore
      0x00
      dup1
      dup3
      mstore
      0x20
      dup3
      add
      mstore
        /* "test/solidity/Protocol.t.sol":34692:34699  auditor */
      sload(0x1b)
        /* "test/solidity/Protocol.t.sol":34692:34748  auditor.accountLiquidity(account, Market(address(0)), 0) */
      mload(0x40)
      shl(0xe0, 0x9e9d7967)
      dup2
      mstore
      sub(shl(0xa0, 0x01), 0x01)
        /* "#utility.yul":29001:29016   */
      dup6
      dup2
      and
        /* "test/solidity/Protocol.t.sol":34692:34748  auditor.accountLiquidity(account, Market(address(0)), 0) */
      0x04
      dup4
      add
        /* "#utility.yul":28983:29017   */
      mstore
        /* "test/solidity/Protocol.t.sol":34692:34699  auditor */
      0x00
        /* "#utility.yul":29033:29051   */
      0x24
      dup4
      add
        /* "#utility.yul":29026:29069   */
      dup2
      swap1
      mstore
        /* "#utility.yul":29085:29103   */
      0x44
      dup4
      add
        /* "#utility.yul":29078:29112   */
      mstore
        /* "test/solidity/Protocol.t.sol":34692:34699  auditor */
      swap1
      swap2
      and
      swap1
        /* "test/solidity/Protocol.t.sol":34692:34716  auditor.accountLiquidity */
      0x9e9d7967
      swap1
        /* "#utility.yul":28918:28936   */
      0x64
      add
        /* "test/solidity/Protocol.t.sol":34692:34748  auditor.accountLiquidity(account, Market(address(0)), 0) */
      0x40
      dup1
      mload
      dup1
      dup4
      sub
      dup2
      dup7
      gas
      staticcall
      iszero
      dup1
      iszero
      tag_971
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_971:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      dup2
      add
      swap1
      tag_972
      swap2
      swap1
      tag_203
      jump	// in
    tag_972:
        /* "test/solidity/Protocol.t.sol":34670:34688  liquidity.negative */
      0x20
      dup4
      add
        /* "test/solidity/Protocol.t.sol":34649:34748  (liquidity.positive, liquidity.negative) = auditor.accountLiquidity(account, Market(address(0)), 0) */
      mstore
      dup2
      mstore
        /* "test/solidity/Protocol.t.sol":34758:34786  Auditor.MarketData memory md */
      tag_973
      tag_974
      jump	// in
    tag_973:
        /* "test/solidity/Protocol.t.sol":34866:34873  auditor */
      sload(0x1b)
        /* "test/solidity/Protocol.t.sol":34882:34889  _market */
      sload(0x23)
        /* "test/solidity/Protocol.t.sol":34866:34890  auditor.markets(_market) */
      mload(0x40)
      shl(0xe0, 0x8e8f294b)
      dup2
      mstore
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":34882:34889  _market */
      swap2
      dup3
      and
        /* "test/solidity/Protocol.t.sol":34866:34890  auditor.markets(_market) */
      0x04
      dup3
      add
        /* "#utility.yul":7560:7611   */
      mstore
        /* "test/solidity/Protocol.t.sol":34866:34873  auditor */
      swap2
      and
      swap1
        /* "test/solidity/Protocol.t.sol":34866:34881  auditor.markets */
      0x8e8f294b
      swap1
        /* "#utility.yul":7533:7551   */
      0x24
      add
        /* "test/solidity/Protocol.t.sol":34866:34890  auditor.markets(_market) */
      0xa0
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      dup7
      gas
      staticcall
      iszero
      dup1
      iszero
      tag_977
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_977:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      dup2
      add
      swap1
      tag_978
      swap2
      swap1
      tag_198
      jump	// in
    tag_978:
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":34796:34890  (md.adjustFactor, md.decimals, md.index, md.isListed, md.priceFeed) = auditor.markets(_market) */
      swap1
      dup2
      and
        /* "test/solidity/Protocol.t.sol":34850:34862  md.priceFeed */
      0x80
      dup8
      add
        /* "test/solidity/Protocol.t.sol":34796:34890  (md.adjustFactor, md.decimals, md.index, md.isListed, md.priceFeed) = auditor.markets(_market) */
      dup2
      swap1
      mstore
      swap2
      iszero
      iszero
        /* "test/solidity/Protocol.t.sol":34837:34848  md.isListed */
      0x60
      dup8
      add
        /* "test/solidity/Protocol.t.sol":34796:34890  (md.adjustFactor, md.decimals, md.index, md.isListed, md.priceFeed) = auditor.markets(_market) */
      mstore
      0xff
      swap3
      dup4
      and
        /* "test/solidity/Protocol.t.sol":34827:34835  md.index */
      0x40
      dup1
      dup9
      add
        /* "test/solidity/Protocol.t.sol":34796:34890  (md.adjustFactor, md.decimals, md.index, md.isListed, md.priceFeed) = auditor.markets(_market) */
      swap2
      swap1
      swap2
      mstore
      swap4
      swap1
      swap3
      and
      0x20
        /* "test/solidity/Protocol.t.sol":34814:34825  md.decimals */
      dup7
      add
        /* "test/solidity/Protocol.t.sol":34796:34890  (md.adjustFactor, md.decimals, md.index, md.isListed, md.priceFeed) = auditor.markets(_market) */
      mstore
      sub(shl(0x80, 0x01), 0x01)
      swap4
      swap1
      swap4
      and
      dup1
      dup6
      mstore
        /* "test/solidity/Protocol.t.sol":35055:35062  auditor */
      sload(0x1b)
        /* "test/solidity/Protocol.t.sol":35055:35087  auditor.assetPrice(md.priceFeed) */
      swap3
      mload
      shl(0xe3, 0x1710760b)
      dup2
      mstore
      0x04
      dup2
      add
        /* "#utility.yul":7560:7611   */
      swap5
      swap1
      swap5
      mstore
      0x00
      swap4
        /* "test/solidity/Protocol.t.sol":35039:35133  assets.mulDivUp(auditor.assetPrice(md.priceFeed), 10 ** md.decimals).divWadUp(md.adjustFactor) */
      tag_979
      swap4
        /* "test/solidity/Protocol.t.sol":34796:34890  (md.adjustFactor, md.decimals, md.index, md.isListed, md.priceFeed) = auditor.markets(_market) */
      swap2
      swap3
        /* "test/solidity/Protocol.t.sol":35039:35107  assets.mulDivUp(auditor.assetPrice(md.priceFeed), 10 ** md.decimals) */
      tag_760
      swap3
        /* "test/solidity/Protocol.t.sol":35055:35062  auditor */
      and
      swap1
        /* "test/solidity/Protocol.t.sol":35055:35073  auditor.assetPrice */
      0xb883b058
      swap1
        /* "#utility.yul":7533:7551   */
      0x24
      add
        /* "test/solidity/Protocol.t.sol":35055:35087  auditor.assetPrice(md.priceFeed) */
    tag_981:
      0x20
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      dup7
      gas
      staticcall
      iszero
      dup1
      iszero
      tag_984
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_984:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      dup2
      add
      swap1
      tag_985
      swap2
      swap1
      tag_212
      jump	// in
    tag_985:
        /* "test/solidity/Protocol.t.sol":35095:35106  md.decimals */
      0x20
      dup7
      add
      mload
        /* "test/solidity/Protocol.t.sol":35089:35106  10 ** md.decimals */
      tag_986
      swap1
        /* "test/solidity/Protocol.t.sol":35089:35091  10 */
      0x0a
        /* "test/solidity/Protocol.t.sol":35089:35106  10 ** md.decimals */
      tag_987
      jump	// in
    tag_986:
        /* "test/solidity/Protocol.t.sol":35039:35045  assets */
      dup11
      swap2
        /* "test/solidity/Protocol.t.sol":35039:35107  assets.mulDivUp(auditor.assetPrice(md.priceFeed), 10 ** md.decimals) */
      swap1
        /* "test/solidity/Protocol.t.sol":35039:35054  assets.mulDivUp */
      tag_988
        /* "test/solidity/Protocol.t.sol":35039:35107  assets.mulDivUp(auditor.assetPrice(md.priceFeed), 10 ** md.decimals) */
      jump	// in
        /* "test/solidity/Protocol.t.sol":35039:35133  assets.mulDivUp(auditor.assetPrice(md.priceFeed), 10 ** md.decimals).divWadUp(md.adjustFactor) */
    tag_979:
        /* "test/solidity/Protocol.t.sol":34962:34980  liquidity.positive */
      dup4
      mload
        /* "test/solidity/Protocol.t.sol":34941:34959  liquidity.negative */
      0x20
      dup6
      add
      mload
        /* "test/solidity/Protocol.t.sol":34941:34980  liquidity.negative > liquidity.positive */
      gt
        /* "test/solidity/Protocol.t.sol":34941:35026  liquidity.negative > liquidity.positive ? liquidity.negative - liquidity.positive : 0 */
      tag_989
      jumpi
        /* "test/solidity/Protocol.t.sol":35025:35026  0 */
      0x00
        /* "test/solidity/Protocol.t.sol":34941:35026  liquidity.negative > liquidity.positive ? liquidity.negative - liquidity.positive : 0 */
      jump(tag_991)
    tag_989:
        /* "test/solidity/Protocol.t.sol":35004:35022  liquidity.positive */
      dup4
      mload
        /* "test/solidity/Protocol.t.sol":34983:35001  liquidity.negative */
      0x20
      dup6
      add
      mload
        /* "test/solidity/Protocol.t.sol":34983:35022  liquidity.negative - liquidity.positive */
      tag_991
      swap2
        /* "test/solidity/Protocol.t.sol":35004:35022  liquidity.positive */
      swap1
        /* "test/solidity/Protocol.t.sol":34983:35022  liquidity.negative - liquidity.positive */
      tag_158
      jump	// in
    tag_991:
        /* "test/solidity/Protocol.t.sol":34929:35133  (... */
      tag_992
      swap2
      swap1
      tag_186
      jump	// in
    tag_992:
        /* "test/solidity/Protocol.t.sol":35213:35220  auditor */
      sload(0x1b)
        /* "test/solidity/Protocol.t.sol":35229:35246  _collateralMarket */
      sload(0x27)
        /* "test/solidity/Protocol.t.sol":35213:35247  auditor.markets(_collateralMarket) */
      mload(0x40)
      shl(0xe0, 0x8e8f294b)
      dup2
      mstore
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":35229:35246  _collateralMarket */
      swap2
      dup3
      and
        /* "test/solidity/Protocol.t.sol":35213:35247  auditor.markets(_collateralMarket) */
      0x04
      dup3
      add
        /* "#utility.yul":7560:7611   */
      mstore
        /* "test/solidity/Protocol.t.sol":34900:35133  uint256 adjustedCollateral = (... */
      swap3
      swap4
      pop
        /* "test/solidity/Protocol.t.sol":35213:35220  auditor */
      and
      swap1
        /* "test/solidity/Protocol.t.sol":35213:35228  auditor.markets */
      0x8e8f294b
      swap1
        /* "#utility.yul":7533:7551   */
      0x24
      add
        /* "test/solidity/Protocol.t.sol":35213:35247  auditor.markets(_collateralMarket) */
      0xa0
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      dup7
      gas
      staticcall
      iszero
      dup1
      iszero
      tag_995
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_995:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      dup2
      add
      swap1
      tag_996
      swap2
      swap1
      tag_198
      jump	// in
    tag_996:
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":35143:35247  (md.adjustFactor, md.decimals, md.index, md.isListed, md.priceFeed) = auditor.markets(_collateralMarket) */
      and
        /* "test/solidity/Protocol.t.sol":35197:35209  md.priceFeed */
      0x80
      dup8
      add
        /* "test/solidity/Protocol.t.sol":35143:35247  (md.adjustFactor, md.decimals, md.index, md.isListed, md.priceFeed) = auditor.markets(_collateralMarket) */
      mstore
      iszero
      iszero
        /* "test/solidity/Protocol.t.sol":35184:35195  md.isListed */
      0x60
      dup7
      add
        /* "test/solidity/Protocol.t.sol":35143:35247  (md.adjustFactor, md.decimals, md.index, md.isListed, md.priceFeed) = auditor.markets(_collateralMarket) */
      mstore
      0xff
      swap1
      dup2
      and
        /* "test/solidity/Protocol.t.sol":35174:35182  md.index */
      0x40
      dup7
      add
        /* "test/solidity/Protocol.t.sol":35143:35247  (md.adjustFactor, md.decimals, md.index, md.isListed, md.priceFeed) = auditor.markets(_collateralMarket) */
      mstore
      and
        /* "test/solidity/Protocol.t.sol":35161:35172  md.decimals */
      0x20
      dup5
      add
        /* "test/solidity/Protocol.t.sol":35143:35247  (md.adjustFactor, md.decimals, md.index, md.isListed, md.priceFeed) = auditor.markets(_collateralMarket) */
      dup2
      swap1
      mstore
      sub(shl(0x80, 0x01), 0x01)
      swap1
      swap2
      and
      dup4
      mstore
        /* "test/solidity/Protocol.t.sol":35144:35159  md.adjustFactor */
      0x00
      swap1
        /* "test/solidity/Protocol.t.sol":35278:35414  adjustedCollateral.divWadUp(md.adjustFactor).mulDivUp(... */
      tag_997
      swap1
        /* "test/solidity/Protocol.t.sol":35343:35360  10 ** md.decimals */
      tag_998
      swap1
        /* "test/solidity/Protocol.t.sol":35343:35345  10 */
      0x0a
        /* "test/solidity/Protocol.t.sol":35343:35360  10 ** md.decimals */
      tag_987
      jump	// in
    tag_998:
        /* "test/solidity/Protocol.t.sol":35372:35379  auditor */
      sload(0x1b)
        /* "test/solidity/Protocol.t.sol":35391:35403  md.priceFeed */
      0x80
      dup7
      add
      mload
        /* "test/solidity/Protocol.t.sol":35372:35404  auditor.assetPrice(md.priceFeed) */
      mload(0x40)
      shl(0xe3, 0x1710760b)
      dup2
      mstore
      sub(shl(0xa0, 0x01), 0x01)
        /* "#utility.yul":7578:7610   */
      swap2
      dup3
      and
        /* "test/solidity/Protocol.t.sol":35372:35404  auditor.assetPrice(md.priceFeed) */
      0x04
      dup3
      add
        /* "#utility.yul":7560:7611   */
      mstore
        /* "test/solidity/Protocol.t.sol":35372:35379  auditor */
      swap2
      and
      swap1
        /* "test/solidity/Protocol.t.sol":35372:35390  auditor.assetPrice */
      0xb883b058
      swap1
        /* "#utility.yul":7533:7551   */
      0x24
      add
        /* "test/solidity/Protocol.t.sol":35372:35404  auditor.assetPrice(md.priceFeed) */
      0x20
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      dup7
      gas
      staticcall
      iszero
      dup1
      iszero
      tag_1001
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_1001:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      dup2
      add
      swap1
      tag_1002
      swap2
      swap1
      tag_212
      jump	// in
    tag_1002:
        /* "test/solidity/Protocol.t.sol":35306:35321  md.adjustFactor */
      dup6
      mload
        /* "test/solidity/Protocol.t.sol":35278:35322  adjustedCollateral.divWadUp(md.adjustFactor) */
      tag_1003
      swap1
        /* "test/solidity/Protocol.t.sol":35278:35296  adjustedCollateral */
      dup7
      swap1
      sub(shl(0x80, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":35278:35322  adjustedCollateral.divWadUp(md.adjustFactor) */
      and
        /* "test/solidity/Protocol.t.sol":35278:35305  adjustedCollateral.divWadUp */
      tag_761
        /* "test/solidity/Protocol.t.sol":35278:35322  adjustedCollateral.divWadUp(md.adjustFactor) */
      jump	// in
    tag_1003:
        /* "test/solidity/Protocol.t.sol":35278:35331  adjustedCollateral.divWadUp(md.adjustFactor).mulDivUp */
      swap2
        /* "test/solidity/Protocol.t.sol":35278:35414  adjustedCollateral.divWadUp(md.adjustFactor).mulDivUp(... */
      swap1
        /* "test/solidity/Protocol.t.sol":35278:35331  adjustedCollateral.divWadUp(md.adjustFactor).mulDivUp */
      tag_988
        /* "test/solidity/Protocol.t.sol":35278:35414  adjustedCollateral.divWadUp(md.adjustFactor).mulDivUp(... */
      jump	// in
    tag_997:
        /* "test/solidity/Protocol.t.sol":35257:35414  uint256 collateral = adjustedCollateral.divWadUp(md.adjustFactor).mulDivUp(... */
      swap1
      pop
        /* "test/solidity/Protocol.t.sol":35442:35459  _collateralMarket */
      0x27
      0x00
      swap1
      sload
      swap1
      0x0100
      exp
      swap1
      div
      sub(shl(0xa0, 0x01), 0x01)
      and
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":35442:35465  _collateralMarket.asset */
      and
      0x38d52e0f
        /* "test/solidity/Protocol.t.sol":35442:35467  _collateralMarket.asset() */
      mload(0x40)
      dup2
      0xffffffff
      and
      0xe0
      shl
      dup2
      mstore
      0x04
      add
      0x20
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      dup7
      gas
      staticcall
      iszero
      dup1
      iszero
      tag_1005
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_1005:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      dup2
      add
      swap1
      tag_1006
      swap2
      swap1
      tag_167
      jump	// in
    tag_1006:
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":35424:35474  MockERC20(address(_collateralMarket.asset())).mint */
      and
      0x40c10f19
        /* "test/solidity/Protocol.t.sol":35475:35482  account */
      dup8
        /* "test/solidity/Protocol.t.sol":35484:35494  collateral */
      dup4
        /* "test/solidity/Protocol.t.sol":35424:35495  MockERC20(address(_collateralMarket.asset())).mint(account, collateral) */
      mload(0x40)
      dup4
      0xffffffff
      and
      0xe0
      shl
      dup2
      mstore
      0x04
      add
      tag_1007
      swap3
      swap2
      swap1
      tag_345
      jump	// in
    tag_1007:
      0x00
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      0x00
      dup8
      dup1
      extcodesize
      iszero
      dup1
      iszero
      tag_1008
      jumpi
      0x00
      dup1
      revert
    tag_1008:
      pop
      gas
      call
      iszero
      dup1
      iszero
      tag_1010
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_1010:
      pop
      pop
        /* "test/solidity/Protocol.t.sol":35505:35522  _collateralMarket */
      sload(0x27)
        /* "test/solidity/Protocol.t.sol":35505:35551  _collateralMarket.deposit(collateral, account) */
      mload(0x40)
      shl(0xe0, 0x6e553f65)
      dup2
      mstore
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":35505:35522  _collateralMarket */
      swap1
      swap2
      and
      swap3
      pop
        /* "test/solidity/Protocol.t.sol":35505:35530  _collateralMarket.deposit */
      0x6e553f65
      swap2
      pop
        /* "test/solidity/Protocol.t.sol":35505:35551  _collateralMarket.deposit(collateral, account) */
      tag_1011
      swap1
        /* "test/solidity/Protocol.t.sol":35531:35541  collateral */
      dup5
      swap1
        /* "test/solidity/Protocol.t.sol":35543:35550  account */
      dup11
      swap1
        /* "test/solidity/Protocol.t.sol":35505:35551  _collateralMarket.deposit(collateral, account) */
      0x04
      add
      tag_555
      jump	// in
    tag_1011:
      0x20
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      0x00
      dup8
      gas
      call
      iszero
      dup1
      iszero
      tag_1013
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_1013:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      dup2
      add
      swap1
      tag_1014
      swap2
      swap1
      tag_212
      jump	// in
    tag_1014:
      pop
        /* "test/solidity/Protocol.t.sol":35561:35568  auditor */
      sload(0x1b)
        /* "test/solidity/Protocol.t.sol":35581:35598  _collateralMarket */
      sload(0x27)
        /* "test/solidity/Protocol.t.sol":35561:35599  auditor.enterMarket(_collateralMarket) */
      mload(0x40)
      shl(0xe0, 0x3fe5d425)
      dup2
      mstore
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":35581:35598  _collateralMarket */
      swap2
      dup3
      and
        /* "test/solidity/Protocol.t.sol":35561:35599  auditor.enterMarket(_collateralMarket) */
      0x04
      dup3
      add
        /* "#utility.yul":7560:7611   */
      mstore
        /* "test/solidity/Protocol.t.sol":35561:35568  auditor */
      swap2
      and
      swap1
        /* "test/solidity/Protocol.t.sol":35561:35580  auditor.enterMarket */
      0x3fe5d425
      swap1
        /* "#utility.yul":7533:7551   */
      0x24
      add
        /* "test/solidity/Protocol.t.sol":35561:35599  auditor.enterMarket(_collateralMarket) */
      0x00
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      0x00
      dup8
      dup1
      extcodesize
      iszero
      dup1
      iszero
      tag_1016
      jumpi
      0x00
      dup1
      revert
    tag_1016:
      pop
      gas
      call
      iszero
      dup1
      iszero
      tag_1018
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_1018:
      pop
      pop
        /* "test/solidity/Protocol.t.sol":35609:35616  _market */
      sload(0x23)
        /* "test/solidity/Protocol.t.sol":35609:35649  _market.borrow(assets, account, account) */
      mload(0x40)
      shl(0xe2, 0x35459061)
      dup2
      mstore
      0x04
      dup2
      add
        /* "#utility.yul":30936:30961   */
      dup12
      swap1
      mstore
      sub(shl(0xa0, 0x01), 0x01)
        /* "#utility.yul":31035:31050   */
      dup11
      dup2
      and
        /* "#utility.yul":31015:31033   */
      0x24
      dup4
      add
        /* "#utility.yul":31008:31051   */
      dup2
      swap1
      mstore
        /* "#utility.yul":31067:31085   */
      0x44
      dup4
      add
        /* "#utility.yul":31060:31103   */
      mstore
        /* "test/solidity/Protocol.t.sol":35609:35616  _market */
      swap1
      swap2
      and
      swap3
      pop
        /* "test/solidity/Protocol.t.sol":35609:35623  _market.borrow */
      0xd5164184
      swap2
      pop
        /* "#utility.yul":30909:30927   */
      0x64
      add
        /* "test/solidity/Protocol.t.sol":35609:35649  _market.borrow(assets, account, account) */
      0x20
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      0x00
      dup8
      gas
      call
      iszero
      dup1
      iszero
      tag_1022
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_1022:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      dup2
      add
      swap1
      tag_1023
      swap2
      swap1
      tag_212
      jump	// in
    tag_1023:
      pop
        /* "test/solidity/Protocol.t.sol":35659:35665  _asset */
      sload(0x24)
        /* "test/solidity/Protocol.t.sol":35659:35687  _asset.burn(account, assets) */
      mload(0x40)
      shl(0xe2, 0x2770a7eb)
      dup2
      mstore
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":35659:35665  _asset */
      swap1
      swap2
      and
      swap1
        /* "test/solidity/Protocol.t.sol":35659:35670  _asset.burn */
      0x9dc29fac
      swap1
        /* "test/solidity/Protocol.t.sol":35659:35687  _asset.burn(account, assets) */
      tag_1024
      swap1
        /* "test/solidity/Protocol.t.sol":35671:35678  account */
      dup10
      swap1
        /* "test/solidity/Protocol.t.sol":35680:35686  assets */
      dup12
      swap1
        /* "test/solidity/Protocol.t.sol":35659:35687  _asset.burn(account, assets) */
      0x04
      add
      tag_345
      jump	// in
    tag_1024:
      0x00
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      0x00
      dup8
      dup1
      extcodesize
      iszero
      dup1
      iszero
      tag_1025
      jumpi
      0x00
      dup1
      revert
    tag_1025:
      pop
      gas
      call
      iszero
      dup1
      iszero
      tag_1027
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_1027:
      pop
      pop
      pop
      pop
        /* "test/solidity/Protocol.t.sol":34606:35696  {... */
      pop
      pop
      pop
      pop
        /* "test/solidity/Protocol.t.sol":35703:35722  changePrank(sender) */
      tag_1028
        /* "test/solidity/Protocol.t.sol":35715:35721  sender */
      dup2
        /* "test/solidity/Protocol.t.sol":35703:35714  changePrank */
      tag_549
        /* "test/solidity/Protocol.t.sol":35703:35722  changePrank(sender) */
      jump	// in
    tag_1028:
        /* "test/solidity/Protocol.t.sol":34310:35729  {... */
      pop
        /* "test/solidity/Protocol.t.sol":34293:35729  if (assets != 0) {... */
    tag_949:
        /* "test/solidity/Protocol.t.sol":21892:21899  _market */
      sload(0x23)
        /* "test/solidity/Protocol.t.sol":21892:21920  _market.accounts(msg.sender) */
      mload(0x40)
      shl(0xe1, 0x2f2e0371)
      dup2
      mstore
        /* "test/solidity/Protocol.t.sol":21909:21919  msg.sender */
      caller
        /* "test/solidity/Protocol.t.sol":21892:21920  _market.accounts(msg.sender) */
      0x04
      dup3
      add
        /* "#utility.yul":7560:7611   */
      mstore
        /* "test/solidity/Protocol.t.sol":21860:21888  uint256 floatingBorrowShares */
      0x00
      swap2
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":21892:21899  _market */
      and
      swap1
        /* "test/solidity/Protocol.t.sol":21892:21908  _market.accounts */
      0x5e5c06e2
      swap1
        /* "#utility.yul":7533:7551   */
      0x24
      add
        /* "test/solidity/Protocol.t.sol":21892:21920  _market.accounts(msg.sender) */
      0x60
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      dup7
      gas
      staticcall
      iszero
      dup1
      iszero
      tag_1032
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_1032:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      dup2
      add
      swap1
      tag_1033
      swap2
      swap1
      tag_1034
      jump	// in
    tag_1033:
        /* "test/solidity/Protocol.t.sol":21958:21965  _market */
      sload(0x23)
        /* "test/solidity/Protocol.t.sol":21958:21986  _market.previewRepay(assets) */
      mload(0x40)
      shl(0xe1, 0x5fb91651)
      dup2
      mstore
        /* "#utility.yul":24226:24242   */
      0xffffffffffffff
        /* "#utility.yul":24214:24243   */
      dup12
      and
        /* "test/solidity/Protocol.t.sol":21958:21986  _market.previewRepay(assets) */
      0x04
      dup3
      add
        /* "#utility.yul":24196:24244   */
      mstore
        /* "test/solidity/Protocol.t.sol":21855:21920  (, , uint256 floatingBorrowShares) = _market.accounts(msg.sender) */
      swap2
      swap5
      pop
        /* "test/solidity/Protocol.t.sol":21926:21946  uint256 borrowShares */
      0x00
      swap4
      pop
        /* "test/solidity/Protocol.t.sol":21949:22009  Math.min(_market.previewRepay(assets), floatingBorrowShares) */
      tag_1035
      swap3
      pop
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":21958:21965  _market */
      and
      swap1
        /* "test/solidity/Protocol.t.sol":21958:21978  _market.previewRepay */
      0xbf722ca2
      swap1
        /* "#utility.yul":24169:24187   */
      0x24
      add
        /* "test/solidity/Protocol.t.sol":21958:21986  _market.previewRepay(assets) */
      0x20
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      dup7
      gas
      staticcall
      iszero
      dup1
      iszero
      tag_1038
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_1038:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      dup2
      add
      swap1
      tag_1039
      swap2
      swap1
      tag_212
      jump	// in
    tag_1039:
        /* "test/solidity/Protocol.t.sol":21988:22008  floatingBorrowShares */
      dup4
        /* "test/solidity/Protocol.t.sol":21949:21957  Math.min */
      tag_791
        /* "test/solidity/Protocol.t.sol":21949:22009  Math.min(_market.previewRepay(assets), floatingBorrowShares) */
      jump	// in
    tag_1035:
        /* "test/solidity/Protocol.t.sol":22038:22045  _market */
      sload(0x23)
        /* "test/solidity/Protocol.t.sol":22038:22073  _market.previewRefund(borrowShares) */
      mload(0x40)
      shl(0xe5, 0x023effef)
      dup2
      mstore
      0x04
      dup2
      add
        /* "#utility.yul":10439:10464   */
      dup4
      swap1
      mstore
        /* "test/solidity/Protocol.t.sol":21926:22009  uint256 borrowShares = Math.min(_market.previewRepay(assets), floatingBorrowShares) */
      swap2
      swap3
      pop
        /* "test/solidity/Protocol.t.sol":22015:22035  uint256 refundAssets */
      0x00
      swap2
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":22038:22045  _market */
      swap1
      swap2
      and
      swap1
        /* "test/solidity/Protocol.t.sol":22038:22059  _market.previewRefund */
      0x47dffde0
      swap1
        /* "#utility.yul":10412:10430   */
      0x24
      add
        /* "test/solidity/Protocol.t.sol":22038:22073  _market.previewRefund(borrowShares) */
      0x20
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      dup7
      gas
      staticcall
      iszero
      dup1
      iszero
      tag_1042
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_1042:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      dup2
      add
      swap1
      tag_1043
      swap2
      swap1
      tag_212
      jump	// in
    tag_1043:
        /* "test/solidity/Protocol.t.sol":22015:22073  uint256 refundAssets = _market.previewRefund(borrowShares) */
      swap1
      pop
        /* "test/solidity/Protocol.t.sol":22084:22096  refundAssets */
      dup1
        /* "test/solidity/Protocol.t.sol":22100:22101  0 */
      0x00
        /* "test/solidity/Protocol.t.sol":22084:22101  refundAssets == 0 */
      sub
        /* "test/solidity/Protocol.t.sol":22080:22344  if (refundAssets == 0) {... */
      tag_1044
      jumpi
        /* "test/solidity/Protocol.t.sol":22111:22146  vm.expectRevert(ZeroRepay.selector) */
      mload(0x40)
      shl(0xe5, 0x0618f587)
      dup2
      mstore
      0x00
      dup1
      mload
      0x20
      data_1a390d6c2ee89e11d2dffeb86f753e43f966d02cbb0b3bd3e6e1cdf50245ef50
      dup4
      codecopy
      dup2
      mload
      swap2
      mstore
        /* "test/solidity/Protocol.t.sol":22111:22126  vm.expectRevert */
      swap1
      0xc31eb0e0
      swap1
        /* "test/solidity/Protocol.t.sol":22111:22146  vm.expectRevert(ZeroRepay.selector) */
      tag_1045
      swap1
      shl(0xe0, 0x685e9235)
        /* "test/solidity/Protocol.t.sol":22127:22145  ZeroRepay.selector */
      swap1
        /* "test/solidity/Protocol.t.sol":22111:22146  vm.expectRevert(ZeroRepay.selector) */
      0x04
      add
      tag_216
      jump	// in
    tag_1045:
      0x00
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      0x00
      dup8
      dup1
      extcodesize
      iszero
      dup1
      iszero
      tag_1046
      jumpi
      0x00
      dup1
      revert
    tag_1046:
      pop
      gas
      call
      iszero
      dup1
      iszero
      tag_1048
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_1048:
      pop
      pop
      pop
      pop
        /* "test/solidity/Protocol.t.sol":22080:22344  if (refundAssets == 0) {... */
      jump(tag_1049)
    tag_1044:
        /* "test/solidity/Protocol.t.sol":22167:22173  _asset */
      sload(0x24)
        /* "test/solidity/Protocol.t.sol":22167:22204  _asset.mint(msg.sender, refundAssets) */
      mload(0x40)
      shl(0xe0, 0x40c10f19)
      dup2
      mstore
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":22167:22173  _asset */
      swap1
      swap2
      and
      swap1
        /* "test/solidity/Protocol.t.sol":22167:22178  _asset.mint */
      0x40c10f19
      swap1
        /* "test/solidity/Protocol.t.sol":22167:22204  _asset.mint(msg.sender, refundAssets) */
      tag_1050
      swap1
        /* "test/solidity/Protocol.t.sol":22179:22189  msg.sender */
      caller
      swap1
        /* "test/solidity/Protocol.t.sol":22191:22203  refundAssets */
      dup6
      swap1
        /* "test/solidity/Protocol.t.sol":22167:22204  _asset.mint(msg.sender, refundAssets) */
      0x04
      add
      tag_345
      jump	// in
    tag_1050:
      0x00
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      0x00
      dup8
      dup1
      extcodesize
      iszero
      dup1
      iszero
      tag_1051
      jumpi
      0x00
      dup1
      revert
    tag_1051:
      pop
      gas
      call
      iszero
      dup1
      iszero
      tag_1053
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_1053:
      pop
      pop
        /* "test/solidity/Protocol.t.sol":22258:22265  _market */
      sload(0x23)
        /* "test/solidity/Protocol.t.sol":22212:22267  vm.expectEmit(true, true, true, true, address(_market)) */
      mload(0x40)
      shl(0xe0, 0x81bad6f3)
      dup2
      mstore
      0x00
      dup1
      mload
      0x20
      data_1a390d6c2ee89e11d2dffeb86f753e43f966d02cbb0b3bd3e6e1cdf50245ef50
      dup4
      codecopy
      dup2
      mload
      swap2
      mstore
        /* "test/solidity/Protocol.t.sol":22212:22225  vm.expectEmit */
      swap4
      pop
      0x81bad6f3
      swap3
      pop
        /* "test/solidity/Protocol.t.sol":22212:22267  vm.expectEmit(true, true, true, true, address(_market)) */
      tag_1054
      swap2
        /* "test/solidity/Protocol.t.sol":22226:22230  true */
      0x01
      swap2
      dup3
      swap2
      dup3
      swap2
      dup3
      swap2
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":22258:22265  _market */
      and
      swap1
        /* "test/solidity/Protocol.t.sol":22212:22267  vm.expectEmit(true, true, true, true, address(_market)) */
      0x04
      add
      tag_228
      jump	// in
    tag_1054:
      0x00
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      0x00
      dup8
      dup1
      extcodesize
      iszero
      dup1
      iszero
      tag_1055
      jumpi
      0x00
      dup1
      revert
    tag_1055:
      pop
      gas
      call
      iszero
      dup1
      iszero
      tag_1057
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_1057:
      pop
      pop
        /* "test/solidity/Protocol.t.sol":22280:22337  Repay(msg.sender, msg.sender, refundAssets, borrowShares) */
      0x40
      dup1
      mload
        /* "#utility.yul":31599:31624   */
      dup5
      dup2
      mstore
        /* "#utility.yul":31655:31657   */
      0x20
        /* "#utility.yul":31640:31658   */
      dup2
      add
        /* "#utility.yul":31633:31667   */
      dup7
      swap1
      mstore
        /* "test/solidity/Protocol.t.sol":22298:22308  msg.sender */
      caller
      swap4
      pop
      dup4
      swap3
      pop
        /* "test/solidity/Protocol.t.sol":22280:22337  Repay(msg.sender, msg.sender, refundAssets, borrowShares) */
      0xe4a1ae657f49cb1fb1c7d3a94ae6093565c4c8c0e03de488f79c377c3c3a24e0
      swap2
        /* "#utility.yul":31572:31590   */
      add
        /* "test/solidity/Protocol.t.sol":22280:22337  Repay(msg.sender, msg.sender, refundAssets, borrowShares) */
      mload(0x40)
      dup1
      swap2
      sub
      swap1
      log3
        /* "test/solidity/Protocol.t.sol":22080:22344  if (refundAssets == 0) {... */
    tag_1049:
        /* "test/solidity/Protocol.t.sol":22349:22356  _market */
      sload(0x23)
        /* "test/solidity/Protocol.t.sol":22349:22382  _market.repay(assets, msg.sender) */
      mload(0x40)
      shl(0xe0, 0xacb70815)
      dup2
      mstore
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":22349:22356  _market */
      swap1
      swap2
      and
      swap1
        /* "test/solidity/Protocol.t.sol":22349:22362  _market.repay */
      0xacb70815
      swap1
        /* "test/solidity/Protocol.t.sol":22349:22382  _market.repay(assets, msg.sender) */
      tag_1060
      swap1
        /* "test/solidity/Protocol.t.sol":22363:22369  assets */
      dup12
      swap1
        /* "test/solidity/Protocol.t.sol":22371:22381  msg.sender */
      caller
      swap1
        /* "test/solidity/Protocol.t.sol":22349:22382  _market.repay(assets, msg.sender) */
      0x04
      add
      tag_910
      jump	// in
    tag_1060:
      0x40
      dup1
      mload
      dup1
      dup4
      sub
      dup2
      0x00
      dup8
      gas
      call
      iszero
      dup1
      iszero
      tag_1062
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_1062:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      dup2
      add
      swap1
      tag_671
      swap2
      swap1
      tag_203
      jump	// in
        /* "test/solidity/Protocol.t.sol":10714:11001  function invariantTotalSupply() external {... */
    tag_76:
        /* "test/solidity/Protocol.t.sol":10766:10772  uint i */
      0x00
        /* "test/solidity/Protocol.t.sol":10761:10997  for (uint i = 0; i < markets.length; ++i) {... */
    tag_1068:
        /* "test/solidity/Protocol.t.sol":10782:10789  markets */
      0x1c
        /* "test/solidity/Protocol.t.sol":10782:10796  markets.length */
      sload
        /* "test/solidity/Protocol.t.sol":10778:10796  i < markets.length */
      dup2
      lt
        /* "test/solidity/Protocol.t.sol":10761:10997  for (uint i = 0; i < markets.length; ++i) {... */
      iszero
      tag_1069
      jumpi
        /* "test/solidity/Protocol.t.sol":10811:10824  Market market */
      0x00
        /* "test/solidity/Protocol.t.sol":10827:10834  markets */
      0x1c
        /* "test/solidity/Protocol.t.sol":10835:10836  i */
      dup3
        /* "test/solidity/Protocol.t.sol":10827:10837  markets[i] */
      dup2
      sload
      dup2
      lt
      tag_1072
      jumpi
      tag_1072
      tag_162
      jump	// in
    tag_1072:
      0x00
      swap2
      dup3
      mstore
      0x20
      dup3
      keccak256
      add
      sload
      sub(shl(0xa0, 0x01), 0x01)
      and
      swap2
      pop
      dup1
        /* "test/solidity/Protocol.t.sol":10868:10947  for (uint j = 0; j < accounts.length; ++j) sum += market.balanceOf(accounts[j]) */
    tag_1074:
        /* "test/solidity/Protocol.t.sol":10889:10897  accounts */
      0x1d
        /* "test/solidity/Protocol.t.sol":10889:10904  accounts.length */
      sload
        /* "test/solidity/Protocol.t.sol":10885:10904  j < accounts.length */
      dup2
      lt
        /* "test/solidity/Protocol.t.sol":10868:10947  for (uint j = 0; j < accounts.length; ++j) sum += market.balanceOf(accounts[j]) */
      iszero
      tag_1075
      jumpi
        /* "test/solidity/Protocol.t.sol":10918:10924  market */
      dup3
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":10918:10934  market.balanceOf */
      and
      0x70a08231
        /* "test/solidity/Protocol.t.sol":10935:10943  accounts */
      0x1d
        /* "test/solidity/Protocol.t.sol":10944:10945  j */
      dup4
        /* "test/solidity/Protocol.t.sol":10935:10946  accounts[j] */
      dup2
      sload
      dup2
      lt
      tag_1078
      jumpi
      tag_1078
      tag_162
      jump	// in
    tag_1078:
      0x00
      swap2
      dup3
      mstore
      0x20
      swap1
      swap2
      keccak256
      add
      sload
        /* "test/solidity/Protocol.t.sol":10918:10947  market.balanceOf(accounts[j]) */
      mload(0x40)
      0xe0
      dup4
      swap1
      shl
      not(sub(shl(0xe0, 0x01), 0x01))
      and
      dup2
      mstore
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":10935:10946  accounts[j] */
      swap1
      swap2
      and
        /* "test/solidity/Protocol.t.sol":10918:10947  market.balanceOf(accounts[j]) */
      0x04
      dup3
      add
        /* "#utility.yul":7560:7611   */
      mstore
        /* "#utility.yul":7533:7551   */
      0x24
      add
        /* "test/solidity/Protocol.t.sol":10918:10947  market.balanceOf(accounts[j]) */
      0x20
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      dup7
      gas
      staticcall
      iszero
      dup1
      iszero
      tag_1082
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_1082:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      dup2
      add
      swap1
      tag_1083
      swap2
      swap1
      tag_212
      jump	// in
    tag_1083:
        /* "test/solidity/Protocol.t.sol":10911:10947  sum += market.balanceOf(accounts[j]) */
      tag_1084
      swap1
      dup4
      tag_186
      jump	// in
    tag_1084:
      swap2
      pop
        /* "test/solidity/Protocol.t.sol":10906:10909  ++j */
      tag_1085
      dup2
      tag_293
      jump	// in
    tag_1085:
      swap1
      pop
        /* "test/solidity/Protocol.t.sol":10868:10947  for (uint j = 0; j < accounts.length; ++j) sum += market.balanceOf(accounts[j]) */
      jump(tag_1074)
    tag_1075:
      pop
        /* "test/solidity/Protocol.t.sol":10955:10990  assertEq(sum, market.totalSupply()) */
      tag_1086
        /* "test/solidity/Protocol.t.sol":10964:10967  sum */
      dup2
        /* "test/solidity/Protocol.t.sol":10969:10975  market */
      dup4
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":10969:10987  market.totalSupply */
      and
      0x18160ddd
        /* "test/solidity/Protocol.t.sol":10969:10989  market.totalSupply() */
      mload(0x40)
      dup2
      0xffffffff
      and
      0xe0
      shl
      dup2
      mstore
      0x04
      add
      0x20
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      dup7
      gas
      staticcall
      iszero
      dup1
      iszero
      tag_240
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
        /* "test/solidity/Protocol.t.sol":10955:10990  assertEq(sum, market.totalSupply()) */
    tag_1086:
        /* "test/solidity/Protocol.t.sol":10803:10997  {... */
      pop
      pop
        /* "test/solidity/Protocol.t.sol":10798:10801  ++i */
      dup1
      tag_1090
      swap1
      tag_293
      jump	// in
    tag_1090:
      swap1
      pop
        /* "test/solidity/Protocol.t.sol":10761:10997  for (uint i = 0; i < markets.length; ++i) {... */
      jump(tag_1068)
    tag_1069:
      pop
        /* "test/solidity/Protocol.t.sol":10714:11001  function invariantTotalSupply() external {... */
      jump	// out
        /* "test/solidity/Protocol.t.sol":24680:26527  function redeem(... */
    tag_79:
        /* "test/solidity/Protocol.t.sol":31278:31285  _market */
      sload(0x23)
        /* "test/solidity/Protocol.t.sol":24754:24758  seed */
      dup2
      swap1
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":31278:31285  _market */
      and
        /* "test/solidity/Protocol.t.sol":31270:31300  address(_market) == address(0) */
      iszero
        /* "test/solidity/Protocol.t.sol":31263:31301  assert(address(_market) == address(0)) */
      tag_1093
      jumpi
      tag_1093
      tag_153
      jump	// in
    tag_1093:
        /* "test/solidity/Protocol.t.sol":31317:31324  markets */
      0x1c
        /* "test/solidity/Protocol.t.sol":31325:31402  _bound(uint256(keccak256(abi.encode(seed, "market"))), 0, markets.length - 1) */
      tag_1094
        /* "test/solidity/Protocol.t.sol":31361:31365  seed */
      dup3
        /* "test/solidity/Protocol.t.sol":31350:31376  abi.encode(seed, "market") */
      add(0x20, mload(0x40))
      tag_155
      swap2
      swap1
      tag_156
      jump	// in
        /* "test/solidity/Protocol.t.sol":31325:31402  _bound(uint256(keccak256(abi.encode(seed, "market"))), 0, markets.length - 1) */
    tag_1094:
        /* "test/solidity/Protocol.t.sol":31317:31403  markets[_bound(uint256(keccak256(abi.encode(seed, "market"))), 0, markets.length - 1)] */
      dup2
      sload
      dup2
      lt
      tag_1098
      jumpi
      tag_1098
      tag_162
      jump	// in
    tag_1098:
      0x00
      swap2
      dup3
      mstore
      0x20
      swap2
      dup3
      swap1
      keccak256
      add
      sload
        /* "test/solidity/Protocol.t.sol":31307:31314  _market */
      0x23
        /* "test/solidity/Protocol.t.sol":31307:31403  _market = markets[_bound(uint256(keccak256(abi.encode(seed, "market"))), 0, markets.length - 1)] */
      dup1
      sload
      not(sub(shl(0xa0, 0x01), 0x01))
      and
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":31317:31403  markets[_bound(uint256(keccak256(abi.encode(seed, "market"))), 0, markets.length - 1)] */
      swap1
      swap3
      and
        /* "test/solidity/Protocol.t.sol":31307:31403  _market = markets[_bound(uint256(keccak256(abi.encode(seed, "market"))), 0, markets.length - 1)] */
      swap2
      dup3
      or
      swap1
      sstore
        /* "test/solidity/Protocol.t.sol":31436:31451  _market.asset() */
      0x40
      dup1
      mload
      shl(0xe0, 0x38d52e0f)
      dup2
      mstore
      swap1
      mload
        /* "test/solidity/Protocol.t.sol":31317:31403  markets[_bound(uint256(keccak256(abi.encode(seed, "market"))), 0, markets.length - 1)] */
      swap2
      swap3
        /* "test/solidity/Protocol.t.sol":31436:31449  _market.asset */
      0x38d52e0f
      swap3
        /* "test/solidity/Protocol.t.sol":31436:31451  _market.asset() */
      0x04
      dup1
      dup5
      add
      swap4
      dup3
      swap1
      sub
      add
      dup2
        /* "test/solidity/Protocol.t.sol":31317:31403  markets[_bound(uint256(keccak256(abi.encode(seed, "market"))), 0, markets.length - 1)] */
      dup7
        /* "test/solidity/Protocol.t.sol":31436:31451  _market.asset() */
      gas
      staticcall
      iszero
      dup1
      iszero
      tag_1101
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_1101:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      dup2
      add
      swap1
      tag_1102
      swap2
      swap1
      tag_167
      jump	// in
    tag_1102:
        /* "test/solidity/Protocol.t.sol":31409:31415  _asset */
      0x24
      0x00
        /* "test/solidity/Protocol.t.sol":31409:31453  _asset = MockERC20(address(_market.asset())) */
      0x0100
      exp
      dup2
      sload
      dup2
      sub(shl(0xa0, 0x01), 0x01)
      mul
      not
      and
      swap1
      dup4
      sub(shl(0xa0, 0x01), 0x01)
      and
      mul
      or
      swap1
      sstore
      pop
        /* "test/solidity/Protocol.t.sol":31475:31483  accounts */
      0x1d
        /* "test/solidity/Protocol.t.sol":31484:31568  _bound(uint256(keccak256(abi.encode(seed, "counterparty"))), 0, accounts.length - 1) */
      tag_1103
        /* "test/solidity/Protocol.t.sol":31520:31524  seed */
      dup3
        /* "test/solidity/Protocol.t.sol":31509:31541  abi.encode(seed, "counterparty") */
      add(0x20, mload(0x40))
      tag_169
      swap2
      swap1
      tag_170
      jump	// in
        /* "test/solidity/Protocol.t.sol":31484:31568  _bound(uint256(keccak256(abi.encode(seed, "counterparty"))), 0, accounts.length - 1) */
    tag_1103:
        /* "test/solidity/Protocol.t.sol":31475:31569  accounts[_bound(uint256(keccak256(abi.encode(seed, "counterparty"))), 0, accounts.length - 1)] */
      dup2
      sload
      dup2
      lt
      tag_1107
      jumpi
      tag_1107
      tag_162
      jump	// in
    tag_1107:
      0x00
      swap2
      dup3
      mstore
      0x20
      swap2
      dup3
      swap1
      keccak256
      add
      sload
        /* "test/solidity/Protocol.t.sol":31459:31472  _counterparty */
      0x26
        /* "test/solidity/Protocol.t.sol":31459:31569  _counterparty = accounts[_bound(uint256(keccak256(abi.encode(seed, "counterparty"))), 0, accounts.length - 1)] */
      dup1
      sload
      not(sub(shl(0xa0, 0x01), 0x01))
      and
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":31475:31569  accounts[_bound(uint256(keccak256(abi.encode(seed, "counterparty"))), 0, accounts.length - 1)] */
      swap1
      swap3
      and
        /* "test/solidity/Protocol.t.sol":31459:31569  _counterparty = accounts[_bound(uint256(keccak256(abi.encode(seed, "counterparty"))), 0, accounts.length - 1)] */
      swap2
      swap1
      swap2
      or
      swap1
      sstore
        /* "test/solidity/Protocol.t.sol":31628:31658  abi.encode(seed, "collateral") */
      mload(0x40)
        /* "test/solidity/Protocol.t.sol":31595:31602  markets */
      0x1c
      swap2
        /* "test/solidity/Protocol.t.sol":31603:31684  _bound(uint256(keccak256(abi.encode(seed, "collateral"))), 0, markets.length - 1) */
      tag_1109
      swap2
        /* "test/solidity/Protocol.t.sol":31628:31658  abi.encode(seed, "collateral") */
      tag_155
      swap2
        /* "test/solidity/Protocol.t.sol":31639:31643  seed */
      dup6
      swap2
        /* "test/solidity/Protocol.t.sol":31628:31658  abi.encode(seed, "collateral") */
      add
      tag_177
      jump	// in
        /* "test/solidity/Protocol.t.sol":31603:31684  _bound(uint256(keccak256(abi.encode(seed, "collateral"))), 0, markets.length - 1) */
    tag_1109:
        /* "test/solidity/Protocol.t.sol":31595:31685  markets[_bound(uint256(keccak256(abi.encode(seed, "collateral"))), 0, markets.length - 1)] */
      dup2
      sload
      dup2
      lt
      tag_1113
      jumpi
      tag_1113
      tag_162
      jump	// in
    tag_1113:
      0x00
      swap2
      dup3
      mstore
      0x20
      swap1
      swap2
      keccak256
      add
      sload
        /* "test/solidity/Protocol.t.sol":31575:31592  _collateralMarket */
      0x27
        /* "test/solidity/Protocol.t.sol":31575:31685  _collateralMarket = markets[_bound(uint256(keccak256(abi.encode(seed, "collateral"))), 0, markets.length - 1)] */
      dup1
      sload
      not(sub(shl(0xa0, 0x01), 0x01))
      and
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":31595:31685  markets[_bound(uint256(keccak256(abi.encode(seed, "collateral"))), 0, markets.length - 1)] */
      swap1
      swap3
      and
        /* "test/solidity/Protocol.t.sol":31575:31685  _collateralMarket = markets[_bound(uint256(keccak256(abi.encode(seed, "collateral"))), 0, markets.length - 1)] */
      swap2
      swap1
      swap2
      or
      swap1
      sstore
        /* "contracts/utils/FixedLib.sol":306:313  4 weeks */
      0x24ea00
        /* "test/solidity/Protocol.t.sol":31722:31757  block.timestamp % FixedLib.INTERVAL */
      tag_1115
        /* "contracts/utils/FixedLib.sol":306:313  4 weeks */
      dup2
        /* "test/solidity/Protocol.t.sol":31722:31737  block.timestamp */
      timestamp
        /* "test/solidity/Protocol.t.sol":31722:31757  block.timestamp % FixedLib.INTERVAL */
      tag_183
      jump	// in
    tag_1115:
        /* "test/solidity/Protocol.t.sol":31703:31758  block.timestamp - (block.timestamp % FixedLib.INTERVAL) */
      tag_1116
      swap1
        /* "test/solidity/Protocol.t.sol":31703:31718  block.timestamp */
      timestamp
        /* "test/solidity/Protocol.t.sol":31703:31758  block.timestamp - (block.timestamp % FixedLib.INTERVAL) */
      tag_158
      jump	// in
    tag_1116:
        /* "test/solidity/Protocol.t.sol":31703:31778  block.timestamp - (block.timestamp % FixedLib.INTERVAL) + FixedLib.INTERVAL */
      tag_1117
      swap2
      swap1
      tag_186
      jump	// in
    tag_1117:
        /* "test/solidity/Protocol.t.sol":31691:31700  _maturity */
      0x25
        /* "test/solidity/Protocol.t.sol":31691:31778  _maturity = block.timestamp - (block.timestamp % FixedLib.INTERVAL) + FixedLib.INTERVAL */
      sstore
        /* "test/solidity/Protocol.t.sol":31784:31809  vm.startPrank(msg.sender) */
      mload(0x40)
      shl(0xe1, 0x03223eab)
      dup2
      mstore
        /* "test/solidity/Protocol.t.sol":31798:31808  msg.sender */
      caller
        /* "test/solidity/Protocol.t.sol":31784:31809  vm.startPrank(msg.sender) */
      0x04
      dup3
      add
        /* "#utility.yul":7560:7611   */
      mstore
      0x00
      dup1
      mload
      0x20
      data_1a390d6c2ee89e11d2dffeb86f753e43f966d02cbb0b3bd3e6e1cdf50245ef50
      dup4
      codecopy
      dup2
      mload
      swap2
      mstore
        /* "test/solidity/Protocol.t.sol":31784:31797  vm.startPrank */
      swap1
      0x06447d56
      swap1
        /* "#utility.yul":7533:7551   */
      0x24
      add
        /* "test/solidity/Protocol.t.sol":31784:31809  vm.startPrank(msg.sender) */
      0x00
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      0x00
      dup8
      dup1
      extcodesize
      iszero
      dup1
      iszero
      tag_1119
      jumpi
      0x00
      dup1
      revert
    tag_1119:
      pop
      gas
      call
      iszero
      dup1
      iszero
      tag_1121
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_1121:
      pop
      pop
        /* "test/solidity/Protocol.t.sol":24769:24776  _market */
      sload(0x23)
        /* "test/solidity/Protocol.t.sol":24769:24796  _market.previewMint(shares) */
      mload(0x40)
      shl(0xe0, 0xb3d7f6b9)
      dup2
      mstore
        /* "#utility.yul":24226:24242   */
      0xffffffffffffff
        /* "#utility.yul":24214:24243   */
      dup8
      and
        /* "test/solidity/Protocol.t.sol":24769:24796  _market.previewMint(shares) */
      0x04
      dup3
      add
        /* "#utility.yul":24196:24244   */
      mstore
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":24769:24776  _market */
      swap1
      swap2
      and
      swap3
      pop
        /* "test/solidity/Protocol.t.sol":24769:24788  _market.previewMint */
      0xb3d7f6b9
      swap2
      pop
        /* "#utility.yul":24169:24187   */
      0x24
      add
        /* "test/solidity/Protocol.t.sol":24769:24796  _market.previewMint(shares) */
      0x20
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      dup7
      gas
      staticcall
      iszero
      dup1
      iszero
      tag_1124
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_1124:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      dup2
      add
      swap1
      tag_1125
      swap2
      swap1
      tag_212
      jump	// in
    tag_1125:
        /* "test/solidity/Protocol.t.sol":24798:24808  msg.sender */
      caller
        /* "test/solidity/Protocol.t.sol":32807:32818  assets != 0 */
      dup2
      iszero
        /* "test/solidity/Protocol.t.sol":32803:32993  if (assets != 0) {... */
      tag_1127
      jumpi
        /* "test/solidity/Protocol.t.sol":32845:32855  msg.sender */
      caller
        /* "test/solidity/Protocol.t.sol":32863:32883  changePrank(account) */
      tag_1128
        /* "test/solidity/Protocol.t.sol":32875:32882  account */
      dup3
        /* "test/solidity/Protocol.t.sol":32863:32874  changePrank */
      tag_549
        /* "test/solidity/Protocol.t.sol":32863:32883  changePrank(account) */
      jump	// in
    tag_1128:
        /* "test/solidity/Protocol.t.sol":32891:32897  _asset */
      sload(0x24)
        /* "test/solidity/Protocol.t.sol":32891:32919  _asset.mint(account, assets) */
      mload(0x40)
      shl(0xe0, 0x40c10f19)
      dup2
      mstore
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":32891:32897  _asset */
      swap1
      swap2
      and
      swap1
        /* "test/solidity/Protocol.t.sol":32891:32902  _asset.mint */
      0x40c10f19
      swap1
        /* "test/solidity/Protocol.t.sol":32891:32919  _asset.mint(account, assets) */
      tag_1129
      swap1
        /* "test/solidity/Protocol.t.sol":32903:32910  account */
      dup6
      swap1
        /* "test/solidity/Protocol.t.sol":32912:32918  assets */
      dup8
      swap1
        /* "test/solidity/Protocol.t.sol":32891:32919  _asset.mint(account, assets) */
      0x04
      add
      tag_345
      jump	// in
    tag_1129:
      0x00
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      0x00
      dup8
      dup1
      extcodesize
      iszero
      dup1
      iszero
      tag_1130
      jumpi
      0x00
      dup1
      revert
    tag_1130:
      pop
      gas
      call
      iszero
      dup1
      iszero
      tag_1132
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_1132:
      pop
      pop
        /* "test/solidity/Protocol.t.sol":32927:32934  _market */
      sload(0x23)
        /* "test/solidity/Protocol.t.sol":32927:32959  _market.deposit(assets, account) */
      mload(0x40)
      shl(0xe0, 0x6e553f65)
      dup2
      mstore
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":32927:32934  _market */
      swap1
      swap2
      and
      swap3
      pop
        /* "test/solidity/Protocol.t.sol":32927:32942  _market.deposit */
      0x6e553f65
      swap2
      pop
        /* "test/solidity/Protocol.t.sol":32927:32959  _market.deposit(assets, account) */
      tag_1133
      swap1
        /* "test/solidity/Protocol.t.sol":32943:32949  assets */
      dup7
      swap1
        /* "test/solidity/Protocol.t.sol":32951:32958  account */
      dup7
      swap1
        /* "test/solidity/Protocol.t.sol":32927:32959  _market.deposit(assets, account) */
      0x04
      add
      tag_555
      jump	// in
    tag_1133:
      0x20
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      0x00
      dup8
      gas
      call
      iszero
      dup1
      iszero
      tag_1135
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_1135:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      dup2
      add
      swap1
      tag_1136
      swap2
      swap1
      tag_212
      jump	// in
    tag_1136:
      pop
        /* "test/solidity/Protocol.t.sol":32967:32986  changePrank(sender) */
      tag_1137
        /* "test/solidity/Protocol.t.sol":32979:32985  sender */
      dup2
        /* "test/solidity/Protocol.t.sol":32967:32978  changePrank */
      tag_549
        /* "test/solidity/Protocol.t.sol":32967:32986  changePrank(sender) */
      jump	// in
    tag_1137:
        /* "test/solidity/Protocol.t.sol":32820:32993  {... */
      pop
        /* "test/solidity/Protocol.t.sol":32803:32993  if (assets != 0) {... */
    tag_1127:
        /* "test/solidity/Protocol.t.sol":24842:24849  auditor */
      sload(0x1b)
        /* "test/solidity/Protocol.t.sol":24858:24865  _market */
      sload(0x23)
        /* "test/solidity/Protocol.t.sol":24842:24866  auditor.markets(_market) */
      mload(0x40)
      shl(0xe0, 0x8e8f294b)
      dup2
      mstore
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":24858:24865  _market */
      swap2
      dup3
      and
        /* "test/solidity/Protocol.t.sol":24842:24866  auditor.markets(_market) */
      0x04
      dup3
      add
        /* "#utility.yul":7560:7611   */
      mstore
        /* "test/solidity/Protocol.t.sol":24821:24834  uint256 index */
      0x00
      swap3
        /* "test/solidity/Protocol.t.sol":24842:24849  auditor */
      swap2
      swap1
      swap2
      and
      swap1
        /* "test/solidity/Protocol.t.sol":24842:24857  auditor.markets */
      0x8e8f294b
      swap1
        /* "#utility.yul":7533:7551   */
      0x24
      add
        /* "test/solidity/Protocol.t.sol":24842:24866  auditor.markets(_market) */
      0xa0
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      dup7
      gas
      staticcall
      iszero
      dup1
      iszero
      tag_1141
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_1141:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      dup2
      add
      swap1
      tag_1142
      swap2
      swap1
      tag_198
      jump	// in
    tag_1142:
      pop
      pop
        /* "test/solidity/Protocol.t.sol":24897:24904  _market */
      sload(0x23)
        /* "test/solidity/Protocol.t.sol":24897:24926  _market.previewRedeem(shares) */
      mload(0x40)
      shl(0xe1, 0x266d6a83)
      dup2
      mstore
        /* "#utility.yul":24226:24242   */
      0xffffffffffffff
        /* "#utility.yul":24214:24243   */
      dup12
      and
        /* "test/solidity/Protocol.t.sol":24897:24926  _market.previewRedeem(shares) */
      0x04
      dup3
      add
        /* "#utility.yul":24196:24244   */
      mstore
        /* "test/solidity/Protocol.t.sol":24816:24866  (, , uint256 index, , ) = auditor.markets(_market) */
      0xff
      swap3
      swap1
      swap3
      and
      swap5
      pop
        /* "test/solidity/Protocol.t.sol":24872:24894  uint256 expectedAssets */
      0x00
      swap4
      pop
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":24897:24904  _market */
      and
      swap2
      pop
        /* "test/solidity/Protocol.t.sol":24897:24918  _market.previewRedeem */
      0x4cdad506
      swap1
        /* "#utility.yul":24169:24187   */
      0x24
      add
        /* "test/solidity/Protocol.t.sol":24897:24926  _market.previewRedeem(shares) */
      0x20
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      dup7
      gas
      staticcall
      iszero
      dup1
      iszero
      tag_1145
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_1145:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      dup2
      add
      swap1
      tag_1146
      swap2
      swap1
      tag_212
      jump	// in
    tag_1146:
        /* "test/solidity/Protocol.t.sol":24872:24926  uint256 expectedAssets = _market.previewRedeem(shares) */
      swap1
      pop
        /* "test/solidity/Protocol.t.sol":24932:24955  Binary memory liquidity */
      tag_1147
      mload(0x40)
      dup1
      0x40
      add
      0x40
      mstore
      dup1
      0x00
      dup2
      mstore
      0x20
      add
      0x00
      dup2
      mstore
      pop
      swap1
      jump
    tag_1147:
        /* "test/solidity/Protocol.t.sol":25033:25040  _market */
      sload(0x23)
        /* "test/solidity/Protocol.t.sol":25004:25060  accountLiquidity(msg.sender, _market, 0, expectedAssets) */
      tag_1148
      swap1
        /* "test/solidity/Protocol.t.sol":25021:25031  msg.sender */
      caller
      swap1
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":25033:25040  _market */
      and
      0x00
        /* "test/solidity/Protocol.t.sol":25045:25059  expectedAssets */
      dup6
        /* "test/solidity/Protocol.t.sol":25004:25020  accountLiquidity */
      tag_207
        /* "test/solidity/Protocol.t.sol":25004:25060  accountLiquidity(msg.sender, _market, 0, expectedAssets) */
      jump	// in
    tag_1148:
        /* "test/solidity/Protocol.t.sol":24982:25000  liquidity.negative */
      0x20
      dup4
      add
        /* "test/solidity/Protocol.t.sol":24961:25060  (liquidity.positive, liquidity.negative) = accountLiquidity(msg.sender, _market, 0, expectedAssets) */
      mstore
      dup2
      mstore
        /* "test/solidity/Protocol.t.sol":25112:25119  _market */
      sload(0x23)
        /* "test/solidity/Protocol.t.sol":24962:24980  liquidity.positive */
      0x00
      swap1
        /* "test/solidity/Protocol.t.sol":25085:25120  previewAccumulatedEarnings(_market) */
      tag_1149
      swap1
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":25112:25119  _market */
      and
        /* "test/solidity/Protocol.t.sol":25085:25111  previewAccumulatedEarnings */
      tag_578
        /* "test/solidity/Protocol.t.sol":25085:25120  previewAccumulatedEarnings(_market) */
      jump	// in
    tag_1149:
        /* "test/solidity/Protocol.t.sol":25066:25120  uint256 earnings = previewAccumulatedEarnings(_market) */
      swap1
      pop
        /* "test/solidity/Protocol.t.sol":25138:25157  expectedAssets == 0 */
      dup3
      iszero
        /* "test/solidity/Protocol.t.sol":25138:25269  expectedAssets == 0 &&... */
      dup1
      iszero
      tag_1155
      jumpi
      pop
        /* "test/solidity/Protocol.t.sol":25169:25176  auditor */
      sload(0x1b)
        /* "test/solidity/Protocol.t.sol":25169:25203  auditor.accountMarkets(msg.sender) */
      mload(0x40)
      not(sub(shl(0xe1, 0x63e28d), 0x01))
      dup2
      mstore
        /* "test/solidity/Protocol.t.sol":25192:25202  msg.sender */
      caller
        /* "test/solidity/Protocol.t.sol":25169:25203  auditor.accountMarkets(msg.sender) */
      0x04
      dup3
      add
        /* "#utility.yul":7560:7611   */
      mstore
        /* "test/solidity/Protocol.t.sol":25207:25208  1 */
      0x01
        /* "test/solidity/Protocol.t.sol":25207:25217  1 << index */
      dup7
      shl
      swap2
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":25169:25176  auditor */
      and
      swap1
        /* "test/solidity/Protocol.t.sol":25169:25191  auditor.accountMarkets */
      0xff383ae6
      swap1
        /* "#utility.yul":7533:7551   */
      0x24
      add
        /* "test/solidity/Protocol.t.sol":25169:25203  auditor.accountMarkets(msg.sender) */
      0x20
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      dup7
      gas
      staticcall
      iszero
      dup1
      iszero
      tag_1153
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_1153:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      dup2
      add
      swap1
      tag_1154
      swap2
      swap1
      tag_212
      jump	// in
    tag_1154:
        /* "test/solidity/Protocol.t.sol":25169:25218  auditor.accountMarkets(msg.sender) & (1 << index) */
      and
        /* "test/solidity/Protocol.t.sol":25168:25224  (auditor.accountMarkets(msg.sender) & (1 << index)) == 0 */
      iszero
      dup1
        /* "test/solidity/Protocol.t.sol":25168:25268  (auditor.accountMarkets(msg.sender) & (1 << index)) == 0 || liquidity.positive >= liquidity.negative */
      tag_1155
      jumpi
      pop
        /* "test/solidity/Protocol.t.sol":25250:25268  liquidity.negative */
      0x20
      dup3
      add
      mload
        /* "test/solidity/Protocol.t.sol":25228:25246  liquidity.positive */
      dup3
      mload
        /* "test/solidity/Protocol.t.sol":25228:25268  liquidity.positive >= liquidity.negative */
      lt
      iszero
        /* "test/solidity/Protocol.t.sol":25168:25268  (auditor.accountMarkets(msg.sender) & (1 << index)) == 0 || liquidity.positive >= liquidity.negative */
    tag_1155:
        /* "test/solidity/Protocol.t.sol":25127:26385  if (... */
      iszero
      tag_1156
      jumpi
        /* "test/solidity/Protocol.t.sol":25300:25309  bytes("") */
      0x40
      dup1
      mload
      0x20
      dup2
      add
      dup3
      mstore
        /* "lib/forge-std/src/Base.sol":309:346  uint256(keccak256("hevm cheat code")) */
      0x00
        /* "test/solidity/Protocol.t.sol":25300:25309  bytes("") */
      dup2
      mstore
        /* "test/solidity/Protocol.t.sol":25284:25310  vm.expectRevert(bytes("")) */
      swap1
      mload
      shl(0xe0, 0xf28dceb3)
      dup2
      mstore
      0x00
      dup1
      mload
      0x20
      data_1a390d6c2ee89e11d2dffeb86f753e43f966d02cbb0b3bd3e6e1cdf50245ef50
      dup4
      codecopy
      dup2
      mload
      swap2
      mstore
        /* "test/solidity/Protocol.t.sol":25284:25299  vm.expectRevert */
      swap2
      0xf28dceb3
      swap2
        /* "test/solidity/Protocol.t.sol":25284:25310  vm.expectRevert(bytes("")) */
      tag_1157
      swap2
        /* "test/solidity/Protocol.t.sol":25300:25309  bytes("") */
      swap1
        /* "test/solidity/Protocol.t.sol":25284:25310  vm.expectRevert(bytes("")) */
      0x04
      add
      tag_599
      jump	// in
    tag_1157:
      0x00
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      0x00
      dup8
      dup1
      extcodesize
      iszero
      dup1
      iszero
      tag_1158
      jumpi
      0x00
      dup1
      revert
    tag_1158:
      pop
      gas
      call
      iszero
      dup1
      iszero
      tag_1160
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_1160:
      pop
      pop
      pop
      pop
        /* "test/solidity/Protocol.t.sol":25127:26385  if (... */
      jump(tag_1239)
    tag_1156:
        /* "test/solidity/Protocol.t.sol":25328:25335  auditor */
      sload(0x1b)
        /* "test/solidity/Protocol.t.sol":25328:25362  auditor.accountMarkets(msg.sender) */
      mload(0x40)
      not(sub(shl(0xe1, 0x63e28d), 0x01))
      dup2
      mstore
        /* "test/solidity/Protocol.t.sol":25351:25361  msg.sender */
      caller
        /* "test/solidity/Protocol.t.sol":25328:25362  auditor.accountMarkets(msg.sender) */
      0x04
      dup3
      add
        /* "#utility.yul":7560:7611   */
      mstore
        /* "test/solidity/Protocol.t.sol":25366:25367  1 */
      0x01
        /* "test/solidity/Protocol.t.sol":25366:25376  1 << index */
      dup7
      shl
      swap2
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":25328:25335  auditor */
      and
      swap1
        /* "test/solidity/Protocol.t.sol":25328:25350  auditor.accountMarkets */
      0xff383ae6
      swap1
        /* "#utility.yul":7533:7551   */
      0x24
      add
        /* "test/solidity/Protocol.t.sol":25328:25362  auditor.accountMarkets(msg.sender) */
      0x20
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      dup7
      gas
      staticcall
      iszero
      dup1
      iszero
      tag_1164
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_1164:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      dup2
      add
      swap1
      tag_1165
      swap2
      swap1
      tag_212
      jump	// in
    tag_1165:
        /* "test/solidity/Protocol.t.sol":25328:25377  auditor.accountMarkets(msg.sender) & (1 << index) */
      and
        /* "test/solidity/Protocol.t.sol":25327:25383  (auditor.accountMarkets(msg.sender) & (1 << index)) != 0 */
      iszero
      dup1
      iszero
      swap1
        /* "test/solidity/Protocol.t.sol":25327:25426  (auditor.accountMarkets(msg.sender) & (1 << index)) != 0 && liquidity.negative > liquidity.positive */
      tag_1166
      jumpi
      pop
        /* "test/solidity/Protocol.t.sol":25408:25426  liquidity.positive */
      dup2
      mload
        /* "test/solidity/Protocol.t.sol":25387:25405  liquidity.negative */
      0x20
      dup4
      add
      mload
        /* "test/solidity/Protocol.t.sol":25387:25426  liquidity.negative > liquidity.positive */
      gt
        /* "test/solidity/Protocol.t.sol":25327:25426  (auditor.accountMarkets(msg.sender) & (1 << index)) != 0 && liquidity.negative > liquidity.positive */
    tag_1166:
        /* "test/solidity/Protocol.t.sol":25323:26385  if ((auditor.accountMarkets(msg.sender) & (1 << index)) != 0 && liquidity.negative > liquidity.positive) {... */
      iszero
      tag_1167
      jumpi
        /* "test/solidity/Protocol.t.sol":25436:25490  vm.expectRevert(InsufficientAccountLiquidity.selector) */
      mload(0x40)
      shl(0xe5, 0x0618f587)
      dup2
      mstore
      0x00
      dup1
      mload
      0x20
      data_1a390d6c2ee89e11d2dffeb86f753e43f966d02cbb0b3bd3e6e1cdf50245ef50
      dup4
      codecopy
      dup2
      mload
      swap2
      mstore
        /* "test/solidity/Protocol.t.sol":25436:25451  vm.expectRevert */
      swap1
      0xc31eb0e0
      swap1
        /* "test/solidity/Protocol.t.sol":25436:25490  vm.expectRevert(InsufficientAccountLiquidity.selector) */
      tag_1157
      swap1
      shl(0xe1, 0x0aeac0bb)
        /* "test/solidity/Protocol.t.sol":25452:25489  InsufficientAccountLiquidity.selector */
      swap1
        /* "test/solidity/Protocol.t.sol":25436:25490  vm.expectRevert(InsufficientAccountLiquidity.selector) */
      0x04
      add
      tag_216
      jump	// in
        /* "test/solidity/Protocol.t.sol":25323:26385  if ((auditor.accountMarkets(msg.sender) & (1 << index)) != 0 && liquidity.negative > liquidity.positive) {... */
    tag_1167:
        /* "test/solidity/Protocol.t.sol":25507:25514  _market */
      sload(0x23)
        /* "test/solidity/Protocol.t.sol":25507:25528  _market.totalSupply() */
      0x40
      dup1
      mload
      shl(0xe0, 0x18160ddd)
      dup2
      mstore
      swap1
      mload
        /* "test/solidity/Protocol.t.sol":25531:25532  0 */
      0x00
      swap3
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":25507:25514  _market */
      and
      swap2
        /* "test/solidity/Protocol.t.sol":25507:25526  _market.totalSupply */
      0x18160ddd
      swap2
        /* "test/solidity/Protocol.t.sol":25507:25528  _market.totalSupply() */
      0x04
      dup1
      dup4
      add
      swap3
      0x20
      swap3
      swap2
      swap1
      dup3
      swap1
      sub
      add
      dup2
        /* "test/solidity/Protocol.t.sol":25507:25514  _market */
      dup7
        /* "test/solidity/Protocol.t.sol":25507:25528  _market.totalSupply() */
      gas
      staticcall
      iszero
      dup1
      iszero
      tag_1174
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_1174:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      dup2
      add
      swap1
      tag_1175
      swap2
      swap1
      tag_212
      jump	// in
    tag_1175:
        /* "test/solidity/Protocol.t.sol":25507:25532  _market.totalSupply() > 0 */
      gt
        /* "test/solidity/Protocol.t.sol":25507:25562  _market.totalSupply() > 0 && _market.totalAssets() == 0 */
      dup1
      iszero
      tag_1176
      jumpi
      pop
        /* "test/solidity/Protocol.t.sol":25536:25543  _market */
      0x23
      0x00
      swap1
      sload
      swap1
      0x0100
      exp
      swap1
      div
      sub(shl(0xa0, 0x01), 0x01)
      and
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":25536:25555  _market.totalAssets */
      and
      0x01e1d114
        /* "test/solidity/Protocol.t.sol":25536:25557  _market.totalAssets() */
      mload(0x40)
      dup2
      0xffffffff
      and
      0xe0
      shl
      dup2
      mstore
      0x04
      add
      0x20
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      dup7
      gas
      staticcall
      iszero
      dup1
      iszero
      tag_1178
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_1178:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      dup2
      add
      swap1
      tag_1179
      swap2
      swap1
      tag_212
      jump	// in
    tag_1179:
        /* "test/solidity/Protocol.t.sol":25536:25562  _market.totalAssets() == 0 */
      iszero
        /* "test/solidity/Protocol.t.sol":25507:25562  _market.totalSupply() > 0 && _market.totalAssets() == 0 */
    tag_1176:
        /* "test/solidity/Protocol.t.sol":25503:26385  if (_market.totalSupply() > 0 && _market.totalAssets() == 0) {... */
      iszero
      tag_1180
      jumpi
        /* "test/solidity/Protocol.t.sol":25588:25597  bytes("") */
      0x40
      dup1
      mload
      0x20
      dup2
      add
      dup3
      mstore
        /* "lib/forge-std/src/Base.sol":309:346  uint256(keccak256("hevm cheat code")) */
      0x00
        /* "test/solidity/Protocol.t.sol":25588:25597  bytes("") */
      dup2
      mstore
        /* "test/solidity/Protocol.t.sol":25572:25598  vm.expectRevert(bytes("")) */
      swap1
      mload
      shl(0xe0, 0xf28dceb3)
      dup2
      mstore
      0x00
      dup1
      mload
      0x20
      data_1a390d6c2ee89e11d2dffeb86f753e43f966d02cbb0b3bd3e6e1cdf50245ef50
      dup4
      codecopy
      dup2
      mload
      swap2
      mstore
        /* "test/solidity/Protocol.t.sol":25572:25587  vm.expectRevert */
      swap2
      0xf28dceb3
      swap2
        /* "test/solidity/Protocol.t.sol":25572:25598  vm.expectRevert(bytes("")) */
      tag_1157
      swap2
        /* "test/solidity/Protocol.t.sol":25588:25597  bytes("") */
      swap1
        /* "test/solidity/Protocol.t.sol":25572:25598  vm.expectRevert(bytes("")) */
      0x04
      add
      tag_599
      jump	// in
        /* "test/solidity/Protocol.t.sol":25503:26385  if (_market.totalSupply() > 0 && _market.totalAssets() == 0) {... */
    tag_1180:
        /* "test/solidity/Protocol.t.sol":25682:25689  _market */
      sload(0x23)
        /* "test/solidity/Protocol.t.sol":25693:25701  earnings */
      dup2
      swap1
        /* "test/solidity/Protocol.t.sol":25659:25690  previewNewFloatingDebt(_market) */
      tag_1186
      swap1
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":25682:25689  _market */
      and
        /* "test/solidity/Protocol.t.sol":25659:25681  previewNewFloatingDebt */
      tag_605
        /* "test/solidity/Protocol.t.sol":25659:25690  previewNewFloatingDebt(_market) */
      jump	// in
    tag_1186:
        /* "test/solidity/Protocol.t.sol":25632:25639  _market */
      0x23
      0x00
      swap1
      sload
      swap1
      0x0100
      exp
      swap1
      div
      sub(shl(0xa0, 0x01), 0x01)
      and
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":25632:25654  _market.floatingAssets */
      and
      0x2e0af008
        /* "test/solidity/Protocol.t.sol":25632:25656  _market.floatingAssets() */
      mload(0x40)
      dup2
      0xffffffff
      and
      0xe0
      shl
      dup2
      mstore
      0x04
      add
      0x20
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      dup7
      gas
      staticcall
      iszero
      dup1
      iszero
      tag_1188
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_1188:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      dup2
      add
      swap1
      tag_1189
      swap2
      swap1
      tag_212
      jump	// in
    tag_1189:
        /* "test/solidity/Protocol.t.sol":25632:25690  _market.floatingAssets() + previewNewFloatingDebt(_market) */
      tag_1190
      swap2
      swap1
      tag_186
      jump	// in
    tag_1190:
        /* "test/solidity/Protocol.t.sol":25632:25701  _market.floatingAssets() + previewNewFloatingDebt(_market) + earnings */
      tag_1191
      swap2
      swap1
      tag_186
      jump	// in
    tag_1191:
        /* "test/solidity/Protocol.t.sol":25615:25629  expectedAssets */
      dup4
        /* "test/solidity/Protocol.t.sol":25615:25701  expectedAssets > _market.floatingAssets() + previewNewFloatingDebt(_market) + earnings */
      gt
        /* "test/solidity/Protocol.t.sol":25611:26385  if (expectedAssets > _market.floatingAssets() + previewNewFloatingDebt(_market) + earnings) {... */
      iszero
      tag_1192
      jumpi
        /* "lib/forge-std/src/StdError.sol":317:364  abi.encodeWithSignature("Panic(uint256)", 0x11) */
      mload(0x40)
        /* "lib/forge-std/src/StdError.sol":359:363  0x11 */
      0x11
        /* "lib/forge-std/src/StdError.sol":317:364  abi.encodeWithSignature("Panic(uint256)", 0x11) */
      0x24
      dup3
      add
        /* "#utility.yul":24631:24667   */
      mstore
      0x00
      dup1
      mload
      0x20
      data_1a390d6c2ee89e11d2dffeb86f753e43f966d02cbb0b3bd3e6e1cdf50245ef50
      dup4
      codecopy
      dup2
      mload
      swap2
      mstore
        /* "test/solidity/Protocol.t.sol":25711:25726  vm.expectRevert */
      swap1
      0xf28dceb3
      swap1
        /* "#utility.yul":24604:24622   */
      0x44
      add
        /* "lib/forge-std/src/StdError.sol":317:364  abi.encodeWithSignature("Panic(uint256)", 0x11) */
    tag_1193:
      0x40
      dup1
      mload
      not(0x1f)
      dup2
      dup5
      sub
      add
      dup2
      mstore
      swap2
      dup2
      mstore
      0x20
      dup3
      add
      dup1
      mload
      sub(shl(0xe0, 0x01), 0x01)
      and
      shl(0xe0, 0x4e487b71)
      or
      swap1
      mstore
        /* "test/solidity/Protocol.t.sol":25711:25752  vm.expectRevert(stdError.arithmeticError) */
      mload
      0xe0
      dup4
      swap1
      shl
      not(sub(shl(0xe0, 0x01), 0x01))
      and
      dup2
      mstore
      tag_1157
      swap2
        /* "lib/forge-std/src/StdError.sol":317:364  abi.encodeWithSignature("Panic(uint256)", 0x11) */
      swap1
        /* "test/solidity/Protocol.t.sol":25711:25752  vm.expectRevert(stdError.arithmeticError) */
      0x04
      add
      tag_599
      jump	// in
        /* "test/solidity/Protocol.t.sol":25611:26385  if (expectedAssets > _market.floatingAssets() + previewNewFloatingDebt(_market) + earnings) {... */
    tag_1192:
        /* "test/solidity/Protocol.t.sol":25905:25912  _market */
      sload(0x23)
        /* "test/solidity/Protocol.t.sol":25927:25941  expectedAssets */
      dup4
      swap1
        /* "test/solidity/Protocol.t.sol":25916:25924  earnings */
      dup3
      swap1
        /* "test/solidity/Protocol.t.sol":25882:25913  previewNewFloatingDebt(_market) */
      tag_1199
      swap1
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":25905:25912  _market */
      and
        /* "test/solidity/Protocol.t.sol":25882:25904  previewNewFloatingDebt */
      tag_605
        /* "test/solidity/Protocol.t.sol":25882:25913  previewNewFloatingDebt(_market) */
      jump	// in
    tag_1199:
        /* "test/solidity/Protocol.t.sol":25855:25862  _market */
      0x23
      0x00
      swap1
      sload
      swap1
      0x0100
      exp
      swap1
      div
      sub(shl(0xa0, 0x01), 0x01)
      and
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":25855:25877  _market.floatingAssets */
      and
      0x2e0af008
        /* "test/solidity/Protocol.t.sol":25855:25879  _market.floatingAssets() */
      mload(0x40)
      dup2
      0xffffffff
      and
      0xe0
      shl
      dup2
      mstore
      0x04
      add
      0x20
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      dup7
      gas
      staticcall
      iszero
      dup1
      iszero
      tag_1201
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_1201:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      dup2
      add
      swap1
      tag_1202
      swap2
      swap1
      tag_212
      jump	// in
    tag_1202:
        /* "test/solidity/Protocol.t.sol":25855:25913  _market.floatingAssets() + previewNewFloatingDebt(_market) */
      tag_1203
      swap2
      swap1
      tag_186
      jump	// in
    tag_1203:
        /* "test/solidity/Protocol.t.sol":25855:25924  _market.floatingAssets() + previewNewFloatingDebt(_market) + earnings */
      tag_1204
      swap2
      swap1
      tag_186
      jump	// in
    tag_1204:
        /* "test/solidity/Protocol.t.sol":25855:25941  _market.floatingAssets() + previewNewFloatingDebt(_market) + earnings - expectedAssets */
      tag_1205
      swap2
      swap1
      tag_158
      jump	// in
    tag_1205:
        /* "test/solidity/Protocol.t.sol":25811:25818  _market */
      0x23
      0x00
      swap1
      sload
      swap1
      0x0100
      exp
      swap1
      div
      sub(shl(0xa0, 0x01), 0x01)
      and
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":25811:25844  _market.totalFloatingBorrowAssets */
      and
      0xeee8c9e0
        /* "test/solidity/Protocol.t.sol":25811:25846  _market.totalFloatingBorrowAssets() */
      mload(0x40)
      dup2
      0xffffffff
      and
      0xe0
      shl
      dup2
      mstore
      0x04
      add
      0x20
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      dup7
      gas
      staticcall
      iszero
      dup1
      iszero
      tag_1207
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_1207:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      dup2
      add
      swap1
      tag_1208
      swap2
      swap1
      tag_212
      jump	// in
    tag_1208:
        /* "test/solidity/Protocol.t.sol":25776:25783  _market */
      0x23
      0x00
      swap1
      sload
      swap1
      0x0100
      exp
      swap1
      div
      sub(shl(0xa0, 0x01), 0x01)
      and
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":25776:25806  _market.floatingBackupBorrowed */
      and
      0x8c3cba5a
        /* "test/solidity/Protocol.t.sol":25776:25808  _market.floatingBackupBorrowed() */
      mload(0x40)
      dup2
      0xffffffff
      and
      0xe0
      shl
      dup2
      mstore
      0x04
      add
      0x20
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      dup7
      gas
      staticcall
      iszero
      dup1
      iszero
      tag_1210
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_1210:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      dup2
      add
      swap1
      tag_1211
      swap2
      swap1
      tag_212
      jump	// in
    tag_1211:
        /* "test/solidity/Protocol.t.sol":25776:25846  _market.floatingBackupBorrowed() + _market.totalFloatingBorrowAssets() */
      tag_1212
      swap2
      swap1
      tag_186
      jump	// in
    tag_1212:
        /* "test/solidity/Protocol.t.sol":25776:25941  _market.floatingBackupBorrowed() + _market.totalFloatingBorrowAssets() >... */
      gt
        /* "test/solidity/Protocol.t.sol":25765:26385  if (... */
      iszero
      tag_1213
      jumpi
        /* "test/solidity/Protocol.t.sol":25956:26011  vm.expectRevert(InsufficientProtocolLiquidity.selector) */
      mload(0x40)
      shl(0xe5, 0x0618f587)
      dup2
      mstore
      0x00
      dup1
      mload
      0x20
      data_1a390d6c2ee89e11d2dffeb86f753e43f966d02cbb0b3bd3e6e1cdf50245ef50
      dup4
      codecopy
      dup2
      mload
      swap2
      mstore
        /* "test/solidity/Protocol.t.sol":25956:25971  vm.expectRevert */
      swap1
      0xc31eb0e0
      swap1
        /* "test/solidity/Protocol.t.sol":25956:26011  vm.expectRevert(InsufficientProtocolLiquidity.selector) */
      tag_1157
      swap1
      shl(0xe3, 0x2d41ad)
        /* "test/solidity/Protocol.t.sol":25972:26010  InsufficientProtocolLiquidity.selector */
      swap1
        /* "test/solidity/Protocol.t.sol":25956:26011  vm.expectRevert(InsufficientProtocolLiquidity.selector) */
      0x04
      add
      tag_216
      jump	// in
        /* "test/solidity/Protocol.t.sol":25765:26385  if (... */
    tag_1213:
        /* "test/solidity/Protocol.t.sol":26037:26044  _market */
      sload(0x23)
        /* "test/solidity/Protocol.t.sol":26037:26066  _market.balanceOf(msg.sender) */
      mload(0x40)
      shl(0xe0, 0x70a08231)
      dup2
      mstore
        /* "test/solidity/Protocol.t.sol":26055:26065  msg.sender */
      caller
        /* "test/solidity/Protocol.t.sol":26037:26066  _market.balanceOf(msg.sender) */
      0x04
      dup3
      add
        /* "#utility.yul":7560:7611   */
      mstore
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":26037:26044  _market */
      swap1
      swap2
      and
      swap1
        /* "test/solidity/Protocol.t.sol":26037:26054  _market.balanceOf */
      0x70a08231
      swap1
        /* "#utility.yul":7533:7551   */
      0x24
      add
        /* "test/solidity/Protocol.t.sol":26037:26066  _market.balanceOf(msg.sender) */
      0x20
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      dup7
      gas
      staticcall
      iszero
      dup1
      iszero
      tag_1221
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_1221:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      dup2
      add
      swap1
      tag_1222
      swap2
      swap1
      tag_212
      jump	// in
    tag_1222:
        /* "test/solidity/Protocol.t.sol":26028:26034  shares */
      dup10
        /* "test/solidity/Protocol.t.sol":26028:26066  shares > _market.balanceOf(msg.sender) */
      0xffffffffffffff
      and
      gt
        /* "test/solidity/Protocol.t.sol":26024:26385  if (shares > _market.balanceOf(msg.sender)) {... */
      iszero
      tag_1223
      jumpi
        /* "lib/forge-std/src/StdError.sol":317:364  abi.encodeWithSignature("Panic(uint256)", 0x11) */
      mload(0x40)
        /* "lib/forge-std/src/StdError.sol":359:363  0x11 */
      0x11
        /* "lib/forge-std/src/StdError.sol":317:364  abi.encodeWithSignature("Panic(uint256)", 0x11) */
      0x24
      dup3
      add
        /* "#utility.yul":24631:24667   */
      mstore
      0x00
      dup1
      mload
      0x20
      data_1a390d6c2ee89e11d2dffeb86f753e43f966d02cbb0b3bd3e6e1cdf50245ef50
      dup4
      codecopy
      dup2
      mload
      swap2
      mstore
        /* "test/solidity/Protocol.t.sol":26076:26091  vm.expectRevert */
      swap1
      0xf28dceb3
      swap1
        /* "#utility.yul":24604:24622   */
      0x44
      add
        /* "lib/forge-std/src/StdError.sol":317:364  abi.encodeWithSignature("Panic(uint256)", 0x11) */
      tag_1193
        /* "#utility.yul":24478:24673   */
      jump
        /* "test/solidity/Protocol.t.sol":26024:26385  if (shares > _market.balanceOf(msg.sender)) {... */
    tag_1223:
        /* "test/solidity/Protocol.t.sol":26151:26157  _asset */
      0x24
      dup1
      sload
        /* "test/solidity/Protocol.t.sol":26176:26183  _market */
      sload(0x23)
        /* "test/solidity/Protocol.t.sol":26151:26185  _asset.balanceOf(address(_market)) */
      mload(0x40)
      shl(0xe0, 0x70a08231)
      dup2
      mstore
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":26176:26183  _market */
      swap2
      dup3
      and
        /* "test/solidity/Protocol.t.sol":26151:26185  _asset.balanceOf(address(_market)) */
      0x04
      dup3
      add
        /* "#utility.yul":7560:7611   */
      mstore
        /* "test/solidity/Protocol.t.sol":26151:26157  _asset */
      swap2
      and
      swap2
        /* "test/solidity/Protocol.t.sol":26151:26167  _asset.balanceOf */
      0x70a08231
      swap2
        /* "#utility.yul":7533:7551   */
      add
        /* "test/solidity/Protocol.t.sol":26151:26185  _asset.balanceOf(address(_market)) */
      0x20
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      dup7
      gas
      staticcall
      iszero
      dup1
      iszero
      tag_1232
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_1232:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      dup2
      add
      swap1
      tag_1233
      swap2
      swap1
      tag_212
      jump	// in
    tag_1233:
        /* "test/solidity/Protocol.t.sol":26134:26148  expectedAssets */
      dup4
        /* "test/solidity/Protocol.t.sol":26134:26185  expectedAssets > _asset.balanceOf(address(_market)) */
      gt
        /* "test/solidity/Protocol.t.sol":26130:26385  if (expectedAssets > _asset.balanceOf(address(_market))) {... */
      iszero
      tag_1234
      jumpi
        /* "test/solidity/Protocol.t.sol":26211:26220  bytes("") */
      0x40
      dup1
      mload
      0x20
      dup2
      add
      dup3
      mstore
        /* "lib/forge-std/src/Base.sol":309:346  uint256(keccak256("hevm cheat code")) */
      0x00
        /* "test/solidity/Protocol.t.sol":26211:26220  bytes("") */
      dup2
      mstore
        /* "test/solidity/Protocol.t.sol":26195:26221  vm.expectRevert(bytes("")) */
      swap1
      mload
      shl(0xe0, 0xf28dceb3)
      dup2
      mstore
      0x00
      dup1
      mload
      0x20
      data_1a390d6c2ee89e11d2dffeb86f753e43f966d02cbb0b3bd3e6e1cdf50245ef50
      dup4
      codecopy
      dup2
      mload
      swap2
      mstore
        /* "test/solidity/Protocol.t.sol":26195:26210  vm.expectRevert */
      swap2
      0xf28dceb3
      swap2
        /* "test/solidity/Protocol.t.sol":26195:26221  vm.expectRevert(bytes("")) */
      tag_1157
      swap2
        /* "test/solidity/Protocol.t.sol":26211:26220  bytes("") */
      swap1
        /* "test/solidity/Protocol.t.sol":26195:26221  vm.expectRevert(bytes("")) */
      0x04
      add
      tag_599
      jump	// in
        /* "test/solidity/Protocol.t.sol":26130:26385  if (expectedAssets > _asset.balanceOf(address(_market))) {... */
    tag_1234:
        /* "test/solidity/Protocol.t.sol":26288:26295  _market */
      sload(0x23)
        /* "test/solidity/Protocol.t.sol":26242:26297  vm.expectEmit(true, true, true, true, address(_market)) */
      mload(0x40)
      shl(0xe0, 0x81bad6f3)
      dup2
      mstore
      0x00
      dup1
      mload
      0x20
      data_1a390d6c2ee89e11d2dffeb86f753e43f966d02cbb0b3bd3e6e1cdf50245ef50
      dup4
      codecopy
      dup2
      mload
      swap2
      mstore
        /* "test/solidity/Protocol.t.sol":26242:26255  vm.expectEmit */
      swap2
      0x81bad6f3
      swap2
        /* "test/solidity/Protocol.t.sol":26242:26297  vm.expectEmit(true, true, true, true, address(_market)) */
      tag_1240
      swap2
        /* "test/solidity/Protocol.t.sol":26256:26260  true */
      0x01
      swap2
      dup3
      swap2
      dup3
      swap2
      dup3
      swap2
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":26288:26295  _market */
      and
      swap1
        /* "test/solidity/Protocol.t.sol":26242:26297  vm.expectEmit(true, true, true, true, address(_market)) */
      0x04
      add
      tag_228
      jump	// in
    tag_1240:
      0x00
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      0x00
      dup8
      dup1
      extcodesize
      iszero
      dup1
      iszero
      tag_1241
      jumpi
      0x00
      dup1
      revert
    tag_1241:
      pop
      gas
      call
      iszero
      dup1
      iszero
      tag_1243
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_1243:
      pop
      pop
        /* "test/solidity/Protocol.t.sol":26310:26378  Withdraw(msg.sender, msg.sender, msg.sender, expectedAssets, shares) */
      0x40
      dup1
      mload
        /* "#utility.yul":31851:31876   */
      dup7
      dup2
      mstore
        /* "#utility.yul":31924:31940   */
      0xffffffffffffff
        /* "#utility.yul":31912:31941   */
      dup14
      and
        /* "#utility.yul":31907:31909   */
      0x20
        /* "#utility.yul":31892:31910   */
      dup3
      add
        /* "#utility.yul":31885:31942   */
      mstore
        /* "test/solidity/Protocol.t.sol":26343:26353  msg.sender */
      caller
      swap4
      pop
      dup4
      swap3
      pop
      dup3
      swap2
        /* "test/solidity/Protocol.t.sol":26310:26378  Withdraw(msg.sender, msg.sender, msg.sender, expectedAssets, shares) */
      0xfbde797d201c681b91056529119e0b02407c7bb96a4a2c75c01fc9667232c8db
      swap2
        /* "#utility.yul":31824:31842   */
      add
        /* "test/solidity/Protocol.t.sol":26310:26378  Withdraw(msg.sender, msg.sender, msg.sender, expectedAssets, shares) */
      mload(0x40)
      dup1
      swap2
      sub
      swap1
      log4
        /* "test/solidity/Protocol.t.sol":26130:26385  if (expectedAssets > _asset.balanceOf(address(_market))) {... */
    tag_1239:
        /* "test/solidity/Protocol.t.sol":26407:26414  _market */
      sload(0x23)
        /* "test/solidity/Protocol.t.sol":26407:26453  _market.redeem(shares, msg.sender, msg.sender) */
      mload(0x40)
      shl(0xe1, 0x5d043b29)
      dup2
      mstore
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":26407:26414  _market */
      swap1
      swap2
      and
      swap1
        /* "test/solidity/Protocol.t.sol":26407:26421  _market.redeem */
      0xba087652
      swap1
        /* "test/solidity/Protocol.t.sol":26407:26453  _market.redeem(shares, msg.sender, msg.sender) */
      tag_1246
      swap1
        /* "test/solidity/Protocol.t.sol":26422:26428  shares */
      dup13
      swap1
        /* "test/solidity/Protocol.t.sol":26430:26440  msg.sender */
      caller
      swap1
      dup2
      swap1
        /* "test/solidity/Protocol.t.sol":26407:26453  _market.redeem(shares, msg.sender, msg.sender) */
      0x04
      add
      tag_667
      jump	// in
    tag_1246:
      0x20
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      0x00
      dup8
      gas
      call
      iszero
      dup1
      iszero
      tag_1248
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_1248:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      dup2
      add
      swap1
      tag_1249
      swap2
      swap1
      tag_212
      jump	// in
    tag_1249:
        /* "test/solidity/Protocol.t.sol":26390:26453  expectedAssets = _market.redeem(shares, msg.sender, msg.sender) */
      swap3
      pop
        /* "test/solidity/Protocol.t.sol":26463:26481  expectedAssets > 0 */
      dup3
      iszero
        /* "test/solidity/Protocol.t.sol":26459:26522  if (expectedAssets > 0) _asset.burn(msg.sender, expectedAssets) */
      tag_1250
      jumpi
        /* "test/solidity/Protocol.t.sol":26483:26489  _asset */
      sload(0x24)
        /* "test/solidity/Protocol.t.sol":26483:26522  _asset.burn(msg.sender, expectedAssets) */
      mload(0x40)
      shl(0xe2, 0x2770a7eb)
      dup2
      mstore
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":26483:26489  _asset */
      swap1
      swap2
      and
      swap1
        /* "test/solidity/Protocol.t.sol":26483:26494  _asset.burn */
      0x9dc29fac
      swap1
        /* "test/solidity/Protocol.t.sol":26483:26522  _asset.burn(msg.sender, expectedAssets) */
      tag_1251
      swap1
        /* "test/solidity/Protocol.t.sol":26495:26505  msg.sender */
      caller
      swap1
        /* "test/solidity/Protocol.t.sol":26507:26521  expectedAssets */
      dup8
      swap1
        /* "test/solidity/Protocol.t.sol":26483:26522  _asset.burn(msg.sender, expectedAssets) */
      0x04
      add
      tag_345
      jump	// in
    tag_1251:
      0x00
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      0x00
      dup8
      dup1
      extcodesize
      iszero
      dup1
      iszero
      tag_1252
      jumpi
      0x00
      dup1
      revert
    tag_1252:
      pop
      gas
      call
      iszero
      dup1
      iszero
      tag_1254
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_1254:
      pop
      pop
      pop
      pop
        /* "test/solidity/Protocol.t.sol":26459:26522  if (expectedAssets > 0) _asset.burn(msg.sender, expectedAssets) */
    tag_1250:
        /* "test/solidity/Protocol.t.sol":24810:26527  {... */
      pop
      pop
      pop
      pop
        /* "test/solidity/Protocol.t.sol":31815:31816  _ */
      pop
      pop
      0x00
      dup1
      mload
      0x20
      data_b627c71dec38ae7fa273aa3bb9b6210fd4a76d47f44ae646db16da401b96db40
      dup4
      codecopy
      dup2
      mload
      swap2
      mstore
        /* "lib/forge-std/src/Base.sol":309:346  uint256(keccak256("hevm cheat code")) */
      0x00
      shr
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":31822:31834  vm.stopPrank */
      and
      0x90c5013b
        /* "test/solidity/Protocol.t.sol":31822:31836  vm.stopPrank() */
      mload(0x40)
      dup2
      0xffffffff
      and
      0xe0
      shl
      dup2
      mstore
      0x04
      add
      0x00
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      0x00
      dup8
      dup1
      extcodesize
      iszero
      dup1
      iszero
      tag_512
      jumpi
      0x00
      dup1
      revert
        /* "lib/forge-std/src/StdInvariant.sol":2930:3063  function targetSenders() public view returns (address[] memory targetedSenders_) {... */
    tag_81:
        /* "lib/forge-std/src/StdInvariant.sol":2976:3009  address[] memory targetedSenders_ */
      0x60
        /* "lib/forge-std/src/StdInvariant.sol":3040:3056  _targetedSenders */
      0x0f
        /* "lib/forge-std/src/StdInvariant.sol":3021:3056  targetedSenders_ = _targetedSenders */
      dup1
      sload
      dup1
      0x20
      mul
      0x20
      add
      mload(0x40)
      swap1
      dup2
      add
      0x40
      mstore
      dup1
      swap3
      swap2
      swap1
      dup2
      dup2
      mstore
      0x20
      add
      dup3
      dup1
      sload
      dup1
      iszero
      tag_849
      jumpi
      0x20
      mul
      dup3
      add
      swap2
      swap1
      0x00
      mstore
      keccak256(0x00, 0x20)
      swap1
      dup2
      sload
      sub(shl(0xa0, 0x01), 0x01)
      and
      dup2
      mstore
      0x01
      swap1
      swap2
      add
      swap1
      0x20
      add
      dup1
      dup4
      gt
      tag_850
      jumpi
      pop
      pop
      pop
      pop
      pop
      swap1
      pop
        /* "lib/forge-std/src/StdInvariant.sol":2930:3063  function targetSenders() public view returns (address[] memory targetedSenders_) {... */
      swap1
      jump	// out
        /* "lib/forge-std/src/StdInvariant.sol":2631:2772  function targetContracts() public view returns (address[] memory targetedContracts_) {... */
    tag_84:
        /* "lib/forge-std/src/StdInvariant.sol":2679:2714  address[] memory targetedContracts_ */
      0x60
        /* "lib/forge-std/src/StdInvariant.sol":2747:2765  _targetedContracts */
      0x0e
        /* "lib/forge-std/src/StdInvariant.sol":2726:2765  targetedContracts_ = _targetedContracts */
      dup1
      sload
      dup1
      0x20
      mul
      0x20
      add
      mload(0x40)
      swap1
      dup2
      add
      0x40
      mstore
      dup1
      swap3
      swap2
      swap1
      dup2
      dup2
      mstore
      0x20
      add
      dup3
      dup1
      sload
      dup1
      iszero
      tag_849
      jumpi
      0x20
      mul
      dup3
      add
      swap2
      swap1
      0x00
      mstore
      keccak256(0x00, 0x20)
      swap1
      dup2
      sload
      sub(shl(0xa0, 0x01), 0x01)
      and
      dup2
      mstore
      0x01
      swap1
      swap2
      add
      swap1
      0x20
      add
      dup1
      dup4
      gt
      tag_850
      jumpi
      pop
      pop
      pop
      pop
      pop
      swap1
      pop
        /* "lib/forge-std/src/StdInvariant.sol":2631:2772  function targetContracts() public view returns (address[] memory targetedContracts_) {... */
      swap1
      jump	// out
        /* "test/solidity/Protocol.t.sol":20675:21750  function borrow(... */
    tag_88:
        /* "test/solidity/Protocol.t.sol":31278:31285  _market */
      sload(0x23)
        /* "test/solidity/Protocol.t.sol":20749:20753  seed */
      dup2
      swap1
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":31278:31285  _market */
      and
        /* "test/solidity/Protocol.t.sol":31270:31300  address(_market) == address(0) */
      iszero
        /* "test/solidity/Protocol.t.sol":31263:31301  assert(address(_market) == address(0)) */
      tag_1266
      jumpi
      tag_1266
      tag_153
      jump	// in
    tag_1266:
        /* "test/solidity/Protocol.t.sol":31317:31324  markets */
      0x1c
        /* "test/solidity/Protocol.t.sol":31325:31402  _bound(uint256(keccak256(abi.encode(seed, "market"))), 0, markets.length - 1) */
      tag_1267
        /* "test/solidity/Protocol.t.sol":31361:31365  seed */
      dup3
        /* "test/solidity/Protocol.t.sol":31350:31376  abi.encode(seed, "market") */
      add(0x20, mload(0x40))
      tag_155
      swap2
      swap1
      tag_156
      jump	// in
        /* "test/solidity/Protocol.t.sol":31325:31402  _bound(uint256(keccak256(abi.encode(seed, "market"))), 0, markets.length - 1) */
    tag_1267:
        /* "test/solidity/Protocol.t.sol":31317:31403  markets[_bound(uint256(keccak256(abi.encode(seed, "market"))), 0, markets.length - 1)] */
      dup2
      sload
      dup2
      lt
      tag_1271
      jumpi
      tag_1271
      tag_162
      jump	// in
    tag_1271:
      0x00
      swap2
      dup3
      mstore
      0x20
      swap2
      dup3
      swap1
      keccak256
      add
      sload
        /* "test/solidity/Protocol.t.sol":31307:31314  _market */
      0x23
        /* "test/solidity/Protocol.t.sol":31307:31403  _market = markets[_bound(uint256(keccak256(abi.encode(seed, "market"))), 0, markets.length - 1)] */
      dup1
      sload
      not(sub(shl(0xa0, 0x01), 0x01))
      and
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":31317:31403  markets[_bound(uint256(keccak256(abi.encode(seed, "market"))), 0, markets.length - 1)] */
      swap1
      swap3
      and
        /* "test/solidity/Protocol.t.sol":31307:31403  _market = markets[_bound(uint256(keccak256(abi.encode(seed, "market"))), 0, markets.length - 1)] */
      swap2
      dup3
      or
      swap1
      sstore
        /* "test/solidity/Protocol.t.sol":31436:31451  _market.asset() */
      0x40
      dup1
      mload
      shl(0xe0, 0x38d52e0f)
      dup2
      mstore
      swap1
      mload
        /* "test/solidity/Protocol.t.sol":31317:31403  markets[_bound(uint256(keccak256(abi.encode(seed, "market"))), 0, markets.length - 1)] */
      swap2
      swap3
        /* "test/solidity/Protocol.t.sol":31436:31449  _market.asset */
      0x38d52e0f
      swap3
        /* "test/solidity/Protocol.t.sol":31436:31451  _market.asset() */
      0x04
      dup1
      dup5
      add
      swap4
      dup3
      swap1
      sub
      add
      dup2
        /* "test/solidity/Protocol.t.sol":31317:31403  markets[_bound(uint256(keccak256(abi.encode(seed, "market"))), 0, markets.length - 1)] */
      dup7
        /* "test/solidity/Protocol.t.sol":31436:31451  _market.asset() */
      gas
      staticcall
      iszero
      dup1
      iszero
      tag_1274
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_1274:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      dup2
      add
      swap1
      tag_1275
      swap2
      swap1
      tag_167
      jump	// in
    tag_1275:
        /* "test/solidity/Protocol.t.sol":31409:31415  _asset */
      0x24
      0x00
        /* "test/solidity/Protocol.t.sol":31409:31453  _asset = MockERC20(address(_market.asset())) */
      0x0100
      exp
      dup2
      sload
      dup2
      sub(shl(0xa0, 0x01), 0x01)
      mul
      not
      and
      swap1
      dup4
      sub(shl(0xa0, 0x01), 0x01)
      and
      mul
      or
      swap1
      sstore
      pop
        /* "test/solidity/Protocol.t.sol":31475:31483  accounts */
      0x1d
        /* "test/solidity/Protocol.t.sol":31484:31568  _bound(uint256(keccak256(abi.encode(seed, "counterparty"))), 0, accounts.length - 1) */
      tag_1276
        /* "test/solidity/Protocol.t.sol":31520:31524  seed */
      dup3
        /* "test/solidity/Protocol.t.sol":31509:31541  abi.encode(seed, "counterparty") */
      add(0x20, mload(0x40))
      tag_169
      swap2
      swap1
      tag_170
      jump	// in
        /* "test/solidity/Protocol.t.sol":31484:31568  _bound(uint256(keccak256(abi.encode(seed, "counterparty"))), 0, accounts.length - 1) */
    tag_1276:
        /* "test/solidity/Protocol.t.sol":31475:31569  accounts[_bound(uint256(keccak256(abi.encode(seed, "counterparty"))), 0, accounts.length - 1)] */
      dup2
      sload
      dup2
      lt
      tag_1280
      jumpi
      tag_1280
      tag_162
      jump	// in
    tag_1280:
      0x00
      swap2
      dup3
      mstore
      0x20
      swap2
      dup3
      swap1
      keccak256
      add
      sload
        /* "test/solidity/Protocol.t.sol":31459:31472  _counterparty */
      0x26
        /* "test/solidity/Protocol.t.sol":31459:31569  _counterparty = accounts[_bound(uint256(keccak256(abi.encode(seed, "counterparty"))), 0, accounts.length - 1)] */
      dup1
      sload
      not(sub(shl(0xa0, 0x01), 0x01))
      and
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":31475:31569  accounts[_bound(uint256(keccak256(abi.encode(seed, "counterparty"))), 0, accounts.length - 1)] */
      swap1
      swap3
      and
        /* "test/solidity/Protocol.t.sol":31459:31569  _counterparty = accounts[_bound(uint256(keccak256(abi.encode(seed, "counterparty"))), 0, accounts.length - 1)] */
      swap2
      swap1
      swap2
      or
      swap1
      sstore
        /* "test/solidity/Protocol.t.sol":31628:31658  abi.encode(seed, "collateral") */
      mload(0x40)
        /* "test/solidity/Protocol.t.sol":31595:31602  markets */
      0x1c
      swap2
        /* "test/solidity/Protocol.t.sol":31603:31684  _bound(uint256(keccak256(abi.encode(seed, "collateral"))), 0, markets.length - 1) */
      tag_1282
      swap2
        /* "test/solidity/Protocol.t.sol":31628:31658  abi.encode(seed, "collateral") */
      tag_155
      swap2
        /* "test/solidity/Protocol.t.sol":31639:31643  seed */
      dup6
      swap2
        /* "test/solidity/Protocol.t.sol":31628:31658  abi.encode(seed, "collateral") */
      add
      tag_177
      jump	// in
        /* "test/solidity/Protocol.t.sol":31603:31684  _bound(uint256(keccak256(abi.encode(seed, "collateral"))), 0, markets.length - 1) */
    tag_1282:
        /* "test/solidity/Protocol.t.sol":31595:31685  markets[_bound(uint256(keccak256(abi.encode(seed, "collateral"))), 0, markets.length - 1)] */
      dup2
      sload
      dup2
      lt
      tag_1286
      jumpi
      tag_1286
      tag_162
      jump	// in
    tag_1286:
      0x00
      swap2
      dup3
      mstore
      0x20
      swap1
      swap2
      keccak256
      add
      sload
        /* "test/solidity/Protocol.t.sol":31575:31592  _collateralMarket */
      0x27
        /* "test/solidity/Protocol.t.sol":31575:31685  _collateralMarket = markets[_bound(uint256(keccak256(abi.encode(seed, "collateral"))), 0, markets.length - 1)] */
      dup1
      sload
      not(sub(shl(0xa0, 0x01), 0x01))
      and
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":31595:31685  markets[_bound(uint256(keccak256(abi.encode(seed, "collateral"))), 0, markets.length - 1)] */
      swap1
      swap3
      and
        /* "test/solidity/Protocol.t.sol":31575:31685  _collateralMarket = markets[_bound(uint256(keccak256(abi.encode(seed, "collateral"))), 0, markets.length - 1)] */
      swap2
      swap1
      swap2
      or
      swap1
      sstore
        /* "contracts/utils/FixedLib.sol":306:313  4 weeks */
      0x24ea00
        /* "test/solidity/Protocol.t.sol":31722:31757  block.timestamp % FixedLib.INTERVAL */
      tag_1288
        /* "contracts/utils/FixedLib.sol":306:313  4 weeks */
      dup2
        /* "test/solidity/Protocol.t.sol":31722:31737  block.timestamp */
      timestamp
        /* "test/solidity/Protocol.t.sol":31722:31757  block.timestamp % FixedLib.INTERVAL */
      tag_183
      jump	// in
    tag_1288:
        /* "test/solidity/Protocol.t.sol":31703:31758  block.timestamp - (block.timestamp % FixedLib.INTERVAL) */
      tag_1289
      swap1
        /* "test/solidity/Protocol.t.sol":31703:31718  block.timestamp */
      timestamp
        /* "test/solidity/Protocol.t.sol":31703:31758  block.timestamp - (block.timestamp % FixedLib.INTERVAL) */
      tag_158
      jump	// in
    tag_1289:
        /* "test/solidity/Protocol.t.sol":31703:31778  block.timestamp - (block.timestamp % FixedLib.INTERVAL) + FixedLib.INTERVAL */
      tag_1290
      swap2
      swap1
      tag_186
      jump	// in
    tag_1290:
        /* "test/solidity/Protocol.t.sol":31691:31700  _maturity */
      0x25
        /* "test/solidity/Protocol.t.sol":31691:31778  _maturity = block.timestamp - (block.timestamp % FixedLib.INTERVAL) + FixedLib.INTERVAL */
      sstore
        /* "test/solidity/Protocol.t.sol":31784:31809  vm.startPrank(msg.sender) */
      mload(0x40)
      shl(0xe1, 0x03223eab)
      dup2
      mstore
        /* "test/solidity/Protocol.t.sol":31798:31808  msg.sender */
      caller
        /* "test/solidity/Protocol.t.sol":31784:31809  vm.startPrank(msg.sender) */
      0x04
      dup3
      add
        /* "#utility.yul":7560:7611   */
      mstore
      0x00
      dup1
      mload
      0x20
      data_1a390d6c2ee89e11d2dffeb86f753e43f966d02cbb0b3bd3e6e1cdf50245ef50
      dup4
      codecopy
      dup2
      mload
      swap2
      mstore
        /* "test/solidity/Protocol.t.sol":31784:31797  vm.startPrank */
      swap1
      0x06447d56
      swap1
        /* "#utility.yul":7533:7551   */
      0x24
      add
        /* "test/solidity/Protocol.t.sol":31784:31809  vm.startPrank(msg.sender) */
      0x00
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      0x00
      dup8
      dup1
      extcodesize
      iszero
      dup1
      iszero
      tag_1292
      jumpi
      0x00
      dup1
      revert
    tag_1292:
      pop
      gas
      call
      iszero
      dup1
      iszero
      tag_1294
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_1294:
      pop
      pop
      pop
      pop
        /* "test/solidity/Protocol.t.sol":20766:20772  assets */
      dup3
        /* "test/solidity/Protocol.t.sol":32127:32742  modifier _liquidity(uint256 assets) {... */
      0xffffffffffffff
      and
        /* "test/solidity/Protocol.t.sol":32177:32194  uint256 liquidity */
      0x00
        /* "test/solidity/Protocol.t.sol":32197:32244  assets.divWadUp(1e18 - _market.reserveFactor()) */
      tag_1296
        /* "test/solidity/Protocol.t.sol":32220:32227  _market */
      0x23
      0x00
      swap1
      sload
      swap1
      0x0100
      exp
      swap1
      div
      sub(shl(0xa0, 0x01), 0x01)
      and
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":32220:32241  _market.reserveFactor */
      and
      0x4322b714
        /* "test/solidity/Protocol.t.sol":32220:32243  _market.reserveFactor() */
      mload(0x40)
      dup2
      0xffffffff
      and
      0xe0
      shl
      dup2
      mstore
      0x04
      add
      0x20
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      dup7
      gas
      staticcall
      iszero
      dup1
      iszero
      tag_1298
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_1298:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      dup2
      add
      swap1
      tag_1299
      swap2
      swap1
      tag_955
      jump	// in
    tag_1299:
        /* "test/solidity/Protocol.t.sol":32213:32243  1e18 - _market.reserveFactor() */
      tag_1300
      swap1
        /* "test/solidity/Protocol.t.sol":32213:32217  1e18 */
      0x0de0b6b3a7640000
        /* "test/solidity/Protocol.t.sol":32213:32243  1e18 - _market.reserveFactor() */
      tag_957
      jump	// in
    tag_1300:
        /* "test/solidity/Protocol.t.sol":32197:32203  assets */
      dup4
      swap1
      sub(shl(0x80, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":32197:32244  assets.divWadUp(1e18 - _market.reserveFactor()) */
      and
        /* "test/solidity/Protocol.t.sol":32197:32212  assets.divWadUp */
      tag_761
        /* "test/solidity/Protocol.t.sol":32197:32244  assets.divWadUp(1e18 - _market.reserveFactor()) */
      jump	// in
    tag_1296:
        /* "test/solidity/Protocol.t.sol":32177:32244  uint256 liquidity = assets.divWadUp(1e18 - _market.reserveFactor()) */
      swap1
      pop
        /* "test/solidity/Protocol.t.sol":32471:32485  liquidity != 0 */
      dup1
      iszero
        /* "test/solidity/Protocol.t.sol":32467:32725  if (liquidity != 0) {... */
      tag_1301
      jumpi
        /* "test/solidity/Protocol.t.sol":32514:32524  msg.sender */
      caller
        /* "test/solidity/Protocol.t.sol":32534:32560  changePrank(address(this)) */
      tag_1302
        /* "test/solidity/Protocol.t.sol":32554:32558  this */
      address
        /* "test/solidity/Protocol.t.sol":32534:32545  changePrank */
      tag_549
        /* "test/solidity/Protocol.t.sol":32534:32560  changePrank(address(this)) */
      jump	// in
    tag_1302:
        /* "test/solidity/Protocol.t.sol":32588:32595  _market */
      0x23
      0x00
      swap1
      sload
      swap1
      0x0100
      exp
      swap1
      div
      sub(shl(0xa0, 0x01), 0x01)
      and
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":32588:32601  _market.asset */
      and
      0x38d52e0f
        /* "test/solidity/Protocol.t.sol":32588:32603  _market.asset() */
      mload(0x40)
      dup2
      0xffffffff
      and
      0xe0
      shl
      dup2
      mstore
      0x04
      add
      0x20
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      dup7
      gas
      staticcall
      iszero
      dup1
      iszero
      tag_1304
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_1304:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      dup2
      add
      swap1
      tag_1305
      swap2
      swap1
      tag_167
      jump	// in
    tag_1305:
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":32570:32610  MockERC20(address(_market.asset())).mint */
      and
      0x40c10f19
        /* "test/solidity/Protocol.t.sol":32619:32623  this */
      address
        /* "test/solidity/Protocol.t.sol":32626:32635  liquidity */
      dup5
        /* "test/solidity/Protocol.t.sol":32570:32636  MockERC20(address(_market.asset())).mint(address(this), liquidity) */
      mload(0x40)
      dup4
      0xffffffff
      and
      0xe0
      shl
      dup2
      mstore
      0x04
      add
      tag_1306
      swap3
      swap2
      swap1
      tag_345
      jump	// in
    tag_1306:
      0x00
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      0x00
      dup8
      dup1
      extcodesize
      iszero
      dup1
      iszero
      tag_1307
      jumpi
      0x00
      dup1
      revert
    tag_1307:
      pop
      gas
      call
      iszero
      dup1
      iszero
      tag_1309
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_1309:
      pop
      pop
        /* "test/solidity/Protocol.t.sol":32646:32653  _market */
      sload(0x23)
        /* "test/solidity/Protocol.t.sol":32646:32687  _market.deposit(liquidity, address(this)) */
      mload(0x40)
      shl(0xe0, 0x6e553f65)
      dup2
      mstore
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":32646:32653  _market */
      swap1
      swap2
      and
      swap3
      pop
        /* "test/solidity/Protocol.t.sol":32646:32661  _market.deposit */
      0x6e553f65
      swap2
      pop
        /* "test/solidity/Protocol.t.sol":32646:32687  _market.deposit(liquidity, address(this)) */
      tag_1310
      swap1
        /* "test/solidity/Protocol.t.sol":32662:32671  liquidity */
      dup6
      swap1
        /* "test/solidity/Protocol.t.sol":32681:32685  this */
      address
      swap1
        /* "test/solidity/Protocol.t.sol":32646:32687  _market.deposit(liquidity, address(this)) */
      0x04
      add
      tag_555
      jump	// in
    tag_1310:
      0x20
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      0x00
      dup8
      gas
      call
      iszero
      dup1
      iszero
      tag_1312
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_1312:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      dup2
      add
      swap1
      tag_1313
      swap2
      swap1
      tag_212
      jump	// in
    tag_1313:
      pop
        /* "test/solidity/Protocol.t.sol":32697:32716  changePrank(sender) */
      tag_1314
        /* "test/solidity/Protocol.t.sol":32709:32715  sender */
      dup2
        /* "test/solidity/Protocol.t.sol":32697:32708  changePrank */
      tag_549
        /* "test/solidity/Protocol.t.sol":32697:32716  changePrank(sender) */
      jump	// in
    tag_1314:
        /* "test/solidity/Protocol.t.sol":32487:32725  {... */
      pop
        /* "test/solidity/Protocol.t.sol":32467:32725  if (liquidity != 0) {... */
    tag_1301:
        /* "test/solidity/Protocol.t.sol":32169:32731  {... */
      pop
        /* "test/solidity/Protocol.t.sol":20786:20792  assets */
      dup4
        /* "test/solidity/Protocol.t.sol":33304:34233  modifier _collateral(uint256 assets, address account) {... */
      0xffffffffffffff
      and
        /* "test/solidity/Protocol.t.sol":20794:20804  msg.sender */
      caller
        /* "test/solidity/Protocol.t.sol":33372:33400  Auditor.MarketData memory md */
      tag_1316
      tag_974
      jump	// in
    tag_1316:
        /* "test/solidity/Protocol.t.sol":33408:33436  Auditor.MarketData memory cd */
      tag_1317
      tag_974
      jump	// in
    tag_1317:
        /* "test/solidity/Protocol.t.sol":33514:33521  auditor */
      sload(0x1b)
        /* "test/solidity/Protocol.t.sol":33530:33537  _market */
      sload(0x23)
        /* "test/solidity/Protocol.t.sol":33514:33538  auditor.markets(_market) */
      mload(0x40)
      shl(0xe0, 0x8e8f294b)
      dup2
      mstore
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":33530:33537  _market */
      swap2
      dup3
      and
        /* "test/solidity/Protocol.t.sol":33514:33538  auditor.markets(_market) */
      0x04
      dup3
      add
        /* "#utility.yul":7560:7611   */
      mstore
        /* "test/solidity/Protocol.t.sol":33514:33521  auditor */
      swap2
      and
      swap1
        /* "test/solidity/Protocol.t.sol":33514:33529  auditor.markets */
      0x8e8f294b
      swap1
        /* "#utility.yul":7533:7551   */
      0x24
      add
        /* "test/solidity/Protocol.t.sol":33514:33538  auditor.markets(_market) */
      0xa0
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      dup7
      gas
      staticcall
      iszero
      dup1
      iszero
      tag_1320
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_1320:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      dup2
      add
      swap1
      tag_1321
      swap2
      swap1
      tag_198
      jump	// in
    tag_1321:
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":33444:33538  (md.adjustFactor, md.decimals, md.index, md.isListed, md.priceFeed) = auditor.markets(_market) */
      swap1
      dup2
      and
        /* "test/solidity/Protocol.t.sol":33498:33510  md.priceFeed */
      0x80
      dup9
      add
        /* "test/solidity/Protocol.t.sol":33444:33538  (md.adjustFactor, md.decimals, md.index, md.isListed, md.priceFeed) = auditor.markets(_market) */
      mstore
      swap1
      iszero
      iszero
        /* "test/solidity/Protocol.t.sol":33485:33496  md.isListed */
      0x60
      dup8
      add
        /* "test/solidity/Protocol.t.sol":33444:33538  (md.adjustFactor, md.decimals, md.index, md.isListed, md.priceFeed) = auditor.markets(_market) */
      mstore
      0xff
      swap2
      dup3
      and
        /* "test/solidity/Protocol.t.sol":33475:33483  md.index */
      0x40
      dup1
      dup9
      add
        /* "test/solidity/Protocol.t.sol":33444:33538  (md.adjustFactor, md.decimals, md.index, md.isListed, md.priceFeed) = auditor.markets(_market) */
      swap2
      swap1
      swap2
      mstore
      swap3
      swap1
      swap2
      and
      0x20
        /* "test/solidity/Protocol.t.sol":33462:33473  md.decimals */
      dup7
      add
        /* "test/solidity/Protocol.t.sol":33444:33538  (md.adjustFactor, md.decimals, md.index, md.isListed, md.priceFeed) = auditor.markets(_market) */
      mstore
      sub(shl(0x80, 0x01), 0x01)
      swap3
      swap1
      swap3
      and
      dup5
      mstore
        /* "test/solidity/Protocol.t.sol":33616:33623  auditor */
      sload(0x1b)
        /* "test/solidity/Protocol.t.sol":33632:33649  _collateralMarket */
      sload(0x27)
        /* "test/solidity/Protocol.t.sol":33616:33650  auditor.markets(_collateralMarket) */
      swap2
      mload
      shl(0xe0, 0x8e8f294b)
      dup2
      mstore
        /* "test/solidity/Protocol.t.sol":33632:33649  _collateralMarket */
      swap2
      dup4
      and
        /* "test/solidity/Protocol.t.sol":33616:33650  auditor.markets(_collateralMarket) */
      0x04
      dup4
      add
        /* "#utility.yul":7560:7611   */
      mstore
        /* "test/solidity/Protocol.t.sol":33616:33623  auditor */
      swap1
      swap2
      and
      swap1
        /* "test/solidity/Protocol.t.sol":33616:33631  auditor.markets */
      0x8e8f294b
      swap1
        /* "#utility.yul":7533:7551   */
      0x24
      add
        /* "test/solidity/Protocol.t.sol":33616:33650  auditor.markets(_collateralMarket) */
      0xa0
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      dup7
      gas
      staticcall
      iszero
      dup1
      iszero
      tag_1324
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_1324:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      dup2
      add
      swap1
      tag_1325
      swap2
      swap1
      tag_198
      jump	// in
    tag_1325:
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":33546:33650  (cd.adjustFactor, cd.decimals, cd.index, cd.isListed, cd.priceFeed) = auditor.markets(_collateralMarket) */
      and
        /* "test/solidity/Protocol.t.sol":33600:33612  cd.priceFeed */
      0x80
      dup7
      add
        /* "test/solidity/Protocol.t.sol":33546:33650  (cd.adjustFactor, cd.decimals, cd.index, cd.isListed, cd.priceFeed) = auditor.markets(_collateralMarket) */
      mstore
      iszero
      iszero
        /* "test/solidity/Protocol.t.sol":33587:33598  cd.isListed */
      0x60
      dup6
      add
        /* "test/solidity/Protocol.t.sol":33546:33650  (cd.adjustFactor, cd.decimals, cd.index, cd.isListed, cd.priceFeed) = auditor.markets(_collateralMarket) */
      mstore
      0xff
      swap1
      dup2
      and
        /* "test/solidity/Protocol.t.sol":33577:33585  cd.index */
      0x40
      dup6
      add
        /* "test/solidity/Protocol.t.sol":33546:33650  (cd.adjustFactor, cd.decimals, cd.index, cd.isListed, cd.priceFeed) = auditor.markets(_collateralMarket) */
      mstore
      and
        /* "test/solidity/Protocol.t.sol":33564:33575  cd.decimals */
      0x20
      dup4
      add
        /* "test/solidity/Protocol.t.sol":33546:33650  (cd.adjustFactor, cd.decimals, cd.index, cd.isListed, cd.priceFeed) = auditor.markets(_collateralMarket) */
      dup2
      swap1
      mstore
      sub(shl(0x80, 0x01), 0x01)
      swap1
      swap2
      and
      dup3
      mstore
        /* "test/solidity/Protocol.t.sol":33547:33562  cd.adjustFactor */
      0x00
      swap1
        /* "test/solidity/Protocol.t.sol":33679:33897  assets... */
      tag_1326
      swap1
        /* "test/solidity/Protocol.t.sol":33845:33862  10 ** cd.decimals */
      tag_1327
      swap1
        /* "test/solidity/Protocol.t.sol":33845:33847  10 */
      0x0a
        /* "test/solidity/Protocol.t.sol":33845:33862  10 ** cd.decimals */
      tag_987
      jump	// in
    tag_1327:
        /* "test/solidity/Protocol.t.sol":33864:33871  auditor */
      sload(0x1b)
        /* "test/solidity/Protocol.t.sol":33883:33895  cd.priceFeed */
      0x80
      dup6
      add
      mload
        /* "test/solidity/Protocol.t.sol":33864:33896  auditor.assetPrice(cd.priceFeed) */
      mload(0x40)
      shl(0xe3, 0x1710760b)
      dup2
      mstore
      sub(shl(0xa0, 0x01), 0x01)
        /* "#utility.yul":7578:7610   */
      swap2
      dup3
      and
        /* "test/solidity/Protocol.t.sol":33864:33896  auditor.assetPrice(cd.priceFeed) */
      0x04
      dup3
      add
        /* "#utility.yul":7560:7611   */
      mstore
        /* "test/solidity/Protocol.t.sol":33864:33871  auditor */
      swap2
      and
      swap1
        /* "test/solidity/Protocol.t.sol":33864:33882  auditor.assetPrice */
      0xb883b058
      swap1
        /* "#utility.yul":7533:7551   */
      0x24
      add
        /* "test/solidity/Protocol.t.sol":33864:33896  auditor.assetPrice(cd.priceFeed) */
      0x20
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      dup7
      gas
      staticcall
      iszero
      dup1
      iszero
      tag_1330
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_1330:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      dup2
      add
      swap1
      tag_1331
      swap2
      swap1
      tag_212
      jump	// in
    tag_1331:
        /* "test/solidity/Protocol.t.sol":33810:33825  cd.adjustFactor */
      dup5
      mload
        /* "test/solidity/Protocol.t.sol":33775:33790  md.adjustFactor */
      dup7
      mload
        /* "test/solidity/Protocol.t.sol":33704:33711  auditor */
      sload(0x1b)
        /* "test/solidity/Protocol.t.sol":33723:33735  md.priceFeed */
      0x80
      dup10
      add
      mload
        /* "test/solidity/Protocol.t.sol":33704:33736  auditor.assetPrice(md.priceFeed) */
      mload(0x40)
      shl(0xe3, 0x1710760b)
      dup2
      mstore
      sub(shl(0xa0, 0x01), 0x01)
        /* "#utility.yul":7578:7610   */
      swap2
      dup3
      and
        /* "test/solidity/Protocol.t.sol":33704:33736  auditor.assetPrice(md.priceFeed) */
      0x04
      dup3
      add
        /* "#utility.yul":7560:7611   */
      mstore
        /* "test/solidity/Protocol.t.sol":33679:33826  assets... */
      tag_1003
      swap5
      sub(shl(0x80, 0x01), 0x01)
      swap1
      dup2
      and
      swap5
        /* "test/solidity/Protocol.t.sol":33679:33791  assets... */
      tag_760
      swap5
      swap2
      and
      swap3
      dup5
      swap3
        /* "test/solidity/Protocol.t.sol":33704:33711  auditor */
      swap2
      and
      swap1
        /* "test/solidity/Protocol.t.sol":33704:33722  auditor.assetPrice */
      0xb883b058
      swap1
        /* "#utility.yul":7533:7551   */
      0x24
      add
        /* "test/solidity/Protocol.t.sol":33704:33736  auditor.assetPrice(md.priceFeed) */
      0x20
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      dup7
      gas
      staticcall
      iszero
      dup1
      iszero
      tag_1337
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_1337:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      dup2
      add
      swap1
      tag_1338
      swap2
      swap1
      tag_212
      jump	// in
    tag_1338:
        /* "test/solidity/Protocol.t.sol":33744:33755  md.decimals */
      0x20
      dup13
      add
      mload
        /* "test/solidity/Protocol.t.sol":33738:33755  10 ** md.decimals */
      tag_1339
      swap1
        /* "test/solidity/Protocol.t.sol":33738:33740  10 */
      0x0a
        /* "test/solidity/Protocol.t.sol":33738:33755  10 ** md.decimals */
      tag_987
      jump	// in
    tag_1339:
        /* "test/solidity/Protocol.t.sol":33679:33685  assets */
      dup15
      swap2
        /* "test/solidity/Protocol.t.sol":33679:33756  assets... */
      swap1
        /* "test/solidity/Protocol.t.sol":33679:33703  assets... */
      tag_988
        /* "test/solidity/Protocol.t.sol":33679:33756  assets... */
      jump	// in
        /* "test/solidity/Protocol.t.sol":33679:33897  assets... */
    tag_1326:
        /* "test/solidity/Protocol.t.sol":33658:33897  uint256 collateral = assets... */
      swap1
      pop
        /* "test/solidity/Protocol.t.sol":33909:33924  collateral != 0 */
      dup1
      iszero
        /* "test/solidity/Protocol.t.sol":33905:34216  if (collateral != 0) {... */
      tag_1340
      jumpi
        /* "test/solidity/Protocol.t.sol":33953:33963  msg.sender */
      caller
        /* "test/solidity/Protocol.t.sol":33973:33993  changePrank(account) */
      tag_1341
        /* "test/solidity/Protocol.t.sol":33985:33992  account */
      dup6
        /* "test/solidity/Protocol.t.sol":33973:33984  changePrank */
      tag_549
        /* "test/solidity/Protocol.t.sol":33973:33993  changePrank(account) */
      jump	// in
    tag_1341:
        /* "test/solidity/Protocol.t.sol":34021:34038  _collateralMarket */
      0x27
      0x00
      swap1
      sload
      swap1
      0x0100
      exp
      swap1
      div
      sub(shl(0xa0, 0x01), 0x01)
      and
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":34021:34044  _collateralMarket.asset */
      and
      0x38d52e0f
        /* "test/solidity/Protocol.t.sol":34021:34046  _collateralMarket.asset() */
      mload(0x40)
      dup2
      0xffffffff
      and
      0xe0
      shl
      dup2
      mstore
      0x04
      add
      0x20
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      dup7
      gas
      staticcall
      iszero
      dup1
      iszero
      tag_1343
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_1343:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      dup2
      add
      swap1
      tag_1344
      swap2
      swap1
      tag_167
      jump	// in
    tag_1344:
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":34003:34053  MockERC20(address(_collateralMarket.asset())).mint */
      and
      0x40c10f19
        /* "test/solidity/Protocol.t.sol":34054:34061  account */
      dup7
        /* "test/solidity/Protocol.t.sol":34063:34073  collateral */
      dup5
        /* "test/solidity/Protocol.t.sol":34003:34074  MockERC20(address(_collateralMarket.asset())).mint(account, collateral) */
      mload(0x40)
      dup4
      0xffffffff
      and
      0xe0
      shl
      dup2
      mstore
      0x04
      add
      tag_1345
      swap3
      swap2
      swap1
      tag_345
      jump	// in
    tag_1345:
      0x00
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      0x00
      dup8
      dup1
      extcodesize
      iszero
      dup1
      iszero
      tag_1346
      jumpi
      0x00
      dup1
      revert
    tag_1346:
      pop
      gas
      call
      iszero
      dup1
      iszero
      tag_1348
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_1348:
      pop
      pop
        /* "test/solidity/Protocol.t.sol":34084:34101  _collateralMarket */
      sload(0x27)
        /* "test/solidity/Protocol.t.sol":34084:34130  _collateralMarket.deposit(collateral, account) */
      mload(0x40)
      shl(0xe0, 0x6e553f65)
      dup2
      mstore
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":34084:34101  _collateralMarket */
      swap1
      swap2
      and
      swap3
      pop
        /* "test/solidity/Protocol.t.sol":34084:34109  _collateralMarket.deposit */
      0x6e553f65
      swap2
      pop
        /* "test/solidity/Protocol.t.sol":34084:34130  _collateralMarket.deposit(collateral, account) */
      tag_1349
      swap1
        /* "test/solidity/Protocol.t.sol":34110:34120  collateral */
      dup6
      swap1
        /* "test/solidity/Protocol.t.sol":34122:34129  account */
      dup10
      swap1
        /* "test/solidity/Protocol.t.sol":34084:34130  _collateralMarket.deposit(collateral, account) */
      0x04
      add
      tag_555
      jump	// in
    tag_1349:
      0x20
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      0x00
      dup8
      gas
      call
      iszero
      dup1
      iszero
      tag_1351
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_1351:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      dup2
      add
      swap1
      tag_1352
      swap2
      swap1
      tag_212
      jump	// in
    tag_1352:
      pop
        /* "test/solidity/Protocol.t.sol":34140:34147  auditor */
      sload(0x1b)
        /* "test/solidity/Protocol.t.sol":34160:34177  _collateralMarket */
      sload(0x27)
        /* "test/solidity/Protocol.t.sol":34140:34178  auditor.enterMarket(_collateralMarket) */
      mload(0x40)
      shl(0xe0, 0x3fe5d425)
      dup2
      mstore
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":34160:34177  _collateralMarket */
      swap2
      dup3
      and
        /* "test/solidity/Protocol.t.sol":34140:34178  auditor.enterMarket(_collateralMarket) */
      0x04
      dup3
      add
        /* "#utility.yul":7560:7611   */
      mstore
        /* "test/solidity/Protocol.t.sol":34140:34147  auditor */
      swap2
      and
      swap1
        /* "test/solidity/Protocol.t.sol":34140:34159  auditor.enterMarket */
      0x3fe5d425
      swap1
        /* "#utility.yul":7533:7551   */
      0x24
      add
        /* "test/solidity/Protocol.t.sol":34140:34178  auditor.enterMarket(_collateralMarket) */
      0x00
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      0x00
      dup8
      dup1
      extcodesize
      iszero
      dup1
      iszero
      tag_1354
      jumpi
      0x00
      dup1
      revert
    tag_1354:
      pop
      gas
      call
      iszero
      dup1
      iszero
      tag_1356
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_1356:
      pop
      pop
      pop
      pop
        /* "test/solidity/Protocol.t.sol":34188:34207  changePrank(sender) */
      tag_1357
        /* "test/solidity/Protocol.t.sol":34200:34206  sender */
      dup2
        /* "test/solidity/Protocol.t.sol":34188:34199  changePrank */
      tag_549
        /* "test/solidity/Protocol.t.sol":34188:34207  changePrank(sender) */
      jump	// in
    tag_1357:
        /* "test/solidity/Protocol.t.sol":33926:34216  {... */
      pop
        /* "test/solidity/Protocol.t.sol":33905:34216  if (collateral != 0) {... */
    tag_1340:
      pop
      pop
        /* "test/solidity/Protocol.t.sol":20837:20844  _market */
      sload(0x23)
        /* "test/solidity/Protocol.t.sol":20837:20866  _market.previewBorrow(assets) */
      mload(0x40)
      shl(0xe0, 0x78007e23)
      dup2
      mstore
        /* "#utility.yul":24226:24242   */
      0xffffffffffffff
        /* "#utility.yul":24214:24243   */
      dup10
      and
        /* "test/solidity/Protocol.t.sol":20837:20866  _market.previewBorrow(assets) */
      0x04
      dup3
      add
        /* "#utility.yul":24196:24244   */
      mstore
        /* "test/solidity/Protocol.t.sol":20812:20834  uint256 expectedShares */
      0x00
      swap3
      pop
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":20837:20844  _market */
      swap1
      swap2
      and
      swap1
        /* "test/solidity/Protocol.t.sol":20837:20858  _market.previewBorrow */
      0x78007e23
      swap1
        /* "#utility.yul":24169:24187   */
      0x24
      add
        /* "test/solidity/Protocol.t.sol":20837:20866  _market.previewBorrow(assets) */
      0x20
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      dup7
      gas
      staticcall
      iszero
      dup1
      iszero
      tag_1361
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_1361:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      dup2
      add
      swap1
      tag_1362
      swap2
      swap1
      tag_212
      jump	// in
    tag_1362:
        /* "test/solidity/Protocol.t.sol":20945:20952  _market */
      sload(0x23)
        /* "test/solidity/Protocol.t.sol":20812:20866  uint256 expectedShares = _market.previewBorrow(assets) */
      swap1
      swap2
      pop
        /* "test/solidity/Protocol.t.sol":20873:20891  uint256 collateral */
      0x00
      swap1
      dup2
      swap1
        /* "test/solidity/Protocol.t.sol":20909:20977  previewAccountLiquidity(msg.sender, _market, assets, expectedShares) */
      tag_1363
      swap1
        /* "test/solidity/Protocol.t.sol":20933:20943  msg.sender */
      caller
      swap1
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":20945:20952  _market */
      and
        /* "test/solidity/Protocol.t.sol":20909:20977  previewAccountLiquidity(msg.sender, _market, assets, expectedShares) */
      0xffffffffffffff
      dup13
      and
        /* "test/solidity/Protocol.t.sol":20812:20866  uint256 expectedShares = _market.previewBorrow(assets) */
      dup7
        /* "test/solidity/Protocol.t.sol":20909:20932  previewAccountLiquidity */
      tag_1364
        /* "test/solidity/Protocol.t.sol":20909:20977  previewAccountLiquidity(msg.sender, _market, assets, expectedShares) */
      jump	// in
    tag_1363:
        /* "test/solidity/Protocol.t.sol":20872:20977  (uint256 collateral, uint256 debt) = previewAccountLiquidity(msg.sender, _market, assets, expectedShares) */
      swap2
      pop
      swap2
      pop
        /* "test/solidity/Protocol.t.sol":21083:21186  (_market.floatingAssets() + previewNewFloatingDebt(_market)).mulWadDown(1e18 - _market.reserveFactor()) */
      tag_1365
        /* "test/solidity/Protocol.t.sol":21162:21169  _market */
      0x23
      0x00
      swap1
      sload
      swap1
      0x0100
      exp
      swap1
      div
      sub(shl(0xa0, 0x01), 0x01)
      and
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":21162:21183  _market.reserveFactor */
      and
      0x4322b714
        /* "test/solidity/Protocol.t.sol":21162:21185  _market.reserveFactor() */
      mload(0x40)
      dup2
      0xffffffff
      and
      0xe0
      shl
      dup2
      mstore
      0x04
      add
      0x20
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      dup7
      gas
      staticcall
      iszero
      dup1
      iszero
      tag_1367
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_1367:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      dup2
      add
      swap1
      tag_1368
      swap2
      swap1
      tag_955
      jump	// in
    tag_1368:
        /* "test/solidity/Protocol.t.sol":21155:21185  1e18 - _market.reserveFactor() */
      tag_1369
      swap1
        /* "test/solidity/Protocol.t.sol":21155:21159  1e18 */
      0x0de0b6b3a7640000
        /* "test/solidity/Protocol.t.sol":21155:21185  1e18 - _market.reserveFactor() */
      tag_957
      jump	// in
    tag_1369:
        /* "test/solidity/Protocol.t.sol":21134:21141  _market */
      sload(0x23)
      sub(shl(0x80, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":21083:21186  (_market.floatingAssets() + previewNewFloatingDebt(_market)).mulWadDown(1e18 - _market.reserveFactor()) */
      swap2
      swap1
      swap2
      and
      swap1
        /* "test/solidity/Protocol.t.sol":21111:21142  previewNewFloatingDebt(_market) */
      tag_1370
      swap1
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":21134:21141  _market */
      and
        /* "test/solidity/Protocol.t.sol":21111:21133  previewNewFloatingDebt */
      tag_605
        /* "test/solidity/Protocol.t.sol":21111:21142  previewNewFloatingDebt(_market) */
      jump	// in
    tag_1370:
        /* "test/solidity/Protocol.t.sol":21084:21091  _market */
      0x23
      0x00
      swap1
      sload
      swap1
      0x0100
      exp
      swap1
      div
      sub(shl(0xa0, 0x01), 0x01)
      and
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":21084:21106  _market.floatingAssets */
      and
      0x2e0af008
        /* "test/solidity/Protocol.t.sol":21084:21108  _market.floatingAssets() */
      mload(0x40)
      dup2
      0xffffffff
      and
      0xe0
      shl
      dup2
      mstore
      0x04
      add
      0x20
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      dup7
      gas
      staticcall
      iszero
      dup1
      iszero
      tag_1372
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_1372:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      dup2
      add
      swap1
      tag_1373
      swap2
      swap1
      tag_212
      jump	// in
    tag_1373:
        /* "test/solidity/Protocol.t.sol":21084:21142  _market.floatingAssets() + previewNewFloatingDebt(_market) */
      tag_1374
      swap2
      swap1
      tag_186
      jump	// in
    tag_1374:
        /* "test/solidity/Protocol.t.sol":21083:21154  (_market.floatingAssets() + previewNewFloatingDebt(_market)).mulWadDown */
      swap1
      tag_1375
        /* "test/solidity/Protocol.t.sol":21083:21186  (_market.floatingAssets() + previewNewFloatingDebt(_market)).mulWadDown(1e18 - _market.reserveFactor()) */
      jump	// in
    tag_1365:
        /* "test/solidity/Protocol.t.sol":21030:21037  _market */
      sload(0x23)
        /* "test/solidity/Protocol.t.sol":21030:21065  _market.totalFloatingBorrowAssets() */
      0x40
      dup1
      mload
      shl(0xe5, 0x0777464f)
      dup2
      mstore
      swap1
      mload
        /* "test/solidity/Protocol.t.sol":20995:21074  _market.floatingBackupBorrowed() + _market.totalFloatingBorrowAssets() + assets */
      0xffffffffffffff
      dup14
      and
      swap3
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":21030:21037  _market */
      and
      swap2
        /* "test/solidity/Protocol.t.sol":21030:21063  _market.totalFloatingBorrowAssets */
      0xeee8c9e0
      swap2
        /* "test/solidity/Protocol.t.sol":21030:21065  _market.totalFloatingBorrowAssets() */
      0x04
      dup1
      dup4
      add
      swap3
      0x20
      swap3
      swap2
      swap1
      dup3
      swap1
      sub
      add
      dup2
        /* "test/solidity/Protocol.t.sol":21030:21037  _market */
      dup7
        /* "test/solidity/Protocol.t.sol":21030:21065  _market.totalFloatingBorrowAssets() */
      gas
      staticcall
      iszero
      dup1
      iszero
      tag_1377
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_1377:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      dup2
      add
      swap1
      tag_1378
      swap2
      swap1
      tag_212
      jump	// in
    tag_1378:
        /* "test/solidity/Protocol.t.sol":20995:21002  _market */
      0x23
      0x00
      swap1
      sload
      swap1
      0x0100
      exp
      swap1
      div
      sub(shl(0xa0, 0x01), 0x01)
      and
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":20995:21025  _market.floatingBackupBorrowed */
      and
      0x8c3cba5a
        /* "test/solidity/Protocol.t.sol":20995:21027  _market.floatingBackupBorrowed() */
      mload(0x40)
      dup2
      0xffffffff
      and
      0xe0
      shl
      dup2
      mstore
      0x04
      add
      0x20
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      dup7
      gas
      staticcall
      iszero
      dup1
      iszero
      tag_1380
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_1380:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      dup2
      add
      swap1
      tag_1381
      swap2
      swap1
      tag_212
      jump	// in
    tag_1381:
        /* "test/solidity/Protocol.t.sol":20995:21065  _market.floatingBackupBorrowed() + _market.totalFloatingBorrowAssets() */
      tag_1382
      swap2
      swap1
      tag_186
      jump	// in
    tag_1382:
        /* "test/solidity/Protocol.t.sol":20995:21074  _market.floatingBackupBorrowed() + _market.totalFloatingBorrowAssets() + assets */
      tag_1383
      swap2
      swap1
      tag_186
      jump	// in
    tag_1383:
        /* "test/solidity/Protocol.t.sol":20995:21186  _market.floatingBackupBorrowed() + _market.totalFloatingBorrowAssets() + assets >... */
      gt
        /* "test/solidity/Protocol.t.sol":20984:21612  if (... */
      iszero
      tag_1384
      jumpi
        /* "test/solidity/Protocol.t.sol":21201:21256  vm.expectRevert(InsufficientProtocolLiquidity.selector) */
      mload(0x40)
      shl(0xe5, 0x0618f587)
      dup2
      mstore
      0x00
      dup1
      mload
      0x20
      data_1a390d6c2ee89e11d2dffeb86f753e43f966d02cbb0b3bd3e6e1cdf50245ef50
      dup4
      codecopy
      dup2
      mload
      swap2
      mstore
        /* "test/solidity/Protocol.t.sol":21201:21216  vm.expectRevert */
      swap1
      0xc31eb0e0
      swap1
        /* "test/solidity/Protocol.t.sol":21201:21256  vm.expectRevert(InsufficientProtocolLiquidity.selector) */
      tag_1385
      swap1
      shl(0xe3, 0x2d41ad)
        /* "test/solidity/Protocol.t.sol":21217:21255  InsufficientProtocolLiquidity.selector */
      swap1
        /* "test/solidity/Protocol.t.sol":21201:21256  vm.expectRevert(InsufficientProtocolLiquidity.selector) */
      0x04
      add
      tag_216
      jump	// in
    tag_1385:
      0x00
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      0x00
      dup8
      dup1
      extcodesize
      iszero
      dup1
      iszero
      tag_1386
      jumpi
      0x00
      dup1
      revert
    tag_1386:
      pop
      gas
      call
      iszero
      dup1
      iszero
      tag_1388
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_1388:
      pop
      pop
      pop
      pop
        /* "test/solidity/Protocol.t.sol":20984:21612  if (... */
      jump(tag_1405)
    tag_1384:
        /* "test/solidity/Protocol.t.sol":21280:21290  collateral */
      dup2
        /* "test/solidity/Protocol.t.sol":21273:21277  debt */
      dup2
        /* "test/solidity/Protocol.t.sol":21273:21290  debt > collateral */
      gt
        /* "test/solidity/Protocol.t.sol":21269:21612  if (debt > collateral) {... */
      iszero
      tag_1390
      jumpi
        /* "test/solidity/Protocol.t.sol":21300:21354  vm.expectRevert(InsufficientAccountLiquidity.selector) */
      mload(0x40)
      shl(0xe5, 0x0618f587)
      dup2
      mstore
      0x00
      dup1
      mload
      0x20
      data_1a390d6c2ee89e11d2dffeb86f753e43f966d02cbb0b3bd3e6e1cdf50245ef50
      dup4
      codecopy
      dup2
      mload
      swap2
      mstore
        /* "test/solidity/Protocol.t.sol":21300:21315  vm.expectRevert */
      swap1
      0xc31eb0e0
      swap1
        /* "test/solidity/Protocol.t.sol":21300:21354  vm.expectRevert(InsufficientAccountLiquidity.selector) */
      tag_1385
      swap1
      shl(0xe1, 0x0aeac0bb)
        /* "test/solidity/Protocol.t.sol":21316:21353  InsufficientAccountLiquidity.selector */
      swap1
        /* "test/solidity/Protocol.t.sol":21300:21354  vm.expectRevert(InsufficientAccountLiquidity.selector) */
      0x04
      add
      tag_216
      jump	// in
        /* "test/solidity/Protocol.t.sol":21269:21612  if (debt > collateral) {... */
    tag_1390:
        /* "test/solidity/Protocol.t.sol":21380:21386  _asset */
      0x24
      dup1
      sload
        /* "test/solidity/Protocol.t.sol":21405:21412  _market */
      sload(0x23)
        /* "test/solidity/Protocol.t.sol":21380:21414  _asset.balanceOf(address(_market)) */
      mload(0x40)
      shl(0xe0, 0x70a08231)
      dup2
      mstore
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":21405:21412  _market */
      swap2
      dup3
      and
        /* "test/solidity/Protocol.t.sol":21380:21414  _asset.balanceOf(address(_market)) */
      0x04
      dup3
      add
        /* "#utility.yul":7560:7611   */
      mstore
        /* "test/solidity/Protocol.t.sol":21380:21386  _asset */
      swap2
      and
      swap2
        /* "test/solidity/Protocol.t.sol":21380:21396  _asset.balanceOf */
      0x70a08231
      swap2
        /* "#utility.yul":7533:7551   */
      add
        /* "test/solidity/Protocol.t.sol":21380:21414  _asset.balanceOf(address(_market)) */
      0x20
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      dup7
      gas
      staticcall
      iszero
      dup1
      iszero
      tag_1398
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_1398:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      dup2
      add
      swap1
      tag_1399
      swap2
      swap1
      tag_212
      jump	// in
    tag_1399:
        /* "test/solidity/Protocol.t.sol":21371:21377  assets */
      dup10
        /* "test/solidity/Protocol.t.sol":21371:21414  assets > _asset.balanceOf(address(_market)) */
      0xffffffffffffff
      and
      gt
        /* "test/solidity/Protocol.t.sol":21367:21612  if (assets > _asset.balanceOf(address(_market))) {... */
      iszero
      tag_1400
      jumpi
        /* "test/solidity/Protocol.t.sol":21440:21449  bytes("") */
      0x40
      dup1
      mload
      0x20
      dup2
      add
      dup3
      mstore
        /* "lib/forge-std/src/Base.sol":309:346  uint256(keccak256("hevm cheat code")) */
      0x00
        /* "test/solidity/Protocol.t.sol":21440:21449  bytes("") */
      dup2
      mstore
        /* "test/solidity/Protocol.t.sol":21424:21450  vm.expectRevert(bytes("")) */
      swap1
      mload
      shl(0xe0, 0xf28dceb3)
      dup2
      mstore
      0x00
      dup1
      mload
      0x20
      data_1a390d6c2ee89e11d2dffeb86f753e43f966d02cbb0b3bd3e6e1cdf50245ef50
      dup4
      codecopy
      dup2
      mload
      swap2
      mstore
        /* "test/solidity/Protocol.t.sol":21424:21439  vm.expectRevert */
      swap2
      0xf28dceb3
      swap2
        /* "test/solidity/Protocol.t.sol":21424:21450  vm.expectRevert(bytes("")) */
      tag_1385
      swap2
        /* "test/solidity/Protocol.t.sol":21440:21449  bytes("") */
      swap1
        /* "test/solidity/Protocol.t.sol":21424:21450  vm.expectRevert(bytes("")) */
      0x04
      add
      tag_599
      jump	// in
        /* "test/solidity/Protocol.t.sol":21367:21612  if (assets > _asset.balanceOf(address(_market))) {... */
    tag_1400:
        /* "test/solidity/Protocol.t.sol":21517:21524  _market */
      sload(0x23)
        /* "test/solidity/Protocol.t.sol":21471:21526  vm.expectEmit(true, true, true, true, address(_market)) */
      mload(0x40)
      shl(0xe0, 0x81bad6f3)
      dup2
      mstore
      0x00
      dup1
      mload
      0x20
      data_1a390d6c2ee89e11d2dffeb86f753e43f966d02cbb0b3bd3e6e1cdf50245ef50
      dup4
      codecopy
      dup2
      mload
      swap2
      mstore
        /* "test/solidity/Protocol.t.sol":21471:21484  vm.expectEmit */
      swap2
      0x81bad6f3
      swap2
        /* "test/solidity/Protocol.t.sol":21471:21526  vm.expectEmit(true, true, true, true, address(_market)) */
      tag_1406
      swap2
        /* "test/solidity/Protocol.t.sol":21485:21489  true */
      0x01
      swap2
      dup3
      swap2
      dup3
      swap2
      dup3
      swap2
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":21517:21524  _market */
      and
      swap1
        /* "test/solidity/Protocol.t.sol":21471:21526  vm.expectEmit(true, true, true, true, address(_market)) */
      0x04
      add
      tag_228
      jump	// in
    tag_1406:
      0x00
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      0x00
      dup8
      dup1
      extcodesize
      iszero
      dup1
      iszero
      tag_1407
      jumpi
      0x00
      dup1
      revert
    tag_1407:
      pop
      gas
      call
      iszero
      dup1
      iszero
      tag_1409
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_1409:
      pop
      pop
        /* "test/solidity/Protocol.t.sol":21539:21605  Borrow(msg.sender, msg.sender, msg.sender, assets, expectedShares) */
      0x40
      dup1
      mload
        /* "#utility.yul":23248:23264   */
      0xffffffffffffff
        /* "#utility.yul":23236:23265   */
      dup14
      and
        /* "#utility.yul":23218:23266   */
      dup2
      mstore
        /* "#utility.yul":23297:23299   */
      0x20
        /* "#utility.yul":23282:23300   */
      dup2
      add
        /* "#utility.yul":23275:23309   */
      dup8
      swap1
      mstore
        /* "test/solidity/Protocol.t.sol":21570:21580  msg.sender */
      caller
      swap4
      pop
      dup4
      swap3
      pop
      dup3
      swap2
        /* "test/solidity/Protocol.t.sol":21539:21605  Borrow(msg.sender, msg.sender, msg.sender, assets, expectedShares) */
      0x96558a334f4759f0e7c423d68c84721860bd8fbf94ddc4e55158ecb125ad04b5
      swap2
        /* "#utility.yul":23191:23209   */
      add
        /* "test/solidity/Protocol.t.sol":21539:21605  Borrow(msg.sender, msg.sender, msg.sender, assets, expectedShares) */
      mload(0x40)
      dup1
      swap2
      sub
      swap1
      log4
        /* "test/solidity/Protocol.t.sol":21367:21612  if (assets > _asset.balanceOf(address(_market))) {... */
    tag_1405:
        /* "test/solidity/Protocol.t.sol":21640:21647  _market */
      sload(0x23)
        /* "test/solidity/Protocol.t.sol":21640:21686  _market.borrow(assets, msg.sender, msg.sender) */
      mload(0x40)
      shl(0xe2, 0x35459061)
      dup2
      mstore
        /* "test/solidity/Protocol.t.sol":21617:21637  uint256 borrowShares */
      0x00
      swap2
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":21640:21647  _market */
      and
      swap1
        /* "test/solidity/Protocol.t.sol":21640:21654  _market.borrow */
      0xd5164184
      swap1
        /* "test/solidity/Protocol.t.sol":21640:21686  _market.borrow(assets, msg.sender, msg.sender) */
      tag_666
      swap1
        /* "test/solidity/Protocol.t.sol":21655:21661  assets */
      dup14
      swap1
        /* "test/solidity/Protocol.t.sol":21663:21673  msg.sender */
      caller
      swap1
      dup2
      swap1
        /* "test/solidity/Protocol.t.sol":21640:21686  _market.borrow(assets, msg.sender, msg.sender) */
      0x04
      add
      tag_667
      jump	// in
        /* "test/solidity/Protocol.t.sol":26531:27391  function transfer(... */
    tag_91:
        /* "test/solidity/Protocol.t.sol":31278:31285  _market */
      sload(0x23)
        /* "test/solidity/Protocol.t.sol":26607:26611  seed */
      dup2
      swap1
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":31278:31285  _market */
      and
        /* "test/solidity/Protocol.t.sol":31270:31300  address(_market) == address(0) */
      iszero
        /* "test/solidity/Protocol.t.sol":31263:31301  assert(address(_market) == address(0)) */
      tag_1425
      jumpi
      tag_1425
      tag_153
      jump	// in
    tag_1425:
        /* "test/solidity/Protocol.t.sol":31317:31324  markets */
      0x1c
        /* "test/solidity/Protocol.t.sol":31325:31402  _bound(uint256(keccak256(abi.encode(seed, "market"))), 0, markets.length - 1) */
      tag_1426
        /* "test/solidity/Protocol.t.sol":31361:31365  seed */
      dup3
        /* "test/solidity/Protocol.t.sol":31350:31376  abi.encode(seed, "market") */
      add(0x20, mload(0x40))
      tag_155
      swap2
      swap1
      tag_156
      jump	// in
        /* "test/solidity/Protocol.t.sol":31325:31402  _bound(uint256(keccak256(abi.encode(seed, "market"))), 0, markets.length - 1) */
    tag_1426:
        /* "test/solidity/Protocol.t.sol":31317:31403  markets[_bound(uint256(keccak256(abi.encode(seed, "market"))), 0, markets.length - 1)] */
      dup2
      sload
      dup2
      lt
      tag_1430
      jumpi
      tag_1430
      tag_162
      jump	// in
    tag_1430:
      0x00
      swap2
      dup3
      mstore
      0x20
      swap2
      dup3
      swap1
      keccak256
      add
      sload
        /* "test/solidity/Protocol.t.sol":31307:31314  _market */
      0x23
        /* "test/solidity/Protocol.t.sol":31307:31403  _market = markets[_bound(uint256(keccak256(abi.encode(seed, "market"))), 0, markets.length - 1)] */
      dup1
      sload
      not(sub(shl(0xa0, 0x01), 0x01))
      and
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":31317:31403  markets[_bound(uint256(keccak256(abi.encode(seed, "market"))), 0, markets.length - 1)] */
      swap1
      swap3
      and
        /* "test/solidity/Protocol.t.sol":31307:31403  _market = markets[_bound(uint256(keccak256(abi.encode(seed, "market"))), 0, markets.length - 1)] */
      swap2
      dup3
      or
      swap1
      sstore
        /* "test/solidity/Protocol.t.sol":31436:31451  _market.asset() */
      0x40
      dup1
      mload
      shl(0xe0, 0x38d52e0f)
      dup2
      mstore
      swap1
      mload
        /* "test/solidity/Protocol.t.sol":31317:31403  markets[_bound(uint256(keccak256(abi.encode(seed, "market"))), 0, markets.length - 1)] */
      swap2
      swap3
        /* "test/solidity/Protocol.t.sol":31436:31449  _market.asset */
      0x38d52e0f
      swap3
        /* "test/solidity/Protocol.t.sol":31436:31451  _market.asset() */
      0x04
      dup1
      dup5
      add
      swap4
      dup3
      swap1
      sub
      add
      dup2
        /* "test/solidity/Protocol.t.sol":31317:31403  markets[_bound(uint256(keccak256(abi.encode(seed, "market"))), 0, markets.length - 1)] */
      dup7
        /* "test/solidity/Protocol.t.sol":31436:31451  _market.asset() */
      gas
      staticcall
      iszero
      dup1
      iszero
      tag_1433
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_1433:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      dup2
      add
      swap1
      tag_1434
      swap2
      swap1
      tag_167
      jump	// in
    tag_1434:
        /* "test/solidity/Protocol.t.sol":31409:31415  _asset */
      0x24
      0x00
        /* "test/solidity/Protocol.t.sol":31409:31453  _asset = MockERC20(address(_market.asset())) */
      0x0100
      exp
      dup2
      sload
      dup2
      sub(shl(0xa0, 0x01), 0x01)
      mul
      not
      and
      swap1
      dup4
      sub(shl(0xa0, 0x01), 0x01)
      and
      mul
      or
      swap1
      sstore
      pop
        /* "test/solidity/Protocol.t.sol":31475:31483  accounts */
      0x1d
        /* "test/solidity/Protocol.t.sol":31484:31568  _bound(uint256(keccak256(abi.encode(seed, "counterparty"))), 0, accounts.length - 1) */
      tag_1435
        /* "test/solidity/Protocol.t.sol":31520:31524  seed */
      dup3
        /* "test/solidity/Protocol.t.sol":31509:31541  abi.encode(seed, "counterparty") */
      add(0x20, mload(0x40))
      tag_169
      swap2
      swap1
      tag_170
      jump	// in
        /* "test/solidity/Protocol.t.sol":31484:31568  _bound(uint256(keccak256(abi.encode(seed, "counterparty"))), 0, accounts.length - 1) */
    tag_1435:
        /* "test/solidity/Protocol.t.sol":31475:31569  accounts[_bound(uint256(keccak256(abi.encode(seed, "counterparty"))), 0, accounts.length - 1)] */
      dup2
      sload
      dup2
      lt
      tag_1439
      jumpi
      tag_1439
      tag_162
      jump	// in
    tag_1439:
      0x00
      swap2
      dup3
      mstore
      0x20
      swap2
      dup3
      swap1
      keccak256
      add
      sload
        /* "test/solidity/Protocol.t.sol":31459:31472  _counterparty */
      0x26
        /* "test/solidity/Protocol.t.sol":31459:31569  _counterparty = accounts[_bound(uint256(keccak256(abi.encode(seed, "counterparty"))), 0, accounts.length - 1)] */
      dup1
      sload
      not(sub(shl(0xa0, 0x01), 0x01))
      and
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":31475:31569  accounts[_bound(uint256(keccak256(abi.encode(seed, "counterparty"))), 0, accounts.length - 1)] */
      swap1
      swap3
      and
        /* "test/solidity/Protocol.t.sol":31459:31569  _counterparty = accounts[_bound(uint256(keccak256(abi.encode(seed, "counterparty"))), 0, accounts.length - 1)] */
      swap2
      swap1
      swap2
      or
      swap1
      sstore
        /* "test/solidity/Protocol.t.sol":31628:31658  abi.encode(seed, "collateral") */
      mload(0x40)
        /* "test/solidity/Protocol.t.sol":31595:31602  markets */
      0x1c
      swap2
        /* "test/solidity/Protocol.t.sol":31603:31684  _bound(uint256(keccak256(abi.encode(seed, "collateral"))), 0, markets.length - 1) */
      tag_1441
      swap2
        /* "test/solidity/Protocol.t.sol":31628:31658  abi.encode(seed, "collateral") */
      tag_155
      swap2
        /* "test/solidity/Protocol.t.sol":31639:31643  seed */
      dup6
      swap2
        /* "test/solidity/Protocol.t.sol":31628:31658  abi.encode(seed, "collateral") */
      add
      tag_177
      jump	// in
        /* "test/solidity/Protocol.t.sol":31603:31684  _bound(uint256(keccak256(abi.encode(seed, "collateral"))), 0, markets.length - 1) */
    tag_1441:
        /* "test/solidity/Protocol.t.sol":31595:31685  markets[_bound(uint256(keccak256(abi.encode(seed, "collateral"))), 0, markets.length - 1)] */
      dup2
      sload
      dup2
      lt
      tag_1445
      jumpi
      tag_1445
      tag_162
      jump	// in
    tag_1445:
      0x00
      swap2
      dup3
      mstore
      0x20
      swap1
      swap2
      keccak256
      add
      sload
        /* "test/solidity/Protocol.t.sol":31575:31592  _collateralMarket */
      0x27
        /* "test/solidity/Protocol.t.sol":31575:31685  _collateralMarket = markets[_bound(uint256(keccak256(abi.encode(seed, "collateral"))), 0, markets.length - 1)] */
      dup1
      sload
      not(sub(shl(0xa0, 0x01), 0x01))
      and
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":31595:31685  markets[_bound(uint256(keccak256(abi.encode(seed, "collateral"))), 0, markets.length - 1)] */
      swap1
      swap3
      and
        /* "test/solidity/Protocol.t.sol":31575:31685  _collateralMarket = markets[_bound(uint256(keccak256(abi.encode(seed, "collateral"))), 0, markets.length - 1)] */
      swap2
      swap1
      swap2
      or
      swap1
      sstore
        /* "contracts/utils/FixedLib.sol":306:313  4 weeks */
      0x24ea00
        /* "test/solidity/Protocol.t.sol":31722:31757  block.timestamp % FixedLib.INTERVAL */
      tag_1447
        /* "contracts/utils/FixedLib.sol":306:313  4 weeks */
      dup2
        /* "test/solidity/Protocol.t.sol":31722:31737  block.timestamp */
      timestamp
        /* "test/solidity/Protocol.t.sol":31722:31757  block.timestamp % FixedLib.INTERVAL */
      tag_183
      jump	// in
    tag_1447:
        /* "test/solidity/Protocol.t.sol":31703:31758  block.timestamp - (block.timestamp % FixedLib.INTERVAL) */
      tag_1448
      swap1
        /* "test/solidity/Protocol.t.sol":31703:31718  block.timestamp */
      timestamp
        /* "test/solidity/Protocol.t.sol":31703:31758  block.timestamp - (block.timestamp % FixedLib.INTERVAL) */
      tag_158
      jump	// in
    tag_1448:
        /* "test/solidity/Protocol.t.sol":31703:31778  block.timestamp - (block.timestamp % FixedLib.INTERVAL) + FixedLib.INTERVAL */
      tag_1449
      swap2
      swap1
      tag_186
      jump	// in
    tag_1449:
        /* "test/solidity/Protocol.t.sol":31691:31700  _maturity */
      0x25
        /* "test/solidity/Protocol.t.sol":31691:31778  _maturity = block.timestamp - (block.timestamp % FixedLib.INTERVAL) + FixedLib.INTERVAL */
      sstore
        /* "test/solidity/Protocol.t.sol":31784:31809  vm.startPrank(msg.sender) */
      mload(0x40)
      shl(0xe1, 0x03223eab)
      dup2
      mstore
        /* "test/solidity/Protocol.t.sol":31798:31808  msg.sender */
      caller
        /* "test/solidity/Protocol.t.sol":31784:31809  vm.startPrank(msg.sender) */
      0x04
      dup3
      add
        /* "#utility.yul":7560:7611   */
      mstore
      0x00
      dup1
      mload
      0x20
      data_1a390d6c2ee89e11d2dffeb86f753e43f966d02cbb0b3bd3e6e1cdf50245ef50
      dup4
      codecopy
      dup2
      mload
      swap2
      mstore
        /* "test/solidity/Protocol.t.sol":31784:31797  vm.startPrank */
      swap1
      0x06447d56
      swap1
        /* "#utility.yul":7533:7551   */
      0x24
      add
        /* "test/solidity/Protocol.t.sol":31784:31809  vm.startPrank(msg.sender) */
      0x00
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      0x00
      dup8
      dup1
      extcodesize
      iszero
      dup1
      iszero
      tag_1451
      jumpi
      0x00
      dup1
      revert
    tag_1451:
      pop
      gas
      call
      iszero
      dup1
      iszero
      tag_1453
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_1453:
      pop
      pop
        /* "test/solidity/Protocol.t.sol":26622:26629  _market */
      sload(0x23)
        /* "test/solidity/Protocol.t.sol":26622:26649  _market.previewMint(shares) */
      mload(0x40)
      shl(0xe0, 0xb3d7f6b9)
      dup2
      mstore
        /* "#utility.yul":24226:24242   */
      0xffffffffffffff
        /* "#utility.yul":24214:24243   */
      dup8
      and
        /* "test/solidity/Protocol.t.sol":26622:26649  _market.previewMint(shares) */
      0x04
      dup3
      add
        /* "#utility.yul":24196:24244   */
      mstore
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":26622:26629  _market */
      swap1
      swap2
      and
      swap3
      pop
        /* "test/solidity/Protocol.t.sol":26622:26641  _market.previewMint */
      0xb3d7f6b9
      swap2
      pop
        /* "#utility.yul":24169:24187   */
      0x24
      add
        /* "test/solidity/Protocol.t.sol":26622:26649  _market.previewMint(shares) */
      0x20
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      dup7
      gas
      staticcall
      iszero
      dup1
      iszero
      tag_1456
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_1456:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      dup2
      add
      swap1
      tag_1457
      swap2
      swap1
      tag_212
      jump	// in
    tag_1457:
        /* "test/solidity/Protocol.t.sol":26651:26661  msg.sender */
      caller
        /* "test/solidity/Protocol.t.sol":32807:32818  assets != 0 */
      dup2
      iszero
        /* "test/solidity/Protocol.t.sol":32803:32993  if (assets != 0) {... */
      tag_1459
      jumpi
        /* "test/solidity/Protocol.t.sol":32845:32855  msg.sender */
      caller
        /* "test/solidity/Protocol.t.sol":32863:32883  changePrank(account) */
      tag_1460
        /* "test/solidity/Protocol.t.sol":32875:32882  account */
      dup3
        /* "test/solidity/Protocol.t.sol":32863:32874  changePrank */
      tag_549
        /* "test/solidity/Protocol.t.sol":32863:32883  changePrank(account) */
      jump	// in
    tag_1460:
        /* "test/solidity/Protocol.t.sol":32891:32897  _asset */
      sload(0x24)
        /* "test/solidity/Protocol.t.sol":32891:32919  _asset.mint(account, assets) */
      mload(0x40)
      shl(0xe0, 0x40c10f19)
      dup2
      mstore
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":32891:32897  _asset */
      swap1
      swap2
      and
      swap1
        /* "test/solidity/Protocol.t.sol":32891:32902  _asset.mint */
      0x40c10f19
      swap1
        /* "test/solidity/Protocol.t.sol":32891:32919  _asset.mint(account, assets) */
      tag_1461
      swap1
        /* "test/solidity/Protocol.t.sol":32903:32910  account */
      dup6
      swap1
        /* "test/solidity/Protocol.t.sol":32912:32918  assets */
      dup8
      swap1
        /* "test/solidity/Protocol.t.sol":32891:32919  _asset.mint(account, assets) */
      0x04
      add
      tag_345
      jump	// in
    tag_1461:
      0x00
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      0x00
      dup8
      dup1
      extcodesize
      iszero
      dup1
      iszero
      tag_1462
      jumpi
      0x00
      dup1
      revert
    tag_1462:
      pop
      gas
      call
      iszero
      dup1
      iszero
      tag_1464
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_1464:
      pop
      pop
        /* "test/solidity/Protocol.t.sol":32927:32934  _market */
      sload(0x23)
        /* "test/solidity/Protocol.t.sol":32927:32959  _market.deposit(assets, account) */
      mload(0x40)
      shl(0xe0, 0x6e553f65)
      dup2
      mstore
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":32927:32934  _market */
      swap1
      swap2
      and
      swap3
      pop
        /* "test/solidity/Protocol.t.sol":32927:32942  _market.deposit */
      0x6e553f65
      swap2
      pop
        /* "test/solidity/Protocol.t.sol":32927:32959  _market.deposit(assets, account) */
      tag_1465
      swap1
        /* "test/solidity/Protocol.t.sol":32943:32949  assets */
      dup7
      swap1
        /* "test/solidity/Protocol.t.sol":32951:32958  account */
      dup7
      swap1
        /* "test/solidity/Protocol.t.sol":32927:32959  _market.deposit(assets, account) */
      0x04
      add
      tag_555
      jump	// in
    tag_1465:
      0x20
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      0x00
      dup8
      gas
      call
      iszero
      dup1
      iszero
      tag_1467
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_1467:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      dup2
      add
      swap1
      tag_1468
      swap2
      swap1
      tag_212
      jump	// in
    tag_1468:
      pop
        /* "test/solidity/Protocol.t.sol":32967:32986  changePrank(sender) */
      tag_1469
        /* "test/solidity/Protocol.t.sol":32979:32985  sender */
      dup2
        /* "test/solidity/Protocol.t.sol":32967:32978  changePrank */
      tag_549
        /* "test/solidity/Protocol.t.sol":32967:32986  changePrank(sender) */
      jump	// in
    tag_1469:
        /* "test/solidity/Protocol.t.sol":32820:32993  {... */
      pop
        /* "test/solidity/Protocol.t.sol":32803:32993  if (assets != 0) {... */
    tag_1459:
        /* "test/solidity/Protocol.t.sol":26695:26702  auditor */
      sload(0x1b)
        /* "test/solidity/Protocol.t.sol":26711:26718  _market */
      sload(0x23)
        /* "test/solidity/Protocol.t.sol":26695:26719  auditor.markets(_market) */
      mload(0x40)
      shl(0xe0, 0x8e8f294b)
      dup2
      mstore
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":26711:26718  _market */
      swap2
      dup3
      and
        /* "test/solidity/Protocol.t.sol":26695:26719  auditor.markets(_market) */
      0x04
      dup3
      add
        /* "#utility.yul":7560:7611   */
      mstore
        /* "test/solidity/Protocol.t.sol":26674:26687  uint256 index */
      0x00
      swap3
        /* "test/solidity/Protocol.t.sol":26695:26702  auditor */
      swap2
      swap1
      swap2
      and
      swap1
        /* "test/solidity/Protocol.t.sol":26695:26710  auditor.markets */
      0x8e8f294b
      swap1
        /* "#utility.yul":7533:7551   */
      0x24
      add
        /* "test/solidity/Protocol.t.sol":26695:26719  auditor.markets(_market) */
      0xa0
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      dup7
      gas
      staticcall
      iszero
      dup1
      iszero
      tag_1473
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_1473:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      dup2
      add
      swap1
      tag_1474
      swap2
      swap1
      tag_198
      jump	// in
    tag_1474:
      pop
      pop
        /* "test/solidity/Protocol.t.sol":26750:26757  _market */
      sload(0x23)
        /* "test/solidity/Protocol.t.sol":26750:26779  _market.previewRedeem(shares) */
      mload(0x40)
      shl(0xe1, 0x266d6a83)
      dup2
      mstore
        /* "#utility.yul":24226:24242   */
      0xffffffffffffff
        /* "#utility.yul":24214:24243   */
      dup12
      and
        /* "test/solidity/Protocol.t.sol":26750:26779  _market.previewRedeem(shares) */
      0x04
      dup3
      add
        /* "#utility.yul":24196:24244   */
      mstore
        /* "test/solidity/Protocol.t.sol":26669:26719  (, , uint256 index, , ) = auditor.markets(_market) */
      0xff
      swap3
      swap1
      swap3
      and
      swap5
      pop
        /* "test/solidity/Protocol.t.sol":26725:26747  uint256 withdrawAssets */
      0x00
      swap4
      pop
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":26750:26757  _market */
      and
      swap2
      pop
        /* "test/solidity/Protocol.t.sol":26750:26771  _market.previewRedeem */
      0x4cdad506
      swap1
        /* "#utility.yul":24169:24187   */
      0x24
      add
        /* "test/solidity/Protocol.t.sol":26750:26779  _market.previewRedeem(shares) */
      0x20
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      dup7
      gas
      staticcall
      iszero
      dup1
      iszero
      tag_1477
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_1477:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      dup2
      add
      swap1
      tag_1478
      swap2
      swap1
      tag_212
      jump	// in
    tag_1478:
        /* "test/solidity/Protocol.t.sol":26725:26779  uint256 withdrawAssets = _market.previewRedeem(shares) */
      swap1
      pop
        /* "test/solidity/Protocol.t.sol":26785:26808  Binary memory liquidity */
      tag_1479
      mload(0x40)
      dup1
      0x40
      add
      0x40
      mstore
      dup1
      0x00
      dup2
      mstore
      0x20
      add
      0x00
      dup2
      mstore
      pop
      swap1
      jump
    tag_1479:
        /* "test/solidity/Protocol.t.sol":26886:26893  _market */
      sload(0x23)
        /* "test/solidity/Protocol.t.sol":26857:26913  accountLiquidity(msg.sender, _market, 0, withdrawAssets) */
      tag_1480
      swap1
        /* "test/solidity/Protocol.t.sol":26874:26884  msg.sender */
      caller
      swap1
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":26886:26893  _market */
      and
      0x00
        /* "test/solidity/Protocol.t.sol":26898:26912  withdrawAssets */
      dup6
        /* "test/solidity/Protocol.t.sol":26857:26873  accountLiquidity */
      tag_207
        /* "test/solidity/Protocol.t.sol":26857:26913  accountLiquidity(msg.sender, _market, 0, withdrawAssets) */
      jump	// in
    tag_1480:
        /* "test/solidity/Protocol.t.sol":26835:26853  liquidity.negative */
      0x20
      dup4
      add
        /* "test/solidity/Protocol.t.sol":26814:26913  (liquidity.positive, liquidity.negative) = accountLiquidity(msg.sender, _market, 0, withdrawAssets) */
      mstore
      dup2
      mstore
        /* "test/solidity/Protocol.t.sol":26925:26932  auditor */
      sload(0x1b)
        /* "test/solidity/Protocol.t.sol":26925:26959  auditor.accountMarkets(msg.sender) */
      mload(0x40)
      not(sub(shl(0xe1, 0x63e28d), 0x01))
      dup2
      mstore
        /* "test/solidity/Protocol.t.sol":26948:26958  msg.sender */
      caller
        /* "test/solidity/Protocol.t.sol":26925:26959  auditor.accountMarkets(msg.sender) */
      0x04
      dup3
      add
        /* "#utility.yul":7560:7611   */
      mstore
        /* "test/solidity/Protocol.t.sol":26963:26964  1 */
      0x01
        /* "test/solidity/Protocol.t.sol":26963:26973  1 << index */
      dup6
      shl
      swap2
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":26925:26932  auditor */
      and
      swap1
        /* "test/solidity/Protocol.t.sol":26925:26947  auditor.accountMarkets */
      0xff383ae6
      swap1
        /* "#utility.yul":7533:7551   */
      0x24
      add
        /* "test/solidity/Protocol.t.sol":26925:26959  auditor.accountMarkets(msg.sender) */
      0x20
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      dup7
      gas
      staticcall
      iszero
      dup1
      iszero
      tag_1483
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_1483:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      dup2
      add
      swap1
      tag_1484
      swap2
      swap1
      tag_212
      jump	// in
    tag_1484:
        /* "test/solidity/Protocol.t.sol":26925:26974  auditor.accountMarkets(msg.sender) & (1 << index) */
      and
        /* "test/solidity/Protocol.t.sol":26924:26980  (auditor.accountMarkets(msg.sender) & (1 << index)) != 0 */
      iszero
      dup1
      iszero
      swap1
        /* "test/solidity/Protocol.t.sol":26924:27023  (auditor.accountMarkets(msg.sender) & (1 << index)) != 0 && liquidity.negative > liquidity.positive */
      tag_1485
      jumpi
      pop
        /* "test/solidity/Protocol.t.sol":27005:27023  liquidity.positive */
      dup1
      mload
        /* "test/solidity/Protocol.t.sol":26984:27002  liquidity.negative */
      0x20
      dup3
      add
      mload
        /* "test/solidity/Protocol.t.sol":26984:27023  liquidity.negative > liquidity.positive */
      gt
        /* "test/solidity/Protocol.t.sol":26924:27023  (auditor.accountMarkets(msg.sender) & (1 << index)) != 0 && liquidity.negative > liquidity.positive */
    tag_1485:
        /* "test/solidity/Protocol.t.sol":26920:27342  if ((auditor.accountMarkets(msg.sender) & (1 << index)) != 0 && liquidity.negative > liquidity.positive) {... */
      iszero
      tag_1486
      jumpi
        /* "test/solidity/Protocol.t.sol":27033:27087  vm.expectRevert(InsufficientAccountLiquidity.selector) */
      mload(0x40)
      shl(0xe5, 0x0618f587)
      dup2
      mstore
      0x00
      dup1
      mload
      0x20
      data_1a390d6c2ee89e11d2dffeb86f753e43f966d02cbb0b3bd3e6e1cdf50245ef50
      dup4
      codecopy
      dup2
      mload
      swap2
      mstore
        /* "test/solidity/Protocol.t.sol":27033:27048  vm.expectRevert */
      swap1
      0xc31eb0e0
      swap1
        /* "test/solidity/Protocol.t.sol":27033:27087  vm.expectRevert(InsufficientAccountLiquidity.selector) */
      tag_1487
      swap1
      shl(0xe1, 0x0aeac0bb)
        /* "test/solidity/Protocol.t.sol":27049:27086  InsufficientAccountLiquidity.selector */
      swap1
        /* "test/solidity/Protocol.t.sol":27033:27087  vm.expectRevert(InsufficientAccountLiquidity.selector) */
      0x04
      add
      tag_216
      jump	// in
    tag_1487:
      0x00
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      0x00
      dup8
      dup1
      extcodesize
      iszero
      dup1
      iszero
      tag_1488
      jumpi
      0x00
      dup1
      revert
    tag_1488:
      pop
      gas
      call
      iszero
      dup1
      iszero
      tag_1490
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_1490:
      pop
      pop
      pop
      pop
        /* "test/solidity/Protocol.t.sol":26920:27342  if ((auditor.accountMarkets(msg.sender) & (1 << index)) != 0 && liquidity.negative > liquidity.positive) {... */
      jump(tag_1491)
    tag_1486:
        /* "test/solidity/Protocol.t.sol":27270:27277  _market */
      sload(0x23)
        /* "test/solidity/Protocol.t.sol":27224:27279  vm.expectEmit(true, true, true, true, address(_market)) */
      mload(0x40)
      shl(0xe0, 0x81bad6f3)
      dup2
      mstore
      0x00
      dup1
      mload
      0x20
      data_1a390d6c2ee89e11d2dffeb86f753e43f966d02cbb0b3bd3e6e1cdf50245ef50
      dup4
      codecopy
      dup2
      mload
      swap2
      mstore
        /* "test/solidity/Protocol.t.sol":27224:27237  vm.expectEmit */
      swap2
      0x81bad6f3
      swap2
        /* "test/solidity/Protocol.t.sol":27224:27279  vm.expectEmit(true, true, true, true, address(_market)) */
      tag_1492
      swap2
        /* "test/solidity/Protocol.t.sol":27238:27242  true */
      0x01
      swap2
      dup3
      swap2
      dup3
      swap2
      dup3
      swap2
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":27270:27277  _market */
      and
      swap1
        /* "test/solidity/Protocol.t.sol":27224:27279  vm.expectEmit(true, true, true, true, address(_market)) */
      0x04
      add
      tag_228
      jump	// in
    tag_1492:
      0x00
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      0x00
      dup8
      dup1
      extcodesize
      iszero
      dup1
      iszero
      tag_1493
      jumpi
      0x00
      dup1
      revert
    tag_1493:
      pop
      gas
      call
      iszero
      dup1
      iszero
      tag_1495
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_1495:
      pop
      pop
        /* "test/solidity/Protocol.t.sol":27313:27326  _counterparty */
      sload(0x26)
        /* "test/solidity/Protocol.t.sol":27292:27335  Transfer(msg.sender, _counterparty, shares) */
      mload(0x40)
        /* "#utility.yul":24226:24242   */
      0xffffffffffffff
        /* "#utility.yul":24214:24243   */
      dup13
      and
        /* "#utility.yul":24196:24244   */
      dup2
      mstore
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":27313:27326  _counterparty */
      swap1
      swap2
      and
      swap3
      pop
        /* "test/solidity/Protocol.t.sol":27301:27311  msg.sender */
      caller
      swap2
      pop
        /* "test/solidity/Protocol.t.sol":27292:27335  Transfer(msg.sender, _counterparty, shares) */
      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
      swap1
        /* "#utility.yul":24184:24186   */
      0x20
        /* "#utility.yul":24169:24187   */
      add
        /* "test/solidity/Protocol.t.sol":27292:27335  Transfer(msg.sender, _counterparty, shares) */
      mload(0x40)
      dup1
      swap2
      sub
      swap1
      log3
        /* "test/solidity/Protocol.t.sol":26920:27342  if ((auditor.accountMarkets(msg.sender) & (1 << index)) != 0 && liquidity.negative > liquidity.positive) {... */
    tag_1491:
        /* "test/solidity/Protocol.t.sol":27347:27354  _market */
      sload(0x23)
        /* "test/solidity/Protocol.t.sol":27364:27377  _counterparty */
      sload(0x26)
        /* "test/solidity/Protocol.t.sol":27347:27386  _market.transfer(_counterparty, shares) */
      mload(0x40)
      shl(0xe0, 0xa9059cbb)
      dup2
      mstore
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":27347:27354  _market */
      swap3
      dup4
      and
      swap3
        /* "test/solidity/Protocol.t.sol":27347:27363  _market.transfer */
      0xa9059cbb
      swap3
        /* "test/solidity/Protocol.t.sol":27347:27386  _market.transfer(_counterparty, shares) */
      tag_1497
      swap3
        /* "test/solidity/Protocol.t.sol":27364:27377  _counterparty */
      swap2
      and
      swap1
        /* "test/solidity/Protocol.t.sol":27379:27385  shares */
      dup13
      swap1
        /* "test/solidity/Protocol.t.sol":27347:27386  _market.transfer(_counterparty, shares) */
      0x04
      add
      tag_497
      jump	// in
    tag_1497:
      0x20
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      0x00
      dup8
      gas
      call
      iszero
      dup1
      iszero
      tag_1499
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_1499:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      dup2
      add
      swap1
      tag_1250
      swap2
      swap1
      tag_349
      jump	// in
        /* "lib/forge-std/src/StdInvariant.sol":2447:2625  function targetArtifactSelectors() public view returns (FuzzSelector[] memory targetedArtifactSelectors_) {... */
    tag_93:
        /* "lib/forge-std/src/StdInvariant.sol":2503:2551  FuzzSelector[] memory targetedArtifactSelectors_ */
      0x60
        /* "lib/forge-std/src/StdInvariant.sol":2592:2618  _targetedArtifactSelectors */
      0x12
        /* "lib/forge-std/src/StdInvariant.sol":2563:2618  targetedArtifactSelectors_ = _targetedArtifactSelectors */
      dup1
      sload
      dup1
      0x20
      mul
      0x20
      add
      mload(0x40)
      swap1
      dup2
      add
      0x40
      mstore
      dup1
      swap3
      swap2
      swap1
      dup2
      dup2
      mstore
      0x20
      add
      0x00
      swap1
    tag_1505:
      dup3
      dup3
      lt
      iszero
      tag_1506
      jumpi
      0x00
      dup5
      dup2
      mstore
      0x20
      swap1
      dup2
      swap1
      keccak256
      0x40
      dup1
      mload
      dup1
      dup3
      add
      dup3
      mstore
      0x02
      dup7
      mul
      swap1
      swap3
      add
      dup1
      sload
      sub(shl(0xa0, 0x01), 0x01)
      and
      dup4
      mstore
      0x01
      dup2
      add
      dup1
      sload
      dup4
      mload
      dup2
      dup8
      mul
      dup2
      add
      dup8
      add
      swap1
      swap5
      mstore
      dup1
      dup5
      mstore
      swap4
      swap5
      swap2
      swap4
      dup6
      dup4
      add
      swap4
      swap3
      dup4
      add
      dup3
      dup3
      dup1
      iszero
      tag_1508
      jumpi
      0x20
      mul
      dup3
      add
      swap2
      swap1
      0x00
      mstore
      keccak256(0x00, 0x20)
      swap1
      0x00
      swap1
    tag_1509:
      dup3
      dup3
      swap1
      sload
      swap1
      0x0100
      exp
      swap1
      div
      0xe0
      shl
      not(sub(shl(0xe0, 0x01), 0x01))
      and
      dup2
      mstore
      0x20
      add
      swap1
      0x04
      add
      swap1
      0x20
      dup3
      0x03
      add
      div
      swap3
      dup4
      add
      swap3
      0x01
      sub
      dup3
      mul
      swap2
      pop
      dup1
      dup5
      gt
      tag_1509
      jumpi
      swap1
      pop
    tag_1508:
      pop
      pop
      pop
      pop
      pop
      dup2
      mstore
      pop
      pop
      dup2
      mstore
      0x20
      add
      swap1
      0x01
      add
      swap1
      jump(tag_1505)
    tag_1506:
      pop
      pop
      pop
      pop
      swap1
      pop
        /* "lib/forge-std/src/StdInvariant.sol":2447:2625  function targetArtifactSelectors() public view returns (FuzzSelector[] memory targetedArtifactSelectors_) {... */
      swap1
      jump	// out
        /* "test/solidity/Protocol.t.sol":22391:23039  function refund(... */
    tag_98:
        /* "test/solidity/Protocol.t.sol":31278:31285  _market */
      sload(0x23)
        /* "test/solidity/Protocol.t.sol":22465:22469  seed */
      dup2
      swap1
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":31278:31285  _market */
      and
        /* "test/solidity/Protocol.t.sol":31270:31300  address(_market) == address(0) */
      iszero
        /* "test/solidity/Protocol.t.sol":31263:31301  assert(address(_market) == address(0)) */
      tag_1512
      jumpi
      tag_1512
      tag_153
      jump	// in
    tag_1512:
        /* "test/solidity/Protocol.t.sol":31317:31324  markets */
      0x1c
        /* "test/solidity/Protocol.t.sol":31325:31402  _bound(uint256(keccak256(abi.encode(seed, "market"))), 0, markets.length - 1) */
      tag_1513
        /* "test/solidity/Protocol.t.sol":31361:31365  seed */
      dup3
        /* "test/solidity/Protocol.t.sol":31350:31376  abi.encode(seed, "market") */
      add(0x20, mload(0x40))
      tag_155
      swap2
      swap1
      tag_156
      jump	// in
        /* "test/solidity/Protocol.t.sol":31325:31402  _bound(uint256(keccak256(abi.encode(seed, "market"))), 0, markets.length - 1) */
    tag_1513:
        /* "test/solidity/Protocol.t.sol":31317:31403  markets[_bound(uint256(keccak256(abi.encode(seed, "market"))), 0, markets.length - 1)] */
      dup2
      sload
      dup2
      lt
      tag_1517
      jumpi
      tag_1517
      tag_162
      jump	// in
    tag_1517:
      0x00
      swap2
      dup3
      mstore
      0x20
      swap2
      dup3
      swap1
      keccak256
      add
      sload
        /* "test/solidity/Protocol.t.sol":31307:31314  _market */
      0x23
        /* "test/solidity/Protocol.t.sol":31307:31403  _market = markets[_bound(uint256(keccak256(abi.encode(seed, "market"))), 0, markets.length - 1)] */
      dup1
      sload
      not(sub(shl(0xa0, 0x01), 0x01))
      and
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":31317:31403  markets[_bound(uint256(keccak256(abi.encode(seed, "market"))), 0, markets.length - 1)] */
      swap1
      swap3
      and
        /* "test/solidity/Protocol.t.sol":31307:31403  _market = markets[_bound(uint256(keccak256(abi.encode(seed, "market"))), 0, markets.length - 1)] */
      swap2
      dup3
      or
      swap1
      sstore
        /* "test/solidity/Protocol.t.sol":31436:31451  _market.asset() */
      0x40
      dup1
      mload
      shl(0xe0, 0x38d52e0f)
      dup2
      mstore
      swap1
      mload
        /* "test/solidity/Protocol.t.sol":31317:31403  markets[_bound(uint256(keccak256(abi.encode(seed, "market"))), 0, markets.length - 1)] */
      swap2
      swap3
        /* "test/solidity/Protocol.t.sol":31436:31449  _market.asset */
      0x38d52e0f
      swap3
        /* "test/solidity/Protocol.t.sol":31436:31451  _market.asset() */
      0x04
      dup1
      dup5
      add
      swap4
      dup3
      swap1
      sub
      add
      dup2
        /* "test/solidity/Protocol.t.sol":31317:31403  markets[_bound(uint256(keccak256(abi.encode(seed, "market"))), 0, markets.length - 1)] */
      dup7
        /* "test/solidity/Protocol.t.sol":31436:31451  _market.asset() */
      gas
      staticcall
      iszero
      dup1
      iszero
      tag_1520
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_1520:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      dup2
      add
      swap1
      tag_1521
      swap2
      swap1
      tag_167
      jump	// in
    tag_1521:
        /* "test/solidity/Protocol.t.sol":31409:31415  _asset */
      0x24
      0x00
        /* "test/solidity/Protocol.t.sol":31409:31453  _asset = MockERC20(address(_market.asset())) */
      0x0100
      exp
      dup2
      sload
      dup2
      sub(shl(0xa0, 0x01), 0x01)
      mul
      not
      and
      swap1
      dup4
      sub(shl(0xa0, 0x01), 0x01)
      and
      mul
      or
      swap1
      sstore
      pop
        /* "test/solidity/Protocol.t.sol":31475:31483  accounts */
      0x1d
        /* "test/solidity/Protocol.t.sol":31484:31568  _bound(uint256(keccak256(abi.encode(seed, "counterparty"))), 0, accounts.length - 1) */
      tag_1522
        /* "test/solidity/Protocol.t.sol":31520:31524  seed */
      dup3
        /* "test/solidity/Protocol.t.sol":31509:31541  abi.encode(seed, "counterparty") */
      add(0x20, mload(0x40))
      tag_169
      swap2
      swap1
      tag_170
      jump	// in
        /* "test/solidity/Protocol.t.sol":31484:31568  _bound(uint256(keccak256(abi.encode(seed, "counterparty"))), 0, accounts.length - 1) */
    tag_1522:
        /* "test/solidity/Protocol.t.sol":31475:31569  accounts[_bound(uint256(keccak256(abi.encode(seed, "counterparty"))), 0, accounts.length - 1)] */
      dup2
      sload
      dup2
      lt
      tag_1526
      jumpi
      tag_1526
      tag_162
      jump	// in
    tag_1526:
      0x00
      swap2
      dup3
      mstore
      0x20
      swap2
      dup3
      swap1
      keccak256
      add
      sload
        /* "test/solidity/Protocol.t.sol":31459:31472  _counterparty */
      0x26
        /* "test/solidity/Protocol.t.sol":31459:31569  _counterparty = accounts[_bound(uint256(keccak256(abi.encode(seed, "counterparty"))), 0, accounts.length - 1)] */
      dup1
      sload
      not(sub(shl(0xa0, 0x01), 0x01))
      and
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":31475:31569  accounts[_bound(uint256(keccak256(abi.encode(seed, "counterparty"))), 0, accounts.length - 1)] */
      swap1
      swap3
      and
        /* "test/solidity/Protocol.t.sol":31459:31569  _counterparty = accounts[_bound(uint256(keccak256(abi.encode(seed, "counterparty"))), 0, accounts.length - 1)] */
      swap2
      swap1
      swap2
      or
      swap1
      sstore
        /* "test/solidity/Protocol.t.sol":31628:31658  abi.encode(seed, "collateral") */
      mload(0x40)
        /* "test/solidity/Protocol.t.sol":31595:31602  markets */
      0x1c
      swap2
        /* "test/solidity/Protocol.t.sol":31603:31684  _bound(uint256(keccak256(abi.encode(seed, "collateral"))), 0, markets.length - 1) */
      tag_1528
      swap2
        /* "test/solidity/Protocol.t.sol":31628:31658  abi.encode(seed, "collateral") */
      tag_155
      swap2
        /* "test/solidity/Protocol.t.sol":31639:31643  seed */
      dup6
      swap2
        /* "test/solidity/Protocol.t.sol":31628:31658  abi.encode(seed, "collateral") */
      add
      tag_177
      jump	// in
        /* "test/solidity/Protocol.t.sol":31603:31684  _bound(uint256(keccak256(abi.encode(seed, "collateral"))), 0, markets.length - 1) */
    tag_1528:
        /* "test/solidity/Protocol.t.sol":31595:31685  markets[_bound(uint256(keccak256(abi.encode(seed, "collateral"))), 0, markets.length - 1)] */
      dup2
      sload
      dup2
      lt
      tag_1532
      jumpi
      tag_1532
      tag_162
      jump	// in
    tag_1532:
      0x00
      swap2
      dup3
      mstore
      0x20
      swap1
      swap2
      keccak256
      add
      sload
        /* "test/solidity/Protocol.t.sol":31575:31592  _collateralMarket */
      0x27
        /* "test/solidity/Protocol.t.sol":31575:31685  _collateralMarket = markets[_bound(uint256(keccak256(abi.encode(seed, "collateral"))), 0, markets.length - 1)] */
      dup1
      sload
      not(sub(shl(0xa0, 0x01), 0x01))
      and
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":31595:31685  markets[_bound(uint256(keccak256(abi.encode(seed, "collateral"))), 0, markets.length - 1)] */
      swap1
      swap3
      and
        /* "test/solidity/Protocol.t.sol":31575:31685  _collateralMarket = markets[_bound(uint256(keccak256(abi.encode(seed, "collateral"))), 0, markets.length - 1)] */
      swap2
      swap1
      swap2
      or
      swap1
      sstore
        /* "contracts/utils/FixedLib.sol":306:313  4 weeks */
      0x24ea00
        /* "test/solidity/Protocol.t.sol":31722:31757  block.timestamp % FixedLib.INTERVAL */
      tag_1534
        /* "contracts/utils/FixedLib.sol":306:313  4 weeks */
      dup2
        /* "test/solidity/Protocol.t.sol":31722:31737  block.timestamp */
      timestamp
        /* "test/solidity/Protocol.t.sol":31722:31757  block.timestamp % FixedLib.INTERVAL */
      tag_183
      jump	// in
    tag_1534:
        /* "test/solidity/Protocol.t.sol":31703:31758  block.timestamp - (block.timestamp % FixedLib.INTERVAL) */
      tag_1535
      swap1
        /* "test/solidity/Protocol.t.sol":31703:31718  block.timestamp */
      timestamp
        /* "test/solidity/Protocol.t.sol":31703:31758  block.timestamp - (block.timestamp % FixedLib.INTERVAL) */
      tag_158
      jump	// in
    tag_1535:
        /* "test/solidity/Protocol.t.sol":31703:31778  block.timestamp - (block.timestamp % FixedLib.INTERVAL) + FixedLib.INTERVAL */
      tag_1536
      swap2
      swap1
      tag_186
      jump	// in
    tag_1536:
        /* "test/solidity/Protocol.t.sol":31691:31700  _maturity */
      0x25
        /* "test/solidity/Protocol.t.sol":31691:31778  _maturity = block.timestamp - (block.timestamp % FixedLib.INTERVAL) + FixedLib.INTERVAL */
      sstore
        /* "test/solidity/Protocol.t.sol":31784:31809  vm.startPrank(msg.sender) */
      mload(0x40)
      shl(0xe1, 0x03223eab)
      dup2
      mstore
        /* "test/solidity/Protocol.t.sol":31798:31808  msg.sender */
      caller
        /* "test/solidity/Protocol.t.sol":31784:31809  vm.startPrank(msg.sender) */
      0x04
      dup3
      add
        /* "#utility.yul":7560:7611   */
      mstore
      0x00
      dup1
      mload
      0x20
      data_1a390d6c2ee89e11d2dffeb86f753e43f966d02cbb0b3bd3e6e1cdf50245ef50
      dup4
      codecopy
      dup2
      mload
      swap2
      mstore
        /* "test/solidity/Protocol.t.sol":31784:31797  vm.startPrank */
      swap1
      0x06447d56
      swap1
        /* "#utility.yul":7533:7551   */
      0x24
      add
        /* "test/solidity/Protocol.t.sol":31784:31809  vm.startPrank(msg.sender) */
      0x00
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      0x00
      dup8
      dup1
      extcodesize
      iszero
      dup1
      iszero
      tag_1538
      jumpi
      0x00
      dup1
      revert
    tag_1538:
      pop
      gas
      call
      iszero
      dup1
      iszero
      tag_1540
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_1540:
      pop
      pop
        /* "test/solidity/Protocol.t.sol":22479:22486  _market */
      sload(0x23)
        /* "test/solidity/Protocol.t.sol":22479:22508  _market.previewRefund(shares) */
      mload(0x40)
      shl(0xe5, 0x023effef)
      dup2
      mstore
        /* "#utility.yul":24226:24242   */
      0xffffffffffffff
        /* "#utility.yul":24214:24243   */
      dup8
      and
        /* "test/solidity/Protocol.t.sol":22479:22508  _market.previewRefund(shares) */
      0x04
      dup3
      add
        /* "#utility.yul":24196:24244   */
      mstore
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":22479:22486  _market */
      swap1
      swap2
      and
      swap3
      pop
        /* "test/solidity/Protocol.t.sol":22479:22500  _market.previewRefund */
      0x47dffde0
      swap2
      pop
        /* "#utility.yul":24169:24187   */
      0x24
      add
        /* "test/solidity/Protocol.t.sol":22479:22508  _market.previewRefund(shares) */
      0x20
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      dup7
      gas
      staticcall
      iszero
      dup1
      iszero
      tag_1543
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_1543:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      dup2
      add
      swap1
      tag_1544
      swap2
      swap1
      tag_212
      jump	// in
    tag_1544:
        /* "test/solidity/Protocol.t.sol":22510:22520  msg.sender */
      caller
        /* "test/solidity/Protocol.t.sol":34297:34308  assets != 0 */
      dup2
      iszero
        /* "test/solidity/Protocol.t.sol":34293:35729  if (assets != 0) {... */
      tag_1546
      jumpi
        /* "test/solidity/Protocol.t.sol":34335:34345  msg.sender */
      caller
        /* "test/solidity/Protocol.t.sol":34353:34379  changePrank(address(this)) */
      tag_1547
        /* "test/solidity/Protocol.t.sol":34373:34377  this */
      address
        /* "test/solidity/Protocol.t.sol":34353:34364  changePrank */
      tag_549
        /* "test/solidity/Protocol.t.sol":34353:34379  changePrank(address(this)) */
      jump	// in
    tag_1547:
        /* "test/solidity/Protocol.t.sol":34397:34414  uint256 liquidity */
      0x00
        /* "test/solidity/Protocol.t.sol":34417:34464  assets.divWadUp(1e18 - _market.reserveFactor()) */
      tag_1548
        /* "test/solidity/Protocol.t.sol":34440:34447  _market */
      0x23
      0x00
      swap1
      sload
      swap1
      0x0100
      exp
      swap1
      div
      sub(shl(0xa0, 0x01), 0x01)
      and
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":34440:34461  _market.reserveFactor */
      and
      0x4322b714
        /* "test/solidity/Protocol.t.sol":34440:34463  _market.reserveFactor() */
      mload(0x40)
      dup2
      0xffffffff
      and
      0xe0
      shl
      dup2
      mstore
      0x04
      add
      0x20
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      dup7
      gas
      staticcall
      iszero
      dup1
      iszero
      tag_953
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
        /* "test/solidity/Protocol.t.sol":34417:34464  assets.divWadUp(1e18 - _market.reserveFactor()) */
    tag_1548:
        /* "test/solidity/Protocol.t.sol":34474:34480  _asset */
      sload(0x24)
        /* "test/solidity/Protocol.t.sol":34474:34511  _asset.mint(address(this), liquidity) */
      mload(0x40)
      shl(0xe0, 0x40c10f19)
      dup2
      mstore
        /* "test/solidity/Protocol.t.sol":34397:34464  uint256 liquidity = assets.divWadUp(1e18 - _market.reserveFactor()) */
      swap2
      swap3
      pop
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":34474:34480  _asset */
      and
      swap1
        /* "test/solidity/Protocol.t.sol":34474:34485  _asset.mint */
      0x40c10f19
      swap1
        /* "test/solidity/Protocol.t.sol":34474:34511  _asset.mint(address(this), liquidity) */
      tag_1553
      swap1
        /* "test/solidity/Protocol.t.sol":34494:34498  this */
      address
      swap1
        /* "test/solidity/Protocol.t.sol":34397:34464  uint256 liquidity = assets.divWadUp(1e18 - _market.reserveFactor()) */
      dup6
      swap1
        /* "test/solidity/Protocol.t.sol":34474:34511  _asset.mint(address(this), liquidity) */
      0x04
      add
      tag_345
      jump	// in
    tag_1553:
      0x00
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      0x00
      dup8
      dup1
      extcodesize
      iszero
      dup1
      iszero
      tag_1554
      jumpi
      0x00
      dup1
      revert
    tag_1554:
      pop
      gas
      call
      iszero
      dup1
      iszero
      tag_1556
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_1556:
      pop
      pop
        /* "test/solidity/Protocol.t.sol":34521:34528  _market */
      sload(0x23)
        /* "test/solidity/Protocol.t.sol":34521:34562  _market.deposit(liquidity, address(this)) */
      mload(0x40)
      shl(0xe0, 0x6e553f65)
      dup2
      mstore
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":34521:34528  _market */
      swap1
      swap2
      and
      swap3
      pop
        /* "test/solidity/Protocol.t.sol":34521:34536  _market.deposit */
      0x6e553f65
      swap2
      pop
        /* "test/solidity/Protocol.t.sol":34521:34562  _market.deposit(liquidity, address(this)) */
      tag_1557
      swap1
        /* "test/solidity/Protocol.t.sol":34537:34546  liquidity */
      dup5
      swap1
        /* "test/solidity/Protocol.t.sol":34556:34560  this */
      address
      swap1
        /* "test/solidity/Protocol.t.sol":34521:34562  _market.deposit(liquidity, address(this)) */
      0x04
      add
      tag_555
      jump	// in
    tag_1557:
      0x20
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      0x00
      dup8
      gas
      call
      iszero
      dup1
      iszero
      tag_1559
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_1559:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      dup2
      add
      swap1
      tag_1560
      swap2
      swap1
      tag_212
      jump	// in
    tag_1560:
      pop
        /* "test/solidity/Protocol.t.sol":34387:34571  {... */
      pop
        /* "test/solidity/Protocol.t.sol":34578:34598  changePrank(account) */
      tag_1561
        /* "test/solidity/Protocol.t.sol":34590:34597  account */
      dup3
        /* "test/solidity/Protocol.t.sol":34578:34589  changePrank */
      tag_549
        /* "test/solidity/Protocol.t.sol":34578:34598  changePrank(account) */
      jump	// in
    tag_1561:
      0x40
      dup1
      mload
      dup1
      dup3
      add
      swap1
      swap2
      mstore
      0x00
      dup1
      dup3
      mstore
      0x20
      dup3
      add
      mstore
        /* "test/solidity/Protocol.t.sol":34692:34699  auditor */
      sload(0x1b)
        /* "test/solidity/Protocol.t.sol":34692:34748  auditor.accountLiquidity(account, Market(address(0)), 0) */
      mload(0x40)
      shl(0xe0, 0x9e9d7967)
      dup2
      mstore
      sub(shl(0xa0, 0x01), 0x01)
        /* "#utility.yul":29001:29016   */
      dup6
      dup2
      and
        /* "test/solidity/Protocol.t.sol":34692:34748  auditor.accountLiquidity(account, Market(address(0)), 0) */
      0x04
      dup4
      add
        /* "#utility.yul":28983:29017   */
      mstore
        /* "test/solidity/Protocol.t.sol":34692:34699  auditor */
      0x00
        /* "#utility.yul":29033:29051   */
      0x24
      dup4
      add
        /* "#utility.yul":29026:29069   */
      dup2
      swap1
      mstore
        /* "#utility.yul":29085:29103   */
      0x44
      dup4
      add
        /* "#utility.yul":29078:29112   */
      mstore
        /* "test/solidity/Protocol.t.sol":34692:34699  auditor */
      swap1
      swap2
      and
      swap1
        /* "test/solidity/Protocol.t.sol":34692:34716  auditor.accountLiquidity */
      0x9e9d7967
      swap1
        /* "#utility.yul":28918:28936   */
      0x64
      add
        /* "test/solidity/Protocol.t.sol":34692:34748  auditor.accountLiquidity(account, Market(address(0)), 0) */
      0x40
      dup1
      mload
      dup1
      dup4
      sub
      dup2
      dup7
      gas
      staticcall
      iszero
      dup1
      iszero
      tag_1565
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_1565:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      dup2
      add
      swap1
      tag_1566
      swap2
      swap1
      tag_203
      jump	// in
    tag_1566:
        /* "test/solidity/Protocol.t.sol":34670:34688  liquidity.negative */
      0x20
      dup4
      add
        /* "test/solidity/Protocol.t.sol":34649:34748  (liquidity.positive, liquidity.negative) = auditor.accountLiquidity(account, Market(address(0)), 0) */
      mstore
      dup2
      mstore
        /* "test/solidity/Protocol.t.sol":34758:34786  Auditor.MarketData memory md */
      tag_1567
      tag_974
      jump	// in
    tag_1567:
        /* "test/solidity/Protocol.t.sol":34866:34873  auditor */
      sload(0x1b)
        /* "test/solidity/Protocol.t.sol":34882:34889  _market */
      sload(0x23)
        /* "test/solidity/Protocol.t.sol":34866:34890  auditor.markets(_market) */
      mload(0x40)
      shl(0xe0, 0x8e8f294b)
      dup2
      mstore
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":34882:34889  _market */
      swap2
      dup3
      and
        /* "test/solidity/Protocol.t.sol":34866:34890  auditor.markets(_market) */
      0x04
      dup3
      add
        /* "#utility.yul":7560:7611   */
      mstore
        /* "test/solidity/Protocol.t.sol":34866:34873  auditor */
      swap2
      and
      swap1
        /* "test/solidity/Protocol.t.sol":34866:34881  auditor.markets */
      0x8e8f294b
      swap1
        /* "#utility.yul":7533:7551   */
      0x24
      add
        /* "test/solidity/Protocol.t.sol":34866:34890  auditor.markets(_market) */
      0xa0
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      dup7
      gas
      staticcall
      iszero
      dup1
      iszero
      tag_1570
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_1570:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      dup2
      add
      swap1
      tag_1571
      swap2
      swap1
      tag_198
      jump	// in
    tag_1571:
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":34796:34890  (md.adjustFactor, md.decimals, md.index, md.isListed, md.priceFeed) = auditor.markets(_market) */
      swap1
      dup2
      and
        /* "test/solidity/Protocol.t.sol":34850:34862  md.priceFeed */
      0x80
      dup8
      add
        /* "test/solidity/Protocol.t.sol":34796:34890  (md.adjustFactor, md.decimals, md.index, md.isListed, md.priceFeed) = auditor.markets(_market) */
      dup2
      swap1
      mstore
      swap2
      iszero
      iszero
        /* "test/solidity/Protocol.t.sol":34837:34848  md.isListed */
      0x60
      dup8
      add
        /* "test/solidity/Protocol.t.sol":34796:34890  (md.adjustFactor, md.decimals, md.index, md.isListed, md.priceFeed) = auditor.markets(_market) */
      mstore
      0xff
      swap3
      dup4
      and
        /* "test/solidity/Protocol.t.sol":34827:34835  md.index */
      0x40
      dup1
      dup9
      add
        /* "test/solidity/Protocol.t.sol":34796:34890  (md.adjustFactor, md.decimals, md.index, md.isListed, md.priceFeed) = auditor.markets(_market) */
      swap2
      swap1
      swap2
      mstore
      swap4
      swap1
      swap3
      and
      0x20
        /* "test/solidity/Protocol.t.sol":34814:34825  md.decimals */
      dup7
      add
        /* "test/solidity/Protocol.t.sol":34796:34890  (md.adjustFactor, md.decimals, md.index, md.isListed, md.priceFeed) = auditor.markets(_market) */
      mstore
      sub(shl(0x80, 0x01), 0x01)
      swap4
      swap1
      swap4
      and
      dup1
      dup6
      mstore
        /* "test/solidity/Protocol.t.sol":35055:35062  auditor */
      sload(0x1b)
        /* "test/solidity/Protocol.t.sol":35055:35087  auditor.assetPrice(md.priceFeed) */
      swap3
      mload
      shl(0xe3, 0x1710760b)
      dup2
      mstore
      0x04
      dup2
      add
        /* "#utility.yul":7560:7611   */
      swap5
      swap1
      swap5
      mstore
      0x00
      swap4
        /* "test/solidity/Protocol.t.sol":35039:35133  assets.mulDivUp(auditor.assetPrice(md.priceFeed), 10 ** md.decimals).divWadUp(md.adjustFactor) */
      tag_1572
      swap4
        /* "test/solidity/Protocol.t.sol":34796:34890  (md.adjustFactor, md.decimals, md.index, md.isListed, md.priceFeed) = auditor.markets(_market) */
      swap2
      swap3
        /* "test/solidity/Protocol.t.sol":35039:35107  assets.mulDivUp(auditor.assetPrice(md.priceFeed), 10 ** md.decimals) */
      tag_760
      swap3
        /* "test/solidity/Protocol.t.sol":35055:35062  auditor */
      and
      swap1
        /* "test/solidity/Protocol.t.sol":35055:35073  auditor.assetPrice */
      0xb883b058
      swap1
        /* "#utility.yul":7533:7551   */
      0x24
      add
        /* "test/solidity/Protocol.t.sol":35055:35087  auditor.assetPrice(md.priceFeed) */
      tag_981
        /* "#utility.yul":7414:7617   */
      jump
        /* "test/solidity/Protocol.t.sol":35039:35133  assets.mulDivUp(auditor.assetPrice(md.priceFeed), 10 ** md.decimals).divWadUp(md.adjustFactor) */
    tag_1572:
        /* "test/solidity/Protocol.t.sol":34962:34980  liquidity.positive */
      dup4
      mload
        /* "test/solidity/Protocol.t.sol":34941:34959  liquidity.negative */
      0x20
      dup6
      add
      mload
        /* "test/solidity/Protocol.t.sol":34941:34980  liquidity.negative > liquidity.positive */
      gt
        /* "test/solidity/Protocol.t.sol":34941:35026  liquidity.negative > liquidity.positive ? liquidity.negative - liquidity.positive : 0 */
      tag_1579
      jumpi
        /* "test/solidity/Protocol.t.sol":35025:35026  0 */
      0x00
        /* "test/solidity/Protocol.t.sol":34941:35026  liquidity.negative > liquidity.positive ? liquidity.negative - liquidity.positive : 0 */
      jump(tag_1581)
    tag_1579:
        /* "test/solidity/Protocol.t.sol":35004:35022  liquidity.positive */
      dup4
      mload
        /* "test/solidity/Protocol.t.sol":34983:35001  liquidity.negative */
      0x20
      dup6
      add
      mload
        /* "test/solidity/Protocol.t.sol":34983:35022  liquidity.negative - liquidity.positive */
      tag_1581
      swap2
        /* "test/solidity/Protocol.t.sol":35004:35022  liquidity.positive */
      swap1
        /* "test/solidity/Protocol.t.sol":34983:35022  liquidity.negative - liquidity.positive */
      tag_158
      jump	// in
    tag_1581:
        /* "test/solidity/Protocol.t.sol":34929:35133  (... */
      tag_1582
      swap2
      swap1
      tag_186
      jump	// in
    tag_1582:
        /* "test/solidity/Protocol.t.sol":35213:35220  auditor */
      sload(0x1b)
        /* "test/solidity/Protocol.t.sol":35229:35246  _collateralMarket */
      sload(0x27)
        /* "test/solidity/Protocol.t.sol":35213:35247  auditor.markets(_collateralMarket) */
      mload(0x40)
      shl(0xe0, 0x8e8f294b)
      dup2
      mstore
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":35229:35246  _collateralMarket */
      swap2
      dup3
      and
        /* "test/solidity/Protocol.t.sol":35213:35247  auditor.markets(_collateralMarket) */
      0x04
      dup3
      add
        /* "#utility.yul":7560:7611   */
      mstore
        /* "test/solidity/Protocol.t.sol":34900:35133  uint256 adjustedCollateral = (... */
      swap3
      swap4
      pop
        /* "test/solidity/Protocol.t.sol":35213:35220  auditor */
      and
      swap1
        /* "test/solidity/Protocol.t.sol":35213:35228  auditor.markets */
      0x8e8f294b
      swap1
        /* "#utility.yul":7533:7551   */
      0x24
      add
        /* "test/solidity/Protocol.t.sol":35213:35247  auditor.markets(_collateralMarket) */
      0xa0
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      dup7
      gas
      staticcall
      iszero
      dup1
      iszero
      tag_1585
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_1585:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      dup2
      add
      swap1
      tag_1586
      swap2
      swap1
      tag_198
      jump	// in
    tag_1586:
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":35143:35247  (md.adjustFactor, md.decimals, md.index, md.isListed, md.priceFeed) = auditor.markets(_collateralMarket) */
      and
        /* "test/solidity/Protocol.t.sol":35197:35209  md.priceFeed */
      0x80
      dup8
      add
        /* "test/solidity/Protocol.t.sol":35143:35247  (md.adjustFactor, md.decimals, md.index, md.isListed, md.priceFeed) = auditor.markets(_collateralMarket) */
      mstore
      iszero
      iszero
        /* "test/solidity/Protocol.t.sol":35184:35195  md.isListed */
      0x60
      dup7
      add
        /* "test/solidity/Protocol.t.sol":35143:35247  (md.adjustFactor, md.decimals, md.index, md.isListed, md.priceFeed) = auditor.markets(_collateralMarket) */
      mstore
      0xff
      swap1
      dup2
      and
        /* "test/solidity/Protocol.t.sol":35174:35182  md.index */
      0x40
      dup7
      add
        /* "test/solidity/Protocol.t.sol":35143:35247  (md.adjustFactor, md.decimals, md.index, md.isListed, md.priceFeed) = auditor.markets(_collateralMarket) */
      mstore
      and
        /* "test/solidity/Protocol.t.sol":35161:35172  md.decimals */
      0x20
      dup5
      add
        /* "test/solidity/Protocol.t.sol":35143:35247  (md.adjustFactor, md.decimals, md.index, md.isListed, md.priceFeed) = auditor.markets(_collateralMarket) */
      dup2
      swap1
      mstore
      sub(shl(0x80, 0x01), 0x01)
      swap1
      swap2
      and
      dup4
      mstore
        /* "test/solidity/Protocol.t.sol":35144:35159  md.adjustFactor */
      0x00
      swap1
        /* "test/solidity/Protocol.t.sol":35278:35414  adjustedCollateral.divWadUp(md.adjustFactor).mulDivUp(... */
      tag_1587
      swap1
        /* "test/solidity/Protocol.t.sol":35343:35360  10 ** md.decimals */
      tag_998
      swap1
        /* "test/solidity/Protocol.t.sol":35343:35345  10 */
      0x0a
        /* "test/solidity/Protocol.t.sol":35343:35360  10 ** md.decimals */
      tag_987
      jump	// in
        /* "test/solidity/Protocol.t.sol":35278:35414  adjustedCollateral.divWadUp(md.adjustFactor).mulDivUp(... */
    tag_1587:
        /* "test/solidity/Protocol.t.sol":35257:35414  uint256 collateral = adjustedCollateral.divWadUp(md.adjustFactor).mulDivUp(... */
      swap1
      pop
        /* "test/solidity/Protocol.t.sol":35442:35459  _collateralMarket */
      0x27
      0x00
      swap1
      sload
      swap1
      0x0100
      exp
      swap1
      div
      sub(shl(0xa0, 0x01), 0x01)
      and
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":35442:35465  _collateralMarket.asset */
      and
      0x38d52e0f
        /* "test/solidity/Protocol.t.sol":35442:35467  _collateralMarket.asset() */
      mload(0x40)
      dup2
      0xffffffff
      and
      0xe0
      shl
      dup2
      mstore
      0x04
      add
      0x20
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      dup7
      gas
      staticcall
      iszero
      dup1
      iszero
      tag_1595
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_1595:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      dup2
      add
      swap1
      tag_1596
      swap2
      swap1
      tag_167
      jump	// in
    tag_1596:
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":35424:35474  MockERC20(address(_collateralMarket.asset())).mint */
      and
      0x40c10f19
        /* "test/solidity/Protocol.t.sol":35475:35482  account */
      dup8
        /* "test/solidity/Protocol.t.sol":35484:35494  collateral */
      dup4
        /* "test/solidity/Protocol.t.sol":35424:35495  MockERC20(address(_collateralMarket.asset())).mint(account, collateral) */
      mload(0x40)
      dup4
      0xffffffff
      and
      0xe0
      shl
      dup2
      mstore
      0x04
      add
      tag_1597
      swap3
      swap2
      swap1
      tag_345
      jump	// in
    tag_1597:
      0x00
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      0x00
      dup8
      dup1
      extcodesize
      iszero
      dup1
      iszero
      tag_1598
      jumpi
      0x00
      dup1
      revert
    tag_1598:
      pop
      gas
      call
      iszero
      dup1
      iszero
      tag_1600
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_1600:
      pop
      pop
        /* "test/solidity/Protocol.t.sol":35505:35522  _collateralMarket */
      sload(0x27)
        /* "test/solidity/Protocol.t.sol":35505:35551  _collateralMarket.deposit(collateral, account) */
      mload(0x40)
      shl(0xe0, 0x6e553f65)
      dup2
      mstore
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":35505:35522  _collateralMarket */
      swap1
      swap2
      and
      swap3
      pop
        /* "test/solidity/Protocol.t.sol":35505:35530  _collateralMarket.deposit */
      0x6e553f65
      swap2
      pop
        /* "test/solidity/Protocol.t.sol":35505:35551  _collateralMarket.deposit(collateral, account) */
      tag_1601
      swap1
        /* "test/solidity/Protocol.t.sol":35531:35541  collateral */
      dup5
      swap1
        /* "test/solidity/Protocol.t.sol":35543:35550  account */
      dup11
      swap1
        /* "test/solidity/Protocol.t.sol":35505:35551  _collateralMarket.deposit(collateral, account) */
      0x04
      add
      tag_555
      jump	// in
    tag_1601:
      0x20
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      0x00
      dup8
      gas
      call
      iszero
      dup1
      iszero
      tag_1603
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_1603:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      dup2
      add
      swap1
      tag_1604
      swap2
      swap1
      tag_212
      jump	// in
    tag_1604:
      pop
        /* "test/solidity/Protocol.t.sol":35561:35568  auditor */
      sload(0x1b)
        /* "test/solidity/Protocol.t.sol":35581:35598  _collateralMarket */
      sload(0x27)
        /* "test/solidity/Protocol.t.sol":35561:35599  auditor.enterMarket(_collateralMarket) */
      mload(0x40)
      shl(0xe0, 0x3fe5d425)
      dup2
      mstore
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":35581:35598  _collateralMarket */
      swap2
      dup3
      and
        /* "test/solidity/Protocol.t.sol":35561:35599  auditor.enterMarket(_collateralMarket) */
      0x04
      dup3
      add
        /* "#utility.yul":7560:7611   */
      mstore
        /* "test/solidity/Protocol.t.sol":35561:35568  auditor */
      swap2
      and
      swap1
        /* "test/solidity/Protocol.t.sol":35561:35580  auditor.enterMarket */
      0x3fe5d425
      swap1
        /* "#utility.yul":7533:7551   */
      0x24
      add
        /* "test/solidity/Protocol.t.sol":35561:35599  auditor.enterMarket(_collateralMarket) */
      0x00
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      0x00
      dup8
      dup1
      extcodesize
      iszero
      dup1
      iszero
      tag_1606
      jumpi
      0x00
      dup1
      revert
    tag_1606:
      pop
      gas
      call
      iszero
      dup1
      iszero
      tag_1608
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_1608:
      pop
      pop
        /* "test/solidity/Protocol.t.sol":35609:35616  _market */
      sload(0x23)
        /* "test/solidity/Protocol.t.sol":35609:35649  _market.borrow(assets, account, account) */
      mload(0x40)
      shl(0xe2, 0x35459061)
      dup2
      mstore
      0x04
      dup2
      add
        /* "#utility.yul":30936:30961   */
      dup12
      swap1
      mstore
      sub(shl(0xa0, 0x01), 0x01)
        /* "#utility.yul":31035:31050   */
      dup11
      dup2
      and
        /* "#utility.yul":31015:31033   */
      0x24
      dup4
      add
        /* "#utility.yul":31008:31051   */
      dup2
      swap1
      mstore
        /* "#utility.yul":31067:31085   */
      0x44
      dup4
      add
        /* "#utility.yul":31060:31103   */
      mstore
        /* "test/solidity/Protocol.t.sol":35609:35616  _market */
      swap1
      swap2
      and
      swap3
      pop
        /* "test/solidity/Protocol.t.sol":35609:35623  _market.borrow */
      0xd5164184
      swap2
      pop
        /* "#utility.yul":30909:30927   */
      0x64
      add
        /* "test/solidity/Protocol.t.sol":35609:35649  _market.borrow(assets, account, account) */
      0x20
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      0x00
      dup8
      gas
      call
      iszero
      dup1
      iszero
      tag_1611
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_1611:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      dup2
      add
      swap1
      tag_1612
      swap2
      swap1
      tag_212
      jump	// in
    tag_1612:
      pop
        /* "test/solidity/Protocol.t.sol":35659:35665  _asset */
      sload(0x24)
        /* "test/solidity/Protocol.t.sol":35659:35687  _asset.burn(account, assets) */
      mload(0x40)
      shl(0xe2, 0x2770a7eb)
      dup2
      mstore
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":35659:35665  _asset */
      swap1
      swap2
      and
      swap1
        /* "test/solidity/Protocol.t.sol":35659:35670  _asset.burn */
      0x9dc29fac
      swap1
        /* "test/solidity/Protocol.t.sol":35659:35687  _asset.burn(account, assets) */
      tag_1613
      swap1
        /* "test/solidity/Protocol.t.sol":35671:35678  account */
      dup10
      swap1
        /* "test/solidity/Protocol.t.sol":35680:35686  assets */
      dup12
      swap1
        /* "test/solidity/Protocol.t.sol":35659:35687  _asset.burn(account, assets) */
      0x04
      add
      tag_345
      jump	// in
    tag_1613:
      0x00
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      0x00
      dup8
      dup1
      extcodesize
      iszero
      dup1
      iszero
      tag_1614
      jumpi
      0x00
      dup1
      revert
    tag_1614:
      pop
      gas
      call
      iszero
      dup1
      iszero
      tag_1616
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_1616:
      pop
      pop
      pop
      pop
        /* "test/solidity/Protocol.t.sol":34606:35696  {... */
      pop
      pop
      pop
      pop
        /* "test/solidity/Protocol.t.sol":35703:35722  changePrank(sender) */
      tag_1617
        /* "test/solidity/Protocol.t.sol":35715:35721  sender */
      dup2
        /* "test/solidity/Protocol.t.sol":35703:35714  changePrank */
      tag_549
        /* "test/solidity/Protocol.t.sol":35703:35722  changePrank(sender) */
      jump	// in
    tag_1617:
        /* "test/solidity/Protocol.t.sol":34310:35729  {... */
      pop
        /* "test/solidity/Protocol.t.sol":34293:35729  if (assets != 0) {... */
    tag_1546:
        /* "test/solidity/Protocol.t.sol":22565:22572  _market */
      sload(0x23)
        /* "test/solidity/Protocol.t.sol":22565:22593  _market.accounts(msg.sender) */
      mload(0x40)
      shl(0xe1, 0x2f2e0371)
      dup2
      mstore
        /* "test/solidity/Protocol.t.sol":22582:22592  msg.sender */
      caller
        /* "test/solidity/Protocol.t.sol":22565:22593  _market.accounts(msg.sender) */
      0x04
      dup3
      add
        /* "#utility.yul":7560:7611   */
      mstore
        /* "test/solidity/Protocol.t.sol":22533:22561  uint256 floatingBorrowShares */
      0x00
      swap2
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":22565:22572  _market */
      and
      swap1
        /* "test/solidity/Protocol.t.sol":22565:22581  _market.accounts */
      0x5e5c06e2
      swap1
        /* "#utility.yul":7533:7551   */
      0x24
      add
        /* "test/solidity/Protocol.t.sol":22565:22593  _market.accounts(msg.sender) */
      0x60
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      dup7
      gas
      staticcall
      iszero
      dup1
      iszero
      tag_1621
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_1621:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      dup2
      add
      swap1
      tag_1622
      swap2
      swap1
      tag_1034
      jump	// in
    tag_1622:
        /* "test/solidity/Protocol.t.sol":22528:22593  (, , uint256 floatingBorrowShares) = _market.accounts(msg.sender) */
      swap3
      pop
      pop
      pop
        /* "test/solidity/Protocol.t.sol":22599:22619  uint256 borrowShares */
      0x00
        /* "test/solidity/Protocol.t.sol":22622:22660  Math.min(shares, floatingBorrowShares) */
      tag_1623
        /* "test/solidity/Protocol.t.sol":22631:22637  shares */
      dup8
        /* "test/solidity/Protocol.t.sol":22622:22660  Math.min(shares, floatingBorrowShares) */
      0xffffffffffffff
      and
        /* "test/solidity/Protocol.t.sol":22639:22659  floatingBorrowShares */
      dup4
        /* "test/solidity/Protocol.t.sol":22622:22630  Math.min */
      tag_791
        /* "test/solidity/Protocol.t.sol":22622:22660  Math.min(shares, floatingBorrowShares) */
      jump	// in
    tag_1623:
        /* "test/solidity/Protocol.t.sol":22689:22696  _market */
      sload(0x23)
        /* "test/solidity/Protocol.t.sol":22689:22724  _market.previewRefund(borrowShares) */
      mload(0x40)
      shl(0xe5, 0x023effef)
      dup2
      mstore
      0x04
      dup2
      add
        /* "#utility.yul":10439:10464   */
      dup4
      swap1
      mstore
        /* "test/solidity/Protocol.t.sol":22599:22660  uint256 borrowShares = Math.min(shares, floatingBorrowShares) */
      swap2
      swap3
      pop
        /* "test/solidity/Protocol.t.sol":22666:22686  uint256 refundAssets */
      0x00
      swap2
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":22689:22696  _market */
      swap1
      swap2
      and
      swap1
        /* "test/solidity/Protocol.t.sol":22689:22710  _market.previewRefund */
      0x47dffde0
      swap1
        /* "#utility.yul":10412:10430   */
      0x24
      add
        /* "test/solidity/Protocol.t.sol":22689:22724  _market.previewRefund(borrowShares) */
      0x20
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      dup7
      gas
      staticcall
      iszero
      dup1
      iszero
      tag_1626
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_1626:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      dup2
      add
      swap1
      tag_1627
      swap2
      swap1
      tag_212
      jump	// in
    tag_1627:
        /* "test/solidity/Protocol.t.sol":22666:22724  uint256 refundAssets = _market.previewRefund(borrowShares) */
      swap1
      pop
        /* "test/solidity/Protocol.t.sol":22735:22747  refundAssets */
      dup1
        /* "test/solidity/Protocol.t.sol":22751:22752  0 */
      0x00
        /* "test/solidity/Protocol.t.sol":22735:22752  refundAssets == 0 */
      sub
        /* "test/solidity/Protocol.t.sol":22731:22995  if (refundAssets == 0) {... */
      tag_1628
      jumpi
        /* "test/solidity/Protocol.t.sol":22762:22797  vm.expectRevert(ZeroRepay.selector) */
      mload(0x40)
      shl(0xe5, 0x0618f587)
      dup2
      mstore
      0x00
      dup1
      mload
      0x20
      data_1a390d6c2ee89e11d2dffeb86f753e43f966d02cbb0b3bd3e6e1cdf50245ef50
      dup4
      codecopy
      dup2
      mload
      swap2
      mstore
        /* "test/solidity/Protocol.t.sol":22762:22777  vm.expectRevert */
      swap1
      0xc31eb0e0
      swap1
        /* "test/solidity/Protocol.t.sol":22762:22797  vm.expectRevert(ZeroRepay.selector) */
      tag_1629
      swap1
      shl(0xe0, 0x685e9235)
        /* "test/solidity/Protocol.t.sol":22778:22796  ZeroRepay.selector */
      swap1
        /* "test/solidity/Protocol.t.sol":22762:22797  vm.expectRevert(ZeroRepay.selector) */
      0x04
      add
      tag_216
      jump	// in
    tag_1629:
      0x00
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      0x00
      dup8
      dup1
      extcodesize
      iszero
      dup1
      iszero
      tag_1630
      jumpi
      0x00
      dup1
      revert
    tag_1630:
      pop
      gas
      call
      iszero
      dup1
      iszero
      tag_1632
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_1632:
      pop
      pop
      pop
      pop
        /* "test/solidity/Protocol.t.sol":22731:22995  if (refundAssets == 0) {... */
      jump(tag_1633)
    tag_1628:
        /* "test/solidity/Protocol.t.sol":22818:22824  _asset */
      sload(0x24)
        /* "test/solidity/Protocol.t.sol":22818:22855  _asset.mint(msg.sender, refundAssets) */
      mload(0x40)
      shl(0xe0, 0x40c10f19)
      dup2
      mstore
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":22818:22824  _asset */
      swap1
      swap2
      and
      swap1
        /* "test/solidity/Protocol.t.sol":22818:22829  _asset.mint */
      0x40c10f19
      swap1
        /* "test/solidity/Protocol.t.sol":22818:22855  _asset.mint(msg.sender, refundAssets) */
      tag_1634
      swap1
        /* "test/solidity/Protocol.t.sol":22830:22840  msg.sender */
      caller
      swap1
        /* "test/solidity/Protocol.t.sol":22842:22854  refundAssets */
      dup6
      swap1
        /* "test/solidity/Protocol.t.sol":22818:22855  _asset.mint(msg.sender, refundAssets) */
      0x04
      add
      tag_345
      jump	// in
    tag_1634:
      0x00
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      0x00
      dup8
      dup1
      extcodesize
      iszero
      dup1
      iszero
      tag_1635
      jumpi
      0x00
      dup1
      revert
    tag_1635:
      pop
      gas
      call
      iszero
      dup1
      iszero
      tag_1637
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_1637:
      pop
      pop
        /* "test/solidity/Protocol.t.sol":22909:22916  _market */
      sload(0x23)
        /* "test/solidity/Protocol.t.sol":22863:22918  vm.expectEmit(true, true, true, true, address(_market)) */
      mload(0x40)
      shl(0xe0, 0x81bad6f3)
      dup2
      mstore
      0x00
      dup1
      mload
      0x20
      data_1a390d6c2ee89e11d2dffeb86f753e43f966d02cbb0b3bd3e6e1cdf50245ef50
      dup4
      codecopy
      dup2
      mload
      swap2
      mstore
        /* "test/solidity/Protocol.t.sol":22863:22876  vm.expectEmit */
      swap4
      pop
      0x81bad6f3
      swap3
      pop
        /* "test/solidity/Protocol.t.sol":22863:22918  vm.expectEmit(true, true, true, true, address(_market)) */
      tag_1638
      swap2
        /* "test/solidity/Protocol.t.sol":22877:22881  true */
      0x01
      swap2
      dup3
      swap2
      dup3
      swap2
      dup3
      swap2
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":22909:22916  _market */
      and
      swap1
        /* "test/solidity/Protocol.t.sol":22863:22918  vm.expectEmit(true, true, true, true, address(_market)) */
      0x04
      add
      tag_228
      jump	// in
    tag_1638:
      0x00
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      0x00
      dup8
      dup1
      extcodesize
      iszero
      dup1
      iszero
      tag_1639
      jumpi
      0x00
      dup1
      revert
    tag_1639:
      pop
      gas
      call
      iszero
      dup1
      iszero
      tag_1641
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_1641:
      pop
      pop
        /* "test/solidity/Protocol.t.sol":22931:22988  Repay(msg.sender, msg.sender, refundAssets, borrowShares) */
      0x40
      dup1
      mload
        /* "#utility.yul":31599:31624   */
      dup5
      dup2
      mstore
        /* "#utility.yul":31655:31657   */
      0x20
        /* "#utility.yul":31640:31658   */
      dup2
      add
        /* "#utility.yul":31633:31667   */
      dup7
      swap1
      mstore
        /* "test/solidity/Protocol.t.sol":22949:22959  msg.sender */
      caller
      swap4
      pop
      dup4
      swap3
      pop
        /* "test/solidity/Protocol.t.sol":22931:22988  Repay(msg.sender, msg.sender, refundAssets, borrowShares) */
      0xe4a1ae657f49cb1fb1c7d3a94ae6093565c4c8c0e03de488f79c377c3c3a24e0
      swap2
        /* "#utility.yul":31572:31590   */
      add
        /* "test/solidity/Protocol.t.sol":22931:22988  Repay(msg.sender, msg.sender, refundAssets, borrowShares) */
      mload(0x40)
      dup1
      swap2
      sub
      swap1
      log3
        /* "test/solidity/Protocol.t.sol":22731:22995  if (refundAssets == 0) {... */
    tag_1633:
        /* "test/solidity/Protocol.t.sol":23000:23007  _market */
      sload(0x23)
        /* "test/solidity/Protocol.t.sol":23000:23034  _market.refund(shares, msg.sender) */
      mload(0x40)
      shl(0xe2, 0x1eb489b7)
      dup2
      mstore
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":23000:23007  _market */
      swap1
      swap2
      and
      swap1
        /* "test/solidity/Protocol.t.sol":23000:23014  _market.refund */
      0x7ad226dc
      swap1
        /* "test/solidity/Protocol.t.sol":23000:23034  _market.refund(shares, msg.sender) */
      tag_1060
      swap1
        /* "test/solidity/Protocol.t.sol":23015:23021  shares */
      dup12
      swap1
        /* "test/solidity/Protocol.t.sol":23023:23033  msg.sender */
      caller
      swap1
        /* "test/solidity/Protocol.t.sol":23000:23034  _market.refund(shares, msg.sender) */
      0x04
      add
      tag_910
      jump	// in
        /* "test/solidity/Protocol.t.sol":19045:19433  function claimRewards(bytes32 seed) external context(seed) {... */
    tag_101:
        /* "test/solidity/Protocol.t.sol":31278:31285  _market */
      sload(0x23)
        /* "test/solidity/Protocol.t.sol":19098:19102  seed */
      dup2
      swap1
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":31278:31285  _market */
      and
        /* "test/solidity/Protocol.t.sol":31270:31300  address(_market) == address(0) */
      iszero
        /* "test/solidity/Protocol.t.sol":31263:31301  assert(address(_market) == address(0)) */
      tag_1652
      jumpi
      tag_1652
      tag_153
      jump	// in
    tag_1652:
        /* "test/solidity/Protocol.t.sol":31317:31324  markets */
      0x1c
        /* "test/solidity/Protocol.t.sol":31325:31402  _bound(uint256(keccak256(abi.encode(seed, "market"))), 0, markets.length - 1) */
      tag_1653
        /* "test/solidity/Protocol.t.sol":31361:31365  seed */
      dup3
        /* "test/solidity/Protocol.t.sol":31350:31376  abi.encode(seed, "market") */
      add(0x20, mload(0x40))
      tag_155
      swap2
      swap1
      tag_156
      jump	// in
        /* "test/solidity/Protocol.t.sol":31325:31402  _bound(uint256(keccak256(abi.encode(seed, "market"))), 0, markets.length - 1) */
    tag_1653:
        /* "test/solidity/Protocol.t.sol":31317:31403  markets[_bound(uint256(keccak256(abi.encode(seed, "market"))), 0, markets.length - 1)] */
      dup2
      sload
      dup2
      lt
      tag_1657
      jumpi
      tag_1657
      tag_162
      jump	// in
    tag_1657:
      0x00
      swap2
      dup3
      mstore
      0x20
      swap2
      dup3
      swap1
      keccak256
      add
      sload
        /* "test/solidity/Protocol.t.sol":31307:31314  _market */
      0x23
        /* "test/solidity/Protocol.t.sol":31307:31403  _market = markets[_bound(uint256(keccak256(abi.encode(seed, "market"))), 0, markets.length - 1)] */
      dup1
      sload
      not(sub(shl(0xa0, 0x01), 0x01))
      and
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":31317:31403  markets[_bound(uint256(keccak256(abi.encode(seed, "market"))), 0, markets.length - 1)] */
      swap1
      swap3
      and
        /* "test/solidity/Protocol.t.sol":31307:31403  _market = markets[_bound(uint256(keccak256(abi.encode(seed, "market"))), 0, markets.length - 1)] */
      swap2
      dup3
      or
      swap1
      sstore
        /* "test/solidity/Protocol.t.sol":31436:31451  _market.asset() */
      0x40
      dup1
      mload
      shl(0xe0, 0x38d52e0f)
      dup2
      mstore
      swap1
      mload
        /* "test/solidity/Protocol.t.sol":31317:31403  markets[_bound(uint256(keccak256(abi.encode(seed, "market"))), 0, markets.length - 1)] */
      swap2
      swap3
        /* "test/solidity/Protocol.t.sol":31436:31449  _market.asset */
      0x38d52e0f
      swap3
        /* "test/solidity/Protocol.t.sol":31436:31451  _market.asset() */
      0x04
      dup1
      dup5
      add
      swap4
      dup3
      swap1
      sub
      add
      dup2
        /* "test/solidity/Protocol.t.sol":31317:31403  markets[_bound(uint256(keccak256(abi.encode(seed, "market"))), 0, markets.length - 1)] */
      dup7
        /* "test/solidity/Protocol.t.sol":31436:31451  _market.asset() */
      gas
      staticcall
      iszero
      dup1
      iszero
      tag_1660
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_1660:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      dup2
      add
      swap1
      tag_1661
      swap2
      swap1
      tag_167
      jump	// in
    tag_1661:
        /* "test/solidity/Protocol.t.sol":31409:31415  _asset */
      0x24
      0x00
        /* "test/solidity/Protocol.t.sol":31409:31453  _asset = MockERC20(address(_market.asset())) */
      0x0100
      exp
      dup2
      sload
      dup2
      sub(shl(0xa0, 0x01), 0x01)
      mul
      not
      and
      swap1
      dup4
      sub(shl(0xa0, 0x01), 0x01)
      and
      mul
      or
      swap1
      sstore
      pop
        /* "test/solidity/Protocol.t.sol":31475:31483  accounts */
      0x1d
        /* "test/solidity/Protocol.t.sol":31484:31568  _bound(uint256(keccak256(abi.encode(seed, "counterparty"))), 0, accounts.length - 1) */
      tag_1662
        /* "test/solidity/Protocol.t.sol":31520:31524  seed */
      dup3
        /* "test/solidity/Protocol.t.sol":31509:31541  abi.encode(seed, "counterparty") */
      add(0x20, mload(0x40))
      tag_169
      swap2
      swap1
      tag_170
      jump	// in
        /* "test/solidity/Protocol.t.sol":31484:31568  _bound(uint256(keccak256(abi.encode(seed, "counterparty"))), 0, accounts.length - 1) */
    tag_1662:
        /* "test/solidity/Protocol.t.sol":31475:31569  accounts[_bound(uint256(keccak256(abi.encode(seed, "counterparty"))), 0, accounts.length - 1)] */
      dup2
      sload
      dup2
      lt
      tag_1666
      jumpi
      tag_1666
      tag_162
      jump	// in
    tag_1666:
      0x00
      swap2
      dup3
      mstore
      0x20
      swap2
      dup3
      swap1
      keccak256
      add
      sload
        /* "test/solidity/Protocol.t.sol":31459:31472  _counterparty */
      0x26
        /* "test/solidity/Protocol.t.sol":31459:31569  _counterparty = accounts[_bound(uint256(keccak256(abi.encode(seed, "counterparty"))), 0, accounts.length - 1)] */
      dup1
      sload
      not(sub(shl(0xa0, 0x01), 0x01))
      and
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":31475:31569  accounts[_bound(uint256(keccak256(abi.encode(seed, "counterparty"))), 0, accounts.length - 1)] */
      swap1
      swap3
      and
        /* "test/solidity/Protocol.t.sol":31459:31569  _counterparty = accounts[_bound(uint256(keccak256(abi.encode(seed, "counterparty"))), 0, accounts.length - 1)] */
      swap2
      swap1
      swap2
      or
      swap1
      sstore
        /* "test/solidity/Protocol.t.sol":31628:31658  abi.encode(seed, "collateral") */
      mload(0x40)
        /* "test/solidity/Protocol.t.sol":31595:31602  markets */
      0x1c
      swap2
        /* "test/solidity/Protocol.t.sol":31603:31684  _bound(uint256(keccak256(abi.encode(seed, "collateral"))), 0, markets.length - 1) */
      tag_1668
      swap2
        /* "test/solidity/Protocol.t.sol":31628:31658  abi.encode(seed, "collateral") */
      tag_155
      swap2
        /* "test/solidity/Protocol.t.sol":31639:31643  seed */
      dup6
      swap2
        /* "test/solidity/Protocol.t.sol":31628:31658  abi.encode(seed, "collateral") */
      add
      tag_177
      jump	// in
        /* "test/solidity/Protocol.t.sol":31603:31684  _bound(uint256(keccak256(abi.encode(seed, "collateral"))), 0, markets.length - 1) */
    tag_1668:
        /* "test/solidity/Protocol.t.sol":31595:31685  markets[_bound(uint256(keccak256(abi.encode(seed, "collateral"))), 0, markets.length - 1)] */
      dup2
      sload
      dup2
      lt
      tag_1672
      jumpi
      tag_1672
      tag_162
      jump	// in
    tag_1672:
      0x00
      swap2
      dup3
      mstore
      0x20
      swap1
      swap2
      keccak256
      add
      sload
        /* "test/solidity/Protocol.t.sol":31575:31592  _collateralMarket */
      0x27
        /* "test/solidity/Protocol.t.sol":31575:31685  _collateralMarket = markets[_bound(uint256(keccak256(abi.encode(seed, "collateral"))), 0, markets.length - 1)] */
      dup1
      sload
      not(sub(shl(0xa0, 0x01), 0x01))
      and
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":31595:31685  markets[_bound(uint256(keccak256(abi.encode(seed, "collateral"))), 0, markets.length - 1)] */
      swap1
      swap3
      and
        /* "test/solidity/Protocol.t.sol":31575:31685  _collateralMarket = markets[_bound(uint256(keccak256(abi.encode(seed, "collateral"))), 0, markets.length - 1)] */
      swap2
      swap1
      swap2
      or
      swap1
      sstore
        /* "contracts/utils/FixedLib.sol":306:313  4 weeks */
      0x24ea00
        /* "test/solidity/Protocol.t.sol":31722:31757  block.timestamp % FixedLib.INTERVAL */
      tag_1674
        /* "contracts/utils/FixedLib.sol":306:313  4 weeks */
      dup2
        /* "test/solidity/Protocol.t.sol":31722:31737  block.timestamp */
      timestamp
        /* "test/solidity/Protocol.t.sol":31722:31757  block.timestamp % FixedLib.INTERVAL */
      tag_183
      jump	// in
    tag_1674:
        /* "test/solidity/Protocol.t.sol":31703:31758  block.timestamp - (block.timestamp % FixedLib.INTERVAL) */
      tag_1675
      swap1
        /* "test/solidity/Protocol.t.sol":31703:31718  block.timestamp */
      timestamp
        /* "test/solidity/Protocol.t.sol":31703:31758  block.timestamp - (block.timestamp % FixedLib.INTERVAL) */
      tag_158
      jump	// in
    tag_1675:
        /* "test/solidity/Protocol.t.sol":31703:31778  block.timestamp - (block.timestamp % FixedLib.INTERVAL) + FixedLib.INTERVAL */
      tag_1676
      swap2
      swap1
      tag_186
      jump	// in
    tag_1676:
        /* "test/solidity/Protocol.t.sol":31691:31700  _maturity */
      0x25
        /* "test/solidity/Protocol.t.sol":31691:31778  _maturity = block.timestamp - (block.timestamp % FixedLib.INTERVAL) + FixedLib.INTERVAL */
      sstore
        /* "test/solidity/Protocol.t.sol":31784:31809  vm.startPrank(msg.sender) */
      mload(0x40)
      shl(0xe1, 0x03223eab)
      dup2
      mstore
        /* "test/solidity/Protocol.t.sol":31798:31808  msg.sender */
      caller
        /* "test/solidity/Protocol.t.sol":31784:31809  vm.startPrank(msg.sender) */
      0x04
      dup3
      add
        /* "#utility.yul":7560:7611   */
      mstore
      0x00
      dup1
      mload
      0x20
      data_1a390d6c2ee89e11d2dffeb86f753e43f966d02cbb0b3bd3e6e1cdf50245ef50
      dup4
      codecopy
      dup2
      mload
      swap2
      mstore
        /* "test/solidity/Protocol.t.sol":31784:31797  vm.startPrank */
      swap1
      0x06447d56
      swap1
        /* "#utility.yul":7533:7551   */
      0x24
      add
        /* "test/solidity/Protocol.t.sol":31784:31809  vm.startPrank(msg.sender) */
      0x00
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      0x00
      dup8
      dup1
      extcodesize
      iszero
      dup1
      iszero
      tag_1678
      jumpi
      0x00
      dup1
      revert
    tag_1678:
      pop
      gas
      call
      iszero
      dup1
      iszero
      tag_1680
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_1680:
      pop
      pop
        /* "test/solidity/Protocol.t.sol":19139:19156  rewardsController */
      sload(0x1e)
        /* "test/solidity/Protocol.t.sol":19182:19193  rewardAsset */
      sload(0x1f)
        /* "test/solidity/Protocol.t.sol":19139:19194  rewardsController.allClaimable(msg.sender, rewardAsset) */
      mload(0x40)
      shl(0xe1, 0x4565f9ef)
      dup2
      mstore
        /* "test/solidity/Protocol.t.sol":19170:19180  msg.sender */
      caller
        /* "test/solidity/Protocol.t.sol":19139:19194  rewardsController.allClaimable(msg.sender, rewardAsset) */
      0x04
      dup3
      add
        /* "#utility.yul":14543:14577   */
      mstore
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":19182:19193  rewardAsset */
      swap2
      dup3
      and
        /* "#utility.yul":14593:14611   */
      0x24
      dup3
      add
        /* "#utility.yul":14586:14629   */
      mstore
        /* "test/solidity/Protocol.t.sol":19110:19136  uint256 accumulatedRewards */
      0x00
      swap5
      pop
        /* "test/solidity/Protocol.t.sol":19139:19156  rewardsController */
      swap2
      and
      swap2
      pop
        /* "test/solidity/Protocol.t.sol":19139:19169  rewardsController.allClaimable */
      0x8acbf3de
      swap1
        /* "#utility.yul":14478:14496   */
      0x44
      add
        /* "test/solidity/Protocol.t.sol":19139:19194  rewardsController.allClaimable(msg.sender, rewardAsset) */
      0x20
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      dup7
      gas
      staticcall
      iszero
      dup1
      iszero
      tag_1685
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_1685:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      dup2
      add
      swap1
      tag_1686
      swap2
      swap1
      tag_212
      jump	// in
    tag_1686:
        /* "test/solidity/Protocol.t.sol":19224:19235  rewardAsset */
      sload(0x1f)
        /* "test/solidity/Protocol.t.sol":19224:19257  rewardAsset.balanceOf(msg.sender) */
      mload(0x40)
      shl(0xe0, 0x70a08231)
      dup2
      mstore
        /* "test/solidity/Protocol.t.sol":19246:19256  msg.sender */
      caller
        /* "test/solidity/Protocol.t.sol":19224:19257  rewardAsset.balanceOf(msg.sender) */
      0x04
      dup3
      add
        /* "#utility.yul":7560:7611   */
      mstore
        /* "test/solidity/Protocol.t.sol":19110:19194  uint256 accumulatedRewards = rewardsController.allClaimable(msg.sender, rewardAsset) */
      swap2
      swap3
      pop
        /* "test/solidity/Protocol.t.sol":19200:19221  uint256 balanceBefore */
      0x00
      swap2
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":19224:19235  rewardAsset */
      swap1
      swap2
      and
      swap1
        /* "test/solidity/Protocol.t.sol":19224:19245  rewardAsset.balanceOf */
      0x70a08231
      swap1
        /* "#utility.yul":7533:7551   */
      0x24
      add
        /* "test/solidity/Protocol.t.sol":19224:19257  rewardAsset.balanceOf(msg.sender) */
      0x20
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      dup7
      gas
      staticcall
      iszero
      dup1
      iszero
      tag_1689
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_1689:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      dup2
      add
      swap1
      tag_1690
      swap2
      swap1
      tag_212
      jump	// in
    tag_1690:
        /* "test/solidity/Protocol.t.sol":19263:19280  rewardsController */
      sload(0x1e)
        /* "test/solidity/Protocol.t.sol":19263:19301  rewardsController.claimAll(msg.sender) */
      mload(0x40)
      shl(0xe0, 0x77329f35)
      dup2
      mstore
        /* "test/solidity/Protocol.t.sol":19290:19300  msg.sender */
      caller
        /* "test/solidity/Protocol.t.sol":19263:19301  rewardsController.claimAll(msg.sender) */
      0x04
      dup3
      add
        /* "#utility.yul":7560:7611   */
      mstore
        /* "test/solidity/Protocol.t.sol":19200:19257  uint256 balanceBefore = rewardAsset.balanceOf(msg.sender) */
      swap2
      swap3
      pop
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":19263:19280  rewardsController */
      and
      swap1
        /* "test/solidity/Protocol.t.sol":19263:19289  rewardsController.claimAll */
      0x77329f35
      swap1
        /* "#utility.yul":7533:7551   */
      0x24
      add
        /* "test/solidity/Protocol.t.sol":19263:19301  rewardsController.claimAll(msg.sender) */
      0x00
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      0x00
      dup8
      gas
      call
      iszero
      dup1
      iszero
      tag_1693
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_1693:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      0x00
      dup3
      returndatacopy
      0x1f
      returndatasize
      swap1
      dup2
      add
      not(0x1f)
      and
      dup3
      add
      0x40
      mstore
      tag_1694
      swap2
      swap1
      dup2
      add
      swap1
      tag_1695
      jump	// in
    tag_1694:
      pop
      pop
        /* "test/solidity/Protocol.t.sol":19316:19327  rewardAsset */
      sload(0x1f)
        /* "test/solidity/Protocol.t.sol":19316:19349  rewardAsset.balanceOf(msg.sender) */
      mload(0x40)
      shl(0xe0, 0x70a08231)
      dup2
      mstore
        /* "test/solidity/Protocol.t.sol":19338:19348  msg.sender */
      caller
        /* "test/solidity/Protocol.t.sol":19316:19349  rewardAsset.balanceOf(msg.sender) */
      0x04
      dup3
      add
        /* "#utility.yul":7560:7611   */
      mstore
        /* "test/solidity/Protocol.t.sol":19307:19386  assertEq(rewardAsset.balanceOf(msg.sender), balanceBefore + accumulatedRewards) */
      tag_1696
      swap2
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":19316:19327  rewardAsset */
      and
      swap1
        /* "test/solidity/Protocol.t.sol":19316:19337  rewardAsset.balanceOf */
      0x70a08231
      swap1
        /* "#utility.yul":7533:7551   */
      0x24
      add
        /* "test/solidity/Protocol.t.sol":19316:19349  rewardAsset.balanceOf(msg.sender) */
      0x20
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      dup7
      gas
      staticcall
      iszero
      dup1
      iszero
      tag_1699
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_1699:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      dup2
      add
      swap1
      tag_1700
      swap2
      swap1
      tag_212
      jump	// in
    tag_1700:
        /* "test/solidity/Protocol.t.sol":19351:19385  balanceBefore + accumulatedRewards */
      tag_241
        /* "test/solidity/Protocol.t.sol":19367:19385  accumulatedRewards */
      dup5
        /* "test/solidity/Protocol.t.sol":19351:19364  balanceBefore */
      dup5
        /* "test/solidity/Protocol.t.sol":19351:19385  balanceBefore + accumulatedRewards */
      tag_186
      jump	// in
        /* "test/solidity/Protocol.t.sol":19307:19386  assertEq(rewardAsset.balanceOf(msg.sender), balanceBefore + accumulatedRewards) */
    tag_1696:
        /* "test/solidity/Protocol.t.sol":19410:19428  accumulatedRewards */
      dup2
        /* "test/solidity/Protocol.t.sol":19392:19406  claimedRewards */
      0x20
      0x00
        /* "test/solidity/Protocol.t.sol":19392:19428  claimedRewards += accumulatedRewards */
      dup3
      dup3
      sload
      tag_1702
      swap2
      swap1
      tag_186
      jump	// in
    tag_1702:
      swap3
      pop
      pop
      dup2
      swap1
      sstore
      pop
        /* "test/solidity/Protocol.t.sol":19104:19433  {... */
      pop
      pop
      0x00
      dup1
      mload
      0x20
      data_b627c71dec38ae7fa273aa3bb9b6210fd4a76d47f44ae646db16da401b96db40
      dup4
      codecopy
      dup2
      mload
      swap2
      mstore
        /* "lib/forge-std/src/Base.sol":309:346  uint256(keccak256("hevm cheat code")) */
      0x00
      shr
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":31822:31834  vm.stopPrank */
      and
      0x90c5013b
        /* "test/solidity/Protocol.t.sol":31822:31836  vm.stopPrank() */
      mload(0x40)
      dup2
      0xffffffff
      and
      0xe0
      shl
      dup2
      mstore
      0x04
      add
      0x00
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      0x00
      dup8
      dup1
      extcodesize
      iszero
      dup1
      iszero
      tag_243
      jumpi
      0x00
      dup1
      revert
        /* "lib/forge-std/src/StdInvariant.sol":2301:2441  function targetArtifacts() public view returns (string[] memory targetedArtifacts_) {... */
    tag_103:
        /* "lib/forge-std/src/StdInvariant.sol":2349:2383  string[] memory targetedArtifacts_ */
      0x60
        /* "lib/forge-std/src/StdInvariant.sol":2416:2434  _targetedArtifacts */
      0x11
        /* "lib/forge-std/src/StdInvariant.sol":2395:2434  targetedArtifacts_ = _targetedArtifacts */
      dup1
      sload
      dup1
      0x20
      mul
      0x20
      add
      mload(0x40)
      swap1
      dup2
      add
      0x40
      mstore
      dup1
      swap3
      swap2
      swap1
      dup2
      dup2
      mstore
      0x20
      add
      0x00
      swap1
    tag_1707:
      dup3
      dup3
      lt
      iszero
      tag_1506
      jumpi
      dup4
      dup3
      swap1
      0x00
      mstore
      keccak256(0x00, 0x20)
      add
      dup1
      sload
      tag_1710
      swap1
      tag_1711
      jump	// in
    tag_1710:
      dup1
      0x1f
      add
      0x20
      dup1
      swap2
      div
      mul
      0x20
      add
      mload(0x40)
      swap1
      dup2
      add
      0x40
      mstore
      dup1
      swap3
      swap2
      swap1
      dup2
      dup2
      mstore
      0x20
      add
      dup3
      dup1
      sload
      tag_1712
      swap1
      tag_1711
      jump	// in
    tag_1712:
      dup1
      iszero
      tag_1713
      jumpi
      dup1
      0x1f
      lt
      tag_1714
      jumpi
      0x0100
      dup1
      dup4
      sload
      div
      mul
      dup4
      mstore
      swap2
      0x20
      add
      swap2
      jump(tag_1713)
    tag_1714:
      dup3
      add
      swap2
      swap1
      0x00
      mstore
      keccak256(0x00, 0x20)
      swap1
    tag_1715:
      dup2
      sload
      dup2
      mstore
      swap1
      0x01
      add
      swap1
      0x20
      add
      dup1
      dup4
      gt
      tag_1715
      jumpi
      dup3
      swap1
      sub
      0x1f
      and
      dup3
      add
      swap2
    tag_1713:
      pop
      pop
      pop
      pop
      pop
      dup2
      mstore
      0x20
      add
      swap1
      0x01
      add
      swap1
      jump(tag_1707)
        /* "lib/forge-std/src/StdInvariant.sol":2778:2924  function targetSelectors() public view returns (FuzzSelector[] memory targetedSelectors_) {... */
    tag_107:
        /* "lib/forge-std/src/StdInvariant.sol":2826:2866  FuzzSelector[] memory targetedSelectors_ */
      0x60
        /* "lib/forge-std/src/StdInvariant.sol":2899:2917  _targetedSelectors */
      0x13
        /* "lib/forge-std/src/StdInvariant.sol":2878:2917  targetedSelectors_ = _targetedSelectors */
      dup1
      sload
      dup1
      0x20
      mul
      0x20
      add
      mload(0x40)
      swap1
      dup2
      add
      0x40
      mstore
      dup1
      swap3
      swap2
      swap1
      dup2
      dup2
      mstore
      0x20
      add
      0x00
      swap1
    tag_1717:
      dup3
      dup3
      lt
      iszero
      tag_1506
      jumpi
      0x00
      dup5
      dup2
      mstore
      0x20
      swap1
      dup2
      swap1
      keccak256
      0x40
      dup1
      mload
      dup1
      dup3
      add
      dup3
      mstore
      0x02
      dup7
      mul
      swap1
      swap3
      add
      dup1
      sload
      sub(shl(0xa0, 0x01), 0x01)
      and
      dup4
      mstore
      0x01
      dup2
      add
      dup1
      sload
      dup4
      mload
      dup2
      dup8
      mul
      dup2
      add
      dup8
      add
      swap1
      swap5
      mstore
      dup1
      dup5
      mstore
      swap4
      swap5
      swap2
      swap4
      dup6
      dup4
      add
      swap4
      swap3
      dup4
      add
      dup3
      dup3
      dup1
      iszero
      tag_1720
      jumpi
      0x20
      mul
      dup3
      add
      swap2
      swap1
      0x00
      mstore
      keccak256(0x00, 0x20)
      swap1
      0x00
      swap1
    tag_1721:
      dup3
      dup3
      swap1
      sload
      swap1
      0x0100
      exp
      swap1
      div
      0xe0
      shl
      not(sub(shl(0xe0, 0x01), 0x01))
      and
      dup2
      mstore
      0x20
      add
      swap1
      0x04
      add
      swap1
      0x20
      dup3
      0x03
      add
      div
      swap3
      dup4
      add
      swap3
      0x01
      sub
      dup3
      mul
      swap2
      pop
      dup1
      dup5
      gt
      tag_1721
      jumpi
      swap1
      pop
    tag_1720:
      pop
      pop
      pop
      pop
      pop
      dup2
      mstore
      pop
      pop
      dup2
      mstore
      0x20
      add
      swap1
      0x01
      add
      swap1
      jump(tag_1717)
        /* "test/solidity/Protocol.t.sol":19437:19775  function enterMarket(bytes32 seed) external context(seed) {... */
    tag_111:
        /* "test/solidity/Protocol.t.sol":31278:31285  _market */
      sload(0x23)
        /* "test/solidity/Protocol.t.sol":19489:19493  seed */
      dup2
      swap1
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":31278:31285  _market */
      and
        /* "test/solidity/Protocol.t.sol":31270:31300  address(_market) == address(0) */
      iszero
        /* "test/solidity/Protocol.t.sol":31263:31301  assert(address(_market) == address(0)) */
      tag_1724
      jumpi
      tag_1724
      tag_153
      jump	// in
    tag_1724:
        /* "test/solidity/Protocol.t.sol":31317:31324  markets */
      0x1c
        /* "test/solidity/Protocol.t.sol":31325:31402  _bound(uint256(keccak256(abi.encode(seed, "market"))), 0, markets.length - 1) */
      tag_1725
        /* "test/solidity/Protocol.t.sol":31361:31365  seed */
      dup3
        /* "test/solidity/Protocol.t.sol":31350:31376  abi.encode(seed, "market") */
      add(0x20, mload(0x40))
      tag_155
      swap2
      swap1
      tag_156
      jump	// in
        /* "test/solidity/Protocol.t.sol":31325:31402  _bound(uint256(keccak256(abi.encode(seed, "market"))), 0, markets.length - 1) */
    tag_1725:
        /* "test/solidity/Protocol.t.sol":31317:31403  markets[_bound(uint256(keccak256(abi.encode(seed, "market"))), 0, markets.length - 1)] */
      dup2
      sload
      dup2
      lt
      tag_1729
      jumpi
      tag_1729
      tag_162
      jump	// in
    tag_1729:
      0x00
      swap2
      dup3
      mstore
      0x20
      swap2
      dup3
      swap1
      keccak256
      add
      sload
        /* "test/solidity/Protocol.t.sol":31307:31314  _market */
      0x23
        /* "test/solidity/Protocol.t.sol":31307:31403  _market = markets[_bound(uint256(keccak256(abi.encode(seed, "market"))), 0, markets.length - 1)] */
      dup1
      sload
      not(sub(shl(0xa0, 0x01), 0x01))
      and
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":31317:31403  markets[_bound(uint256(keccak256(abi.encode(seed, "market"))), 0, markets.length - 1)] */
      swap1
      swap3
      and
        /* "test/solidity/Protocol.t.sol":31307:31403  _market = markets[_bound(uint256(keccak256(abi.encode(seed, "market"))), 0, markets.length - 1)] */
      swap2
      dup3
      or
      swap1
      sstore
        /* "test/solidity/Protocol.t.sol":31436:31451  _market.asset() */
      0x40
      dup1
      mload
      shl(0xe0, 0x38d52e0f)
      dup2
      mstore
      swap1
      mload
        /* "test/solidity/Protocol.t.sol":31317:31403  markets[_bound(uint256(keccak256(abi.encode(seed, "market"))), 0, markets.length - 1)] */
      swap2
      swap3
        /* "test/solidity/Protocol.t.sol":31436:31449  _market.asset */
      0x38d52e0f
      swap3
        /* "test/solidity/Protocol.t.sol":31436:31451  _market.asset() */
      0x04
      dup1
      dup5
      add
      swap4
      dup3
      swap1
      sub
      add
      dup2
        /* "test/solidity/Protocol.t.sol":31317:31403  markets[_bound(uint256(keccak256(abi.encode(seed, "market"))), 0, markets.length - 1)] */
      dup7
        /* "test/solidity/Protocol.t.sol":31436:31451  _market.asset() */
      gas
      staticcall
      iszero
      dup1
      iszero
      tag_1732
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_1732:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      dup2
      add
      swap1
      tag_1733
      swap2
      swap1
      tag_167
      jump	// in
    tag_1733:
        /* "test/solidity/Protocol.t.sol":31409:31415  _asset */
      0x24
      0x00
        /* "test/solidity/Protocol.t.sol":31409:31453  _asset = MockERC20(address(_market.asset())) */
      0x0100
      exp
      dup2
      sload
      dup2
      sub(shl(0xa0, 0x01), 0x01)
      mul
      not
      and
      swap1
      dup4
      sub(shl(0xa0, 0x01), 0x01)
      and
      mul
      or
      swap1
      sstore
      pop
        /* "test/solidity/Protocol.t.sol":31475:31483  accounts */
      0x1d
        /* "test/solidity/Protocol.t.sol":31484:31568  _bound(uint256(keccak256(abi.encode(seed, "counterparty"))), 0, accounts.length - 1) */
      tag_1734
        /* "test/solidity/Protocol.t.sol":31520:31524  seed */
      dup3
        /* "test/solidity/Protocol.t.sol":31509:31541  abi.encode(seed, "counterparty") */
      add(0x20, mload(0x40))
      tag_169
      swap2
      swap1
      tag_170
      jump	// in
        /* "test/solidity/Protocol.t.sol":31484:31568  _bound(uint256(keccak256(abi.encode(seed, "counterparty"))), 0, accounts.length - 1) */
    tag_1734:
        /* "test/solidity/Protocol.t.sol":31475:31569  accounts[_bound(uint256(keccak256(abi.encode(seed, "counterparty"))), 0, accounts.length - 1)] */
      dup2
      sload
      dup2
      lt
      tag_1738
      jumpi
      tag_1738
      tag_162
      jump	// in
    tag_1738:
      0x00
      swap2
      dup3
      mstore
      0x20
      swap2
      dup3
      swap1
      keccak256
      add
      sload
        /* "test/solidity/Protocol.t.sol":31459:31472  _counterparty */
      0x26
        /* "test/solidity/Protocol.t.sol":31459:31569  _counterparty = accounts[_bound(uint256(keccak256(abi.encode(seed, "counterparty"))), 0, accounts.length - 1)] */
      dup1
      sload
      not(sub(shl(0xa0, 0x01), 0x01))
      and
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":31475:31569  accounts[_bound(uint256(keccak256(abi.encode(seed, "counterparty"))), 0, accounts.length - 1)] */
      swap1
      swap3
      and
        /* "test/solidity/Protocol.t.sol":31459:31569  _counterparty = accounts[_bound(uint256(keccak256(abi.encode(seed, "counterparty"))), 0, accounts.length - 1)] */
      swap2
      swap1
      swap2
      or
      swap1
      sstore
        /* "test/solidity/Protocol.t.sol":31628:31658  abi.encode(seed, "collateral") */
      mload(0x40)
        /* "test/solidity/Protocol.t.sol":31595:31602  markets */
      0x1c
      swap2
        /* "test/solidity/Protocol.t.sol":31603:31684  _bound(uint256(keccak256(abi.encode(seed, "collateral"))), 0, markets.length - 1) */
      tag_1740
      swap2
        /* "test/solidity/Protocol.t.sol":31628:31658  abi.encode(seed, "collateral") */
      tag_155
      swap2
        /* "test/solidity/Protocol.t.sol":31639:31643  seed */
      dup6
      swap2
        /* "test/solidity/Protocol.t.sol":31628:31658  abi.encode(seed, "collateral") */
      add
      tag_177
      jump	// in
        /* "test/solidity/Protocol.t.sol":31603:31684  _bound(uint256(keccak256(abi.encode(seed, "collateral"))), 0, markets.length - 1) */
    tag_1740:
        /* "test/solidity/Protocol.t.sol":31595:31685  markets[_bound(uint256(keccak256(abi.encode(seed, "collateral"))), 0, markets.length - 1)] */
      dup2
      sload
      dup2
      lt
      tag_1744
      jumpi
      tag_1744
      tag_162
      jump	// in
    tag_1744:
      0x00
      swap2
      dup3
      mstore
      0x20
      swap1
      swap2
      keccak256
      add
      sload
        /* "test/solidity/Protocol.t.sol":31575:31592  _collateralMarket */
      0x27
        /* "test/solidity/Protocol.t.sol":31575:31685  _collateralMarket = markets[_bound(uint256(keccak256(abi.encode(seed, "collateral"))), 0, markets.length - 1)] */
      dup1
      sload
      not(sub(shl(0xa0, 0x01), 0x01))
      and
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":31595:31685  markets[_bound(uint256(keccak256(abi.encode(seed, "collateral"))), 0, markets.length - 1)] */
      swap1
      swap3
      and
        /* "test/solidity/Protocol.t.sol":31575:31685  _collateralMarket = markets[_bound(uint256(keccak256(abi.encode(seed, "collateral"))), 0, markets.length - 1)] */
      swap2
      swap1
      swap2
      or
      swap1
      sstore
        /* "contracts/utils/FixedLib.sol":306:313  4 weeks */
      0x24ea00
        /* "test/solidity/Protocol.t.sol":31722:31757  block.timestamp % FixedLib.INTERVAL */
      tag_1746
        /* "contracts/utils/FixedLib.sol":306:313  4 weeks */
      dup2
        /* "test/solidity/Protocol.t.sol":31722:31737  block.timestamp */
      timestamp
        /* "test/solidity/Protocol.t.sol":31722:31757  block.timestamp % FixedLib.INTERVAL */
      tag_183
      jump	// in
    tag_1746:
        /* "test/solidity/Protocol.t.sol":31703:31758  block.timestamp - (block.timestamp % FixedLib.INTERVAL) */
      tag_1747
      swap1
        /* "test/solidity/Protocol.t.sol":31703:31718  block.timestamp */
      timestamp
        /* "test/solidity/Protocol.t.sol":31703:31758  block.timestamp - (block.timestamp % FixedLib.INTERVAL) */
      tag_158
      jump	// in
    tag_1747:
        /* "test/solidity/Protocol.t.sol":31703:31778  block.timestamp - (block.timestamp % FixedLib.INTERVAL) + FixedLib.INTERVAL */
      tag_1748
      swap2
      swap1
      tag_186
      jump	// in
    tag_1748:
        /* "test/solidity/Protocol.t.sol":31691:31700  _maturity */
      0x25
        /* "test/solidity/Protocol.t.sol":31691:31778  _maturity = block.timestamp - (block.timestamp % FixedLib.INTERVAL) + FixedLib.INTERVAL */
      sstore
        /* "test/solidity/Protocol.t.sol":31784:31809  vm.startPrank(msg.sender) */
      mload(0x40)
      shl(0xe1, 0x03223eab)
      dup2
      mstore
        /* "test/solidity/Protocol.t.sol":31798:31808  msg.sender */
      caller
        /* "test/solidity/Protocol.t.sol":31784:31809  vm.startPrank(msg.sender) */
      0x04
      dup3
      add
        /* "#utility.yul":7560:7611   */
      mstore
      0x00
      dup1
      mload
      0x20
      data_1a390d6c2ee89e11d2dffeb86f753e43f966d02cbb0b3bd3e6e1cdf50245ef50
      dup4
      codecopy
      dup2
      mload
      swap2
      mstore
        /* "test/solidity/Protocol.t.sol":31784:31797  vm.startPrank */
      swap1
      0x06447d56
      swap1
        /* "#utility.yul":7533:7551   */
      0x24
      add
        /* "test/solidity/Protocol.t.sol":31784:31809  vm.startPrank(msg.sender) */
      0x00
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      0x00
      dup8
      dup1
      extcodesize
      iszero
      dup1
      iszero
      tag_1750
      jumpi
      0x00
      dup1
      revert
    tag_1750:
      pop
      gas
      call
      iszero
      dup1
      iszero
      tag_1752
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_1752:
      pop
      pop
        /* "test/solidity/Protocol.t.sol":19527:19534  auditor */
      sload(0x1b)
        /* "test/solidity/Protocol.t.sol":19543:19550  _market */
      sload(0x23)
        /* "test/solidity/Protocol.t.sol":19527:19551  auditor.markets(_market) */
      mload(0x40)
      shl(0xe0, 0x8e8f294b)
      dup2
      mstore
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":19543:19550  _market */
      swap2
      dup3
      and
        /* "test/solidity/Protocol.t.sol":19527:19551  auditor.markets(_market) */
      0x04
      dup3
      add
        /* "#utility.yul":7560:7611   */
      mstore
        /* "test/solidity/Protocol.t.sol":19506:19519  uint256 index */
      0x00
      swap5
      pop
        /* "test/solidity/Protocol.t.sol":19527:19534  auditor */
      swap2
      and
      swap2
      pop
        /* "test/solidity/Protocol.t.sol":19527:19542  auditor.markets */
      0x8e8f294b
      swap1
        /* "#utility.yul":7533:7551   */
      0x24
      add
        /* "test/solidity/Protocol.t.sol":19527:19551  auditor.markets(_market) */
      0xa0
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      dup7
      gas
      staticcall
      iszero
      dup1
      iszero
      tag_1756
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_1756:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      dup2
      add
      swap1
      tag_1757
      swap2
      swap1
      tag_198
      jump	// in
    tag_1757:
      pop
      pop
        /* "test/solidity/Protocol.t.sol":19563:19570  auditor */
      sload(0x1b)
        /* "test/solidity/Protocol.t.sol":19563:19597  auditor.accountMarkets(msg.sender) */
      mload(0x40)
      not(sub(shl(0xe1, 0x63e28d), 0x01))
      dup2
      mstore
        /* "test/solidity/Protocol.t.sol":19586:19596  msg.sender */
      caller
        /* "test/solidity/Protocol.t.sol":19563:19597  auditor.accountMarkets(msg.sender) */
      0x04
      dup3
      add
        /* "#utility.yul":7560:7611   */
      mstore
        /* "test/solidity/Protocol.t.sol":19501:19551  (, , uint256 index, , ) = auditor.markets(_market) */
      0xff
      swap3
      swap1
      swap3
      and
      swap5
      pop
        /* "test/solidity/Protocol.t.sol":19601:19602  1 */
      0x01
        /* "test/solidity/Protocol.t.sol":19601:19611  1 << index */
      dup6
      shl
      swap4
      pop
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":19563:19570  auditor */
      and
      swap2
      pop
        /* "test/solidity/Protocol.t.sol":19563:19585  auditor.accountMarkets */
      0xff383ae6
      swap1
        /* "#utility.yul":7533:7551   */
      0x24
      add
        /* "test/solidity/Protocol.t.sol":19563:19597  auditor.accountMarkets(msg.sender) */
      0x20
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      dup7
      gas
      staticcall
      iszero
      dup1
      iszero
      tag_1760
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_1760:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      dup2
      add
      swap1
      tag_1761
      swap2
      swap1
      tag_212
      jump	// in
    tag_1761:
        /* "test/solidity/Protocol.t.sol":19563:19612  auditor.accountMarkets(msg.sender) & (1 << index) */
      and
        /* "test/solidity/Protocol.t.sol":19617:19618  0 */
      0x00
        /* "test/solidity/Protocol.t.sol":19562:19618  (auditor.accountMarkets(msg.sender) & (1 << index)) == 0 */
      sub
        /* "test/solidity/Protocol.t.sol":19558:19737  if ((auditor.accountMarkets(msg.sender) & (1 << index)) == 0) {... */
      tag_1762
      jumpi
        /* "test/solidity/Protocol.t.sol":19674:19681  auditor */
      sload(0x1b)
        /* "test/solidity/Protocol.t.sol":19628:19683  vm.expectEmit(true, true, true, true, address(auditor)) */
      mload(0x40)
      shl(0xe0, 0x81bad6f3)
      dup2
      mstore
      0x00
      dup1
      mload
      0x20
      data_1a390d6c2ee89e11d2dffeb86f753e43f966d02cbb0b3bd3e6e1cdf50245ef50
      dup4
      codecopy
      dup2
      mload
      swap2
      mstore
        /* "test/solidity/Protocol.t.sol":19628:19641  vm.expectEmit */
      swap2
      0x81bad6f3
      swap2
        /* "test/solidity/Protocol.t.sol":19628:19683  vm.expectEmit(true, true, true, true, address(auditor)) */
      tag_1763
      swap2
        /* "test/solidity/Protocol.t.sol":19642:19646  true */
      0x01
      swap2
      dup3
      swap2
      dup3
      swap2
      dup3
      swap2
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":19674:19681  auditor */
      and
      swap1
        /* "test/solidity/Protocol.t.sol":19628:19683  vm.expectEmit(true, true, true, true, address(auditor)) */
      0x04
      add
      tag_228
      jump	// in
    tag_1763:
      0x00
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      0x00
      dup8
      dup1
      extcodesize
      iszero
      dup1
      iszero
      tag_1764
      jumpi
      0x00
      dup1
      revert
    tag_1764:
      pop
      gas
      call
      iszero
      dup1
      iszero
      tag_1766
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_1766:
      pop
      pop
        /* "test/solidity/Protocol.t.sol":19710:19717  _market */
      sload(0x23)
        /* "test/solidity/Protocol.t.sol":19696:19730  MarketEntered(_market, msg.sender) */
      mload(0x40)
        /* "test/solidity/Protocol.t.sol":19719:19729  msg.sender */
      caller
      swap4
      pop
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":19710:19717  _market */
      swap1
      swap2
      and
      swap2
      pop
        /* "test/solidity/Protocol.t.sol":19696:19730  MarketEntered(_market, msg.sender) */
      0x3ab23ab0d51cccc0c3085aec51f99228625aa1a922b3a8ca89a26b0f2027a1a5
      swap1
        /* "test/solidity/Protocol.t.sol":19710:19717  _market */
      0x00
      swap1
        /* "test/solidity/Protocol.t.sol":19696:19730  MarketEntered(_market, msg.sender) */
      log3
        /* "test/solidity/Protocol.t.sol":19558:19737  if ((auditor.accountMarkets(msg.sender) & (1 << index)) == 0) {... */
    tag_1762:
        /* "test/solidity/Protocol.t.sol":19742:19749  auditor */
      sload(0x1b)
        /* "test/solidity/Protocol.t.sol":19762:19769  _market */
      sload(0x23)
        /* "test/solidity/Protocol.t.sol":19742:19770  auditor.enterMarket(_market) */
      mload(0x40)
      shl(0xe0, 0x3fe5d425)
      dup2
      mstore
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":19762:19769  _market */
      swap2
      dup3
      and
        /* "test/solidity/Protocol.t.sol":19742:19770  auditor.enterMarket(_market) */
      0x04
      dup3
      add
        /* "#utility.yul":7560:7611   */
      mstore
        /* "test/solidity/Protocol.t.sol":19742:19749  auditor */
      swap2
      and
      swap1
        /* "test/solidity/Protocol.t.sol":19742:19761  auditor.enterMarket */
      0x3fe5d425
      swap1
        /* "#utility.yul":7533:7551   */
      0x24
      add
        /* "test/solidity/Protocol.t.sol":19742:19770  auditor.enterMarket(_market) */
      0x00
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      0x00
      dup8
      dup1
      extcodesize
      iszero
      dup1
      iszero
      tag_1768
      jumpi
      0x00
      dup1
      revert
    tag_1768:
      pop
      gas
      call
      iszero
      dup1
      iszero
      tag_237
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
        /* "test/solidity/Protocol.t.sol":27637:30954  function liquidate(... */
    tag_114:
        /* "test/solidity/Protocol.t.sol":31278:31285  _market */
      sload(0x23)
        /* "test/solidity/Protocol.t.sol":27722:27726  seed */
      dup2
      swap1
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":31278:31285  _market */
      and
        /* "test/solidity/Protocol.t.sol":31270:31300  address(_market) == address(0) */
      iszero
        /* "test/solidity/Protocol.t.sol":31263:31301  assert(address(_market) == address(0)) */
      tag_1776
      jumpi
      tag_1776
      tag_153
      jump	// in
    tag_1776:
        /* "test/solidity/Protocol.t.sol":31317:31324  markets */
      0x1c
        /* "test/solidity/Protocol.t.sol":31325:31402  _bound(uint256(keccak256(abi.encode(seed, "market"))), 0, markets.length - 1) */
      tag_1777
        /* "test/solidity/Protocol.t.sol":31361:31365  seed */
      dup3
        /* "test/solidity/Protocol.t.sol":31350:31376  abi.encode(seed, "market") */
      add(0x20, mload(0x40))
      tag_155
      swap2
      swap1
      tag_156
      jump	// in
        /* "test/solidity/Protocol.t.sol":31325:31402  _bound(uint256(keccak256(abi.encode(seed, "market"))), 0, markets.length - 1) */
    tag_1777:
        /* "test/solidity/Protocol.t.sol":31317:31403  markets[_bound(uint256(keccak256(abi.encode(seed, "market"))), 0, markets.length - 1)] */
      dup2
      sload
      dup2
      lt
      tag_1781
      jumpi
      tag_1781
      tag_162
      jump	// in
    tag_1781:
      0x00
      swap2
      dup3
      mstore
      0x20
      swap2
      dup3
      swap1
      keccak256
      add
      sload
        /* "test/solidity/Protocol.t.sol":31307:31314  _market */
      0x23
        /* "test/solidity/Protocol.t.sol":31307:31403  _market = markets[_bound(uint256(keccak256(abi.encode(seed, "market"))), 0, markets.length - 1)] */
      dup1
      sload
      not(sub(shl(0xa0, 0x01), 0x01))
      and
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":31317:31403  markets[_bound(uint256(keccak256(abi.encode(seed, "market"))), 0, markets.length - 1)] */
      swap1
      swap3
      and
        /* "test/solidity/Protocol.t.sol":31307:31403  _market = markets[_bound(uint256(keccak256(abi.encode(seed, "market"))), 0, markets.length - 1)] */
      swap2
      dup3
      or
      swap1
      sstore
        /* "test/solidity/Protocol.t.sol":31436:31451  _market.asset() */
      0x40
      dup1
      mload
      shl(0xe0, 0x38d52e0f)
      dup2
      mstore
      swap1
      mload
        /* "test/solidity/Protocol.t.sol":31317:31403  markets[_bound(uint256(keccak256(abi.encode(seed, "market"))), 0, markets.length - 1)] */
      swap2
      swap3
        /* "test/solidity/Protocol.t.sol":31436:31449  _market.asset */
      0x38d52e0f
      swap3
        /* "test/solidity/Protocol.t.sol":31436:31451  _market.asset() */
      0x04
      dup1
      dup5
      add
      swap4
      dup3
      swap1
      sub
      add
      dup2
        /* "test/solidity/Protocol.t.sol":31317:31403  markets[_bound(uint256(keccak256(abi.encode(seed, "market"))), 0, markets.length - 1)] */
      dup7
        /* "test/solidity/Protocol.t.sol":31436:31451  _market.asset() */
      gas
      staticcall
      iszero
      dup1
      iszero
      tag_1784
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_1784:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      dup2
      add
      swap1
      tag_1785
      swap2
      swap1
      tag_167
      jump	// in
    tag_1785:
        /* "test/solidity/Protocol.t.sol":31409:31415  _asset */
      0x24
      0x00
        /* "test/solidity/Protocol.t.sol":31409:31453  _asset = MockERC20(address(_market.asset())) */
      0x0100
      exp
      dup2
      sload
      dup2
      sub(shl(0xa0, 0x01), 0x01)
      mul
      not
      and
      swap1
      dup4
      sub(shl(0xa0, 0x01), 0x01)
      and
      mul
      or
      swap1
      sstore
      pop
        /* "test/solidity/Protocol.t.sol":31475:31483  accounts */
      0x1d
        /* "test/solidity/Protocol.t.sol":31484:31568  _bound(uint256(keccak256(abi.encode(seed, "counterparty"))), 0, accounts.length - 1) */
      tag_1786
        /* "test/solidity/Protocol.t.sol":31520:31524  seed */
      dup3
        /* "test/solidity/Protocol.t.sol":31509:31541  abi.encode(seed, "counterparty") */
      add(0x20, mload(0x40))
      tag_169
      swap2
      swap1
      tag_170
      jump	// in
        /* "test/solidity/Protocol.t.sol":31484:31568  _bound(uint256(keccak256(abi.encode(seed, "counterparty"))), 0, accounts.length - 1) */
    tag_1786:
        /* "test/solidity/Protocol.t.sol":31475:31569  accounts[_bound(uint256(keccak256(abi.encode(seed, "counterparty"))), 0, accounts.length - 1)] */
      dup2
      sload
      dup2
      lt
      tag_1790
      jumpi
      tag_1790
      tag_162
      jump	// in
    tag_1790:
      0x00
      swap2
      dup3
      mstore
      0x20
      swap2
      dup3
      swap1
      keccak256
      add
      sload
        /* "test/solidity/Protocol.t.sol":31459:31472  _counterparty */
      0x26
        /* "test/solidity/Protocol.t.sol":31459:31569  _counterparty = accounts[_bound(uint256(keccak256(abi.encode(seed, "counterparty"))), 0, accounts.length - 1)] */
      dup1
      sload
      not(sub(shl(0xa0, 0x01), 0x01))
      and
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":31475:31569  accounts[_bound(uint256(keccak256(abi.encode(seed, "counterparty"))), 0, accounts.length - 1)] */
      swap1
      swap3
      and
        /* "test/solidity/Protocol.t.sol":31459:31569  _counterparty = accounts[_bound(uint256(keccak256(abi.encode(seed, "counterparty"))), 0, accounts.length - 1)] */
      swap2
      swap1
      swap2
      or
      swap1
      sstore
        /* "test/solidity/Protocol.t.sol":31628:31658  abi.encode(seed, "collateral") */
      mload(0x40)
        /* "test/solidity/Protocol.t.sol":31595:31602  markets */
      0x1c
      swap2
        /* "test/solidity/Protocol.t.sol":31603:31684  _bound(uint256(keccak256(abi.encode(seed, "collateral"))), 0, markets.length - 1) */
      tag_1792
      swap2
        /* "test/solidity/Protocol.t.sol":31628:31658  abi.encode(seed, "collateral") */
      tag_155
      swap2
        /* "test/solidity/Protocol.t.sol":31639:31643  seed */
      dup6
      swap2
        /* "test/solidity/Protocol.t.sol":31628:31658  abi.encode(seed, "collateral") */
      add
      tag_177
      jump	// in
        /* "test/solidity/Protocol.t.sol":31603:31684  _bound(uint256(keccak256(abi.encode(seed, "collateral"))), 0, markets.length - 1) */
    tag_1792:
        /* "test/solidity/Protocol.t.sol":31595:31685  markets[_bound(uint256(keccak256(abi.encode(seed, "collateral"))), 0, markets.length - 1)] */
      dup2
      sload
      dup2
      lt
      tag_1796
      jumpi
      tag_1796
      tag_162
      jump	// in
    tag_1796:
      0x00
      swap2
      dup3
      mstore
      0x20
      swap1
      swap2
      keccak256
      add
      sload
        /* "test/solidity/Protocol.t.sol":31575:31592  _collateralMarket */
      0x27
        /* "test/solidity/Protocol.t.sol":31575:31685  _collateralMarket = markets[_bound(uint256(keccak256(abi.encode(seed, "collateral"))), 0, markets.length - 1)] */
      dup1
      sload
      not(sub(shl(0xa0, 0x01), 0x01))
      and
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":31595:31685  markets[_bound(uint256(keccak256(abi.encode(seed, "collateral"))), 0, markets.length - 1)] */
      swap1
      swap3
      and
        /* "test/solidity/Protocol.t.sol":31575:31685  _collateralMarket = markets[_bound(uint256(keccak256(abi.encode(seed, "collateral"))), 0, markets.length - 1)] */
      swap2
      swap1
      swap2
      or
      swap1
      sstore
        /* "contracts/utils/FixedLib.sol":306:313  4 weeks */
      0x24ea00
        /* "test/solidity/Protocol.t.sol":31722:31757  block.timestamp % FixedLib.INTERVAL */
      tag_1798
        /* "contracts/utils/FixedLib.sol":306:313  4 weeks */
      dup2
        /* "test/solidity/Protocol.t.sol":31722:31737  block.timestamp */
      timestamp
        /* "test/solidity/Protocol.t.sol":31722:31757  block.timestamp % FixedLib.INTERVAL */
      tag_183
      jump	// in
    tag_1798:
        /* "test/solidity/Protocol.t.sol":31703:31758  block.timestamp - (block.timestamp % FixedLib.INTERVAL) */
      tag_1799
      swap1
        /* "test/solidity/Protocol.t.sol":31703:31718  block.timestamp */
      timestamp
        /* "test/solidity/Protocol.t.sol":31703:31758  block.timestamp - (block.timestamp % FixedLib.INTERVAL) */
      tag_158
      jump	// in
    tag_1799:
        /* "test/solidity/Protocol.t.sol":31703:31778  block.timestamp - (block.timestamp % FixedLib.INTERVAL) + FixedLib.INTERVAL */
      tag_1800
      swap2
      swap1
      tag_186
      jump	// in
    tag_1800:
        /* "test/solidity/Protocol.t.sol":31691:31700  _maturity */
      0x25
        /* "test/solidity/Protocol.t.sol":31691:31778  _maturity = block.timestamp - (block.timestamp % FixedLib.INTERVAL) + FixedLib.INTERVAL */
      sstore
        /* "test/solidity/Protocol.t.sol":31784:31809  vm.startPrank(msg.sender) */
      mload(0x40)
      shl(0xe1, 0x03223eab)
      dup2
      mstore
        /* "test/solidity/Protocol.t.sol":31798:31808  msg.sender */
      caller
        /* "test/solidity/Protocol.t.sol":31784:31809  vm.startPrank(msg.sender) */
      0x04
      dup3
      add
        /* "#utility.yul":7560:7611   */
      mstore
      0x00
      dup1
      mload
      0x20
      data_1a390d6c2ee89e11d2dffeb86f753e43f966d02cbb0b3bd3e6e1cdf50245ef50
      dup4
      codecopy
      dup2
      mload
      swap2
      mstore
        /* "test/solidity/Protocol.t.sol":31784:31797  vm.startPrank */
      swap1
      0x06447d56
      swap1
        /* "#utility.yul":7533:7551   */
      0x24
      add
        /* "test/solidity/Protocol.t.sol":31784:31809  vm.startPrank(msg.sender) */
      0x00
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      0x00
      dup8
      dup1
      extcodesize
      iszero
      dup1
      iszero
      tag_1802
      jumpi
      0x00
      dup1
      revert
    tag_1802:
      pop
      gas
      call
      iszero
      dup1
      iszero
      tag_1804
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_1804:
      pop
      pop
      pop
      pop
        /* "test/solidity/Protocol.t.sol":27748:27752  seed */
      dup2
        /* "test/solidity/Protocol.t.sol":31940:31948  accounts */
      0x1d
        /* "test/solidity/Protocol.t.sol":32090:32098  accounts */
      dup1
        /* "test/solidity/Protocol.t.sol":32090:32105  accounts.length */
      dup1
      sload
      swap1
      pop
        /* "test/solidity/Protocol.t.sol":32002:32086  _bound(uint256(keccak256(abi.encode(seed, "counterparty"))), 0, accounts.length - 2) */
      tag_1806
        /* "test/solidity/Protocol.t.sol":32038:32042  seed */
      dup4
        /* "test/solidity/Protocol.t.sol":32027:32059  abi.encode(seed, "counterparty") */
      add(0x20, mload(0x40))
      tag_1807
      swap2
      swap1
      tag_170
      jump	// in
    tag_1807:
      0x40
      dup1
      mload
      not(0x1f)
      dup2
      dup5
      sub
      add
      dup2
      mstore
      swap2
      swap1
      mstore
        /* "test/solidity/Protocol.t.sol":32017:32060  keccak256(abi.encode(seed, "counterparty")) */
      dup1
      mload
        /* "test/solidity/Protocol.t.sol":32027:32059  abi.encode(seed, "counterparty") */
      0x20
        /* "test/solidity/Protocol.t.sol":32017:32060  keccak256(abi.encode(seed, "counterparty")) */
      swap1
      swap2
      add
      keccak256
        /* "test/solidity/Protocol.t.sol":32066:32074  accounts */
      0x1d
        /* "test/solidity/Protocol.t.sol":32066:32081  accounts.length */
      sload
        /* "test/solidity/Protocol.t.sol":32009:32061  uint256(keccak256(abi.encode(seed, "counterparty"))) */
      0x00
      swap1
        /* "test/solidity/Protocol.t.sol":32066:32085  accounts.length - 2 */
      tag_157
      swap1
        /* "test/solidity/Protocol.t.sol":32084:32085  2 */
      0x02
      swap1
        /* "test/solidity/Protocol.t.sol":32066:32085  accounts.length - 2 */
      tag_158
      jump	// in
        /* "test/solidity/Protocol.t.sol":32002:32086  _bound(uint256(keccak256(abi.encode(seed, "counterparty"))), 0, accounts.length - 2) */
    tag_1806:
        /* "test/solidity/Protocol.t.sol":31957:32086  uint8(bytes1(bytes20(msg.sender))) +... */
      tag_1809
      swap1
        /* "test/solidity/Protocol.t.sol":31957:31991  uint8(bytes1(bytes20(msg.sender))) */
      0xff
        /* "test/solidity/Protocol.t.sol":31978:31988  msg.sender */
      caller
        /* "test/solidity/Protocol.t.sol":31957:31991  uint8(bytes1(bytes20(msg.sender))) */
      0x98
      shr
      and
        /* "test/solidity/Protocol.t.sol":31957:32086  uint8(bytes1(bytes20(msg.sender))) +... */
      tag_186
      jump	// in
    tag_1809:
        /* "test/solidity/Protocol.t.sol":31956:32105  (uint8(bytes1(bytes20(msg.sender))) +... */
      tag_1810
      swap2
      swap1
      tag_183
      jump	// in
    tag_1810:
        /* "test/solidity/Protocol.t.sol":31940:32111  accounts[... */
      dup2
      sload
      dup2
      lt
      tag_1812
      jumpi
      tag_1812
      tag_162
      jump	// in
    tag_1812:
      0x00
      swap2
      dup3
      mstore
      0x20
      dup1
      dup4
      keccak256
      swap1
      swap2
      add
      sload
        /* "test/solidity/Protocol.t.sol":31924:31937  _counterparty */
      0x26
        /* "test/solidity/Protocol.t.sol":31924:32111  _counterparty = accounts[... */
      dup1
      sload
      not(sub(shl(0xa0, 0x01), 0x01))
      and
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":31940:32111  accounts[... */
      swap3
      dup4
      and
        /* "test/solidity/Protocol.t.sol":31924:32111  _counterparty = accounts[... */
      or
      swap1
      sstore
        /* "test/solidity/Protocol.t.sol":32220:32227  _market */
      sload(0x23)
        /* "test/solidity/Protocol.t.sol":32220:32243  _market.reserveFactor() */
      0x40
      dup1
      mload
      shl(0xe2, 0x10c8adc5)
      dup2
      mstore
      swap1
      mload
        /* "test/solidity/Protocol.t.sol":32127:32742  modifier _liquidity(uint256 assets) {... */
      0xffffffffffffff
      dup11
      and
      swap6
        /* "test/solidity/Protocol.t.sol":31940:32111  accounts[... */
      swap5
        /* "test/solidity/Protocol.t.sol":32197:32244  assets.divWadUp(1e18 - _market.reserveFactor()) */
      tag_1815
      swap5
        /* "test/solidity/Protocol.t.sol":32220:32227  _market */
      swap4
      swap1
      swap4
      and
      swap3
        /* "test/solidity/Protocol.t.sol":32220:32241  _market.reserveFactor */
      0x4322b714
      swap3
        /* "test/solidity/Protocol.t.sol":32220:32243  _market.reserveFactor() */
      0x04
      dup1
      dup3
      add
      swap4
      swap2
      dup3
      swap1
      sub
      add
      dup2
        /* "test/solidity/Protocol.t.sol":32220:32227  _market */
      dup7
        /* "test/solidity/Protocol.t.sol":32220:32243  _market.reserveFactor() */
      gas
      staticcall
      iszero
      dup1
      iszero
      tag_1298
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
        /* "test/solidity/Protocol.t.sol":32197:32244  assets.divWadUp(1e18 - _market.reserveFactor()) */
    tag_1815:
        /* "test/solidity/Protocol.t.sol":32177:32244  uint256 liquidity = assets.divWadUp(1e18 - _market.reserveFactor()) */
      swap1
      pop
        /* "test/solidity/Protocol.t.sol":32471:32485  liquidity != 0 */
      dup1
      iszero
        /* "test/solidity/Protocol.t.sol":32467:32725  if (liquidity != 0) {... */
      tag_1820
      jumpi
        /* "test/solidity/Protocol.t.sol":32514:32524  msg.sender */
      caller
        /* "test/solidity/Protocol.t.sol":32534:32560  changePrank(address(this)) */
      tag_1821
        /* "test/solidity/Protocol.t.sol":32554:32558  this */
      address
        /* "test/solidity/Protocol.t.sol":32534:32545  changePrank */
      tag_549
        /* "test/solidity/Protocol.t.sol":32534:32560  changePrank(address(this)) */
      jump	// in
    tag_1821:
        /* "test/solidity/Protocol.t.sol":32588:32595  _market */
      0x23
      0x00
      swap1
      sload
      swap1
      0x0100
      exp
      swap1
      div
      sub(shl(0xa0, 0x01), 0x01)
      and
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":32588:32601  _market.asset */
      and
      0x38d52e0f
        /* "test/solidity/Protocol.t.sol":32588:32603  _market.asset() */
      mload(0x40)
      dup2
      0xffffffff
      and
      0xe0
      shl
      dup2
      mstore
      0x04
      add
      0x20
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      dup7
      gas
      staticcall
      iszero
      dup1
      iszero
      tag_1823
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_1823:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      dup2
      add
      swap1
      tag_1824
      swap2
      swap1
      tag_167
      jump	// in
    tag_1824:
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":32570:32610  MockERC20(address(_market.asset())).mint */
      and
      0x40c10f19
        /* "test/solidity/Protocol.t.sol":32619:32623  this */
      address
        /* "test/solidity/Protocol.t.sol":32626:32635  liquidity */
      dup5
        /* "test/solidity/Protocol.t.sol":32570:32636  MockERC20(address(_market.asset())).mint(address(this), liquidity) */
      mload(0x40)
      dup4
      0xffffffff
      and
      0xe0
      shl
      dup2
      mstore
      0x04
      add
      tag_1825
      swap3
      swap2
      swap1
      tag_345
      jump	// in
    tag_1825:
      0x00
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      0x00
      dup8
      dup1
      extcodesize
      iszero
      dup1
      iszero
      tag_1826
      jumpi
      0x00
      dup1
      revert
    tag_1826:
      pop
      gas
      call
      iszero
      dup1
      iszero
      tag_1828
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_1828:
      pop
      pop
        /* "test/solidity/Protocol.t.sol":32646:32653  _market */
      sload(0x23)
        /* "test/solidity/Protocol.t.sol":32646:32687  _market.deposit(liquidity, address(this)) */
      mload(0x40)
      shl(0xe0, 0x6e553f65)
      dup2
      mstore
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":32646:32653  _market */
      swap1
      swap2
      and
      swap3
      pop
        /* "test/solidity/Protocol.t.sol":32646:32661  _market.deposit */
      0x6e553f65
      swap2
      pop
        /* "test/solidity/Protocol.t.sol":32646:32687  _market.deposit(liquidity, address(this)) */
      tag_1829
      swap1
        /* "test/solidity/Protocol.t.sol":32662:32671  liquidity */
      dup6
      swap1
        /* "test/solidity/Protocol.t.sol":32681:32685  this */
      address
      swap1
        /* "test/solidity/Protocol.t.sol":32646:32687  _market.deposit(liquidity, address(this)) */
      0x04
      add
      tag_555
      jump	// in
    tag_1829:
      0x20
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      0x00
      dup8
      gas
      call
      iszero
      dup1
      iszero
      tag_1831
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_1831:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      dup2
      add
      swap1
      tag_1832
      swap2
      swap1
      tag_212
      jump	// in
    tag_1832:
      pop
        /* "test/solidity/Protocol.t.sol":32697:32716  changePrank(sender) */
      tag_1833
        /* "test/solidity/Protocol.t.sol":32709:32715  sender */
      dup2
        /* "test/solidity/Protocol.t.sol":32697:32708  changePrank */
      tag_549
        /* "test/solidity/Protocol.t.sol":32697:32716  changePrank(sender) */
      jump	// in
    tag_1833:
        /* "test/solidity/Protocol.t.sol":32487:32725  {... */
      pop
        /* "test/solidity/Protocol.t.sol":32467:32725  if (liquidity != 0) {... */
    tag_1820:
      pop
        /* "test/solidity/Protocol.t.sol":27797:27810  _counterparty */
      sload(0x26)
        /* "test/solidity/Protocol.t.sol":34237:35740  modifier _borrow(uint256 assets, address account) {... */
      0xffffffffffffff
      dup7
      and
      swap1
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":27797:27810  _counterparty */
      and
        /* "test/solidity/Protocol.t.sol":34297:34308  assets != 0 */
      dup2
      iszero
        /* "test/solidity/Protocol.t.sol":34293:35729  if (assets != 0) {... */
      tag_1835
      jumpi
        /* "test/solidity/Protocol.t.sol":34335:34345  msg.sender */
      caller
        /* "test/solidity/Protocol.t.sol":34353:34379  changePrank(address(this)) */
      tag_1836
        /* "test/solidity/Protocol.t.sol":34373:34377  this */
      address
        /* "test/solidity/Protocol.t.sol":34353:34364  changePrank */
      tag_549
        /* "test/solidity/Protocol.t.sol":34353:34379  changePrank(address(this)) */
      jump	// in
    tag_1836:
        /* "test/solidity/Protocol.t.sol":34397:34414  uint256 liquidity */
      0x00
        /* "test/solidity/Protocol.t.sol":34417:34464  assets.divWadUp(1e18 - _market.reserveFactor()) */
      tag_1837
        /* "test/solidity/Protocol.t.sol":34440:34447  _market */
      0x23
      0x00
      swap1
      sload
      swap1
      0x0100
      exp
      swap1
      div
      sub(shl(0xa0, 0x01), 0x01)
      and
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":34440:34461  _market.reserveFactor */
      and
      0x4322b714
        /* "test/solidity/Protocol.t.sol":34440:34463  _market.reserveFactor() */
      mload(0x40)
      dup2
      0xffffffff
      and
      0xe0
      shl
      dup2
      mstore
      0x04
      add
      0x20
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      dup7
      gas
      staticcall
      iszero
      dup1
      iszero
      tag_953
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
        /* "test/solidity/Protocol.t.sol":34417:34464  assets.divWadUp(1e18 - _market.reserveFactor()) */
    tag_1837:
        /* "test/solidity/Protocol.t.sol":34474:34480  _asset */
      sload(0x24)
        /* "test/solidity/Protocol.t.sol":34474:34511  _asset.mint(address(this), liquidity) */
      mload(0x40)
      shl(0xe0, 0x40c10f19)
      dup2
      mstore
        /* "test/solidity/Protocol.t.sol":34397:34464  uint256 liquidity = assets.divWadUp(1e18 - _market.reserveFactor()) */
      swap2
      swap3
      pop
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":34474:34480  _asset */
      and
      swap1
        /* "test/solidity/Protocol.t.sol":34474:34485  _asset.mint */
      0x40c10f19
      swap1
        /* "test/solidity/Protocol.t.sol":34474:34511  _asset.mint(address(this), liquidity) */
      tag_1842
      swap1
        /* "test/solidity/Protocol.t.sol":34494:34498  this */
      address
      swap1
        /* "test/solidity/Protocol.t.sol":34397:34464  uint256 liquidity = assets.divWadUp(1e18 - _market.reserveFactor()) */
      dup6
      swap1
        /* "test/solidity/Protocol.t.sol":34474:34511  _asset.mint(address(this), liquidity) */
      0x04
      add
      tag_345
      jump	// in
    tag_1842:
      0x00
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      0x00
      dup8
      dup1
      extcodesize
      iszero
      dup1
      iszero
      tag_1843
      jumpi
      0x00
      dup1
      revert
    tag_1843:
      pop
      gas
      call
      iszero
      dup1
      iszero
      tag_1845
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_1845:
      pop
      pop
        /* "test/solidity/Protocol.t.sol":34521:34528  _market */
      sload(0x23)
        /* "test/solidity/Protocol.t.sol":34521:34562  _market.deposit(liquidity, address(this)) */
      mload(0x40)
      shl(0xe0, 0x6e553f65)
      dup2
      mstore
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":34521:34528  _market */
      swap1
      swap2
      and
      swap3
      pop
        /* "test/solidity/Protocol.t.sol":34521:34536  _market.deposit */
      0x6e553f65
      swap2
      pop
        /* "test/solidity/Protocol.t.sol":34521:34562  _market.deposit(liquidity, address(this)) */
      tag_1846
      swap1
        /* "test/solidity/Protocol.t.sol":34537:34546  liquidity */
      dup5
      swap1
        /* "test/solidity/Protocol.t.sol":34556:34560  this */
      address
      swap1
        /* "test/solidity/Protocol.t.sol":34521:34562  _market.deposit(liquidity, address(this)) */
      0x04
      add
      tag_555
      jump	// in
    tag_1846:
      0x20
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      0x00
      dup8
      gas
      call
      iszero
      dup1
      iszero
      tag_1848
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_1848:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      dup2
      add
      swap1
      tag_1849
      swap2
      swap1
      tag_212
      jump	// in
    tag_1849:
      pop
        /* "test/solidity/Protocol.t.sol":34387:34571  {... */
      pop
        /* "test/solidity/Protocol.t.sol":34578:34598  changePrank(account) */
      tag_1850
        /* "test/solidity/Protocol.t.sol":34590:34597  account */
      dup3
        /* "test/solidity/Protocol.t.sol":34578:34589  changePrank */
      tag_549
        /* "test/solidity/Protocol.t.sol":34578:34598  changePrank(account) */
      jump	// in
    tag_1850:
      0x40
      dup1
      mload
      dup1
      dup3
      add
      swap1
      swap2
      mstore
      0x00
      dup1
      dup3
      mstore
      0x20
      dup3
      add
      mstore
        /* "test/solidity/Protocol.t.sol":34692:34699  auditor */
      sload(0x1b)
        /* "test/solidity/Protocol.t.sol":34692:34748  auditor.accountLiquidity(account, Market(address(0)), 0) */
      mload(0x40)
      shl(0xe0, 0x9e9d7967)
      dup2
      mstore
      sub(shl(0xa0, 0x01), 0x01)
        /* "#utility.yul":29001:29016   */
      dup6
      dup2
      and
        /* "test/solidity/Protocol.t.sol":34692:34748  auditor.accountLiquidity(account, Market(address(0)), 0) */
      0x04
      dup4
      add
        /* "#utility.yul":28983:29017   */
      mstore
        /* "test/solidity/Protocol.t.sol":34692:34699  auditor */
      0x00
        /* "#utility.yul":29033:29051   */
      0x24
      dup4
      add
        /* "#utility.yul":29026:29069   */
      dup2
      swap1
      mstore
        /* "#utility.yul":29085:29103   */
      0x44
      dup4
      add
        /* "#utility.yul":29078:29112   */
      mstore
        /* "test/solidity/Protocol.t.sol":34692:34699  auditor */
      swap1
      swap2
      and
      swap1
        /* "test/solidity/Protocol.t.sol":34692:34716  auditor.accountLiquidity */
      0x9e9d7967
      swap1
        /* "#utility.yul":28918:28936   */
      0x64
      add
        /* "test/solidity/Protocol.t.sol":34692:34748  auditor.accountLiquidity(account, Market(address(0)), 0) */
      0x40
      dup1
      mload
      dup1
      dup4
      sub
      dup2
      dup7
      gas
      staticcall
      iszero
      dup1
      iszero
      tag_1854
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_1854:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      dup2
      add
      swap1
      tag_1855
      swap2
      swap1
      tag_203
      jump	// in
    tag_1855:
        /* "test/solidity/Protocol.t.sol":34670:34688  liquidity.negative */
      0x20
      dup4
      add
        /* "test/solidity/Protocol.t.sol":34649:34748  (liquidity.positive, liquidity.negative) = auditor.accountLiquidity(account, Market(address(0)), 0) */
      mstore
      dup2
      mstore
        /* "test/solidity/Protocol.t.sol":34758:34786  Auditor.MarketData memory md */
      tag_1856
      tag_974
      jump	// in
    tag_1856:
        /* "test/solidity/Protocol.t.sol":34866:34873  auditor */
      sload(0x1b)
        /* "test/solidity/Protocol.t.sol":34882:34889  _market */
      sload(0x23)
        /* "test/solidity/Protocol.t.sol":34866:34890  auditor.markets(_market) */
      mload(0x40)
      shl(0xe0, 0x8e8f294b)
      dup2
      mstore
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":34882:34889  _market */
      swap2
      dup3
      and
        /* "test/solidity/Protocol.t.sol":34866:34890  auditor.markets(_market) */
      0x04
      dup3
      add
        /* "#utility.yul":7560:7611   */
      mstore
        /* "test/solidity/Protocol.t.sol":34866:34873  auditor */
      swap2
      and
      swap1
        /* "test/solidity/Protocol.t.sol":34866:34881  auditor.markets */
      0x8e8f294b
      swap1
        /* "#utility.yul":7533:7551   */
      0x24
      add
        /* "test/solidity/Protocol.t.sol":34866:34890  auditor.markets(_market) */
      0xa0
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      dup7
      gas
      staticcall
      iszero
      dup1
      iszero
      tag_1859
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_1859:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      dup2
      add
      swap1
      tag_1860
      swap2
      swap1
      tag_198
      jump	// in
    tag_1860:
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":34796:34890  (md.adjustFactor, md.decimals, md.index, md.isListed, md.priceFeed) = auditor.markets(_market) */
      swap1
      dup2
      and
        /* "test/solidity/Protocol.t.sol":34850:34862  md.priceFeed */
      0x80
      dup8
      add
        /* "test/solidity/Protocol.t.sol":34796:34890  (md.adjustFactor, md.decimals, md.index, md.isListed, md.priceFeed) = auditor.markets(_market) */
      dup2
      swap1
      mstore
      swap2
      iszero
      iszero
        /* "test/solidity/Protocol.t.sol":34837:34848  md.isListed */
      0x60
      dup8
      add
        /* "test/solidity/Protocol.t.sol":34796:34890  (md.adjustFactor, md.decimals, md.index, md.isListed, md.priceFeed) = auditor.markets(_market) */
      mstore
      0xff
      swap3
      dup4
      and
        /* "test/solidity/Protocol.t.sol":34827:34835  md.index */
      0x40
      dup1
      dup9
      add
        /* "test/solidity/Protocol.t.sol":34796:34890  (md.adjustFactor, md.decimals, md.index, md.isListed, md.priceFeed) = auditor.markets(_market) */
      swap2
      swap1
      swap2
      mstore
      swap4
      swap1
      swap3
      and
      0x20
        /* "test/solidity/Protocol.t.sol":34814:34825  md.decimals */
      dup7
      add
        /* "test/solidity/Protocol.t.sol":34796:34890  (md.adjustFactor, md.decimals, md.index, md.isListed, md.priceFeed) = auditor.markets(_market) */
      mstore
      sub(shl(0x80, 0x01), 0x01)
      swap4
      swap1
      swap4
      and
      dup1
      dup6
      mstore
        /* "test/solidity/Protocol.t.sol":35055:35062  auditor */
      sload(0x1b)
        /* "test/solidity/Protocol.t.sol":35055:35087  auditor.assetPrice(md.priceFeed) */
      swap3
      mload
      shl(0xe3, 0x1710760b)
      dup2
      mstore
      0x04
      dup2
      add
        /* "#utility.yul":7560:7611   */
      swap5
      swap1
      swap5
      mstore
      0x00
      swap4
        /* "test/solidity/Protocol.t.sol":35039:35133  assets.mulDivUp(auditor.assetPrice(md.priceFeed), 10 ** md.decimals).divWadUp(md.adjustFactor) */
      tag_1861
      swap4
        /* "test/solidity/Protocol.t.sol":34796:34890  (md.adjustFactor, md.decimals, md.index, md.isListed, md.priceFeed) = auditor.markets(_market) */
      swap2
      swap3
        /* "test/solidity/Protocol.t.sol":35039:35107  assets.mulDivUp(auditor.assetPrice(md.priceFeed), 10 ** md.decimals) */
      tag_760
      swap3
        /* "test/solidity/Protocol.t.sol":35055:35062  auditor */
      and
      swap1
        /* "test/solidity/Protocol.t.sol":35055:35073  auditor.assetPrice */
      0xb883b058
      swap1
        /* "#utility.yul":7533:7551   */
      0x24
      add
        /* "test/solidity/Protocol.t.sol":35055:35087  auditor.assetPrice(md.priceFeed) */
      tag_981
        /* "#utility.yul":7414:7617   */
      jump
        /* "test/solidity/Protocol.t.sol":35039:35133  assets.mulDivUp(auditor.assetPrice(md.priceFeed), 10 ** md.decimals).divWadUp(md.adjustFactor) */
    tag_1861:
        /* "test/solidity/Protocol.t.sol":34962:34980  liquidity.positive */
      dup4
      mload
        /* "test/solidity/Protocol.t.sol":34941:34959  liquidity.negative */
      0x20
      dup6
      add
      mload
        /* "test/solidity/Protocol.t.sol":34941:34980  liquidity.negative > liquidity.positive */
      gt
        /* "test/solidity/Protocol.t.sol":34941:35026  liquidity.negative > liquidity.positive ? liquidity.negative - liquidity.positive : 0 */
      tag_1868
      jumpi
        /* "test/solidity/Protocol.t.sol":35025:35026  0 */
      0x00
        /* "test/solidity/Protocol.t.sol":34941:35026  liquidity.negative > liquidity.positive ? liquidity.negative - liquidity.positive : 0 */
      jump(tag_1870)
    tag_1868:
        /* "test/solidity/Protocol.t.sol":35004:35022  liquidity.positive */
      dup4
      mload
        /* "test/solidity/Protocol.t.sol":34983:35001  liquidity.negative */
      0x20
      dup6
      add
      mload
        /* "test/solidity/Protocol.t.sol":34983:35022  liquidity.negative - liquidity.positive */
      tag_1870
      swap2
        /* "test/solidity/Protocol.t.sol":35004:35022  liquidity.positive */
      swap1
        /* "test/solidity/Protocol.t.sol":34983:35022  liquidity.negative - liquidity.positive */
      tag_158
      jump	// in
    tag_1870:
        /* "test/solidity/Protocol.t.sol":34929:35133  (... */
      tag_1871
      swap2
      swap1
      tag_186
      jump	// in
    tag_1871:
        /* "test/solidity/Protocol.t.sol":35213:35220  auditor */
      sload(0x1b)
        /* "test/solidity/Protocol.t.sol":35229:35246  _collateralMarket */
      sload(0x27)
        /* "test/solidity/Protocol.t.sol":35213:35247  auditor.markets(_collateralMarket) */
      mload(0x40)
      shl(0xe0, 0x8e8f294b)
      dup2
      mstore
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":35229:35246  _collateralMarket */
      swap2
      dup3
      and
        /* "test/solidity/Protocol.t.sol":35213:35247  auditor.markets(_collateralMarket) */
      0x04
      dup3
      add
        /* "#utility.yul":7560:7611   */
      mstore
        /* "test/solidity/Protocol.t.sol":34900:35133  uint256 adjustedCollateral = (... */
      swap3
      swap4
      pop
        /* "test/solidity/Protocol.t.sol":35213:35220  auditor */
      and
      swap1
        /* "test/solidity/Protocol.t.sol":35213:35228  auditor.markets */
      0x8e8f294b
      swap1
        /* "#utility.yul":7533:7551   */
      0x24
      add
        /* "test/solidity/Protocol.t.sol":35213:35247  auditor.markets(_collateralMarket) */
      0xa0
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      dup7
      gas
      staticcall
      iszero
      dup1
      iszero
      tag_1874
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_1874:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      dup2
      add
      swap1
      tag_1875
      swap2
      swap1
      tag_198
      jump	// in
    tag_1875:
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":35143:35247  (md.adjustFactor, md.decimals, md.index, md.isListed, md.priceFeed) = auditor.markets(_collateralMarket) */
      and
        /* "test/solidity/Protocol.t.sol":35197:35209  md.priceFeed */
      0x80
      dup8
      add
        /* "test/solidity/Protocol.t.sol":35143:35247  (md.adjustFactor, md.decimals, md.index, md.isListed, md.priceFeed) = auditor.markets(_collateralMarket) */
      mstore
      iszero
      iszero
        /* "test/solidity/Protocol.t.sol":35184:35195  md.isListed */
      0x60
      dup7
      add
        /* "test/solidity/Protocol.t.sol":35143:35247  (md.adjustFactor, md.decimals, md.index, md.isListed, md.priceFeed) = auditor.markets(_collateralMarket) */
      mstore
      0xff
      swap1
      dup2
      and
        /* "test/solidity/Protocol.t.sol":35174:35182  md.index */
      0x40
      dup7
      add
        /* "test/solidity/Protocol.t.sol":35143:35247  (md.adjustFactor, md.decimals, md.index, md.isListed, md.priceFeed) = auditor.markets(_collateralMarket) */
      mstore
      and
        /* "test/solidity/Protocol.t.sol":35161:35172  md.decimals */
      0x20
      dup5
      add
        /* "test/solidity/Protocol.t.sol":35143:35247  (md.adjustFactor, md.decimals, md.index, md.isListed, md.priceFeed) = auditor.markets(_collateralMarket) */
      dup2
      swap1
      mstore
      sub(shl(0x80, 0x01), 0x01)
      swap1
      swap2
      and
      dup4
      mstore
        /* "test/solidity/Protocol.t.sol":35144:35159  md.adjustFactor */
      0x00
      swap1
        /* "test/solidity/Protocol.t.sol":35278:35414  adjustedCollateral.divWadUp(md.adjustFactor).mulDivUp(... */
      tag_1876
      swap1
        /* "test/solidity/Protocol.t.sol":35343:35360  10 ** md.decimals */
      tag_998
      swap1
        /* "test/solidity/Protocol.t.sol":35343:35345  10 */
      0x0a
        /* "test/solidity/Protocol.t.sol":35343:35360  10 ** md.decimals */
      tag_987
      jump	// in
        /* "test/solidity/Protocol.t.sol":35278:35414  adjustedCollateral.divWadUp(md.adjustFactor).mulDivUp(... */
    tag_1876:
        /* "test/solidity/Protocol.t.sol":35257:35414  uint256 collateral = adjustedCollateral.divWadUp(md.adjustFactor).mulDivUp(... */
      swap1
      pop
        /* "test/solidity/Protocol.t.sol":35442:35459  _collateralMarket */
      0x27
      0x00
      swap1
      sload
      swap1
      0x0100
      exp
      swap1
      div
      sub(shl(0xa0, 0x01), 0x01)
      and
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":35442:35465  _collateralMarket.asset */
      and
      0x38d52e0f
        /* "test/solidity/Protocol.t.sol":35442:35467  _collateralMarket.asset() */
      mload(0x40)
      dup2
      0xffffffff
      and
      0xe0
      shl
      dup2
      mstore
      0x04
      add
      0x20
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      dup7
      gas
      staticcall
      iszero
      dup1
      iszero
      tag_1884
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_1884:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      dup2
      add
      swap1
      tag_1885
      swap2
      swap1
      tag_167
      jump	// in
    tag_1885:
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":35424:35474  MockERC20(address(_collateralMarket.asset())).mint */
      and
      0x40c10f19
        /* "test/solidity/Protocol.t.sol":35475:35482  account */
      dup8
        /* "test/solidity/Protocol.t.sol":35484:35494  collateral */
      dup4
        /* "test/solidity/Protocol.t.sol":35424:35495  MockERC20(address(_collateralMarket.asset())).mint(account, collateral) */
      mload(0x40)
      dup4
      0xffffffff
      and
      0xe0
      shl
      dup2
      mstore
      0x04
      add
      tag_1886
      swap3
      swap2
      swap1
      tag_345
      jump	// in
    tag_1886:
      0x00
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      0x00
      dup8
      dup1
      extcodesize
      iszero
      dup1
      iszero
      tag_1887
      jumpi
      0x00
      dup1
      revert
    tag_1887:
      pop
      gas
      call
      iszero
      dup1
      iszero
      tag_1889
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_1889:
      pop
      pop
        /* "test/solidity/Protocol.t.sol":35505:35522  _collateralMarket */
      sload(0x27)
        /* "test/solidity/Protocol.t.sol":35505:35551  _collateralMarket.deposit(collateral, account) */
      mload(0x40)
      shl(0xe0, 0x6e553f65)
      dup2
      mstore
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":35505:35522  _collateralMarket */
      swap1
      swap2
      and
      swap3
      pop
        /* "test/solidity/Protocol.t.sol":35505:35530  _collateralMarket.deposit */
      0x6e553f65
      swap2
      pop
        /* "test/solidity/Protocol.t.sol":35505:35551  _collateralMarket.deposit(collateral, account) */
      tag_1890
      swap1
        /* "test/solidity/Protocol.t.sol":35531:35541  collateral */
      dup5
      swap1
        /* "test/solidity/Protocol.t.sol":35543:35550  account */
      dup11
      swap1
        /* "test/solidity/Protocol.t.sol":35505:35551  _collateralMarket.deposit(collateral, account) */
      0x04
      add
      tag_555
      jump	// in
    tag_1890:
      0x20
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      0x00
      dup8
      gas
      call
      iszero
      dup1
      iszero
      tag_1892
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_1892:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      dup2
      add
      swap1
      tag_1893
      swap2
      swap1
      tag_212
      jump	// in
    tag_1893:
      pop
        /* "test/solidity/Protocol.t.sol":35561:35568  auditor */
      sload(0x1b)
        /* "test/solidity/Protocol.t.sol":35581:35598  _collateralMarket */
      sload(0x27)
        /* "test/solidity/Protocol.t.sol":35561:35599  auditor.enterMarket(_collateralMarket) */
      mload(0x40)
      shl(0xe0, 0x3fe5d425)
      dup2
      mstore
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":35581:35598  _collateralMarket */
      swap2
      dup3
      and
        /* "test/solidity/Protocol.t.sol":35561:35599  auditor.enterMarket(_collateralMarket) */
      0x04
      dup3
      add
        /* "#utility.yul":7560:7611   */
      mstore
        /* "test/solidity/Protocol.t.sol":35561:35568  auditor */
      swap2
      and
      swap1
        /* "test/solidity/Protocol.t.sol":35561:35580  auditor.enterMarket */
      0x3fe5d425
      swap1
        /* "#utility.yul":7533:7551   */
      0x24
      add
        /* "test/solidity/Protocol.t.sol":35561:35599  auditor.enterMarket(_collateralMarket) */
      0x00
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      0x00
      dup8
      dup1
      extcodesize
      iszero
      dup1
      iszero
      tag_1895
      jumpi
      0x00
      dup1
      revert
    tag_1895:
      pop
      gas
      call
      iszero
      dup1
      iszero
      tag_1897
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_1897:
      pop
      pop
        /* "test/solidity/Protocol.t.sol":35609:35616  _market */
      sload(0x23)
        /* "test/solidity/Protocol.t.sol":35609:35649  _market.borrow(assets, account, account) */
      mload(0x40)
      shl(0xe2, 0x35459061)
      dup2
      mstore
      0x04
      dup2
      add
        /* "#utility.yul":30936:30961   */
      dup12
      swap1
      mstore
      sub(shl(0xa0, 0x01), 0x01)
        /* "#utility.yul":31035:31050   */
      dup11
      dup2
      and
        /* "#utility.yul":31015:31033   */
      0x24
      dup4
      add
        /* "#utility.yul":31008:31051   */
      dup2
      swap1
      mstore
        /* "#utility.yul":31067:31085   */
      0x44
      dup4
      add
        /* "#utility.yul":31060:31103   */
      mstore
        /* "test/solidity/Protocol.t.sol":35609:35616  _market */
      swap1
      swap2
      and
      swap3
      pop
        /* "test/solidity/Protocol.t.sol":35609:35623  _market.borrow */
      0xd5164184
      swap2
      pop
        /* "#utility.yul":30909:30927   */
      0x64
      add
        /* "test/solidity/Protocol.t.sol":35609:35649  _market.borrow(assets, account, account) */
      0x20
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      0x00
      dup8
      gas
      call
      iszero
      dup1
      iszero
      tag_1900
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_1900:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      dup2
      add
      swap1
      tag_1901
      swap2
      swap1
      tag_212
      jump	// in
    tag_1901:
      pop
        /* "test/solidity/Protocol.t.sol":35659:35665  _asset */
      sload(0x24)
        /* "test/solidity/Protocol.t.sol":35659:35687  _asset.burn(account, assets) */
      mload(0x40)
      shl(0xe2, 0x2770a7eb)
      dup2
      mstore
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":35659:35665  _asset */
      swap1
      swap2
      and
      swap1
        /* "test/solidity/Protocol.t.sol":35659:35670  _asset.burn */
      0x9dc29fac
      swap1
        /* "test/solidity/Protocol.t.sol":35659:35687  _asset.burn(account, assets) */
      tag_1902
      swap1
        /* "test/solidity/Protocol.t.sol":35671:35678  account */
      dup10
      swap1
        /* "test/solidity/Protocol.t.sol":35680:35686  assets */
      dup12
      swap1
        /* "test/solidity/Protocol.t.sol":35659:35687  _asset.burn(account, assets) */
      0x04
      add
      tag_345
      jump	// in
    tag_1902:
      0x00
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      0x00
      dup8
      dup1
      extcodesize
      iszero
      dup1
      iszero
      tag_1903
      jumpi
      0x00
      dup1
      revert
    tag_1903:
      pop
      gas
      call
      iszero
      dup1
      iszero
      tag_1905
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_1905:
      pop
      pop
      pop
      pop
        /* "test/solidity/Protocol.t.sol":34606:35696  {... */
      pop
      pop
      pop
      pop
        /* "test/solidity/Protocol.t.sol":35703:35722  changePrank(sender) */
      tag_1906
        /* "test/solidity/Protocol.t.sol":35715:35721  sender */
      dup2
        /* "test/solidity/Protocol.t.sol":35703:35714  changePrank */
      tag_549
        /* "test/solidity/Protocol.t.sol":35703:35722  changePrank(sender) */
      jump	// in
    tag_1906:
        /* "test/solidity/Protocol.t.sol":34310:35729  {... */
      pop
        /* "test/solidity/Protocol.t.sol":34293:35729  if (assets != 0) {... */
    tag_1835:
        /* "test/solidity/Protocol.t.sol":27864:27871  auditor */
      sload(0x1b)
        /* "test/solidity/Protocol.t.sol":27880:27887  _market */
      sload(0x23)
        /* "test/solidity/Protocol.t.sol":27864:27888  auditor.markets(_market) */
      mload(0x40)
      shl(0xe0, 0x8e8f294b)
      dup2
      mstore
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":27880:27887  _market */
      swap2
      dup3
      and
        /* "test/solidity/Protocol.t.sol":27864:27888  auditor.markets(_market) */
      0x04
      dup3
      add
        /* "#utility.yul":7560:7611   */
      mstore
        /* "test/solidity/Protocol.t.sol":27843:27856  uint256 index */
      0x00
      swap3
        /* "test/solidity/Protocol.t.sol":27864:27871  auditor */
      swap2
      swap1
      swap2
      and
      swap1
        /* "test/solidity/Protocol.t.sol":27864:27879  auditor.markets */
      0x8e8f294b
      swap1
        /* "#utility.yul":7533:7551   */
      0x24
      add
        /* "test/solidity/Protocol.t.sol":27864:27888  auditor.markets(_market) */
      0xa0
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      dup7
      gas
      staticcall
      iszero
      dup1
      iszero
      tag_1911
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_1911:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      dup2
      add
      swap1
      tag_1912
      swap2
      swap1
      tag_198
      jump	// in
    tag_1912:
      pop
      pop
        /* "test/solidity/Protocol.t.sol":27930:27937  auditor */
      sload(0x1b)
        /* "test/solidity/Protocol.t.sol":27946:27963  _collateralMarket */
      sload(0x27)
        /* "test/solidity/Protocol.t.sol":27930:27964  auditor.markets(_collateralMarket) */
      mload(0x40)
      shl(0xe0, 0x8e8f294b)
      dup2
      mstore
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":27946:27963  _collateralMarket */
      swap2
      dup3
      and
        /* "test/solidity/Protocol.t.sol":27930:27964  auditor.markets(_collateralMarket) */
      0x04
      dup3
      add
        /* "#utility.yul":7560:7611   */
      mstore
        /* "test/solidity/Protocol.t.sol":27838:27888  (, , uint256 index, , ) = auditor.markets(_market) */
      0xff
      swap4
      swap1
      swap4
      and
      swap6
      pop
        /* "test/solidity/Protocol.t.sol":27899:27922  uint256 collateralIndex */
      0x00
      swap5
      pop
        /* "test/solidity/Protocol.t.sol":27930:27937  auditor */
      and
      swap2
      pop
        /* "test/solidity/Protocol.t.sol":27930:27945  auditor.markets */
      0x8e8f294b
      swap1
        /* "#utility.yul":7533:7551   */
      0x24
      add
        /* "test/solidity/Protocol.t.sol":27930:27964  auditor.markets(_collateralMarket) */
      0xa0
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      dup7
      gas
      staticcall
      iszero
      dup1
      iszero
      tag_1915
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_1915:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      dup2
      add
      swap1
      tag_1916
      swap2
      swap1
      tag_198
      jump	// in
    tag_1916:
        /* "test/solidity/Protocol.t.sol":27894:27964  (, , uint256 collateralIndex, , ) = auditor.markets(_collateralMarket) */
      pop
      pop
      0xff
      and
      swap3
      pop
      pop
      pop
        /* "test/solidity/Protocol.t.sol":27970:27993  Binary memory liquidity */
      tag_1917
      mload(0x40)
      dup1
      0x40
      add
      0x40
      mstore
      dup1
      0x00
      dup2
      mstore
      0x20
      add
      0x00
      dup2
      mstore
      pop
      swap1
      jump
    tag_1917:
        /* "test/solidity/Protocol.t.sol":28059:28072  _counterparty */
      sload(0x26)
        /* "test/solidity/Protocol.t.sol":28042:28099  accountLiquidity(_counterparty, Market(address(0)), 0, 0) */
      tag_1918
      swap1
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":28059:28072  _counterparty */
      and
      0x00
      dup1
      dup1
        /* "test/solidity/Protocol.t.sol":28042:28058  accountLiquidity */
      tag_207
        /* "test/solidity/Protocol.t.sol":28042:28099  accountLiquidity(_counterparty, Market(address(0)), 0, 0) */
      jump	// in
    tag_1918:
        /* "test/solidity/Protocol.t.sol":28000:28009  liquidity */
      dup3
        /* "test/solidity/Protocol.t.sol":28000:28018  liquidity.positive */
      0x00
      add
        /* "test/solidity/Protocol.t.sol":28020:28029  liquidity */
      dup4
        /* "test/solidity/Protocol.t.sol":28020:28038  liquidity.negative */
      0x20
      add
        /* "test/solidity/Protocol.t.sol":27999:28099  (liquidity.positive, liquidity.negative) = accountLiquidity(_counterparty, Market(address(0)), 0, 0) */
      dup3
      dup2
      mstore
      pop
      dup3
      dup2
      mstore
      pop
      pop
      pop
        /* "test/solidity/Protocol.t.sol":28105:28130  LiquidationVars memory lv */
      tag_1919
      mload(0x40)
      dup1
      0xc0
      add
      0x40
      mstore
      dup1
      0x00
      dup2
      mstore
      0x20
      add
      0x00
      dup2
      mstore
      0x20
      add
      0x00
      dup2
      mstore
      0x20
      add
      0x00
      dup2
      mstore
      0x20
      add
      0x00
      dup2
      mstore
      0x20
      add
      0x00
      dup2
      mstore
      pop
      swap1
      jump
    tag_1919:
        /* "test/solidity/Protocol.t.sol":28163:28181  liquidity.negative */
      0x20
      dup3
      add
      mload
        /* "test/solidity/Protocol.t.sol":28141:28159  liquidity.positive */
      dup3
      mload
        /* "test/solidity/Protocol.t.sol":28141:28181  liquidity.positive >= liquidity.negative */
      lt
        /* "test/solidity/Protocol.t.sol":28137:30686  if (liquidity.positive >= liquidity.negative) {... */
      tag_1921
      jumpi
        /* "test/solidity/Protocol.t.sol":28191:28238  vm.expectRevert(InsufficientShortfall.selector) */
      mload(0x40)
      shl(0xe5, 0x0618f587)
      dup2
      mstore
      0x00
      dup1
      mload
      0x20
      data_1a390d6c2ee89e11d2dffeb86f753e43f966d02cbb0b3bd3e6e1cdf50245ef50
      dup4
      codecopy
      dup2
      mload
      swap2
      mstore
        /* "test/solidity/Protocol.t.sol":28191:28206  vm.expectRevert */
      swap1
      0xc31eb0e0
      swap1
        /* "test/solidity/Protocol.t.sol":28191:28238  vm.expectRevert(InsufficientShortfall.selector) */
      tag_1922
      swap1
      shl(0xe0, 0x095bf333)
        /* "test/solidity/Protocol.t.sol":28207:28237  InsufficientShortfall.selector */
      swap1
        /* "test/solidity/Protocol.t.sol":28191:28238  vm.expectRevert(InsufficientShortfall.selector) */
      0x04
      add
      tag_216
      jump	// in
    tag_1922:
      0x00
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      0x00
      dup8
      dup1
      extcodesize
      iszero
      dup1
      iszero
      tag_1923
      jumpi
      0x00
      dup1
      revert
    tag_1923:
      pop
      gas
      call
      iszero
      dup1
      iszero
      tag_1925
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_1925:
      pop
      pop
      pop
      pop
        /* "test/solidity/Protocol.t.sol":28137:30686  if (liquidity.positive >= liquidity.negative) {... */
      jump(tag_1983)
    tag_1921:
        /* "test/solidity/Protocol.t.sol":28269:28282  _counterparty */
      sload(0x26)
        /* "test/solidity/Protocol.t.sol":28255:28283  rawCollateral(_counterparty) */
      tag_1927
      swap1
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":28269:28282  _counterparty */
      and
        /* "test/solidity/Protocol.t.sol":28255:28268  rawCollateral */
      tag_1928
        /* "test/solidity/Protocol.t.sol":28255:28283  rawCollateral(_counterparty) */
      jump	// in
    tag_1927:
        /* "test/solidity/Protocol.t.sol":28287:28288  0 */
      0x00
        /* "test/solidity/Protocol.t.sol":28255:28288  rawCollateral(_counterparty) == 0 */
      sub
        /* "test/solidity/Protocol.t.sol":28251:30686  if (rawCollateral(_counterparty) == 0) {... */
      tag_1929
      jumpi
        /* "test/solidity/Protocol.t.sol":28314:28323  bytes("") */
      0x40
      dup1
      mload
      0x20
      dup2
      add
      dup3
      mstore
        /* "lib/forge-std/src/Base.sol":309:346  uint256(keccak256("hevm cheat code")) */
      0x00
        /* "test/solidity/Protocol.t.sol":28314:28323  bytes("") */
      dup2
      mstore
        /* "test/solidity/Protocol.t.sol":28298:28324  vm.expectRevert(bytes("")) */
      swap1
      mload
      shl(0xe0, 0xf28dceb3)
      dup2
      mstore
      0x00
      dup1
      mload
      0x20
      data_1a390d6c2ee89e11d2dffeb86f753e43f966d02cbb0b3bd3e6e1cdf50245ef50
      dup4
      codecopy
      dup2
      mload
      swap2
      mstore
        /* "test/solidity/Protocol.t.sol":28298:28313  vm.expectRevert */
      swap2
      0xf28dceb3
      swap2
        /* "test/solidity/Protocol.t.sol":28298:28324  vm.expectRevert(bytes("")) */
      tag_1922
      swap2
        /* "test/solidity/Protocol.t.sol":28314:28323  bytes("") */
      swap1
        /* "test/solidity/Protocol.t.sol":28298:28324  vm.expectRevert(bytes("")) */
      0x04
      add
      tag_599
      jump	// in
        /* "test/solidity/Protocol.t.sol":28251:30686  if (rawCollateral(_counterparty) == 0) {... */
    tag_1929:
        /* "test/solidity/Protocol.t.sol":28349:28356  auditor */
      sload(0x1b)
        /* "test/solidity/Protocol.t.sol":28372:28385  _counterparty */
      sload(0x26)
        /* "test/solidity/Protocol.t.sol":28349:28386  auditor.accountMarkets(_counterparty) */
      mload(0x40)
      not(sub(shl(0xe1, 0x63e28d), 0x01))
      dup2
      mstore
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":28372:28385  _counterparty */
      swap2
      dup3
      and
        /* "test/solidity/Protocol.t.sol":28349:28386  auditor.accountMarkets(_counterparty) */
      0x04
      dup3
      add
        /* "#utility.yul":7560:7611   */
      mstore
        /* "test/solidity/Protocol.t.sol":28390:28391  1 */
      0x01
        /* "test/solidity/Protocol.t.sol":28390:28410  1 << collateralIndex */
      dup7
      shl
      swap3
        /* "test/solidity/Protocol.t.sol":28349:28356  auditor */
      swap2
      swap1
      swap2
      and
      swap1
        /* "test/solidity/Protocol.t.sol":28349:28371  auditor.accountMarkets */
      0xff383ae6
      swap1
        /* "#utility.yul":7533:7551   */
      0x24
      add
        /* "test/solidity/Protocol.t.sol":28349:28386  auditor.accountMarkets(_counterparty) */
      0x20
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      dup7
      gas
      staticcall
      iszero
      dup1
      iszero
      tag_1937
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_1937:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      dup2
      add
      swap1
      tag_1938
      swap2
      swap1
      tag_212
      jump	// in
    tag_1938:
        /* "test/solidity/Protocol.t.sol":28349:28411  auditor.accountMarkets(_counterparty) & (1 << collateralIndex) */
      and
        /* "test/solidity/Protocol.t.sol":28348:28417  (auditor.accountMarkets(_counterparty) & (1 << collateralIndex)) == 0 */
      iszero
      dup1
        /* "test/solidity/Protocol.t.sol":28348:28480  (auditor.accountMarkets(_counterparty) & (1 << collateralIndex)) == 0 ||... */
      tag_1939
      jumpi
      pop
        /* "test/solidity/Protocol.t.sol":28442:28455  _counterparty */
      sload(0x26)
        /* "test/solidity/Protocol.t.sol":28457:28474  _collateralMarket */
      sload(0x27)
        /* "test/solidity/Protocol.t.sol":28427:28475  seizeAvailable(_counterparty, _collateralMarket) */
      tag_1940
      swap2
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":28442:28455  _counterparty */
      swap1
      dup2
      and
      swap2
        /* "test/solidity/Protocol.t.sol":28457:28474  _collateralMarket */
      and
        /* "test/solidity/Protocol.t.sol":28427:28441  seizeAvailable */
      tag_1941
        /* "test/solidity/Protocol.t.sol":28427:28475  seizeAvailable(_counterparty, _collateralMarket) */
      jump	// in
    tag_1940:
        /* "test/solidity/Protocol.t.sol":28427:28480  seizeAvailable(_counterparty, _collateralMarket) == 0 */
      iszero
        /* "test/solidity/Protocol.t.sol":28348:28480  (auditor.accountMarkets(_counterparty) & (1 << collateralIndex)) == 0 ||... */
    tag_1939:
        /* "test/solidity/Protocol.t.sol":28337:30686  if (... */
      iszero
      tag_1942
      jumpi
        /* "test/solidity/Protocol.t.sol":28495:28530  vm.expectRevert(ZeroRepay.selector) */
      mload(0x40)
      shl(0xe5, 0x0618f587)
      dup2
      mstore
      0x00
      dup1
      mload
      0x20
      data_1a390d6c2ee89e11d2dffeb86f753e43f966d02cbb0b3bd3e6e1cdf50245ef50
      dup4
      codecopy
      dup2
      mload
      swap2
      mstore
        /* "test/solidity/Protocol.t.sol":28495:28510  vm.expectRevert */
      swap1
      0xc31eb0e0
      swap1
        /* "test/solidity/Protocol.t.sol":28495:28530  vm.expectRevert(ZeroRepay.selector) */
      tag_1922
      swap1
      shl(0xe0, 0x685e9235)
        /* "test/solidity/Protocol.t.sol":28511:28529  ZeroRepay.selector */
      swap1
        /* "test/solidity/Protocol.t.sol":28495:28530  vm.expectRevert(ZeroRepay.selector) */
      0x04
      add
      tag_216
      jump	// in
        /* "test/solidity/Protocol.t.sol":28337:30686  if (... */
    tag_1942:
        /* "test/solidity/Protocol.t.sol":28548:28555  auditor */
      sload(0x1b)
        /* "test/solidity/Protocol.t.sol":28571:28584  _counterparty */
      sload(0x26)
        /* "test/solidity/Protocol.t.sol":28548:28585  auditor.accountMarkets(_counterparty) */
      mload(0x40)
      not(sub(shl(0xe1, 0x63e28d), 0x01))
      dup2
      mstore
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":28571:28584  _counterparty */
      swap2
      dup3
      and
        /* "test/solidity/Protocol.t.sol":28548:28585  auditor.accountMarkets(_counterparty) */
      0x04
      dup3
      add
        /* "#utility.yul":7560:7611   */
      mstore
        /* "test/solidity/Protocol.t.sol":28589:28590  1 */
      0x01
        /* "test/solidity/Protocol.t.sol":28589:28599  1 << index */
      dup8
      shl
      swap3
        /* "test/solidity/Protocol.t.sol":28548:28555  auditor */
      swap2
      swap1
      swap2
      and
      swap1
        /* "test/solidity/Protocol.t.sol":28548:28570  auditor.accountMarkets */
      0xff383ae6
      swap1
        /* "#utility.yul":7533:7551   */
      0x24
      add
        /* "test/solidity/Protocol.t.sol":28548:28585  auditor.accountMarkets(_counterparty) */
      0x20
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      dup7
      gas
      staticcall
      iszero
      dup1
      iszero
      tag_1950
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_1950:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      dup2
      add
      swap1
      tag_1951
      swap2
      swap1
      tag_212
      jump	// in
    tag_1951:
        /* "test/solidity/Protocol.t.sol":28548:28600  auditor.accountMarkets(_counterparty) & (1 << index) */
      and
        /* "test/solidity/Protocol.t.sol":28605:28606  0 */
      0x00
        /* "test/solidity/Protocol.t.sol":28547:28606  (auditor.accountMarkets(_counterparty) & (1 << index)) == 0 */
      sub
        /* "test/solidity/Protocol.t.sol":28543:30686  if ((auditor.accountMarkets(_counterparty) & (1 << index)) == 0) {... */
      tag_1952
      jumpi
        /* "test/solidity/Protocol.t.sol":28632:28641  bytes("") */
      0x40
      dup1
      mload
      0x20
      dup2
      add
      dup3
      mstore
        /* "lib/forge-std/src/Base.sol":309:346  uint256(keccak256("hevm cheat code")) */
      0x00
        /* "test/solidity/Protocol.t.sol":28632:28641  bytes("") */
      dup2
      mstore
        /* "test/solidity/Protocol.t.sol":28616:28642  vm.expectRevert(bytes("")) */
      swap1
      mload
      shl(0xe0, 0xf28dceb3)
      dup2
      mstore
      0x00
      dup1
      mload
      0x20
      data_1a390d6c2ee89e11d2dffeb86f753e43f966d02cbb0b3bd3e6e1cdf50245ef50
      dup4
      codecopy
      dup2
      mload
      swap2
      mstore
        /* "test/solidity/Protocol.t.sol":28616:28631  vm.expectRevert */
      swap2
      0xf28dceb3
      swap2
        /* "test/solidity/Protocol.t.sol":28616:28642  vm.expectRevert(bytes("")) */
      tag_1922
      swap2
        /* "test/solidity/Protocol.t.sol":28632:28641  bytes("") */
      swap1
        /* "test/solidity/Protocol.t.sol":28616:28642  vm.expectRevert(bytes("")) */
      0x04
      add
      tag_599
      jump	// in
        /* "test/solidity/Protocol.t.sol":28543:30686  if ((auditor.accountMarkets(_counterparty) & (1 << index)) == 0) {... */
    tag_1952:
        /* "test/solidity/Protocol.t.sol":28659:28666  _market */
      sload(0x23)
        /* "test/solidity/Protocol.t.sol":28679:28692  _counterparty */
      sload(0x26)
        /* "test/solidity/Protocol.t.sol":28659:28693  _market.previewDebt(_counterparty) */
      mload(0x40)
      shl(0xe0, 0x1d43b30b)
      dup2
      mstore
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":28679:28692  _counterparty */
      swap2
      dup3
      and
        /* "test/solidity/Protocol.t.sol":28659:28693  _market.previewDebt(_counterparty) */
      0x04
      dup3
      add
        /* "#utility.yul":7560:7611   */
      mstore
        /* "test/solidity/Protocol.t.sol":28659:28666  _market */
      swap2
      and
      swap1
        /* "test/solidity/Protocol.t.sol":28659:28678  _market.previewDebt */
      0x1d43b30b
      swap1
        /* "#utility.yul":7533:7551   */
      0x24
      add
        /* "test/solidity/Protocol.t.sol":28659:28693  _market.previewDebt(_counterparty) */
      0x20
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      dup7
      gas
      staticcall
      iszero
      dup1
      iszero
      tag_1960
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_1960:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      dup2
      add
      swap1
      tag_1961
      swap2
      swap1
      tag_212
      jump	// in
    tag_1961:
        /* "test/solidity/Protocol.t.sol":28697:28698  0 */
      0x00
        /* "test/solidity/Protocol.t.sol":28659:28698  _market.previewDebt(_counterparty) == 0 */
      sub
        /* "test/solidity/Protocol.t.sol":28655:30686  if (_market.previewDebt(_counterparty) == 0) {... */
      tag_1962
      jumpi
        /* "test/solidity/Protocol.t.sol":28708:28746  vm.expectRevert(ZeroWithdraw.selector) */
      mload(0x40)
      shl(0xe5, 0x0618f587)
      dup2
      mstore
      0x00
      dup1
      mload
      0x20
      data_1a390d6c2ee89e11d2dffeb86f753e43f966d02cbb0b3bd3e6e1cdf50245ef50
      dup4
      codecopy
      dup2
      mload
      swap2
      mstore
        /* "test/solidity/Protocol.t.sol":28708:28723  vm.expectRevert */
      swap1
      0xc31eb0e0
      swap1
        /* "test/solidity/Protocol.t.sol":28708:28746  vm.expectRevert(ZeroWithdraw.selector) */
      tag_1922
      swap1
      shl(0xe0, 0xb8cb6219)
        /* "test/solidity/Protocol.t.sol":28724:28745  ZeroWithdraw.selector */
      swap1
        /* "test/solidity/Protocol.t.sol":28708:28746  vm.expectRevert(ZeroWithdraw.selector) */
      0x04
      add
      tag_216
      jump	// in
        /* "test/solidity/Protocol.t.sol":28655:30686  if (_market.previewDebt(_counterparty) == 0) {... */
    tag_1962:
        /* "test/solidity/Protocol.t.sol":28826:28839  _counterparty */
      sload(0x26)
        /* "test/solidity/Protocol.t.sol":28804:28840  previewTotalLiquidity(_counterparty) */
      tag_1968
      swap1
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":28826:28839  _counterparty */
      and
        /* "test/solidity/Protocol.t.sol":28804:28825  previewTotalLiquidity */
      tag_1969
        /* "test/solidity/Protocol.t.sol":28804:28840  previewTotalLiquidity(_counterparty) */
      jump	// in
    tag_1968:
        /* "test/solidity/Protocol.t.sol":28788:28800  lv.totalDebt */
      0x20
      dup4
      add
        /* "test/solidity/Protocol.t.sol":28767:28840  (lv.totalCollateral, lv.totalDebt) = previewTotalLiquidity(_counterparty) */
      mstore
      dup2
      mstore
        /* "test/solidity/Protocol.t.sol":28884:28902  liquidity.positive */
      dup2
      mload
        /* "test/solidity/Protocol.t.sol":28884:28906  liquidity.positive > 0 */
      iszero
      dup1
      iszero
      swap1
        /* "test/solidity/Protocol.t.sol":28884:28982  liquidity.positive > 0 && (liquidity.positive * lv.totalDebt) / liquidity.positive != lv.totalDebt */
      tag_1970
      jumpi
      pop
        /* "test/solidity/Protocol.t.sol":28970:28982  lv.totalDebt */
      0x20
      dup2
      add
      mload
        /* "test/solidity/Protocol.t.sol":28948:28966  liquidity.positive */
      dup3
      mload
        /* "test/solidity/Protocol.t.sol":28911:28944  liquidity.positive * lv.totalDebt */
      dup1
      dup3
      mul
        /* "test/solidity/Protocol.t.sol":28948:28966  liquidity.positive */
      dup2
        /* "test/solidity/Protocol.t.sol":28910:28966  (liquidity.positive * lv.totalDebt) / liquidity.positive */
      tag_1972
      jumpi
      tag_1972
      tag_1973
      jump	// in
    tag_1972:
      div
        /* "test/solidity/Protocol.t.sol":28910:28982  (liquidity.positive * lv.totalDebt) / liquidity.positive != lv.totalDebt */
      eq
      iszero
        /* "test/solidity/Protocol.t.sol":28884:28982  liquidity.positive > 0 && (liquidity.positive * lv.totalDebt) / liquidity.positive != lv.totalDebt */
    tag_1970:
        /* "test/solidity/Protocol.t.sol":28883:29121  (liquidity.positive > 0 && (liquidity.positive * lv.totalDebt) / liquidity.positive != lv.totalDebt) ||... */
      dup1
      tag_1975
      jumpi
      pop
        /* "test/solidity/Protocol.t.sol":29019:29020  0 */
      0x00
        /* "test/solidity/Protocol.t.sol":28998:29007  liquidity */
      dup3
        /* "test/solidity/Protocol.t.sol":28998:29016  liquidity.negative */
      0x20
      add
      mload
        /* "test/solidity/Protocol.t.sol":28998:29020  liquidity.negative > 0 */
      gt
        /* "test/solidity/Protocol.t.sol":28998:29120  liquidity.negative > 0 &&... */
      dup1
      iszero
      tag_1975
      jumpi
      pop
        /* "test/solidity/Protocol.t.sol":29102:29120  lv.totalCollateral */
      dup1
      mload
        /* "test/solidity/Protocol.t.sol":29080:29098  liquidity.negative */
      0x20
      dup4
      add
      mload
        /* "test/solidity/Protocol.t.sol":29037:29076  liquidity.negative * lv.totalCollateral */
      dup1
      dup3
      mul
        /* "test/solidity/Protocol.t.sol":29080:29098  liquidity.negative */
      dup2
        /* "test/solidity/Protocol.t.sol":29036:29098  (liquidity.negative * lv.totalCollateral) / liquidity.negative */
      tag_1977
      jumpi
      tag_1977
      tag_1973
      jump	// in
    tag_1977:
      div
        /* "test/solidity/Protocol.t.sol":29036:29120  (liquidity.negative * lv.totalCollateral) / liquidity.negative != lv.totalCollateral */
      eq
      iszero
        /* "test/solidity/Protocol.t.sol":28998:29120  liquidity.negative > 0 &&... */
    tag_1975:
        /* "test/solidity/Protocol.t.sol":28868:30672  if (... */
      iszero
      tag_1978
      jumpi
        /* "test/solidity/Protocol.t.sol":29160:29169  bytes("") */
      0x40
      dup1
      mload
      0x20
      dup2
      add
      dup3
      mstore
        /* "lib/forge-std/src/Base.sol":309:346  uint256(keccak256("hevm cheat code")) */
      0x00
        /* "test/solidity/Protocol.t.sol":29160:29169  bytes("") */
      dup2
      mstore
        /* "test/solidity/Protocol.t.sol":29144:29170  vm.expectRevert(bytes("")) */
      swap1
      mload
      shl(0xe0, 0xf28dceb3)
      dup2
      mstore
      0x00
      dup1
      mload
      0x20
      data_1a390d6c2ee89e11d2dffeb86f753e43f966d02cbb0b3bd3e6e1cdf50245ef50
      dup4
      codecopy
      dup2
      mload
      swap2
      mstore
        /* "test/solidity/Protocol.t.sol":29144:29159  vm.expectRevert */
      swap2
      0xf28dceb3
      swap2
        /* "test/solidity/Protocol.t.sol":29144:29170  vm.expectRevert(bytes("")) */
      tag_1922
      swap2
        /* "test/solidity/Protocol.t.sol":29160:29169  bytes("") */
      swap1
        /* "test/solidity/Protocol.t.sol":29144:29170  vm.expectRevert(bytes("")) */
      0x04
      add
      tag_599
      jump	// in
        /* "test/solidity/Protocol.t.sol":28868:30672  if (... */
    tag_1978:
        /* "test/solidity/Protocol.t.sol":29223:29230  _market */
      sload(0x23)
        /* "test/solidity/Protocol.t.sol":29232:29249  _collateralMarket */
      sload(0x27)
        /* "test/solidity/Protocol.t.sol":29251:29264  _counterparty */
      sload(0x26)
        /* "test/solidity/Protocol.t.sol":29204:29265  previewLiquidation(_market, _collateralMarket, _counterparty) */
      tag_1984
      swap3
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":29223:29230  _market */
      swap1
      dup2
      and
      swap3
        /* "test/solidity/Protocol.t.sol":29232:29249  _collateralMarket */
      dup2
      and
      swap2
        /* "test/solidity/Protocol.t.sol":29251:29264  _counterparty */
      and
        /* "test/solidity/Protocol.t.sol":29204:29222  previewLiquidation */
      tag_1985
        /* "test/solidity/Protocol.t.sol":29204:29265  previewLiquidation(_market, _collateralMarket, _counterparty) */
      jump	// in
    tag_1984:
        /* "test/solidity/Protocol.t.sol":29323:29340  _collateralMarket */
      sload(0x27)
        /* "test/solidity/Protocol.t.sol":29199:29265  lv = previewLiquidation(_market, _collateralMarket, _counterparty) */
      swap1
      swap2
      pop
        /* "test/solidity/Protocol.t.sol":29277:29293  uint256 earnings */
      0x00
      swap1
        /* "test/solidity/Protocol.t.sol":29296:29341  previewAccumulatedEarnings(_collateralMarket) */
      tag_1986
      swap1
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":29323:29340  _collateralMarket */
      and
        /* "test/solidity/Protocol.t.sol":29296:29322  previewAccumulatedEarnings */
      tag_578
        /* "test/solidity/Protocol.t.sol":29296:29341  previewAccumulatedEarnings(_collateralMarket) */
      jump	// in
    tag_1986:
        /* "test/solidity/Protocol.t.sol":29277:29341  uint256 earnings = previewAccumulatedEarnings(_collateralMarket) */
      swap1
      pop
        /* "test/solidity/Protocol.t.sol":29358:29360  lv */
      dup2
        /* "test/solidity/Protocol.t.sol":29358:29372  lv.seizeAssets */
      0x60
      add
      mload
        /* "test/solidity/Protocol.t.sol":29376:29377  0 */
      0x00
        /* "test/solidity/Protocol.t.sol":29358:29377  lv.seizeAssets == 0 */
      sub
        /* "test/solidity/Protocol.t.sol":29354:30662  if (lv.seizeAssets == 0) {... */
      tag_1987
      jumpi
        /* "test/solidity/Protocol.t.sol":29393:29431  vm.expectRevert(ZeroWithdraw.selector) */
      mload(0x40)
      shl(0xe5, 0x0618f587)
      dup2
      mstore
      0x00
      dup1
      mload
      0x20
      data_1a390d6c2ee89e11d2dffeb86f753e43f966d02cbb0b3bd3e6e1cdf50245ef50
      dup4
      codecopy
      dup2
      mload
      swap2
      mstore
        /* "test/solidity/Protocol.t.sol":29393:29408  vm.expectRevert */
      swap1
      0xc31eb0e0
      swap1
        /* "test/solidity/Protocol.t.sol":29393:29431  vm.expectRevert(ZeroWithdraw.selector) */
      tag_1988
      swap1
      shl(0xe0, 0xb8cb6219)
        /* "test/solidity/Protocol.t.sol":29409:29430  ZeroWithdraw.selector */
      swap1
        /* "test/solidity/Protocol.t.sol":29393:29431  vm.expectRevert(ZeroWithdraw.selector) */
      0x04
      add
      tag_216
      jump	// in
    tag_1988:
      0x00
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      0x00
      dup8
      dup1
      extcodesize
      iszero
      dup1
      iszero
      tag_1989
      jumpi
      0x00
      dup1
      revert
    tag_1989:
      pop
      gas
      call
      iszero
      dup1
      iszero
      tag_1991
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_1991:
      pop
      pop
      pop
      pop
        /* "test/solidity/Protocol.t.sol":29354:30662  if (lv.seizeAssets == 0) {... */
      jump(tag_2034)
    tag_1987:
        /* "test/solidity/Protocol.t.sol":29544:29561  _collateralMarket */
      sload(0x27)
        /* "test/solidity/Protocol.t.sol":29565:29573  earnings */
      dup2
      swap1
        /* "test/solidity/Protocol.t.sol":29521:29562  previewNewFloatingDebt(_collateralMarket) */
      tag_1993
      swap1
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":29544:29561  _collateralMarket */
      and
        /* "test/solidity/Protocol.t.sol":29521:29543  previewNewFloatingDebt */
      tag_605
        /* "test/solidity/Protocol.t.sol":29521:29562  previewNewFloatingDebt(_collateralMarket) */
      jump	// in
    tag_1993:
        /* "test/solidity/Protocol.t.sol":29484:29501  _collateralMarket */
      0x27
      0x00
      swap1
      sload
      swap1
      0x0100
      exp
      swap1
      div
      sub(shl(0xa0, 0x01), 0x01)
      and
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":29484:29516  _collateralMarket.floatingAssets */
      and
      0x2e0af008
        /* "test/solidity/Protocol.t.sol":29484:29518  _collateralMarket.floatingAssets() */
      mload(0x40)
      dup2
      0xffffffff
      and
      0xe0
      shl
      dup2
      mstore
      0x04
      add
      0x20
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      dup7
      gas
      staticcall
      iszero
      dup1
      iszero
      tag_1995
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_1995:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      dup2
      add
      swap1
      tag_1996
      swap2
      swap1
      tag_212
      jump	// in
    tag_1996:
        /* "test/solidity/Protocol.t.sol":29484:29562  _collateralMarket.floatingAssets() + previewNewFloatingDebt(_collateralMarket) */
      add
        /* "test/solidity/Protocol.t.sol":29484:29573  _collateralMarket.floatingAssets() + previewNewFloatingDebt(_collateralMarket) + earnings */
      add
        /* "test/solidity/Protocol.t.sol":29467:29469  lv */
      dup3
        /* "test/solidity/Protocol.t.sol":29467:29481  lv.seizeAssets */
      0x60
      add
      mload
        /* "test/solidity/Protocol.t.sol":29467:29573  lv.seizeAssets > _collateralMarket.floatingAssets() + previewNewFloatingDebt(_collateralMarket) + earnings */
      gt
        /* "test/solidity/Protocol.t.sol":29450:30662  if (... */
      iszero
      tag_1997
      jumpi
        /* "lib/forge-std/src/StdError.sol":317:364  abi.encodeWithSignature("Panic(uint256)", 0x11) */
      mload(0x40)
        /* "lib/forge-std/src/StdError.sol":359:363  0x11 */
      0x11
        /* "lib/forge-std/src/StdError.sol":317:364  abi.encodeWithSignature("Panic(uint256)", 0x11) */
      0x24
      dup3
      add
        /* "#utility.yul":24631:24667   */
      mstore
      0x00
      dup1
      mload
      0x20
      data_1a390d6c2ee89e11d2dffeb86f753e43f966d02cbb0b3bd3e6e1cdf50245ef50
      dup4
      codecopy
      dup2
      mload
      swap2
      mstore
        /* "test/solidity/Protocol.t.sol":29600:29615  vm.expectRevert */
      swap1
      0xf28dceb3
      swap1
        /* "#utility.yul":24604:24622   */
      0x44
      add
        /* "lib/forge-std/src/StdError.sol":317:364  abi.encodeWithSignature("Panic(uint256)", 0x11) */
      0x40
      dup1
      mload
      not(0x1f)
      dup2
      dup5
      sub
      add
      dup2
      mstore
      swap2
      dup2
      mstore
      0x20
      dup3
      add
      dup1
      mload
      sub(shl(0xe0, 0x01), 0x01)
      and
      shl(0xe0, 0x4e487b71)
      or
      swap1
      mstore
        /* "test/solidity/Protocol.t.sol":29600:29641  vm.expectRevert(stdError.arithmeticError) */
      mload
      0xe0
      dup4
      swap1
      shl
      not(sub(shl(0xe0, 0x01), 0x01))
      and
      dup2
      mstore
      tag_1988
      swap2
        /* "lib/forge-std/src/StdError.sol":317:364  abi.encodeWithSignature("Panic(uint256)", 0x11) */
      swap1
        /* "test/solidity/Protocol.t.sol":29600:29641  vm.expectRevert(stdError.arithmeticError) */
      0x04
      add
      tag_599
      jump	// in
        /* "test/solidity/Protocol.t.sol":29450:30662  if (... */
    tag_1997:
        /* "test/solidity/Protocol.t.sol":29998:30012  lv.seizeAssets */
      0x60
      dup3
      add
      mload
        /* "test/solidity/Protocol.t.sol":29966:29983  _collateralMarket */
      sload(0x27)
        /* "test/solidity/Protocol.t.sol":29987:29995  earnings */
      dup3
      swap1
        /* "test/solidity/Protocol.t.sol":29943:29984  previewNewFloatingDebt(_collateralMarket) */
      tag_2004
      swap1
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":29966:29983  _collateralMarket */
      and
        /* "test/solidity/Protocol.t.sol":29943:29965  previewNewFloatingDebt */
      tag_605
        /* "test/solidity/Protocol.t.sol":29943:29984  previewNewFloatingDebt(_collateralMarket) */
      jump	// in
    tag_2004:
        /* "test/solidity/Protocol.t.sol":29906:29923  _collateralMarket */
      0x27
      0x00
      swap1
      sload
      swap1
      0x0100
      exp
      swap1
      div
      sub(shl(0xa0, 0x01), 0x01)
      and
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":29906:29938  _collateralMarket.floatingAssets */
      and
      0x2e0af008
        /* "test/solidity/Protocol.t.sol":29906:29940  _collateralMarket.floatingAssets() */
      mload(0x40)
      dup2
      0xffffffff
      and
      0xe0
      shl
      dup2
      mstore
      0x04
      add
      0x20
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      dup7
      gas
      staticcall
      iszero
      dup1
      iszero
      tag_2006
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_2006:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      dup2
      add
      swap1
      tag_2007
      swap2
      swap1
      tag_212
      jump	// in
    tag_2007:
        /* "test/solidity/Protocol.t.sol":29847:29864  _collateralMarket */
      sload(0x27)
        /* "test/solidity/Protocol.t.sol":29827:29834  _market */
      sload(0x23)
        /* "test/solidity/Protocol.t.sol":29906:29984  _collateralMarket.floatingAssets() + previewNewFloatingDebt(_collateralMarket) */
      swap3
      swap1
      swap2
      add
        /* "test/solidity/Protocol.t.sol":29906:29995  _collateralMarket.floatingAssets() + previewNewFloatingDebt(_collateralMarket) + earnings */
      swap3
      swap1
      swap3
      add
        /* "test/solidity/Protocol.t.sol":29906:30012  _collateralMarket.floatingAssets() + previewNewFloatingDebt(_collateralMarket) + earnings - lv.seizeAssets */
      swap3
      swap1
      swap3
      sub
      swap2
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":29847:29864  _collateralMarket */
      swap2
      dup3
      and
        /* "test/solidity/Protocol.t.sol":29827:29834  _market */
      swap2
      and
        /* "test/solidity/Protocol.t.sol":29819:29865  address(_market) != address(_collateralMarket) */
      sub
        /* "test/solidity/Protocol.t.sol":29819:29888  address(_market) != address(_collateralMarket) ? 0 : lv.debtReduction */
      tag_2008
      jumpi
        /* "test/solidity/Protocol.t.sol":29872:29874  lv */
      dup3
        /* "test/solidity/Protocol.t.sol":29872:29888  lv.debtReduction */
      0xa0
      add
      mload
        /* "test/solidity/Protocol.t.sol":29819:29888  address(_market) != address(_collateralMarket) ? 0 : lv.debtReduction */
      jump(tag_2009)
    tag_2008:
        /* "test/solidity/Protocol.t.sol":29868:29869  0 */
      0x00
        /* "test/solidity/Protocol.t.sol":29819:29888  address(_market) != address(_collateralMarket) ? 0 : lv.debtReduction */
    tag_2009:
        /* "test/solidity/Protocol.t.sol":29754:29771  _collateralMarket */
      0x27
      0x00
      swap1
      sload
      swap1
      0x0100
      exp
      swap1
      div
      sub(shl(0xa0, 0x01), 0x01)
      and
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":29754:29797  _collateralMarket.totalFloatingBorrowAssets */
      and
      0xeee8c9e0
        /* "test/solidity/Protocol.t.sol":29754:29799  _collateralMarket.totalFloatingBorrowAssets() */
      mload(0x40)
      dup2
      0xffffffff
      and
      0xe0
      shl
      dup2
      mstore
      0x04
      add
      0x20
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      dup7
      gas
      staticcall
      iszero
      dup1
      iszero
      tag_2011
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_2011:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      dup2
      add
      swap1
      tag_2012
      swap2
      swap1
      tag_212
      jump	// in
    tag_2012:
        /* "test/solidity/Protocol.t.sol":29693:29710  _collateralMarket */
      0x27
      0x00
      swap1
      sload
      swap1
      0x0100
      exp
      swap1
      div
      sub(shl(0xa0, 0x01), 0x01)
      and
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":29693:29733  _collateralMarket.floatingBackupBorrowed */
      and
      0x8c3cba5a
        /* "test/solidity/Protocol.t.sol":29693:29735  _collateralMarket.floatingBackupBorrowed() */
      mload(0x40)
      dup2
      0xffffffff
      and
      0xe0
      shl
      dup2
      mstore
      0x04
      add
      0x20
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      dup7
      gas
      staticcall
      iszero
      dup1
      iszero
      tag_2014
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_2014:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      dup2
      add
      swap1
      tag_2015
      swap2
      swap1
      tag_212
      jump	// in
    tag_2015:
        /* "test/solidity/Protocol.t.sol":29693:29799  _collateralMarket.floatingBackupBorrowed() +... */
      add
        /* "test/solidity/Protocol.t.sol":29693:29889  _collateralMarket.floatingBackupBorrowed() +... */
      sub
        /* "test/solidity/Protocol.t.sol":29693:30012  _collateralMarket.floatingBackupBorrowed() +... */
      gt
        /* "test/solidity/Protocol.t.sol":29674:30650  if (... */
      iszero
      tag_2016
      jumpi
        /* "test/solidity/Protocol.t.sol":30043:30098  vm.expectRevert(InsufficientProtocolLiquidity.selector) */
      mload(0x40)
      shl(0xe5, 0x0618f587)
      dup2
      mstore
      0x00
      dup1
      mload
      0x20
      data_1a390d6c2ee89e11d2dffeb86f753e43f966d02cbb0b3bd3e6e1cdf50245ef50
      dup4
      codecopy
      dup2
      mload
      swap2
      mstore
        /* "test/solidity/Protocol.t.sol":30043:30058  vm.expectRevert */
      swap1
      0xc31eb0e0
      swap1
        /* "test/solidity/Protocol.t.sol":30043:30098  vm.expectRevert(InsufficientProtocolLiquidity.selector) */
      tag_1988
      swap1
      shl(0xe3, 0x2d41ad)
        /* "test/solidity/Protocol.t.sol":30059:30097  InsufficientProtocolLiquidity.selector */
      swap1
        /* "test/solidity/Protocol.t.sol":30043:30098  vm.expectRevert(InsufficientProtocolLiquidity.selector) */
      0x04
      add
      tag_216
      jump	// in
        /* "test/solidity/Protocol.t.sol":29674:30650  if (... */
    tag_2016:
        /* "test/solidity/Protocol.t.sol":30140:30157  _collateralMarket */
      0x27
      0x00
      swap1
      sload
      swap1
      0x0100
      exp
      swap1
      div
      sub(shl(0xa0, 0x01), 0x01)
      and
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":30140:30163  _collateralMarket.asset */
      and
      0x38d52e0f
        /* "test/solidity/Protocol.t.sol":30140:30165  _collateralMarket.asset() */
      mload(0x40)
      dup2
      0xffffffff
      and
      0xe0
      shl
      dup2
      mstore
      0x04
      add
      0x20
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      dup7
      gas
      staticcall
      iszero
      dup1
      iszero
      tag_2023
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_2023:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      dup2
      add
      swap1
      tag_2024
      swap2
      swap1
      tag_167
      jump	// in
    tag_2024:
        /* "test/solidity/Protocol.t.sol":30184:30201  _collateralMarket */
      sload(0x27)
        /* "test/solidity/Protocol.t.sol":30140:30203  _collateralMarket.asset().balanceOf(address(_collateralMarket)) */
      mload(0x40)
      shl(0xe0, 0x70a08231)
      dup2
      mstore
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":30184:30201  _collateralMarket */
      swap2
      dup3
      and
        /* "test/solidity/Protocol.t.sol":30140:30203  _collateralMarket.asset().balanceOf(address(_collateralMarket)) */
      0x04
      dup3
      add
        /* "#utility.yul":7560:7611   */
      mstore
        /* "test/solidity/Protocol.t.sol":30140:30175  _collateralMarket.asset().balanceOf */
      swap2
      and
      swap1
      0x70a08231
      swap1
        /* "#utility.yul":7533:7551   */
      0x24
      add
        /* "test/solidity/Protocol.t.sol":30140:30203  _collateralMarket.asset().balanceOf(address(_collateralMarket)) */
      0x20
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      dup7
      gas
      staticcall
      iszero
      dup1
      iszero
      tag_2027
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_2027:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      dup2
      add
      swap1
      tag_2028
      swap2
      swap1
      tag_212
      jump	// in
    tag_2028:
        /* "test/solidity/Protocol.t.sol":30123:30125  lv */
      dup3
        /* "test/solidity/Protocol.t.sol":30123:30137  lv.seizeAssets */
      0x60
      add
      mload
        /* "test/solidity/Protocol.t.sol":30123:30203  lv.seizeAssets > _collateralMarket.asset().balanceOf(address(_collateralMarket)) */
      gt
        /* "test/solidity/Protocol.t.sol":30119:30650  if (lv.seizeAssets > _collateralMarket.asset().balanceOf(address(_collateralMarket))) {... */
      iszero
      tag_2029
      jumpi
        /* "test/solidity/Protocol.t.sol":30237:30246  bytes("") */
      0x40
      dup1
      mload
      0x20
      dup2
      add
      dup3
      mstore
        /* "lib/forge-std/src/Base.sol":309:346  uint256(keccak256("hevm cheat code")) */
      0x00
        /* "test/solidity/Protocol.t.sol":30237:30246  bytes("") */
      dup2
      mstore
        /* "test/solidity/Protocol.t.sol":30221:30247  vm.expectRevert(bytes("")) */
      swap1
      mload
      shl(0xe0, 0xf28dceb3)
      dup2
      mstore
      0x00
      dup1
      mload
      0x20
      data_1a390d6c2ee89e11d2dffeb86f753e43f966d02cbb0b3bd3e6e1cdf50245ef50
      dup4
      codecopy
      dup2
      mload
      swap2
      mstore
        /* "test/solidity/Protocol.t.sol":30221:30236  vm.expectRevert */
      swap2
      0xf28dceb3
      swap2
        /* "test/solidity/Protocol.t.sol":30221:30247  vm.expectRevert(bytes("")) */
      tag_1988
      swap2
        /* "test/solidity/Protocol.t.sol":30237:30246  bytes("") */
      swap1
        /* "test/solidity/Protocol.t.sol":30221:30247  vm.expectRevert(bytes("")) */
      0x04
      add
      tag_599
      jump	// in
        /* "test/solidity/Protocol.t.sol":30119:30650  if (lv.seizeAssets > _collateralMarket.asset().balanceOf(address(_collateralMarket))) {... */
    tag_2029:
        /* "test/solidity/Protocol.t.sol":30284:30290  _asset */
      0x24
      dup1
      sload
        /* "test/solidity/Protocol.t.sol":30284:30326  _asset.mint(msg.sender, type(uint128).max) */
      mload(0x40)
      shl(0xe0, 0x40c10f19)
      dup2
      mstore
        /* "test/solidity/Protocol.t.sol":30296:30306  msg.sender */
      caller
        /* "test/solidity/Protocol.t.sol":30284:30326  _asset.mint(msg.sender, type(uint128).max) */
      0x04
      dup3
      add
        /* "#utility.yul":34949:35000   */
      mstore
      sub(shl(0x80, 0x01), 0x01)
        /* "#utility.yul":35016:35034   */
      swap3
      dup2
      add
        /* "#utility.yul":35009:35084   */
      swap3
      swap1
      swap3
      mstore
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":30284:30290  _asset */
      and
      swap1
        /* "test/solidity/Protocol.t.sol":30284:30295  _asset.mint */
      0x40c10f19
      swap1
        /* "#utility.yul":34922:34940   */
      0x44
      add
        /* "test/solidity/Protocol.t.sol":30284:30326  _asset.mint(msg.sender, type(uint128).max) */
      0x00
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      0x00
      dup8
      dup1
      extcodesize
      iszero
      dup1
      iszero
      tag_2037
      jumpi
      0x00
      dup1
      revert
    tag_2037:
      pop
      gas
      call
      iszero
      dup1
      iszero
      tag_2039
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_2039:
      pop
      pop
        /* "test/solidity/Protocol.t.sol":30388:30395  _market */
      sload(0x23)
        /* "test/solidity/Protocol.t.sol":30342:30397  vm.expectEmit(true, true, true, true, address(_market)) */
      mload(0x40)
      shl(0xe0, 0x81bad6f3)
      dup2
      mstore
      0x00
      dup1
      mload
      0x20
      data_1a390d6c2ee89e11d2dffeb86f753e43f966d02cbb0b3bd3e6e1cdf50245ef50
      dup4
      codecopy
      dup2
      mload
      swap2
      mstore
        /* "test/solidity/Protocol.t.sol":30342:30355  vm.expectEmit */
      swap4
      pop
      0x81bad6f3
      swap3
      pop
        /* "test/solidity/Protocol.t.sol":30342:30397  vm.expectEmit(true, true, true, true, address(_market)) */
      tag_2040
      swap2
        /* "test/solidity/Protocol.t.sol":30356:30360  true */
      0x01
      swap2
      dup3
      swap2
      dup3
      swap2
      dup3
      swap2
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":30388:30395  _market */
      and
      swap1
        /* "test/solidity/Protocol.t.sol":30342:30397  vm.expectEmit(true, true, true, true, address(_market)) */
      0x04
      add
      tag_228
      jump	// in
    tag_2040:
      0x00
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      0x00
      dup8
      dup1
      extcodesize
      iszero
      dup1
      iszero
      tag_2041
      jumpi
      0x00
      dup1
      revert
    tag_2041:
      pop
      gas
      call
      iszero
      dup1
      iszero
      tag_2043
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_2043:
      pop
      pop
        /* "test/solidity/Protocol.t.sol":30570:30587  _collateralMarket */
      sload(0x27)
        /* "test/solidity/Protocol.t.sol":30473:30486  _counterparty */
      sload(0x26)
        /* "test/solidity/Protocol.t.sol":30504:30518  lv.repayAssets */
      0x40
      dup7
      dup2
      add
      mload
        /* "test/solidity/Protocol.t.sol":30536:30552  lv.lendersAssets */
      0x80
      dup9
      add
      mload
        /* "test/solidity/Protocol.t.sol":30605:30619  lv.seizeAssets */
      0x60
      dup1
      dup11
      add
      mload
        /* "test/solidity/Protocol.t.sol":30418:30635  Liquidate(... */
      dup5
      mload
        /* "#utility.yul":35297:35322   */
      swap4
      dup5
      mstore
        /* "#utility.yul":35353:35355   */
      0x20
        /* "#utility.yul":35338:35356   */
      dup5
      add
        /* "#utility.yul":35331:35365   */
      swap3
      swap1
      swap3
      mstore
        /* "#utility.yul":35381:35399   */
      swap3
      dup3
      add
        /* "#utility.yul":35374:35408   */
      mstore
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":30570:30587  _collateralMarket */
      swap4
      dup5
      and
      swap6
      pop
        /* "test/solidity/Protocol.t.sol":30473:30486  _counterparty */
      swap3
      swap1
      swap2
      and
      swap3
      pop
        /* "test/solidity/Protocol.t.sol":30445:30455  msg.sender */
      caller
      swap2
        /* "test/solidity/Protocol.t.sol":30418:30635  Liquidate(... */
      0x67bb48f97d82192848c24158abf58ec614777328e19655e0a219652b773fd1db
      swap2
        /* "#utility.yul":35270:35288   */
      add
        /* "test/solidity/Protocol.t.sol":30418:30635  Liquidate(... */
      mload(0x40)
      dup1
      swap2
      sub
      swap1
      log4
        /* "test/solidity/Protocol.t.sol":30119:30650  if (lv.seizeAssets > _collateralMarket.asset().balanceOf(address(_collateralMarket))) {... */
    tag_2034:
        /* "test/solidity/Protocol.t.sol":29187:30672  {... */
      pop
        /* "test/solidity/Protocol.t.sol":28868:30672  if (... */
    tag_1983:
        /* "test/solidity/Protocol.t.sol":30714:30721  _market */
      sload(0x23)
        /* "test/solidity/Protocol.t.sol":30732:30745  _counterparty */
      sload(0x26)
        /* "test/solidity/Protocol.t.sol":30766:30783  _collateralMarket */
      sload(0x27)
        /* "test/solidity/Protocol.t.sol":30714:30784  _market.liquidate(_counterparty, type(uint256).max, _collateralMarket) */
      mload(0x40)
      shl(0xe3, 0x09229801)
      dup2
      mstore
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":30732:30745  _counterparty */
      swap3
      dup4
      and
        /* "test/solidity/Protocol.t.sol":30714:30784  _market.liquidate(_counterparty, type(uint256).max, _collateralMarket) */
      0x04
      dup3
      add
        /* "#utility.yul":35674:35708   */
      mstore
      not(0x00)
        /* "#utility.yul":35724:35742   */
      0x24
      dup3
      add
        /* "#utility.yul":35717:35751   */
      mstore
        /* "test/solidity/Protocol.t.sol":30766:30783  _collateralMarket */
      swap1
      dup3
      and
        /* "#utility.yul":35767:35785   */
      0x44
      dup3
      add
        /* "#utility.yul":35760:35803   */
      mstore
        /* "test/solidity/Protocol.t.sol":30691:30711  uint256 repaidAssets */
      0x00
      swap3
        /* "test/solidity/Protocol.t.sol":30714:30721  _market */
      swap2
      swap1
      swap2
      and
      swap1
        /* "test/solidity/Protocol.t.sol":30714:30731  _market.liquidate */
      0x4914c008
      swap1
        /* "#utility.yul":35609:35627   */
      0x64
      add
        /* "test/solidity/Protocol.t.sol":30714:30784  _market.liquidate(_counterparty, type(uint256).max, _collateralMarket) */
      0x20
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      0x00
      dup8
      gas
      call
      iszero
      dup1
      iszero
      tag_2049
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_2049:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      dup2
      add
      swap1
      tag_2050
      swap2
      swap1
      tag_212
      jump	// in
    tag_2050:
        /* "test/solidity/Protocol.t.sol":30691:30784  uint256 repaidAssets = _market.liquidate(_counterparty, type(uint256).max, _collateralMarket) */
      swap1
      pop
        /* "test/solidity/Protocol.t.sol":30794:30810  repaidAssets > 0 */
      dup1
      iszero
        /* "test/solidity/Protocol.t.sol":30790:30890  if (repaidAssets > 0) MockERC20(address(_collateralMarket.asset())).burn(msg.sender, lv.seizeAssets) */
      tag_2051
      jumpi
        /* "test/solidity/Protocol.t.sol":30830:30847  _collateralMarket */
      0x27
      0x00
      swap1
      sload
      swap1
      0x0100
      exp
      swap1
      div
      sub(shl(0xa0, 0x01), 0x01)
      and
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":30830:30853  _collateralMarket.asset */
      and
      0x38d52e0f
        /* "test/solidity/Protocol.t.sol":30830:30855  _collateralMarket.asset() */
      mload(0x40)
      dup2
      0xffffffff
      and
      0xe0
      shl
      dup2
      mstore
      0x04
      add
      0x20
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      dup7
      gas
      staticcall
      iszero
      dup1
      iszero
      tag_2053
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_2053:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      dup2
      add
      swap1
      tag_2054
      swap2
      swap1
      tag_167
      jump	// in
    tag_2054:
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":30812:30862  MockERC20(address(_collateralMarket.asset())).burn */
      and
      0x9dc29fac
        /* "test/solidity/Protocol.t.sol":30863:30873  msg.sender */
      caller
        /* "test/solidity/Protocol.t.sol":30875:30877  lv */
      dup5
        /* "test/solidity/Protocol.t.sol":30875:30889  lv.seizeAssets */
      0x60
      add
      mload
        /* "test/solidity/Protocol.t.sol":30812:30890  MockERC20(address(_collateralMarket.asset())).burn(msg.sender, lv.seizeAssets) */
      mload(0x40)
      dup4
      0xffffffff
      and
      0xe0
      shl
      dup2
      mstore
      0x04
      add
      tag_2055
      swap3
      swap2
      swap1
      tag_345
      jump	// in
    tag_2055:
      0x00
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      0x00
      dup8
      dup1
      extcodesize
      iszero
      dup1
      iszero
      tag_2056
      jumpi
      0x00
      dup1
      revert
    tag_2056:
      pop
      gas
      call
      iszero
      dup1
      iszero
      tag_2058
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_2058:
      pop
      pop
      pop
      pop
        /* "test/solidity/Protocol.t.sol":30790:30890  if (repaidAssets > 0) MockERC20(address(_collateralMarket.asset())).burn(msg.sender, lv.seizeAssets) */
    tag_2051:
        /* "test/solidity/Protocol.t.sol":30896:30902  _asset */
      0x24
      dup1
      sload
        /* "test/solidity/Protocol.t.sol":30920:30948  _asset.balanceOf(msg.sender) */
      mload(0x40)
      shl(0xe0, 0x70a08231)
      dup2
      mstore
        /* "test/solidity/Protocol.t.sol":30908:30918  msg.sender */
      caller
        /* "test/solidity/Protocol.t.sol":30920:30948  _asset.balanceOf(msg.sender) */
      0x04
      dup3
      add
        /* "#utility.yul":7560:7611   */
      dup2
      swap1
      mstore
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":30896:30902  _asset */
      swap1
      swap3
      and
      swap3
        /* "test/solidity/Protocol.t.sol":30896:30907  _asset.burn */
      0x9dc29fac
      swap3
        /* "test/solidity/Protocol.t.sol":30908:30918  msg.sender */
      swap2
        /* "test/solidity/Protocol.t.sol":30896:30902  _asset */
      dup5
      swap2
        /* "test/solidity/Protocol.t.sol":30920:30936  _asset.balanceOf */
      0x70a08231
      swap2
        /* "#utility.yul":7533:7551   */
      add
        /* "test/solidity/Protocol.t.sol":30920:30948  _asset.balanceOf(msg.sender) */
      0x20
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      dup7
      gas
      staticcall
      iszero
      dup1
      iszero
      tag_2061
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_2061:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      dup2
      add
      swap1
      tag_2062
      swap2
      swap1
      tag_212
      jump	// in
    tag_2062:
        /* "test/solidity/Protocol.t.sol":30896:30949  _asset.burn(msg.sender, _asset.balanceOf(msg.sender)) */
      mload(0x40)
      dup4
      0xffffffff
      and
      0xe0
      shl
      dup2
      mstore
      0x04
      add
      tag_2063
      swap3
      swap2
      swap1
      tag_345
      jump	// in
    tag_2063:
      0x00
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      0x00
      dup8
      dup1
      extcodesize
      iszero
      dup1
      iszero
      tag_2064
      jumpi
      0x00
      dup1
      revert
    tag_2064:
      pop
      gas
      call
      iszero
      dup1
      iszero
      tag_2066
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_2066:
      pop
      pop
      pop
      pop
        /* "test/solidity/Protocol.t.sol":27832:30954  {... */
      pop
      pop
      pop
      pop
      pop
        /* "test/solidity/Protocol.t.sol":37369:37389  BadDebtVars memory b */
      tag_2067
      mload(0x40)
      dup1
      0x80
      add
      0x40
      mstore
      dup1
      0x00
      dup2
      mstore
      0x20
      add
      0x00
      dup2
      mstore
      0x20
      add
      0x00
      dup2
      mstore
      0x20
      add
      0x00
      dup2
      mstore
      pop
      swap1
      jump
    tag_2067:
        /* "test/solidity/Protocol.t.sol":37395:37423  Auditor.MarketData memory md */
      tag_2069
      tag_974
      jump	// in
    tag_2069:
        /* "test/solidity/Protocol.t.sol":37499:37506  auditor */
      sload(0x1b)
        /* "test/solidity/Protocol.t.sol":37515:37522  _market */
      sload(0x23)
        /* "test/solidity/Protocol.t.sol":37499:37523  auditor.markets(_market) */
      mload(0x40)
      shl(0xe0, 0x8e8f294b)
      dup2
      mstore
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":37515:37522  _market */
      swap2
      dup3
      and
        /* "test/solidity/Protocol.t.sol":37499:37523  auditor.markets(_market) */
      0x04
      dup3
      add
        /* "#utility.yul":7560:7611   */
      mstore
        /* "test/solidity/Protocol.t.sol":37499:37506  auditor */
      swap2
      and
      swap1
        /* "test/solidity/Protocol.t.sol":37499:37514  auditor.markets */
      0x8e8f294b
      swap1
        /* "#utility.yul":7533:7551   */
      0x24
      add
        /* "test/solidity/Protocol.t.sol":37499:37523  auditor.markets(_market) */
      0xa0
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      dup7
      gas
      staticcall
      iszero
      dup1
      iszero
      tag_2072
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_2072:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      dup2
      add
      swap1
      tag_2073
      swap2
      swap1
      tag_198
      jump	// in
    tag_2073:
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":37429:37523  (md.adjustFactor, md.decimals, md.index, md.isListed, md.priceFeed) = auditor.markets(_market) */
      swap1
      dup2
      and
        /* "test/solidity/Protocol.t.sol":37483:37495  md.priceFeed */
      0x80
      dup8
      add
        /* "test/solidity/Protocol.t.sol":37429:37523  (md.adjustFactor, md.decimals, md.index, md.isListed, md.priceFeed) = auditor.markets(_market) */
      mstore
      swap1
      iszero
      iszero
        /* "test/solidity/Protocol.t.sol":37470:37481  md.isListed */
      0x60
      dup7
      add
        /* "test/solidity/Protocol.t.sol":37429:37523  (md.adjustFactor, md.decimals, md.index, md.isListed, md.priceFeed) = auditor.markets(_market) */
      mstore
      0xff
      swap2
      dup3
      and
        /* "test/solidity/Protocol.t.sol":37460:37468  md.index */
      0x40
      dup1
      dup8
      add
        /* "test/solidity/Protocol.t.sol":37429:37523  (md.adjustFactor, md.decimals, md.index, md.isListed, md.priceFeed) = auditor.markets(_market) */
      swap2
      swap1
      swap2
      mstore
      swap3
      swap1
      swap2
      and
      0x20
        /* "test/solidity/Protocol.t.sol":37447:37458  md.decimals */
      dup6
      add
        /* "test/solidity/Protocol.t.sol":37429:37523  (md.adjustFactor, md.decimals, md.index, md.isListed, md.priceFeed) = auditor.markets(_market) */
      mstore
      sub(shl(0x80, 0x01), 0x01)
      swap3
      swap1
      swap3
      and
      dup4
      mstore
        /* "test/solidity/Protocol.t.sol":37562:37569  _market */
      sload(0x23)
        /* "test/solidity/Protocol.t.sol":37586:37599  _counterparty */
      sload(0x26)
        /* "test/solidity/Protocol.t.sol":37562:37600  _market.accountSnapshot(_counterparty) */
      swap2
      mload
      shl(0xe0, 0x014a296f)
      dup2
      mstore
        /* "test/solidity/Protocol.t.sol":37586:37599  _counterparty */
      swap2
      dup4
      and
        /* "test/solidity/Protocol.t.sol":37562:37600  _market.accountSnapshot(_counterparty) */
      0x04
      dup4
      add
        /* "#utility.yul":7560:7611   */
      mstore
        /* "test/solidity/Protocol.t.sol":37562:37569  _market */
      swap1
      swap2
      and
      swap1
        /* "test/solidity/Protocol.t.sol":37562:37585  _market.accountSnapshot */
      0x014a296f
      swap1
        /* "#utility.yul":7533:7551   */
      0x24
      add
        /* "test/solidity/Protocol.t.sol":37562:37600  _market.accountSnapshot(_counterparty) */
      0x40
      dup1
      mload
      dup1
      dup4
      sub
      dup2
      dup7
      gas
      staticcall
      iszero
      dup1
      iszero
      tag_2076
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_2076:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      dup2
      add
      swap1
      tag_2077
      swap2
      swap1
      tag_203
      jump	// in
    tag_2077:
        /* "test/solidity/Protocol.t.sol":37530:37531  b */
      dup4
        /* "test/solidity/Protocol.t.sol":37530:37539  b.balance */
      0x00
      add
        /* "test/solidity/Protocol.t.sol":37541:37542  b */
      dup5
        /* "test/solidity/Protocol.t.sol":37541:37558  b.repayMarketDebt */
      0x20
      add
        /* "test/solidity/Protocol.t.sol":37529:37600  (b.balance, b.repayMarketDebt) = _market.accountSnapshot(_counterparty) */
      dup3
      dup2
      mstore
      pop
      dup3
      dup2
      mstore
      pop
      pop
      pop
        /* "test/solidity/Protocol.t.sol":37629:37746  b.balance.mulDivDown(uint256(md.priceFeed.latestAnswer()), 10 ** md.decimals).mulWadDown(... */
      tag_2078
        /* "test/solidity/Protocol.t.sol":37725:37727  md */
      dup2
        /* "test/solidity/Protocol.t.sol":37725:37740  md.adjustFactor */
      0x00
      add
      mload
      sub(shl(0x80, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":37629:37746  b.balance.mulDivDown(uint256(md.priceFeed.latestAnswer()), 10 ** md.decimals).mulWadDown(... */
      and
        /* "test/solidity/Protocol.t.sol":37629:37706  b.balance.mulDivDown(uint256(md.priceFeed.latestAnswer()), 10 ** md.decimals) */
      tag_1374
        /* "test/solidity/Protocol.t.sol":37658:37660  md */
      dup4
        /* "test/solidity/Protocol.t.sol":37658:37670  md.priceFeed */
      0x80
      add
      mload
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":37658:37683  md.priceFeed.latestAnswer */
      and
      0x50d25bcd
        /* "test/solidity/Protocol.t.sol":37658:37685  md.priceFeed.latestAnswer() */
      mload(0x40)
      dup2
      0xffffffff
      and
      0xe0
      shl
      dup2
      mstore
      0x04
      add
      0x20
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      dup7
      gas
      staticcall
      iszero
      dup1
      iszero
      tag_2081
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_2081:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      dup2
      add
      swap1
      tag_2082
      swap2
      swap1
      tag_212
      jump	// in
    tag_2082:
        /* "test/solidity/Protocol.t.sol":37694:37705  md.decimals */
      0x20
      dup6
      add
      mload
        /* "test/solidity/Protocol.t.sol":37688:37705  10 ** md.decimals */
      tag_2084
      swap1
        /* "test/solidity/Protocol.t.sol":37688:37690  10 */
      0x0a
        /* "test/solidity/Protocol.t.sol":37688:37705  10 ** md.decimals */
      tag_987
      jump	// in
    tag_2084:
        /* "test/solidity/Protocol.t.sol":37629:37638  b.balance */
      dup7
      mload
      swap2
        /* "test/solidity/Protocol.t.sol":37629:37706  b.balance.mulDivDown(uint256(md.priceFeed.latestAnswer()), 10 ** md.decimals) */
      swap1
        /* "test/solidity/Protocol.t.sol":37629:37649  b.balance.mulDivDown */
      tag_2085
        /* "test/solidity/Protocol.t.sol":37629:37706  b.balance.mulDivDown(uint256(md.priceFeed.latestAnswer()), 10 ** md.decimals) */
      jump	// in
        /* "test/solidity/Protocol.t.sol":37629:37746  b.balance.mulDivDown(uint256(md.priceFeed.latestAnswer()), 10 ** md.decimals).mulWadDown(... */
    tag_2078:
        /* "test/solidity/Protocol.t.sol":37606:37626  b.adjustedCollateral */
      0x60
      dup4
      add
        /* "test/solidity/Protocol.t.sol":37606:37746  b.adjustedCollateral = b.balance.mulDivDown(uint256(md.priceFeed.latestAnswer()), 10 ** md.decimals).mulWadDown(... */
      mstore
        /* "test/solidity/Protocol.t.sol":37822:37829  auditor */
      sload(0x1b)
        /* "test/solidity/Protocol.t.sol":37838:37855  _collateralMarket */
      sload(0x27)
        /* "test/solidity/Protocol.t.sol":37822:37856  auditor.markets(_collateralMarket) */
      mload(0x40)
      shl(0xe0, 0x8e8f294b)
      dup2
      mstore
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":37838:37855  _collateralMarket */
      swap2
      dup3
      and
        /* "test/solidity/Protocol.t.sol":37822:37856  auditor.markets(_collateralMarket) */
      0x04
      dup3
      add
        /* "#utility.yul":7560:7611   */
      mstore
        /* "test/solidity/Protocol.t.sol":37822:37829  auditor */
      swap2
      and
      swap1
        /* "test/solidity/Protocol.t.sol":37822:37837  auditor.markets */
      0x8e8f294b
      swap1
        /* "#utility.yul":7533:7551   */
      0x24
      add
        /* "test/solidity/Protocol.t.sol":37822:37856  auditor.markets(_collateralMarket) */
      0xa0
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      dup7
      gas
      staticcall
      iszero
      dup1
      iszero
      tag_2088
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_2088:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      dup2
      add
      swap1
      tag_2089
      swap2
      swap1
      tag_198
      jump	// in
    tag_2089:
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":37752:37856  (md.adjustFactor, md.decimals, md.index, md.isListed, md.priceFeed) = auditor.markets(_collateralMarket) */
      swap1
      dup2
      and
        /* "test/solidity/Protocol.t.sol":37806:37818  md.priceFeed */
      0x80
      dup8
      add
        /* "test/solidity/Protocol.t.sol":37752:37856  (md.adjustFactor, md.decimals, md.index, md.isListed, md.priceFeed) = auditor.markets(_collateralMarket) */
      mstore
      swap1
      iszero
      iszero
        /* "test/solidity/Protocol.t.sol":37793:37804  md.isListed */
      0x60
      dup7
      add
        /* "test/solidity/Protocol.t.sol":37752:37856  (md.adjustFactor, md.decimals, md.index, md.isListed, md.priceFeed) = auditor.markets(_collateralMarket) */
      mstore
      0xff
      swap2
      dup3
      and
        /* "test/solidity/Protocol.t.sol":37783:37791  md.index */
      0x40
      dup1
      dup8
      add
        /* "test/solidity/Protocol.t.sol":37752:37856  (md.adjustFactor, md.decimals, md.index, md.isListed, md.priceFeed) = auditor.markets(_collateralMarket) */
      swap2
      swap1
      swap2
      mstore
      swap3
      swap1
      swap2
      and
      0x20
        /* "test/solidity/Protocol.t.sol":37770:37781  md.decimals */
      dup6
      add
        /* "test/solidity/Protocol.t.sol":37752:37856  (md.adjustFactor, md.decimals, md.index, md.isListed, md.priceFeed) = auditor.markets(_collateralMarket) */
      mstore
      sub(shl(0x80, 0x01), 0x01)
      swap3
      swap1
      swap3
      and
      dup4
      mstore
        /* "test/solidity/Protocol.t.sol":37900:37917  _collateralMarket */
      sload(0x27)
        /* "test/solidity/Protocol.t.sol":37934:37947  _counterparty */
      sload(0x26)
        /* "test/solidity/Protocol.t.sol":37900:37948  _collateralMarket.accountSnapshot(_counterparty) */
      swap2
      mload
      shl(0xe0, 0x014a296f)
      dup2
      mstore
        /* "test/solidity/Protocol.t.sol":37934:37947  _counterparty */
      swap2
      dup4
      and
        /* "test/solidity/Protocol.t.sol":37900:37948  _collateralMarket.accountSnapshot(_counterparty) */
      0x04
      dup4
      add
        /* "#utility.yul":7560:7611   */
      mstore
        /* "test/solidity/Protocol.t.sol":37900:37917  _collateralMarket */
      swap1
      swap2
      and
      swap1
        /* "test/solidity/Protocol.t.sol":37900:37933  _collateralMarket.accountSnapshot */
      0x014a296f
      swap1
        /* "#utility.yul":7533:7551   */
      0x24
      add
        /* "test/solidity/Protocol.t.sol":37900:37948  _collateralMarket.accountSnapshot(_counterparty) */
      0x40
      dup1
      mload
      dup1
      dup4
      sub
      dup2
      dup7
      gas
      staticcall
      iszero
      dup1
      iszero
      tag_2092
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_2092:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      dup2
      add
      swap1
      tag_2093
      swap2
      swap1
      tag_203
      jump	// in
    tag_2093:
        /* "test/solidity/Protocol.t.sol":37863:37864  b */
      dup4
        /* "test/solidity/Protocol.t.sol":37863:37872  b.balance */
      0x00
      add
        /* "test/solidity/Protocol.t.sol":37874:37875  b */
      dup5
        /* "test/solidity/Protocol.t.sol":37874:37896  b.collateralMarketDebt */
      0x40
      add
        /* "test/solidity/Protocol.t.sol":37862:37948  (b.balance, b.collateralMarketDebt) = _collateralMarket.accountSnapshot(_counterparty) */
      dup3
      dup2
      mstore
      pop
      dup3
      dup2
      mstore
      pop
      pop
      pop
        /* "test/solidity/Protocol.t.sol":37978:38095  b.balance.mulDivDown(uint256(md.priceFeed.latestAnswer()), 10 ** md.decimals).mulWadDown(... */
      tag_2094
        /* "test/solidity/Protocol.t.sol":38074:38076  md */
      dup2
        /* "test/solidity/Protocol.t.sol":38074:38089  md.adjustFactor */
      0x00
      add
      mload
      sub(shl(0x80, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":37978:38095  b.balance.mulDivDown(uint256(md.priceFeed.latestAnswer()), 10 ** md.decimals).mulWadDown(... */
      and
        /* "test/solidity/Protocol.t.sol":37978:38055  b.balance.mulDivDown(uint256(md.priceFeed.latestAnswer()), 10 ** md.decimals) */
      tag_1374
        /* "test/solidity/Protocol.t.sol":38007:38009  md */
      dup4
        /* "test/solidity/Protocol.t.sol":38007:38019  md.priceFeed */
      0x80
      add
      mload
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":38007:38032  md.priceFeed.latestAnswer */
      and
      0x50d25bcd
        /* "test/solidity/Protocol.t.sol":38007:38034  md.priceFeed.latestAnswer() */
      mload(0x40)
      dup2
      0xffffffff
      and
      0xe0
      shl
      dup2
      mstore
      0x04
      add
      0x20
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      dup7
      gas
      staticcall
      iszero
      dup1
      iszero
      tag_2081
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
        /* "test/solidity/Protocol.t.sol":37978:38095  b.balance.mulDivDown(uint256(md.priceFeed.latestAnswer()), 10 ** md.decimals).mulWadDown(... */
    tag_2094:
        /* "test/solidity/Protocol.t.sol":37954:37955  b */
      dup3
        /* "test/solidity/Protocol.t.sol":37954:37974  b.adjustedCollateral */
      0x60
      add
        /* "test/solidity/Protocol.t.sol":37954:38095  b.adjustedCollateral += b.balance.mulDivDown(uint256(md.priceFeed.latestAnswer()), 10 ** md.decimals).mulWadDown(... */
      dup2
      dup2
      mload
      tag_2100
      swap2
      swap1
      tag_186
      jump	// in
    tag_2100:
      swap1
      mstore
      pop
        /* "test/solidity/Protocol.t.sol":38154:38174  b.adjustedCollateral */
      0x60
      dup3
      add
      mload
        /* "test/solidity/Protocol.t.sol":38178:38179  0 */
      0x00
        /* "test/solidity/Protocol.t.sol":38154:38179  b.adjustedCollateral == 0 */
      sub
        /* "test/solidity/Protocol.t.sol":38150:38488  if (b.adjustedCollateral == 0) {... */
      tag_2112
      jumpi
        /* "test/solidity/Protocol.t.sol":38226:38227  b */
      dup2
        /* "test/solidity/Protocol.t.sol":38226:38243  b.repayMarketDebt */
      0x20
      add
      mload
        /* "test/solidity/Protocol.t.sol":38193:38200  _market */
      0x23
      0x00
      swap1
      sload
      swap1
      0x0100
      exp
      swap1
      div
      sub(shl(0xa0, 0x01), 0x01)
      and
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":38193:38220  _market.earningsAccumulator */
      and
      0x8a1baa46
        /* "test/solidity/Protocol.t.sol":38193:38222  _market.earningsAccumulator() */
      mload(0x40)
      dup2
      0xffffffff
      and
      0xe0
      shl
      dup2
      mstore
      0x04
      add
      0x20
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      dup7
      gas
      staticcall
      iszero
      dup1
      iszero
      tag_2103
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_2103:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      dup2
      add
      swap1
      tag_2104
      swap2
      swap1
      tag_212
      jump	// in
    tag_2104:
        /* "test/solidity/Protocol.t.sol":38193:38243  _market.earningsAccumulator() >= b.repayMarketDebt */
      lt
        /* "test/solidity/Protocol.t.sol":38189:38322  if (_market.earningsAccumulator() >= b.repayMarketDebt) {... */
      tag_2106
      jumpi
        /* "test/solidity/Protocol.t.sol":38255:38313  assertEq(b.repayMarketDebt, 0, "should have cleared debt") */
      tag_2106
        /* "test/solidity/Protocol.t.sol":38264:38265  b */
      dup3
        /* "test/solidity/Protocol.t.sol":38264:38281  b.repayMarketDebt */
      0x20
      add
      mload
        /* "test/solidity/Protocol.t.sol":38283:38284  0 */
      0x00
        /* "test/solidity/Protocol.t.sol":38255:38313  assertEq(b.repayMarketDebt, 0, "should have cleared debt") */
      mload(0x40)
      dup1
      0x40
      add
      0x40
      mstore
      dup1
      0x18
      dup2
      mstore
      0x20
      add
      shl(0x42, 0x1cda1bdd5b19081a185d994818db19585c9959081919589d)
      dup2
      mstore
      pop
        /* "test/solidity/Protocol.t.sol":38255:38263  assertEq */
      tag_2107
        /* "test/solidity/Protocol.t.sol":38255:38313  assertEq(b.repayMarketDebt, 0, "should have cleared debt") */
      jump	// in
    tag_2106:
        /* "test/solidity/Protocol.t.sol":38376:38377  b */
      dup2
        /* "test/solidity/Protocol.t.sol":38376:38398  b.collateralMarketDebt */
      0x40
      add
      mload
        /* "test/solidity/Protocol.t.sol":38333:38350  _collateralMarket */
      0x27
      0x00
      swap1
      sload
      swap1
      0x0100
      exp
      swap1
      div
      sub(shl(0xa0, 0x01), 0x01)
      and
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":38333:38370  _collateralMarket.earningsAccumulator */
      and
      0x8a1baa46
        /* "test/solidity/Protocol.t.sol":38333:38372  _collateralMarket.earningsAccumulator() */
      mload(0x40)
      dup2
      0xffffffff
      and
      0xe0
      shl
      dup2
      mstore
      0x04
      add
      0x20
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      dup7
      gas
      staticcall
      iszero
      dup1
      iszero
      tag_2109
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_2109:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      dup2
      add
      swap1
      tag_2110
      swap2
      swap1
      tag_212
      jump	// in
    tag_2110:
        /* "test/solidity/Protocol.t.sol":38333:38398  _collateralMarket.earningsAccumulator() >= b.collateralMarketDebt */
      lt
        /* "test/solidity/Protocol.t.sol":38329:38482  if (_collateralMarket.earningsAccumulator() >= b.collateralMarketDebt) {... */
      tag_2112
      jumpi
        /* "test/solidity/Protocol.t.sol":38410:38473  assertEq(b.collateralMarketDebt, 0, "should have cleared debt") */
      tag_2112
        /* "test/solidity/Protocol.t.sol":38419:38420  b */
      dup3
        /* "test/solidity/Protocol.t.sol":38419:38441  b.collateralMarketDebt */
      0x40
      add
      mload
        /* "test/solidity/Protocol.t.sol":38443:38444  0 */
      0x00
        /* "test/solidity/Protocol.t.sol":38410:38473  assertEq(b.collateralMarketDebt, 0, "should have cleared debt") */
      mload(0x40)
      dup1
      0x40
      add
      0x40
      mstore
      dup1
      0x18
      dup2
      mstore
      0x20
      add
      shl(0x42, 0x1cda1bdd5b19081a185d994818db19585c9959081919589d)
      dup2
      mstore
      pop
        /* "test/solidity/Protocol.t.sol":38410:38418  assertEq */
      tag_2107
        /* "test/solidity/Protocol.t.sol":38410:38473  assertEq(b.collateralMarketDebt, 0, "should have cleared debt") */
      jump	// in
    tag_2112:
        /* "test/solidity/Protocol.t.sol":38499:38508  uint256 i */
      0x00
        /* "test/solidity/Protocol.t.sol":38494:39795  for (uint256 i = 0; i < markets.length; ++i) {... */
    tag_2113:
        /* "test/solidity/Protocol.t.sol":38518:38525  markets */
      0x1c
        /* "test/solidity/Protocol.t.sol":38518:38532  markets.length */
      sload
        /* "test/solidity/Protocol.t.sol":38514:38532  i < markets.length */
      dup2
      lt
        /* "test/solidity/Protocol.t.sol":38494:39795  for (uint256 i = 0; i < markets.length; ++i) {... */
      iszero
      tag_671
      jumpi
        /* "test/solidity/Protocol.t.sol":38547:38560  Market market */
      0x00
        /* "test/solidity/Protocol.t.sol":38563:38570  markets */
      0x1c
        /* "test/solidity/Protocol.t.sol":38571:38572  i */
      dup3
        /* "test/solidity/Protocol.t.sol":38563:38573  markets[i] */
      dup2
      sload
      dup2
      lt
      tag_2117
      jumpi
      tag_2117
      tag_162
      jump	// in
    tag_2117:
      0x00
      swap2
      dup3
      mstore
      0x20
      dup1
      dup4
      keccak256
      swap1
      swap2
      add
      sload
        /* "test/solidity/Protocol.t.sol":38664:38684  market.totalSupply() */
      0x40
      dup1
      mload
      shl(0xe0, 0x18160ddd)
      dup2
      mstore
      swap1
      mload
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":38563:38573  markets[i] */
      swap1
      swap3
      and
      swap5
      pop
      dup5
      swap3
        /* "test/solidity/Protocol.t.sol":38664:38682  market.totalSupply */
      0x18160ddd
      swap3
        /* "test/solidity/Protocol.t.sol":38664:38684  market.totalSupply() */
      0x04
      dup1
      dup5
      add
      swap4
      dup3
      swap1
      sub
      add
      dup2
        /* "test/solidity/Protocol.t.sol":38563:38573  markets[i] */
      dup7
        /* "test/solidity/Protocol.t.sol":38664:38684  market.totalSupply() */
      gas
      staticcall
      iszero
      dup1
      iszero
      tag_2120
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_2120:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      dup2
      add
      swap1
      tag_2121
      swap2
      swap1
      tag_212
      jump	// in
    tag_2121:
        /* "test/solidity/Protocol.t.sol":38664:38688  market.totalSupply() > 0 */
      gt
        /* "test/solidity/Protocol.t.sol":38664:38717  market.totalSupply() > 0 && market.totalAssets() == 0 */
      dup1
      iszero
      tag_2122
      jumpi
      pop
        /* "test/solidity/Protocol.t.sol":38692:38698  market */
      dup1
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":38692:38710  market.totalAssets */
      and
      0x01e1d114
        /* "test/solidity/Protocol.t.sol":38692:38712  market.totalAssets() */
      mload(0x40)
      dup2
      0xffffffff
      and
      0xe0
      shl
      dup2
      mstore
      0x04
      add
      0x20
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      dup7
      gas
      staticcall
      iszero
      dup1
      iszero
      tag_2124
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_2124:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      dup2
      add
      swap1
      tag_2125
      swap2
      swap1
      tag_212
      jump	// in
    tag_2125:
        /* "test/solidity/Protocol.t.sol":38692:38717  market.totalAssets() == 0 */
      iszero
        /* "test/solidity/Protocol.t.sol":38664:38717  market.totalSupply() > 0 && market.totalAssets() == 0 */
    tag_2122:
        /* "test/solidity/Protocol.t.sol":38660:39789  if (market.totalSupply() > 0 && market.totalAssets() == 0) {... */
      iszero
      tag_2126
      jumpi
        /* "test/solidity/Protocol.t.sol":38729:38747  Market otherMarket */
      0x00
        /* "test/solidity/Protocol.t.sol":38750:38757  markets */
      0x1c
        /* "test/solidity/Protocol.t.sol":38758:38764  i == 0 */
      dup4
      iszero
        /* "test/solidity/Protocol.t.sol":38758:38780  i == 0 ? i + 1 : i - 1 */
      tag_2127
      jumpi
        /* "test/solidity/Protocol.t.sol":38775:38780  i - 1 */
      tag_2128
        /* "test/solidity/Protocol.t.sol":38779:38780  1 */
      0x01
        /* "test/solidity/Protocol.t.sol":38775:38776  i */
      dup6
        /* "test/solidity/Protocol.t.sol":38775:38780  i - 1 */
      tag_158
      jump	// in
    tag_2128:
        /* "test/solidity/Protocol.t.sol":38758:38780  i == 0 ? i + 1 : i - 1 */
      jump(tag_2130)
    tag_2127:
        /* "test/solidity/Protocol.t.sol":38767:38772  i + 1 */
      tag_2130
        /* "test/solidity/Protocol.t.sol":38767:38768  i */
      dup5
        /* "test/solidity/Protocol.t.sol":38771:38772  1 */
      0x01
        /* "test/solidity/Protocol.t.sol":38767:38772  i + 1 */
      tag_186
      jump	// in
    tag_2130:
        /* "test/solidity/Protocol.t.sol":38750:38781  markets[i == 0 ? i + 1 : i - 1] */
      dup2
      sload
      dup2
      lt
      tag_2132
      jumpi
      tag_2132
      tag_162
      jump	// in
    tag_2132:
      swap1
      0x00
      mstore
      keccak256(0x00, 0x20)
      add
      0x00
      swap1
      sload
      swap1
      0x0100
      exp
      swap1
      div
      sub(shl(0xa0, 0x01), 0x01)
      and
        /* "test/solidity/Protocol.t.sol":38729:38781  Market otherMarket = markets[i == 0 ? i + 1 : i - 1] */
      swap1
      pop
        /* "test/solidity/Protocol.t.sol":38791:38806  MockERC20 asset */
      0x00
        /* "test/solidity/Protocol.t.sol":38827:38833  market */
      dup3
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":38827:38839  market.asset */
      and
      0x38d52e0f
        /* "test/solidity/Protocol.t.sol":38827:38841  market.asset() */
      mload(0x40)
      dup2
      0xffffffff
      and
      0xe0
      shl
      dup2
      mstore
      0x04
      add
      0x20
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      dup7
      gas
      staticcall
      iszero
      dup1
      iszero
      tag_2135
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_2135:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      dup2
      add
      swap1
      tag_2136
      swap2
      swap1
      tag_167
      jump	// in
    tag_2136:
        /* "test/solidity/Protocol.t.sol":38791:38843  MockERC20 asset = MockERC20(address(market.asset())) */
      swap1
      pop
        /* "test/solidity/Protocol.t.sol":38853:38873  MockERC20 otherAsset */
      0x00
        /* "test/solidity/Protocol.t.sol":38894:38905  otherMarket */
      dup3
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":38894:38911  otherMarket.asset */
      and
      0x38d52e0f
        /* "test/solidity/Protocol.t.sol":38894:38913  otherMarket.asset() */
      mload(0x40)
      dup2
      0xffffffff
      and
      0xe0
      shl
      dup2
      mstore
      0x04
      add
      0x20
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      dup7
      gas
      staticcall
      iszero
      dup1
      iszero
      tag_2138
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_2138:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      dup2
      add
      swap1
      tag_2139
      swap2
      swap1
      tag_167
      jump	// in
    tag_2139:
        /* "test/solidity/Protocol.t.sol":38853:38915  MockERC20 otherAsset = MockERC20(address(otherMarket.asset())) */
      swap1
      pop
        /* "test/solidity/Protocol.t.sol":38942:38952  msg.sender */
      caller
        /* "test/solidity/Protocol.t.sol":38962:38988  changePrank(address(this)) */
      tag_2140
        /* "test/solidity/Protocol.t.sol":38982:38986  this */
      address
        /* "test/solidity/Protocol.t.sol":38962:38973  changePrank */
      tag_549
        /* "test/solidity/Protocol.t.sol":38962:38988  changePrank(address(this)) */
      jump	// in
    tag_2140:
        /* "test/solidity/Protocol.t.sol":38998:39038  asset.mint(msg.sender, type(uint96).max) */
      mload(0x40)
      shl(0xe0, 0x40c10f19)
      dup2
      mstore
        /* "test/solidity/Protocol.t.sol":39009:39019  msg.sender */
      caller
        /* "test/solidity/Protocol.t.sol":38998:39038  asset.mint(msg.sender, type(uint96).max) */
      0x04
      dup3
      add
        /* "#utility.yul":36175:36226   */
      mstore
      sub(shl(0x60, 0x01), 0x01)
        /* "#utility.yul":36242:36260   */
      0x24
      dup3
      add
        /* "#utility.yul":36235:36302   */
      mstore
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":38998:39008  asset.mint */
      dup5
      and
      swap1
      0x40c10f19
      swap1
        /* "#utility.yul":36148:36166   */
      0x44
      add
        /* "test/solidity/Protocol.t.sol":38998:39038  asset.mint(msg.sender, type(uint96).max) */
      0x00
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      0x00
      dup8
      dup1
      extcodesize
      iszero
      dup1
      iszero
      tag_2143
      jumpi
      0x00
      dup1
      revert
    tag_2143:
      pop
      gas
      call
      iszero
      dup1
      iszero
      tag_2145
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_2145:
      pop
      pop
        /* "test/solidity/Protocol.t.sol":39048:39097  asset.approve(address(market), type(uint256).max) */
      mload(0x40)
      shl(0xe0, 0x095ea7b3)
      dup2
      mstore
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":39048:39061  asset.approve */
      dup7
      and
      swap3
      pop
      0x095ea7b3
      swap2
      pop
        /* "test/solidity/Protocol.t.sol":39048:39097  asset.approve(address(market), type(uint256).max) */
      tag_2146
      swap1
        /* "test/solidity/Protocol.t.sol":39070:39076  market */
      dup9
      swap1
      not(0x00)
        /* "test/solidity/Protocol.t.sol":39079:39096  type(uint256).max */
      swap1
        /* "test/solidity/Protocol.t.sol":39048:39097  asset.approve(address(market), type(uint256).max) */
      0x04
      add
      tag_345
      jump	// in
    tag_2146:
      0x20
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      0x00
      dup8
      gas
      call
      iszero
      dup1
      iszero
      tag_2148
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_2148:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      dup2
      add
      swap1
      tag_2149
      swap2
      swap1
      tag_349
      jump	// in
    tag_2149:
      pop
        /* "test/solidity/Protocol.t.sol":39107:39152  otherAsset.mint(msg.sender, type(uint96).max) */
      mload(0x40)
      shl(0xe0, 0x40c10f19)
      dup2
      mstore
        /* "test/solidity/Protocol.t.sol":39123:39133  msg.sender */
      caller
        /* "test/solidity/Protocol.t.sol":39107:39152  otherAsset.mint(msg.sender, type(uint96).max) */
      0x04
      dup3
      add
        /* "#utility.yul":36175:36226   */
      mstore
      sub(shl(0x60, 0x01), 0x01)
        /* "#utility.yul":36242:36260   */
      0x24
      dup3
      add
        /* "#utility.yul":36235:36302   */
      mstore
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":39107:39122  otherAsset.mint */
      dup4
      and
      swap1
      0x40c10f19
      swap1
        /* "#utility.yul":36148:36166   */
      0x44
      add
        /* "test/solidity/Protocol.t.sol":39107:39152  otherAsset.mint(msg.sender, type(uint96).max) */
      0x00
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      0x00
      dup8
      dup1
      extcodesize
      iszero
      dup1
      iszero
      tag_2151
      jumpi
      0x00
      dup1
      revert
    tag_2151:
      pop
      gas
      call
      iszero
      dup1
      iszero
      tag_2153
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_2153:
      pop
      pop
        /* "test/solidity/Protocol.t.sol":39162:39221  otherAsset.approve(address(otherMarket), type(uint256).max) */
      mload(0x40)
      shl(0xe0, 0x095ea7b3)
      dup2
      mstore
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":39162:39180  otherAsset.approve */
      dup6
      and
      swap3
      pop
      0x095ea7b3
      swap2
      pop
        /* "test/solidity/Protocol.t.sol":39162:39221  otherAsset.approve(address(otherMarket), type(uint256).max) */
      tag_2154
      swap1
        /* "test/solidity/Protocol.t.sol":39189:39200  otherMarket */
      dup8
      swap1
      not(0x00)
        /* "test/solidity/Protocol.t.sol":39203:39220  type(uint256).max */
      swap1
        /* "test/solidity/Protocol.t.sol":39162:39221  otherAsset.approve(address(otherMarket), type(uint256).max) */
      0x04
      add
      tag_345
      jump	// in
    tag_2154:
      0x20
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      0x00
      dup8
      gas
      call
      iszero
      dup1
      iszero
      tag_2156
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_2156:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      dup2
      add
      swap1
      tag_2157
      swap2
      swap1
      tag_349
      jump	// in
    tag_2157:
      pop
        /* "test/solidity/Protocol.t.sol":39231:39280  otherMarket.deposit(type(uint96).max, msg.sender) */
      mload(0x40)
      shl(0xe0, 0x6e553f65)
      dup2
      mstore
      sub(shl(0x60, 0x01), 0x01)
      0x04
      dup3
      add
        /* "#utility.yul":36486:36544   */
      mstore
        /* "test/solidity/Protocol.t.sol":39269:39279  msg.sender */
      caller
        /* "#utility.yul":36560:36578   */
      0x24
      dup3
      add
        /* "#utility.yul":36553:36613   */
      mstore
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":39231:39250  otherMarket.deposit */
      dup6
      and
      swap1
      0x6e553f65
      swap1
        /* "#utility.yul":36459:36477   */
      0x44
      add
        /* "test/solidity/Protocol.t.sol":39231:39280  otherMarket.deposit(type(uint96).max, msg.sender) */
      0x20
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      0x00
      dup8
      gas
      call
      iszero
      dup1
      iszero
      tag_2161
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_2161:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      dup2
      add
      swap1
      tag_2162
      swap2
      swap1
      tag_212
      jump	// in
    tag_2162:
      pop
        /* "test/solidity/Protocol.t.sol":39290:39297  auditor */
      sload(0x1b)
        /* "test/solidity/Protocol.t.sol":39290:39322  auditor.enterMarket(otherMarket) */
      mload(0x40)
      shl(0xe0, 0x3fe5d425)
      dup2
      mstore
      sub(shl(0xa0, 0x01), 0x01)
        /* "#utility.yul":7578:7610   */
      dup7
      dup2
      and
        /* "test/solidity/Protocol.t.sol":39290:39322  auditor.enterMarket(otherMarket) */
      0x04
      dup4
      add
        /* "#utility.yul":7560:7611   */
      mstore
        /* "test/solidity/Protocol.t.sol":39290:39297  auditor */
      swap1
      swap2
      and
      swap1
        /* "test/solidity/Protocol.t.sol":39290:39309  auditor.enterMarket */
      0x3fe5d425
      swap1
        /* "#utility.yul":7533:7551   */
      0x24
      add
        /* "test/solidity/Protocol.t.sol":39290:39322  auditor.enterMarket(otherMarket) */
      0x00
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      0x00
      dup8
      dup1
      extcodesize
      iszero
      dup1
      iszero
      tag_2164
      jumpi
      0x00
      dup1
      revert
    tag_2164:
      pop
      gas
      call
      iszero
      dup1
      iszero
      tag_2166
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_2166:
      pop
      pop
      pop
      pop
        /* "test/solidity/Protocol.t.sol":39332:39357  FixedLib.Pool memory pool */
      tag_2167
      mload(0x40)
      dup1
      0x80
      add
      0x40
      mstore
      dup1
      0x00
      dup2
      mstore
      0x20
      add
      0x00
      dup2
      mstore
      0x20
      add
      0x00
      dup2
      mstore
      0x20
      add
      0x00
      dup2
      mstore
      pop
      swap1
      jump
    tag_2167:
        /* "test/solidity/Protocol.t.sol":39422:39431  _maturity */
      sload(0x25)
        /* "test/solidity/Protocol.t.sol":39404:39432  market.fixedPools(_maturity) */
      mload(0x40)
      shl(0xe0, 0x4e7c5059)
      dup2
      mstore
      0x04
      dup2
      add
        /* "#utility.yul":10439:10464   */
      swap2
      swap1
      swap2
      mstore
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":39404:39421  market.fixedPools */
      dup8
      and
      swap1
      0x4e7c5059
      swap1
        /* "#utility.yul":10412:10430   */
      0x24
      add
        /* "test/solidity/Protocol.t.sol":39404:39432  market.fixedPools(_maturity) */
      0x80
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      dup7
      gas
      staticcall
      iszero
      dup1
      iszero
      tag_2171
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_2171:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      dup2
      add
      swap1
      tag_2172
      swap2
      swap1
      tag_730
      jump	// in
    tag_2172:
      pop
      pop
        /* "test/solidity/Protocol.t.sol":39383:39396  pool.supplied */
      0x20
      dup4
      add
        /* "test/solidity/Protocol.t.sol":39367:39432  (pool.borrowed, pool.supplied, , ) = market.fixedPools(_maturity) */
      dup2
      swap1
      mstore
      dup2
      dup4
      mstore
        /* "test/solidity/Protocol.t.sol":39478:39487  _maturity */
      sload(0x25)
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":39442:39466  market.depositAtMaturity */
      dup10
      and
      swap3
      0x34f7d1f2
      swap3
        /* "test/solidity/Protocol.t.sol":39515:39553  Math.min(pool.borrowed, pool.supplied) */
      tag_2173
      swap2
        /* "test/solidity/Protocol.t.sol":39367:39432  (pool.borrowed, pool.supplied, , ) = market.fixedPools(_maturity) */
      swap1
        /* "test/solidity/Protocol.t.sol":39515:39523  Math.min */
      tag_791
        /* "test/solidity/Protocol.t.sol":39515:39553  Math.min(pool.borrowed, pool.supplied) */
      jump	// in
    tag_2173:
        /* "test/solidity/Protocol.t.sol":39499:39512  pool.borrowed */
      dup5
      mload
        /* "test/solidity/Protocol.t.sol":39499:39553  pool.borrowed - Math.min(pool.borrowed, pool.supplied) */
      tag_2174
      swap2
      swap1
      tag_158
      jump	// in
    tag_2174:
        /* "test/solidity/Protocol.t.sol":39499:39565  pool.borrowed - Math.min(pool.borrowed, pool.supplied) + 1_000_000 */
      tag_2175
      swap1
        /* "test/solidity/Protocol.t.sol":39556:39565  1_000_000 */
      0x0f4240
        /* "test/solidity/Protocol.t.sol":39499:39565  pool.borrowed - Math.min(pool.borrowed, pool.supplied) + 1_000_000 */
      tag_186
      jump	// in
    tag_2175:
        /* "test/solidity/Protocol.t.sol":39442:39610  market.depositAtMaturity(... */
      mload(0x40)
      not(sub(shl(0xe0, 0x01), 0x01))
      0xe0
      dup6
      swap1
      shl
      and
      dup2
      mstore
      0x04
      dup2
      add
        /* "#utility.yul":25594:25619   */
      swap3
      swap1
      swap3
      mstore
        /* "#utility.yul":25635:25653   */
      0x24
      dup3
      add
        /* "#utility.yul":25628:25662   */
      mstore
        /* "test/solidity/Protocol.t.sol":39577:39578  0 */
      0x00
        /* "#utility.yul":25678:25696   */
      0x44
      dup3
      add
        /* "#utility.yul":25671:25705   */
      mstore
        /* "test/solidity/Protocol.t.sol":39590:39600  msg.sender */
      caller
        /* "#utility.yul":25721:25739   */
      0x64
      dup3
      add
        /* "#utility.yul":25714:25774   */
      mstore
        /* "#utility.yul":25566:25585   */
      0x84
      add
        /* "test/solidity/Protocol.t.sol":39442:39610  market.depositAtMaturity(... */
      0x20
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      0x00
      dup8
      gas
      call
      iszero
      dup1
      iszero
      tag_2178
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_2178:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      dup2
      add
      swap1
      tag_2179
      swap2
      swap1
      tag_212
      jump	// in
    tag_2179:
      pop
        /* "test/solidity/Protocol.t.sol":39644:39653  _maturity */
      sload(0x25)
        /* "test/solidity/Protocol.t.sol":39620:39708  market.borrowAtMaturity(_maturity, 1_000_000, type(uint256).max, msg.sender, msg.sender) */
      mload(0x40)
      shl(0xe1, 0x0d2dcf31)
      dup2
      mstore
      0x04
      dup2
      add
        /* "#utility.yul":36897:36922   */
      swap2
      swap1
      swap2
      mstore
        /* "test/solidity/Protocol.t.sol":39655:39664  1_000_000 */
      0x0f4240
        /* "#utility.yul":36938:36956   */
      0x24
      dup3
      add
        /* "#utility.yul":36931:36965   */
      mstore
      not(0x00)
        /* "#utility.yul":36981:36999   */
      0x44
      dup3
      add
        /* "#utility.yul":36974:37008   */
      mstore
        /* "test/solidity/Protocol.t.sol":39685:39695  msg.sender */
      caller
        /* "#utility.yul":37062:37080   */
      0x64
      dup3
      add
        /* "#utility.yul":37055:37098   */
      dup2
      swap1
      mstore
        /* "#utility.yul":37114:37133   */
      0x84
      dup3
      add
        /* "#utility.yul":37107:37151   */
      mstore
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":39620:39643  market.borrowAtMaturity */
      dup8
      and
      swap1
      0x1a5b9e62
      swap1
        /* "#utility.yul":36869:36888   */
      0xa4
      add
        /* "test/solidity/Protocol.t.sol":39620:39708  market.borrowAtMaturity(_maturity, 1_000_000, type(uint256).max, msg.sender, msg.sender) */
      0x20
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      0x00
      dup8
      gas
      call
      iszero
      dup1
      iszero
      tag_2183
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_2183:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      dup2
      add
      swap1
      tag_2184
      swap2
      swap1
      tag_212
      jump	// in
    tag_2184:
      pop
      0x00
      dup1
      mload
      0x20
      data_1a390d6c2ee89e11d2dffeb86f753e43f966d02cbb0b3bd3e6e1cdf50245ef50
      dup4
      codecopy
      dup2
      mload
      swap2
      mstore
        /* "test/solidity/Protocol.t.sol":39718:39725  vm.warp */
      0xe5d6bf02
        /* "test/solidity/Protocol.t.sol":39726:39750  block.timestamp + 1 days */
      tag_2185
        /* "test/solidity/Protocol.t.sol":39726:39741  block.timestamp */
      timestamp
        /* "test/solidity/Protocol.t.sol":39744:39750  1 days */
      0x015180
        /* "test/solidity/Protocol.t.sol":39726:39750  block.timestamp + 1 days */
      tag_186
      jump	// in
    tag_2185:
        /* "test/solidity/Protocol.t.sol":39718:39751  vm.warp(block.timestamp + 1 days) */
      mload(0x40)
      dup3
      0xffffffff
      and
      0xe0
      shl
      dup2
      mstore
      0x04
      add
      tag_2186
      swap2
        /* "#utility.yul":10439:10464   */
      dup2
      mstore
        /* "#utility.yul":10427:10429   */
      0x20
        /* "#utility.yul":10412:10430   */
      add
      swap1
        /* "#utility.yul":10284:10470   */
      jump
        /* "test/solidity/Protocol.t.sol":39718:39751  vm.warp(block.timestamp + 1 days) */
    tag_2186:
      0x00
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      0x00
      dup8
      dup1
      extcodesize
      iszero
      dup1
      iszero
      tag_2187
      jumpi
      0x00
      dup1
      revert
    tag_2187:
      pop
      gas
      call
      iszero
      dup1
      iszero
      tag_2189
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_2189:
      pop
      pop
      pop
      pop
        /* "test/solidity/Protocol.t.sol":39761:39780  changePrank(sender) */
      tag_2190
        /* "test/solidity/Protocol.t.sol":39773:39779  sender */
      dup3
        /* "test/solidity/Protocol.t.sol":39761:39772  changePrank */
      tag_549
        /* "test/solidity/Protocol.t.sol":39761:39780  changePrank(sender) */
      jump	// in
    tag_2190:
        /* "test/solidity/Protocol.t.sol":38719:39789  {... */
      pop
      pop
      pop
      pop
      pop
        /* "test/solidity/Protocol.t.sol":38660:39789  if (market.totalSupply() > 0 && market.totalAssets() == 0) {... */
    tag_2126:
      pop
        /* "test/solidity/Protocol.t.sol":38534:38537  ++i */
      tag_2191
      dup2
      tag_293
      jump	// in
    tag_2191:
      swap1
      pop
        /* "test/solidity/Protocol.t.sol":38494:39795  for (uint256 i = 0; i < markets.length; ++i) {... */
      jump(tag_2113)
        /* "lib/forge-std/src/StdInvariant.sol":1866:2007  function excludeArtifacts() public view returns (string[] memory excludedArtifacts_) {... */
    tag_116:
        /* "lib/forge-std/src/StdInvariant.sol":1915:1949  string[] memory excludedArtifacts_ */
      0x60
        /* "lib/forge-std/src/StdInvariant.sol":1982:2000  _excludedArtifacts */
      0x10
        /* "lib/forge-std/src/StdInvariant.sol":1961:2000  excludedArtifacts_ = _excludedArtifacts */
      dup1
      sload
      dup1
      0x20
      mul
      0x20
      add
      mload(0x40)
      swap1
      dup2
      add
      0x40
      mstore
      dup1
      swap3
      swap2
      swap1
      dup2
      dup2
      mstore
      0x20
      add
      0x00
      swap1
    tag_2196:
      dup3
      dup3
      lt
      iszero
      tag_1506
      jumpi
      dup4
      dup3
      swap1
      0x00
      mstore
      keccak256(0x00, 0x20)
      add
      dup1
      sload
      tag_2199
      swap1
      tag_1711
      jump	// in
    tag_2199:
      dup1
      0x1f
      add
      0x20
      dup1
      swap2
      div
      mul
      0x20
      add
      mload(0x40)
      swap1
      dup2
      add
      0x40
      mstore
      dup1
      swap3
      swap2
      swap1
      dup2
      dup2
      mstore
      0x20
      add
      dup3
      dup1
      sload
      tag_2200
      swap1
      tag_1711
      jump	// in
    tag_2200:
      dup1
      iszero
      tag_2201
      jumpi
      dup1
      0x1f
      lt
      tag_2202
      jumpi
      0x0100
      dup1
      dup4
      sload
      div
      mul
      dup4
      mstore
      swap2
      0x20
      add
      swap2
      jump(tag_2201)
    tag_2202:
      dup3
      add
      swap2
      swap1
      0x00
      mstore
      keccak256(0x00, 0x20)
      swap1
    tag_2203:
      dup2
      sload
      dup2
      mstore
      swap1
      0x01
      add
      swap1
      0x20
      add
      dup1
      dup4
      gt
      tag_2203
      jumpi
      dup3
      swap1
      sub
      0x1f
      and
      dup3
      add
      swap2
    tag_2201:
      pop
      pop
      pop
      pop
      pop
      dup2
      mstore
      0x20
      add
      swap1
      0x01
      add
      swap1
      jump(tag_2196)
        /* "test/solidity/Protocol.t.sol":27395:27633  function setPrice(uint56 price, bytes32 seed) external context(seed) {... */
    tag_120:
        /* "test/solidity/Protocol.t.sol":31278:31285  _market */
      sload(0x23)
        /* "test/solidity/Protocol.t.sol":27458:27462  seed */
      dup2
      swap1
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":31278:31285  _market */
      and
        /* "test/solidity/Protocol.t.sol":31270:31300  address(_market) == address(0) */
      iszero
        /* "test/solidity/Protocol.t.sol":31263:31301  assert(address(_market) == address(0)) */
      tag_2206
      jumpi
      tag_2206
      tag_153
      jump	// in
    tag_2206:
        /* "test/solidity/Protocol.t.sol":31317:31324  markets */
      0x1c
        /* "test/solidity/Protocol.t.sol":31325:31402  _bound(uint256(keccak256(abi.encode(seed, "market"))), 0, markets.length - 1) */
      tag_2207
        /* "test/solidity/Protocol.t.sol":31361:31365  seed */
      dup3
        /* "test/solidity/Protocol.t.sol":31350:31376  abi.encode(seed, "market") */
      add(0x20, mload(0x40))
      tag_155
      swap2
      swap1
      tag_156
      jump	// in
        /* "test/solidity/Protocol.t.sol":31325:31402  _bound(uint256(keccak256(abi.encode(seed, "market"))), 0, markets.length - 1) */
    tag_2207:
        /* "test/solidity/Protocol.t.sol":31317:31403  markets[_bound(uint256(keccak256(abi.encode(seed, "market"))), 0, markets.length - 1)] */
      dup2
      sload
      dup2
      lt
      tag_2211
      jumpi
      tag_2211
      tag_162
      jump	// in
    tag_2211:
      0x00
      swap2
      dup3
      mstore
      0x20
      swap2
      dup3
      swap1
      keccak256
      add
      sload
        /* "test/solidity/Protocol.t.sol":31307:31314  _market */
      0x23
        /* "test/solidity/Protocol.t.sol":31307:31403  _market = markets[_bound(uint256(keccak256(abi.encode(seed, "market"))), 0, markets.length - 1)] */
      dup1
      sload
      not(sub(shl(0xa0, 0x01), 0x01))
      and
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":31317:31403  markets[_bound(uint256(keccak256(abi.encode(seed, "market"))), 0, markets.length - 1)] */
      swap1
      swap3
      and
        /* "test/solidity/Protocol.t.sol":31307:31403  _market = markets[_bound(uint256(keccak256(abi.encode(seed, "market"))), 0, markets.length - 1)] */
      swap2
      dup3
      or
      swap1
      sstore
        /* "test/solidity/Protocol.t.sol":31436:31451  _market.asset() */
      0x40
      dup1
      mload
      shl(0xe0, 0x38d52e0f)
      dup2
      mstore
      swap1
      mload
        /* "test/solidity/Protocol.t.sol":31317:31403  markets[_bound(uint256(keccak256(abi.encode(seed, "market"))), 0, markets.length - 1)] */
      swap2
      swap3
        /* "test/solidity/Protocol.t.sol":31436:31449  _market.asset */
      0x38d52e0f
      swap3
        /* "test/solidity/Protocol.t.sol":31436:31451  _market.asset() */
      0x04
      dup1
      dup5
      add
      swap4
      dup3
      swap1
      sub
      add
      dup2
        /* "test/solidity/Protocol.t.sol":31317:31403  markets[_bound(uint256(keccak256(abi.encode(seed, "market"))), 0, markets.length - 1)] */
      dup7
        /* "test/solidity/Protocol.t.sol":31436:31451  _market.asset() */
      gas
      staticcall
      iszero
      dup1
      iszero
      tag_2214
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_2214:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      dup2
      add
      swap1
      tag_2215
      swap2
      swap1
      tag_167
      jump	// in
    tag_2215:
        /* "test/solidity/Protocol.t.sol":31409:31415  _asset */
      0x24
      0x00
        /* "test/solidity/Protocol.t.sol":31409:31453  _asset = MockERC20(address(_market.asset())) */
      0x0100
      exp
      dup2
      sload
      dup2
      sub(shl(0xa0, 0x01), 0x01)
      mul
      not
      and
      swap1
      dup4
      sub(shl(0xa0, 0x01), 0x01)
      and
      mul
      or
      swap1
      sstore
      pop
        /* "test/solidity/Protocol.t.sol":31475:31483  accounts */
      0x1d
        /* "test/solidity/Protocol.t.sol":31484:31568  _bound(uint256(keccak256(abi.encode(seed, "counterparty"))), 0, accounts.length - 1) */
      tag_2216
        /* "test/solidity/Protocol.t.sol":31520:31524  seed */
      dup3
        /* "test/solidity/Protocol.t.sol":31509:31541  abi.encode(seed, "counterparty") */
      add(0x20, mload(0x40))
      tag_169
      swap2
      swap1
      tag_170
      jump	// in
        /* "test/solidity/Protocol.t.sol":31484:31568  _bound(uint256(keccak256(abi.encode(seed, "counterparty"))), 0, accounts.length - 1) */
    tag_2216:
        /* "test/solidity/Protocol.t.sol":31475:31569  accounts[_bound(uint256(keccak256(abi.encode(seed, "counterparty"))), 0, accounts.length - 1)] */
      dup2
      sload
      dup2
      lt
      tag_2220
      jumpi
      tag_2220
      tag_162
      jump	// in
    tag_2220:
      0x00
      swap2
      dup3
      mstore
      0x20
      swap2
      dup3
      swap1
      keccak256
      add
      sload
        /* "test/solidity/Protocol.t.sol":31459:31472  _counterparty */
      0x26
        /* "test/solidity/Protocol.t.sol":31459:31569  _counterparty = accounts[_bound(uint256(keccak256(abi.encode(seed, "counterparty"))), 0, accounts.length - 1)] */
      dup1
      sload
      not(sub(shl(0xa0, 0x01), 0x01))
      and
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":31475:31569  accounts[_bound(uint256(keccak256(abi.encode(seed, "counterparty"))), 0, accounts.length - 1)] */
      swap1
      swap3
      and
        /* "test/solidity/Protocol.t.sol":31459:31569  _counterparty = accounts[_bound(uint256(keccak256(abi.encode(seed, "counterparty"))), 0, accounts.length - 1)] */
      swap2
      swap1
      swap2
      or
      swap1
      sstore
        /* "test/solidity/Protocol.t.sol":31628:31658  abi.encode(seed, "collateral") */
      mload(0x40)
        /* "test/solidity/Protocol.t.sol":31595:31602  markets */
      0x1c
      swap2
        /* "test/solidity/Protocol.t.sol":31603:31684  _bound(uint256(keccak256(abi.encode(seed, "collateral"))), 0, markets.length - 1) */
      tag_2222
      swap2
        /* "test/solidity/Protocol.t.sol":31628:31658  abi.encode(seed, "collateral") */
      tag_155
      swap2
        /* "test/solidity/Protocol.t.sol":31639:31643  seed */
      dup6
      swap2
        /* "test/solidity/Protocol.t.sol":31628:31658  abi.encode(seed, "collateral") */
      add
      tag_177
      jump	// in
        /* "test/solidity/Protocol.t.sol":31603:31684  _bound(uint256(keccak256(abi.encode(seed, "collateral"))), 0, markets.length - 1) */
    tag_2222:
        /* "test/solidity/Protocol.t.sol":31595:31685  markets[_bound(uint256(keccak256(abi.encode(seed, "collateral"))), 0, markets.length - 1)] */
      dup2
      sload
      dup2
      lt
      tag_2226
      jumpi
      tag_2226
      tag_162
      jump	// in
    tag_2226:
      0x00
      swap2
      dup3
      mstore
      0x20
      swap1
      swap2
      keccak256
      add
      sload
        /* "test/solidity/Protocol.t.sol":31575:31592  _collateralMarket */
      0x27
        /* "test/solidity/Protocol.t.sol":31575:31685  _collateralMarket = markets[_bound(uint256(keccak256(abi.encode(seed, "collateral"))), 0, markets.length - 1)] */
      dup1
      sload
      not(sub(shl(0xa0, 0x01), 0x01))
      and
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":31595:31685  markets[_bound(uint256(keccak256(abi.encode(seed, "collateral"))), 0, markets.length - 1)] */
      swap1
      swap3
      and
        /* "test/solidity/Protocol.t.sol":31575:31685  _collateralMarket = markets[_bound(uint256(keccak256(abi.encode(seed, "collateral"))), 0, markets.length - 1)] */
      swap2
      swap1
      swap2
      or
      swap1
      sstore
        /* "contracts/utils/FixedLib.sol":306:313  4 weeks */
      0x24ea00
        /* "test/solidity/Protocol.t.sol":31722:31757  block.timestamp % FixedLib.INTERVAL */
      tag_2228
        /* "contracts/utils/FixedLib.sol":306:313  4 weeks */
      dup2
        /* "test/solidity/Protocol.t.sol":31722:31737  block.timestamp */
      timestamp
        /* "test/solidity/Protocol.t.sol":31722:31757  block.timestamp % FixedLib.INTERVAL */
      tag_183
      jump	// in
    tag_2228:
        /* "test/solidity/Protocol.t.sol":31703:31758  block.timestamp - (block.timestamp % FixedLib.INTERVAL) */
      tag_2229
      swap1
        /* "test/solidity/Protocol.t.sol":31703:31718  block.timestamp */
      timestamp
        /* "test/solidity/Protocol.t.sol":31703:31758  block.timestamp - (block.timestamp % FixedLib.INTERVAL) */
      tag_158
      jump	// in
    tag_2229:
        /* "test/solidity/Protocol.t.sol":31703:31778  block.timestamp - (block.timestamp % FixedLib.INTERVAL) + FixedLib.INTERVAL */
      tag_2230
      swap2
      swap1
      tag_186
      jump	// in
    tag_2230:
        /* "test/solidity/Protocol.t.sol":31691:31700  _maturity */
      0x25
        /* "test/solidity/Protocol.t.sol":31691:31778  _maturity = block.timestamp - (block.timestamp % FixedLib.INTERVAL) + FixedLib.INTERVAL */
      sstore
        /* "test/solidity/Protocol.t.sol":31784:31809  vm.startPrank(msg.sender) */
      mload(0x40)
      shl(0xe1, 0x03223eab)
      dup2
      mstore
        /* "test/solidity/Protocol.t.sol":31798:31808  msg.sender */
      caller
        /* "test/solidity/Protocol.t.sol":31784:31809  vm.startPrank(msg.sender) */
      0x04
      dup3
      add
        /* "#utility.yul":7560:7611   */
      mstore
      0x00
      dup1
      mload
      0x20
      data_1a390d6c2ee89e11d2dffeb86f753e43f966d02cbb0b3bd3e6e1cdf50245ef50
      dup4
      codecopy
      dup2
      mload
      swap2
      mstore
        /* "test/solidity/Protocol.t.sol":31784:31797  vm.startPrank */
      swap1
      0x06447d56
      swap1
        /* "#utility.yul":7533:7551   */
      0x24
      add
        /* "test/solidity/Protocol.t.sol":31784:31809  vm.startPrank(msg.sender) */
      0x00
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      0x00
      dup8
      dup1
      extcodesize
      iszero
      dup1
      iszero
      tag_2232
      jumpi
      0x00
      dup1
      revert
    tag_2232:
      pop
      gas
      call
      iszero
      dup1
      iszero
      tag_2234
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_2234:
      pop
      pop
        /* "test/solidity/Protocol.t.sol":27503:27510  auditor */
      sload(0x1b)
        /* "test/solidity/Protocol.t.sol":27519:27526  _market */
      sload(0x23)
        /* "test/solidity/Protocol.t.sol":27503:27527  auditor.markets(_market) */
      mload(0x40)
      shl(0xe0, 0x8e8f294b)
      dup2
      mstore
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":27519:27526  _market */
      swap2
      dup3
      and
        /* "test/solidity/Protocol.t.sol":27503:27527  auditor.markets(_market) */
      0x04
      dup3
      add
        /* "#utility.yul":7560:7611   */
      mstore
        /* "test/solidity/Protocol.t.sol":27479:27499  IPriceFeed priceFeed */
      0x00
      swap5
      pop
        /* "test/solidity/Protocol.t.sol":27503:27510  auditor */
      swap2
      and
      swap2
      pop
        /* "test/solidity/Protocol.t.sol":27503:27518  auditor.markets */
      0x8e8f294b
      swap1
        /* "#utility.yul":7533:7551   */
      0x24
      add
        /* "test/solidity/Protocol.t.sol":27503:27527  auditor.markets(_market) */
      0xa0
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      dup7
      gas
      staticcall
      iszero
      dup1
      iszero
      tag_2238
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_2238:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      dup2
      add
      swap1
      tag_2239
      swap2
      swap1
      tag_198
      jump	// in
    tag_2239:
        /* "test/solidity/Protocol.t.sol":27470:27527  (, , , , IPriceFeed priceFeed) = auditor.markets(_market) */
      swap5
      pop
      pop
      pop
      pop
      pop
        /* "test/solidity/Protocol.t.sol":27555:27564  priceFeed */
      dup1
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":27533:27575  MockPriceFeed(address(priceFeed)).setPrice */
      and
      0xf7a30806
        /* "test/solidity/Protocol.t.sol":27591:27625  _bound(price, 1, type(uint56).max) */
      tag_2240
        /* "test/solidity/Protocol.t.sol":27598:27603  price */
      dup7
        /* "test/solidity/Protocol.t.sol":27591:27625  _bound(price, 1, type(uint56).max) */
      0xffffffffffffff
      and
        /* "test/solidity/Protocol.t.sol":27605:27606  1 */
      0x01
        /* "test/solidity/Protocol.t.sol":27608:27624  type(uint56).max */
      0xffffffffffffff
        /* "test/solidity/Protocol.t.sol":27591:27625  _bound(price, 1, type(uint56).max) */
      dup1
      and
        /* "test/solidity/Protocol.t.sol":27591:27597  _bound */
      tag_159
        /* "test/solidity/Protocol.t.sol":27591:27625  _bound(price, 1, type(uint56).max) */
      jump	// in
    tag_2240:
        /* "test/solidity/Protocol.t.sol":27533:27628  MockPriceFeed(address(priceFeed)).setPrice(int256(uint256(_bound(price, 1, type(uint56).max)))) */
      mload(0x40)
      dup3
      0xffffffff
      and
      0xe0
      shl
      dup2
      mstore
      0x04
      add
      tag_2241
      swap2
        /* "#utility.yul":10439:10464   */
      dup2
      mstore
        /* "#utility.yul":10427:10429   */
      0x20
        /* "#utility.yul":10412:10430   */
      add
      swap1
        /* "#utility.yul":10284:10470   */
      jump
        /* "test/solidity/Protocol.t.sol":27533:27628  MockPriceFeed(address(priceFeed)).setPrice(int256(uint256(_bound(price, 1, type(uint56).max)))) */
    tag_2241:
      0x00
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      0x00
      dup8
      dup1
      extcodesize
      iszero
      dup1
      iszero
      tag_2243
      jumpi
      0x00
      dup1
      revert
    tag_2243:
      pop
      gas
      call
      iszero
      dup1
      iszero
      tag_2245
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_2245:
      pop
      pop
      pop
      pop
        /* "test/solidity/Protocol.t.sol":27464:27633  {... */
      pop
      0x00
      dup1
      mload
      0x20
      data_b627c71dec38ae7fa273aa3bb9b6210fd4a76d47f44ae646db16da401b96db40
      dup4
      codecopy
      dup2
      mload
      swap2
      mstore
        /* "lib/forge-std/src/Base.sol":309:346  uint256(keccak256("hevm cheat code")) */
      0x00
      shr
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":31822:31834  vm.stopPrank */
      and
      0x90c5013b
        /* "test/solidity/Protocol.t.sol":31822:31836  vm.stopPrank() */
      mload(0x40)
      dup2
      0xffffffff
      and
      0xe0
      shl
      dup2
      mstore
      0x04
      add
      0x00
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      0x00
      dup8
      dup1
      extcodesize
      iszero
      dup1
      iszero
      tag_512
      jumpi
      0x00
      dup1
      revert
        /* "lib/forge-std/lib/ds-test/src/test.sol":1819:2403  function failed() public returns (bool) {... */
    tag_122:
        /* "lib/forge-std/lib/ds-test/src/test.sol":1853:1857  bool */
      0x00
        /* "lib/forge-std/lib/ds-test/src/test.sol":1873:1880  _failed */
      dup1
      sload
      0x0100
      swap1
      div
      0xff
      and
        /* "lib/forge-std/lib/ds-test/src/test.sol":1869:2397  if (_failed) {... */
      iszero
      tag_2250
      jumpi
      pop
        /* "lib/forge-std/lib/ds-test/src/test.sol":1903:1910  _failed */
      sload(0x00)
      0x0100
      swap1
      div
      0xff
      and
      swap1
        /* "lib/forge-std/lib/ds-test/src/test.sol":1819:2403  function failed() public returns (bool) {... */
      jump	// out
        /* "lib/forge-std/lib/ds-test/src/test.sol":1869:2397  if (_failed) {... */
    tag_2250:
        /* "lib/forge-std/lib/ds-test/src/test.sol":1941:1958  bool globalFailed */
      0x00
      0x00
      dup1
      mload
      0x20
      data_1a390d6c2ee89e11d2dffeb86f753e43f966d02cbb0b3bd3e6e1cdf50245ef50
      dup4
      codecopy
      dup2
      mload
      swap2
      mstore
        /* "lib/forge-std/lib/ds-test/src/test.sol":2985:3040  extcodesize(0x7109709ECfa91a80626fF3989D68f67F5b1DD12D) */
      extcodesize
        /* "lib/forge-std/lib/ds-test/src/test.sol":3066:3082  hevmCodeSize > 0 */
      iszero
        /* "lib/forge-std/lib/ds-test/src/test.sol":1980:2354  if (hasHEVMContext()) {... */
      tag_2254
      jumpi
        /* "lib/forge-std/lib/ds-test/src/test.sol":2196:2239  abi.encode(HEVM_ADDRESS, bytes32("failed")) */
      mload(0x40)
        /* "lib/forge-std/lib/ds-test/src/test.sol":2023:2043  bytes memory retdata */
      0x00
      swap1
      0x00
      dup1
      mload
      0x20
      data_1a390d6c2ee89e11d2dffeb86f753e43f966d02cbb0b3bd3e6e1cdf50245ef50
      dup4
      codecopy
      dup2
      mload
      swap2
      mstore
        /* "lib/forge-std/lib/ds-test/src/test.sol":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */
      swap1
        /* "lib/forge-std/lib/ds-test/src/test.sol":2135:2169  keccak256("load(address,bytes32)") */
      0x667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc4
      swap1
        /* "lib/forge-std/lib/ds-test/src/test.sol":2196:2239  abi.encode(HEVM_ADDRESS, bytes32("failed")) */
      tag_2255
      swap1
        /* "lib/forge-std/lib/ds-test/src/test.sol":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */
      dup4
      swap1
      shl(0xd2, 0x19985a5b1959)
        /* "lib/forge-std/lib/ds-test/src/test.sol":2221:2238  bytes32("failed") */
      swap1
        /* "lib/forge-std/lib/ds-test/src/test.sol":2196:2239  abi.encode(HEVM_ADDRESS, bytes32("failed")) */
      0x20
      add
      tag_345
      jump	// in
    tag_2255:
      0x40
      dup1
      mload
      not(0x1f)
      dup2
      dup5
      sub
      add
      dup2
      mstore
      swap1
      dup3
      swap1
      mstore
        /* "lib/forge-std/lib/ds-test/src/test.sol":2086:2261  abi.encodePacked(... */
      tag_2257
      swap3
      swap2
        /* "lib/forge-std/lib/ds-test/src/test.sol":2196:2239  abi.encode(HEVM_ADDRESS, bytes32("failed")) */
      0x20
        /* "lib/forge-std/lib/ds-test/src/test.sol":2086:2261  abi.encodePacked(... */
      add
      tag_2258
      jump	// in
    tag_2257:
      0x40
      dup1
      mload
      not(0x1f)
      dup2
      dup5
      sub
      add
      dup2
      mstore
      swap1
      dup3
      swap1
      mstore
        /* "lib/forge-std/lib/ds-test/src/test.sol":2047:2279  HEVM_ADDRESS.call(... */
      tag_2259
      swap2
      tag_2260
      jump	// in
    tag_2259:
      0x00
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      0x00
      dup7
      gas
      call
      swap2
      pop
      pop
      returndatasize
      dup1
      0x00
      dup2
      eq
      tag_2263
      jumpi
      mload(0x40)
      swap2
      pop
      and(add(returndatasize, 0x3f), not(0x1f))
      dup3
      add
      0x40
      mstore
      returndatasize
      dup3
      mstore
      returndatasize
      0x00
      0x20
      dup5
      add
      returndatacopy
      jump(tag_2262)
    tag_2263:
      0x60
      swap2
      pop
    tag_2262:
      pop
        /* "lib/forge-std/lib/ds-test/src/test.sol":2020:2279  (, bytes memory retdata) = HEVM_ADDRESS.call(... */
      swap2
      pop
      pop
        /* "lib/forge-std/lib/ds-test/src/test.sol":2323:2330  retdata */
      dup1
        /* "lib/forge-std/lib/ds-test/src/test.sol":2312:2339  abi.decode(retdata, (bool)) */
      dup1
      0x20
      add
      swap1
      mload
      dup2
      add
      swap1
      tag_2264
      swap2
      swap1
      tag_349
      jump	// in
    tag_2264:
        /* "lib/forge-std/lib/ds-test/src/test.sol":2297:2339  globalFailed = abi.decode(retdata, (bool)) */
      swap2
      pop
        /* "lib/forge-std/lib/ds-test/src/test.sol":2002:2354  {... */
      pop
        /* "lib/forge-std/lib/ds-test/src/test.sol":1980:2354  if (hasHEVMContext()) {... */
    tag_2254:
        /* "lib/forge-std/lib/ds-test/src/test.sol":2374:2386  globalFailed */
      swap2
        /* "lib/forge-std/lib/ds-test/src/test.sol":1819:2403  function failed() public returns (bool) {... */
      swap1
      pop
      jump	// out
        /* "test/solidity/Protocol.t.sol":14771:15982  function repayAtMaturity(uint56 assets, bytes32 seed) external context(seed) {... */
    tag_127:
        /* "test/solidity/Protocol.t.sol":31278:31285  _market */
      sload(0x23)
        /* "test/solidity/Protocol.t.sol":14842:14846  seed */
      dup2
      swap1
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":31278:31285  _market */
      and
        /* "test/solidity/Protocol.t.sol":31270:31300  address(_market) == address(0) */
      iszero
        /* "test/solidity/Protocol.t.sol":31263:31301  assert(address(_market) == address(0)) */
      tag_2267
      jumpi
      tag_2267
      tag_153
      jump	// in
    tag_2267:
        /* "test/solidity/Protocol.t.sol":31317:31324  markets */
      0x1c
        /* "test/solidity/Protocol.t.sol":31325:31402  _bound(uint256(keccak256(abi.encode(seed, "market"))), 0, markets.length - 1) */
      tag_2268
        /* "test/solidity/Protocol.t.sol":31361:31365  seed */
      dup3
        /* "test/solidity/Protocol.t.sol":31350:31376  abi.encode(seed, "market") */
      add(0x20, mload(0x40))
      tag_155
      swap2
      swap1
      tag_156
      jump	// in
        /* "test/solidity/Protocol.t.sol":31325:31402  _bound(uint256(keccak256(abi.encode(seed, "market"))), 0, markets.length - 1) */
    tag_2268:
        /* "test/solidity/Protocol.t.sol":31317:31403  markets[_bound(uint256(keccak256(abi.encode(seed, "market"))), 0, markets.length - 1)] */
      dup2
      sload
      dup2
      lt
      tag_2272
      jumpi
      tag_2272
      tag_162
      jump	// in
    tag_2272:
      0x00
      swap2
      dup3
      mstore
      0x20
      swap2
      dup3
      swap1
      keccak256
      add
      sload
        /* "test/solidity/Protocol.t.sol":31307:31314  _market */
      0x23
        /* "test/solidity/Protocol.t.sol":31307:31403  _market = markets[_bound(uint256(keccak256(abi.encode(seed, "market"))), 0, markets.length - 1)] */
      dup1
      sload
      not(sub(shl(0xa0, 0x01), 0x01))
      and
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":31317:31403  markets[_bound(uint256(keccak256(abi.encode(seed, "market"))), 0, markets.length - 1)] */
      swap1
      swap3
      and
        /* "test/solidity/Protocol.t.sol":31307:31403  _market = markets[_bound(uint256(keccak256(abi.encode(seed, "market"))), 0, markets.length - 1)] */
      swap2
      dup3
      or
      swap1
      sstore
        /* "test/solidity/Protocol.t.sol":31436:31451  _market.asset() */
      0x40
      dup1
      mload
      shl(0xe0, 0x38d52e0f)
      dup2
      mstore
      swap1
      mload
        /* "test/solidity/Protocol.t.sol":31317:31403  markets[_bound(uint256(keccak256(abi.encode(seed, "market"))), 0, markets.length - 1)] */
      swap2
      swap3
        /* "test/solidity/Protocol.t.sol":31436:31449  _market.asset */
      0x38d52e0f
      swap3
        /* "test/solidity/Protocol.t.sol":31436:31451  _market.asset() */
      0x04
      dup1
      dup5
      add
      swap4
      dup3
      swap1
      sub
      add
      dup2
        /* "test/solidity/Protocol.t.sol":31317:31403  markets[_bound(uint256(keccak256(abi.encode(seed, "market"))), 0, markets.length - 1)] */
      dup7
        /* "test/solidity/Protocol.t.sol":31436:31451  _market.asset() */
      gas
      staticcall
      iszero
      dup1
      iszero
      tag_2275
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_2275:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      dup2
      add
      swap1
      tag_2276
      swap2
      swap1
      tag_167
      jump	// in
    tag_2276:
        /* "test/solidity/Protocol.t.sol":31409:31415  _asset */
      0x24
      0x00
        /* "test/solidity/Protocol.t.sol":31409:31453  _asset = MockERC20(address(_market.asset())) */
      0x0100
      exp
      dup2
      sload
      dup2
      sub(shl(0xa0, 0x01), 0x01)
      mul
      not
      and
      swap1
      dup4
      sub(shl(0xa0, 0x01), 0x01)
      and
      mul
      or
      swap1
      sstore
      pop
        /* "test/solidity/Protocol.t.sol":31475:31483  accounts */
      0x1d
        /* "test/solidity/Protocol.t.sol":31484:31568  _bound(uint256(keccak256(abi.encode(seed, "counterparty"))), 0, accounts.length - 1) */
      tag_2277
        /* "test/solidity/Protocol.t.sol":31520:31524  seed */
      dup3
        /* "test/solidity/Protocol.t.sol":31509:31541  abi.encode(seed, "counterparty") */
      add(0x20, mload(0x40))
      tag_169
      swap2
      swap1
      tag_170
      jump	// in
        /* "test/solidity/Protocol.t.sol":31484:31568  _bound(uint256(keccak256(abi.encode(seed, "counterparty"))), 0, accounts.length - 1) */
    tag_2277:
        /* "test/solidity/Protocol.t.sol":31475:31569  accounts[_bound(uint256(keccak256(abi.encode(seed, "counterparty"))), 0, accounts.length - 1)] */
      dup2
      sload
      dup2
      lt
      tag_2281
      jumpi
      tag_2281
      tag_162
      jump	// in
    tag_2281:
      0x00
      swap2
      dup3
      mstore
      0x20
      swap2
      dup3
      swap1
      keccak256
      add
      sload
        /* "test/solidity/Protocol.t.sol":31459:31472  _counterparty */
      0x26
        /* "test/solidity/Protocol.t.sol":31459:31569  _counterparty = accounts[_bound(uint256(keccak256(abi.encode(seed, "counterparty"))), 0, accounts.length - 1)] */
      dup1
      sload
      not(sub(shl(0xa0, 0x01), 0x01))
      and
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":31475:31569  accounts[_bound(uint256(keccak256(abi.encode(seed, "counterparty"))), 0, accounts.length - 1)] */
      swap1
      swap3
      and
        /* "test/solidity/Protocol.t.sol":31459:31569  _counterparty = accounts[_bound(uint256(keccak256(abi.encode(seed, "counterparty"))), 0, accounts.length - 1)] */
      swap2
      swap1
      swap2
      or
      swap1
      sstore
        /* "test/solidity/Protocol.t.sol":31628:31658  abi.encode(seed, "collateral") */
      mload(0x40)
        /* "test/solidity/Protocol.t.sol":31595:31602  markets */
      0x1c
      swap2
        /* "test/solidity/Protocol.t.sol":31603:31684  _bound(uint256(keccak256(abi.encode(seed, "collateral"))), 0, markets.length - 1) */
      tag_2283
      swap2
        /* "test/solidity/Protocol.t.sol":31628:31658  abi.encode(seed, "collateral") */
      tag_155
      swap2
        /* "test/solidity/Protocol.t.sol":31639:31643  seed */
      dup6
      swap2
        /* "test/solidity/Protocol.t.sol":31628:31658  abi.encode(seed, "collateral") */
      add
      tag_177
      jump	// in
        /* "test/solidity/Protocol.t.sol":31603:31684  _bound(uint256(keccak256(abi.encode(seed, "collateral"))), 0, markets.length - 1) */
    tag_2283:
        /* "test/solidity/Protocol.t.sol":31595:31685  markets[_bound(uint256(keccak256(abi.encode(seed, "collateral"))), 0, markets.length - 1)] */
      dup2
      sload
      dup2
      lt
      tag_2287
      jumpi
      tag_2287
      tag_162
      jump	// in
    tag_2287:
      0x00
      swap2
      dup3
      mstore
      0x20
      swap1
      swap2
      keccak256
      add
      sload
        /* "test/solidity/Protocol.t.sol":31575:31592  _collateralMarket */
      0x27
        /* "test/solidity/Protocol.t.sol":31575:31685  _collateralMarket = markets[_bound(uint256(keccak256(abi.encode(seed, "collateral"))), 0, markets.length - 1)] */
      dup1
      sload
      not(sub(shl(0xa0, 0x01), 0x01))
      and
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":31595:31685  markets[_bound(uint256(keccak256(abi.encode(seed, "collateral"))), 0, markets.length - 1)] */
      swap1
      swap3
      and
        /* "test/solidity/Protocol.t.sol":31575:31685  _collateralMarket = markets[_bound(uint256(keccak256(abi.encode(seed, "collateral"))), 0, markets.length - 1)] */
      swap2
      swap1
      swap2
      or
      swap1
      sstore
        /* "contracts/utils/FixedLib.sol":306:313  4 weeks */
      0x24ea00
        /* "test/solidity/Protocol.t.sol":31722:31757  block.timestamp % FixedLib.INTERVAL */
      tag_2289
        /* "contracts/utils/FixedLib.sol":306:313  4 weeks */
      dup2
        /* "test/solidity/Protocol.t.sol":31722:31737  block.timestamp */
      timestamp
        /* "test/solidity/Protocol.t.sol":31722:31757  block.timestamp % FixedLib.INTERVAL */
      tag_183
      jump	// in
    tag_2289:
        /* "test/solidity/Protocol.t.sol":31703:31758  block.timestamp - (block.timestamp % FixedLib.INTERVAL) */
      tag_2290
      swap1
        /* "test/solidity/Protocol.t.sol":31703:31718  block.timestamp */
      timestamp
        /* "test/solidity/Protocol.t.sol":31703:31758  block.timestamp - (block.timestamp % FixedLib.INTERVAL) */
      tag_158
      jump	// in
    tag_2290:
        /* "test/solidity/Protocol.t.sol":31703:31778  block.timestamp - (block.timestamp % FixedLib.INTERVAL) + FixedLib.INTERVAL */
      tag_2291
      swap2
      swap1
      tag_186
      jump	// in
    tag_2291:
        /* "test/solidity/Protocol.t.sol":31691:31700  _maturity */
      0x25
        /* "test/solidity/Protocol.t.sol":31691:31778  _maturity = block.timestamp - (block.timestamp % FixedLib.INTERVAL) + FixedLib.INTERVAL */
      sstore
        /* "test/solidity/Protocol.t.sol":31784:31809  vm.startPrank(msg.sender) */
      mload(0x40)
      shl(0xe1, 0x03223eab)
      dup2
      mstore
        /* "test/solidity/Protocol.t.sol":31798:31808  msg.sender */
      caller
        /* "test/solidity/Protocol.t.sol":31784:31809  vm.startPrank(msg.sender) */
      0x04
      dup3
      add
        /* "#utility.yul":7560:7611   */
      mstore
      0x00
      dup1
      mload
      0x20
      data_1a390d6c2ee89e11d2dffeb86f753e43f966d02cbb0b3bd3e6e1cdf50245ef50
      dup4
      codecopy
      dup2
      mload
      swap2
      mstore
        /* "test/solidity/Protocol.t.sol":31784:31797  vm.startPrank */
      swap1
      0x06447d56
      swap1
        /* "#utility.yul":7533:7551   */
      0x24
      add
        /* "test/solidity/Protocol.t.sol":31784:31809  vm.startPrank(msg.sender) */
      0x00
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      0x00
      dup8
      dup1
      extcodesize
      iszero
      dup1
      iszero
      tag_2293
      jumpi
      0x00
      dup1
      revert
    tag_2293:
      pop
      gas
      call
      iszero
      dup1
      iszero
      tag_2295
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_2295:
      pop
      pop
        /* "test/solidity/Protocol.t.sol":14889:14896  _market */
      sload(0x23)
        /* "test/solidity/Protocol.t.sol":14918:14927  _maturity */
      sload(0x25)
        /* "test/solidity/Protocol.t.sol":14889:14940  _market.fixedBorrowPositions(_maturity, msg.sender) */
      mload(0x40)
      shl(0xe0, 0xd2681a0b)
      dup2
      mstore
        /* "test/solidity/Protocol.t.sol":14855:14872  uint256 principal */
      0x00
      swap5
      pop
      dup5
      swap4
      pop
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":14889:14896  _market */
      swap1
      swap3
      and
      swap2
        /* "test/solidity/Protocol.t.sol":14889:14917  _market.fixedBorrowPositions */
      0xd2681a0b
      swap2
        /* "test/solidity/Protocol.t.sol":14889:14940  _market.fixedBorrowPositions(_maturity, msg.sender) */
      tag_2297
      swap2
        /* "test/solidity/Protocol.t.sol":14929:14939  msg.sender */
      caller
      swap1
        /* "test/solidity/Protocol.t.sol":14889:14940  _market.fixedBorrowPositions(_maturity, msg.sender) */
      0x04
      add
      tag_555
      jump	// in
    tag_2297:
      0x40
      dup1
      mload
      dup1
      dup4
      sub
      dup2
      dup7
      gas
      staticcall
      iszero
      dup1
      iszero
      tag_2299
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_2299:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      dup2
      add
      swap1
      tag_2300
      swap2
      swap1
      tag_203
      jump	// in
    tag_2300:
        /* "test/solidity/Protocol.t.sol":14854:14940  (uint256 principal, uint256 fee) = _market.fixedBorrowPositions(_maturity, msg.sender) */
      swap1
      swap3
      pop
      swap1
      pop
        /* "test/solidity/Protocol.t.sol":14946:14968  uint256 positionAssets */
      0x00
        /* "test/solidity/Protocol.t.sol":14980:14995  principal + fee */
      tag_2301
        /* "test/solidity/Protocol.t.sol":14854:14940  (uint256 principal, uint256 fee) = _market.fixedBorrowPositions(_maturity, msg.sender) */
      dup3
      dup5
        /* "test/solidity/Protocol.t.sol":14980:14995  principal + fee */
      tag_186
      jump	// in
    tag_2301:
        /* "test/solidity/Protocol.t.sol":14971:14977  assets */
      dup7
        /* "test/solidity/Protocol.t.sol":14971:14995  assets > principal + fee */
      0xffffffffffffff
      and
      gt
        /* "test/solidity/Protocol.t.sol":14971:15022  assets > principal + fee ? principal + fee : assets */
      tag_2302
      jumpi
        /* "test/solidity/Protocol.t.sol":15016:15022  assets */
      dup6
        /* "test/solidity/Protocol.t.sol":14971:15022  assets > principal + fee ? principal + fee : assets */
      0xffffffffffffff
      and
      jump(tag_2304)
    tag_2302:
        /* "test/solidity/Protocol.t.sol":14998:15013  principal + fee */
      tag_2304
        /* "test/solidity/Protocol.t.sol":15010:15013  fee */
      dup3
        /* "test/solidity/Protocol.t.sol":14998:15007  principal */
      dup5
        /* "test/solidity/Protocol.t.sol":14998:15013  principal + fee */
      tag_186
      jump	// in
    tag_2304:
        /* "test/solidity/Protocol.t.sol":14946:15022  uint256 positionAssets = assets > principal + fee ? principal + fee : assets */
      swap1
      pop
        /* "test/solidity/Protocol.t.sol":15033:15047  positionAssets */
      dup1
        /* "test/solidity/Protocol.t.sol":15051:15052  0 */
      0x00
        /* "test/solidity/Protocol.t.sol":15033:15052  positionAssets == 0 */
      sub
        /* "test/solidity/Protocol.t.sol":15029:15891  if (positionAssets == 0) {... */
      tag_2305
      jumpi
        /* "test/solidity/Protocol.t.sol":15062:15097  vm.expectRevert(ZeroRepay.selector) */
      mload(0x40)
      shl(0xe5, 0x0618f587)
      dup2
      mstore
      0x00
      dup1
      mload
      0x20
      data_1a390d6c2ee89e11d2dffeb86f753e43f966d02cbb0b3bd3e6e1cdf50245ef50
      dup4
      codecopy
      dup2
      mload
      swap2
      mstore
        /* "test/solidity/Protocol.t.sol":15062:15077  vm.expectRevert */
      swap1
      0xc31eb0e0
      swap1
        /* "test/solidity/Protocol.t.sol":15062:15097  vm.expectRevert(ZeroRepay.selector) */
      tag_2306
      swap1
      shl(0xe0, 0x685e9235)
        /* "test/solidity/Protocol.t.sol":15078:15096  ZeroRepay.selector */
      swap1
        /* "test/solidity/Protocol.t.sol":15062:15097  vm.expectRevert(ZeroRepay.selector) */
      0x04
      add
      tag_216
      jump	// in
    tag_2306:
      0x00
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      0x00
      dup8
      dup1
      extcodesize
      iszero
      dup1
      iszero
      tag_2307
      jumpi
      0x00
      dup1
      revert
    tag_2307:
      pop
      gas
      call
      iszero
      dup1
      iszero
      tag_2309
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_2309:
      pop
      pop
      pop
      pop
        /* "test/solidity/Protocol.t.sol":15029:15891  if (positionAssets == 0) {... */
      jump(tag_2310)
    tag_2305:
        /* "test/solidity/Protocol.t.sol":15118:15131  uint256 yield */
      0x00
        /* "test/solidity/Protocol.t.sol":15152:15161  _maturity */
      sload(0x25)
        /* "test/solidity/Protocol.t.sol":15134:15149  block.timestamp */
      timestamp
        /* "test/solidity/Protocol.t.sol":15134:15161  block.timestamp < _maturity */
      lt
        /* "test/solidity/Protocol.t.sol":15134:15344  block.timestamp < _maturity... */
      tag_2311
      jumpi
        /* "test/solidity/Protocol.t.sol":15343:15344  0 */
      0x00
        /* "test/solidity/Protocol.t.sol":15134:15344  block.timestamp < _maturity... */
      jump(tag_2313)
    tag_2311:
        /* "test/solidity/Protocol.t.sol":15203:15210  _market */
      sload(0x23)
        /* "test/solidity/Protocol.t.sol":15222:15231  _maturity */
      sload(0x25)
        /* "test/solidity/Protocol.t.sol":15243:15276  FixedLib.Position(principal, fee) */
      0x40
      dup1
      mload
      dup1
      dup3
      add
      swap1
      swap2
      mstore
      dup7
      dup2
      mstore
      0x20
      dup2
      add
      dup7
      swap1
      mstore
        /* "test/solidity/Protocol.t.sol":15172:15332  previewDepositYield(... */
      tag_2313
      swap3
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":15203:15210  _market */
      and
      swap2
        /* "test/solidity/Protocol.t.sol":15222:15231  _maturity */
      swap1
        /* "test/solidity/Protocol.t.sol":15243:15312  FixedLib.Position(principal, fee).scaleProportionally(positionAssets) */
      tag_2314
      swap1
        /* "test/solidity/Protocol.t.sol":15297:15311  positionAssets */
      dup7
        /* "test/solidity/Protocol.t.sol":15243:15296  FixedLib.Position(principal, fee).scaleProportionally */
      tag_789
        /* "test/solidity/Protocol.t.sol":15243:15312  FixedLib.Position(principal, fee).scaleProportionally(positionAssets) */
      jump	// in
    tag_2314:
        /* "test/solidity/Protocol.t.sol":15243:15322  FixedLib.Position(principal, fee).scaleProportionally(positionAssets).principal */
      mload
        /* "test/solidity/Protocol.t.sol":15172:15191  previewDepositYield */
      tag_2315
        /* "test/solidity/Protocol.t.sol":15172:15332  previewDepositYield(... */
      jump	// in
    tag_2313:
        /* "test/solidity/Protocol.t.sol":15118:15344  uint256 yield = block.timestamp < _maturity... */
      swap1
      pop
        /* "test/solidity/Protocol.t.sol":15373:15378  yield */
      dup1
        /* "test/solidity/Protocol.t.sol":15356:15370  positionAssets */
      dup3
        /* "test/solidity/Protocol.t.sol":15356:15378  positionAssets < yield */
      lt
        /* "test/solidity/Protocol.t.sol":15352:15885  if (positionAssets < yield) {... */
      iszero
      tag_2316
      jumpi
        /* "lib/forge-std/src/StdError.sol":317:364  abi.encodeWithSignature("Panic(uint256)", 0x11) */
      mload(0x40)
        /* "lib/forge-std/src/StdError.sol":359:363  0x11 */
      0x11
        /* "lib/forge-std/src/StdError.sol":317:364  abi.encodeWithSignature("Panic(uint256)", 0x11) */
      0x24
      dup3
      add
        /* "#utility.yul":24631:24667   */
      mstore
      0x00
      dup1
      mload
      0x20
      data_1a390d6c2ee89e11d2dffeb86f753e43f966d02cbb0b3bd3e6e1cdf50245ef50
      dup4
      codecopy
      dup2
      mload
      swap2
      mstore
        /* "test/solidity/Protocol.t.sol":15390:15405  vm.expectRevert */
      swap1
      0xf28dceb3
      swap1
        /* "#utility.yul":24604:24622   */
      0x44
      add
        /* "lib/forge-std/src/StdError.sol":317:364  abi.encodeWithSignature("Panic(uint256)", 0x11) */
      0x40
      dup1
      mload
      not(0x1f)
      dup2
      dup5
      sub
      add
      dup2
      mstore
      swap2
      dup2
      mstore
      0x20
      dup3
      add
      dup1
      mload
      sub(shl(0xe0, 0x01), 0x01)
      and
      shl(0xe0, 0x4e487b71)
      or
      swap1
      mstore
        /* "test/solidity/Protocol.t.sol":15390:15431  vm.expectRevert(stdError.arithmeticError) */
      mload
      0xe0
      dup4
      swap1
      shl
      not(sub(shl(0xe0, 0x01), 0x01))
      and
      dup2
      mstore
      tag_2318
      swap2
        /* "lib/forge-std/src/StdError.sol":317:364  abi.encodeWithSignature("Panic(uint256)", 0x11) */
      swap1
        /* "test/solidity/Protocol.t.sol":15390:15431  vm.expectRevert(stdError.arithmeticError) */
      0x04
      add
      tag_599
      jump	// in
    tag_2318:
      0x00
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      0x00
      dup8
      dup1
      extcodesize
      iszero
      dup1
      iszero
      tag_2319
      jumpi
      0x00
      dup1
      revert
    tag_2319:
      pop
      gas
      call
      iszero
      dup1
      iszero
      tag_2321
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_2321:
      pop
      pop
      pop
      pop
        /* "test/solidity/Protocol.t.sol":15352:15885  if (positionAssets < yield) {... */
      jump(tag_2322)
    tag_2316:
        /* "test/solidity/Protocol.t.sol":15456:15481  uint256 actualRepayAssets */
      0x00
        /* "test/solidity/Protocol.t.sol":15502:15511  _maturity */
      sload(0x25)
        /* "test/solidity/Protocol.t.sol":15484:15499  block.timestamp */
      timestamp
        /* "test/solidity/Protocol.t.sol":15484:15511  block.timestamp < _maturity */
      lt
        /* "test/solidity/Protocol.t.sol":15484:15658  block.timestamp < _maturity... */
      tag_2323
      jumpi
        /* "test/solidity/Protocol.t.sol":15635:15642  _market */
      sload(0x23)
        /* "test/solidity/Protocol.t.sol":15635:15656  _market.penaltyRate() */
      0x40
      dup1
      mload
      shl(0xe0, 0xd6b7494f)
      dup2
      mstore
      swap1
      mload
        /* "test/solidity/Protocol.t.sol":15577:15657  positionAssets.mulWadDown((block.timestamp - _maturity) * _market.penaltyRate()) */
      tag_2324
      swap3
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":15635:15642  _market */
      and
      swap2
        /* "test/solidity/Protocol.t.sol":15635:15654  _market.penaltyRate */
      0xd6b7494f
      swap2
        /* "test/solidity/Protocol.t.sol":15635:15656  _market.penaltyRate() */
      0x04
      dup1
      dup4
      add
      swap3
      0x20
      swap3
      swap2
      swap1
      dup3
      swap1
      sub
      add
      dup2
        /* "test/solidity/Protocol.t.sol":15635:15642  _market */
      dup7
        /* "test/solidity/Protocol.t.sol":15635:15656  _market.penaltyRate() */
      gas
      staticcall
      iszero
      dup1
      iszero
      tag_2326
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_2326:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      dup2
      add
      swap1
      tag_2327
      swap2
      swap1
      tag_212
      jump	// in
    tag_2327:
        /* "test/solidity/Protocol.t.sol":15622:15631  _maturity */
      sload(0x25)
        /* "test/solidity/Protocol.t.sol":15604:15631  block.timestamp - _maturity */
      tag_2328
      swap1
        /* "test/solidity/Protocol.t.sol":15604:15619  block.timestamp */
      timestamp
        /* "test/solidity/Protocol.t.sol":15604:15631  block.timestamp - _maturity */
      tag_158
      jump	// in
    tag_2328:
        /* "test/solidity/Protocol.t.sol":15603:15656  (block.timestamp - _maturity) * _market.penaltyRate() */
      tag_2329
      swap2
      swap1
      tag_278
      jump	// in
    tag_2329:
        /* "test/solidity/Protocol.t.sol":15577:15591  positionAssets */
      dup5
      swap1
        /* "test/solidity/Protocol.t.sol":15577:15602  positionAssets.mulWadDown */
      tag_1375
        /* "test/solidity/Protocol.t.sol":15577:15657  positionAssets.mulWadDown((block.timestamp - _maturity) * _market.penaltyRate()) */
      jump	// in
    tag_2324:
        /* "test/solidity/Protocol.t.sol":15560:15657  positionAssets + positionAssets.mulWadDown((block.timestamp - _maturity) * _market.penaltyRate()) */
      tag_2330
      swap1
        /* "test/solidity/Protocol.t.sol":15560:15574  positionAssets */
      dup5
        /* "test/solidity/Protocol.t.sol":15560:15657  positionAssets + positionAssets.mulWadDown((block.timestamp - _maturity) * _market.penaltyRate()) */
      tag_186
      jump	// in
    tag_2330:
        /* "test/solidity/Protocol.t.sol":15484:15658  block.timestamp < _maturity... */
      jump(tag_2332)
    tag_2323:
        /* "test/solidity/Protocol.t.sol":15524:15546  positionAssets - yield */
      tag_2332
        /* "test/solidity/Protocol.t.sol":15541:15546  yield */
      dup3
        /* "test/solidity/Protocol.t.sol":15524:15538  positionAssets */
      dup5
        /* "test/solidity/Protocol.t.sol":15524:15546  positionAssets - yield */
      tag_158
      jump	// in
    tag_2332:
        /* "test/solidity/Protocol.t.sol":15668:15674  _asset */
      sload(0x24)
        /* "test/solidity/Protocol.t.sol":15668:15710  _asset.mint(msg.sender, actualRepayAssets) */
      mload(0x40)
      shl(0xe0, 0x40c10f19)
      dup2
      mstore
        /* "test/solidity/Protocol.t.sol":15456:15658  uint256 actualRepayAssets = block.timestamp < _maturity... */
      swap2
      swap3
      pop
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":15668:15674  _asset */
      and
      swap1
        /* "test/solidity/Protocol.t.sol":15668:15679  _asset.mint */
      0x40c10f19
      swap1
        /* "test/solidity/Protocol.t.sol":15668:15710  _asset.mint(msg.sender, actualRepayAssets) */
      tag_2333
      swap1
        /* "test/solidity/Protocol.t.sol":15680:15690  msg.sender */
      caller
      swap1
        /* "test/solidity/Protocol.t.sol":15456:15658  uint256 actualRepayAssets = block.timestamp < _maturity... */
      dup6
      swap1
        /* "test/solidity/Protocol.t.sol":15668:15710  _asset.mint(msg.sender, actualRepayAssets) */
      0x04
      add
      tag_345
      jump	// in
    tag_2333:
      0x00
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      0x00
      dup8
      dup1
      extcodesize
      iszero
      dup1
      iszero
      tag_2334
      jumpi
      0x00
      dup1
      revert
    tag_2334:
      pop
      gas
      call
      iszero
      dup1
      iszero
      tag_2336
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_2336:
      pop
      pop
        /* "test/solidity/Protocol.t.sol":15767:15774  _market */
      sload(0x23)
        /* "test/solidity/Protocol.t.sol":15721:15776  vm.expectEmit(true, true, true, true, address(_market)) */
      mload(0x40)
      shl(0xe0, 0x81bad6f3)
      dup2
      mstore
      0x00
      dup1
      mload
      0x20
      data_1a390d6c2ee89e11d2dffeb86f753e43f966d02cbb0b3bd3e6e1cdf50245ef50
      dup4
      codecopy
      dup2
      mload
      swap2
      mstore
        /* "test/solidity/Protocol.t.sol":15721:15734  vm.expectEmit */
      swap4
      pop
      0x81bad6f3
      swap3
      pop
        /* "test/solidity/Protocol.t.sol":15721:15776  vm.expectEmit(true, true, true, true, address(_market)) */
      tag_2337
      swap2
        /* "test/solidity/Protocol.t.sol":15735:15739  true */
      0x01
      swap2
      dup3
      swap2
      dup3
      swap2
      dup3
      swap2
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":15767:15774  _market */
      and
      swap1
        /* "test/solidity/Protocol.t.sol":15721:15776  vm.expectEmit(true, true, true, true, address(_market)) */
      0x04
      add
      tag_228
      jump	// in
    tag_2337:
      0x00
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      0x00
      dup8
      dup1
      extcodesize
      iszero
      dup1
      iszero
      tag_2338
      jumpi
      0x00
      dup1
      revert
    tag_2338:
      pop
      gas
      call
      iszero
      dup1
      iszero
      tag_2340
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_2340:
      pop
      pop
        /* "test/solidity/Protocol.t.sol":15807:15816  _maturity */
      sload(0x25)
        /* "test/solidity/Protocol.t.sol":15791:15876  RepayAtMaturity(_maturity, msg.sender, msg.sender, actualRepayAssets, positionAssets) */
      0x40
      dup1
      mload
        /* "#utility.yul":31599:31624   */
      dup6
      dup2
      mstore
        /* "#utility.yul":31655:31657   */
      0x20
        /* "#utility.yul":31640:31658   */
      dup2
      add
        /* "#utility.yul":31633:31667   */
      dup9
      swap1
      mstore
        /* "test/solidity/Protocol.t.sol":15830:15840  msg.sender */
      caller
      swap5
      pop
      dup5
      swap4
      pop
        /* "test/solidity/Protocol.t.sol":15791:15876  RepayAtMaturity(_maturity, msg.sender, msg.sender, actualRepayAssets, positionAssets) */
      0xf17fce321dd9fb005136a80c0bfb3789e455b7a70be9eb8922f1ad20a80d1a33
      swap2
        /* "#utility.yul":31572:31590   */
      add
        /* "test/solidity/Protocol.t.sol":15791:15876  RepayAtMaturity(_maturity, msg.sender, msg.sender, actualRepayAssets, positionAssets) */
      mload(0x40)
      dup1
      swap2
      sub
      swap1
      log4
        /* "test/solidity/Protocol.t.sol":15446:15885  {... */
      pop
        /* "test/solidity/Protocol.t.sol":15352:15885  if (positionAssets < yield) {... */
    tag_2322:
        /* "test/solidity/Protocol.t.sol":15110:15891  {... */
      pop
        /* "test/solidity/Protocol.t.sol":15029:15891  if (positionAssets == 0) {... */
    tag_2310:
        /* "test/solidity/Protocol.t.sol":15896:15903  _market */
      sload(0x23)
        /* "test/solidity/Protocol.t.sol":15920:15929  _maturity */
      sload(0x25)
        /* "test/solidity/Protocol.t.sol":15896:15977  _market.repayAtMaturity(_maturity, positionAssets, type(uint256).max, msg.sender) */
      mload(0x40)
      shl(0xe0, 0x3c6f317f)
      dup2
      mstore
      0x04
      dup2
      add
        /* "#utility.yul":25594:25619   */
      swap2
      swap1
      swap2
      mstore
        /* "#utility.yul":25635:25653   */
      0x24
      dup2
      add
        /* "#utility.yul":25628:25662   */
      dup4
      swap1
      mstore
      not(0x00)
        /* "#utility.yul":25678:25696   */
      0x44
      dup3
      add
        /* "#utility.yul":25671:25705   */
      mstore
        /* "test/solidity/Protocol.t.sol":15966:15976  msg.sender */
      caller
        /* "#utility.yul":25721:25739   */
      0x64
      dup3
      add
        /* "#utility.yul":25714:25774   */
      mstore
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":15896:15903  _market */
      swap1
      swap2
      and
      swap1
        /* "test/solidity/Protocol.t.sol":15896:15919  _market.repayAtMaturity */
      0x3c6f317f
      swap1
        /* "#utility.yul":25566:25585   */
      0x84
      add
        /* "test/solidity/Protocol.t.sol":15896:15977  _market.repayAtMaturity(_maturity, positionAssets, type(uint256).max, msg.sender) */
      0x20
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      0x00
      dup8
      gas
      call
      iszero
      dup1
      iszero
      tag_2345
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_2345:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      dup2
      add
      swap1
      tag_2346
      swap2
      swap1
      tag_212
      jump	// in
    tag_2346:
      pop
        /* "test/solidity/Protocol.t.sol":14848:15982  {... */
      pop
      pop
      pop
      0x00
      dup1
      mload
      0x20
      data_b627c71dec38ae7fa273aa3bb9b6210fd4a76d47f44ae646db16da401b96db40
      dup4
      codecopy
      dup2
      mload
      swap2
      mstore
        /* "lib/forge-std/src/Base.sol":309:346  uint256(keccak256("hevm cheat code")) */
      0x00
      shr
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":31822:31834  vm.stopPrank */
      and
      0x90c5013b
        /* "test/solidity/Protocol.t.sol":31822:31836  vm.stopPrank() */
      mload(0x40)
      dup2
      0xffffffff
      and
      0xe0
      shl
      dup2
      mstore
      0x04
      add
      0x00
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      0x00
      dup8
      dup1
      extcodesize
      iszero
      dup1
      iszero
      tag_512
      jumpi
      0x00
      dup1
      revert
        /* "test/solidity/Protocol.t.sol":11005:11247  function invariantReserveFactor() external {... */
    tag_129:
        /* "test/solidity/Protocol.t.sol":11059:11065  uint i */
      0x00
        /* "test/solidity/Protocol.t.sol":11054:11243  for (uint i = 0; i < markets.length; ++i) {... */
    tag_2351:
        /* "test/solidity/Protocol.t.sol":11075:11082  markets */
      0x1c
        /* "test/solidity/Protocol.t.sol":11075:11089  markets.length */
      sload
        /* "test/solidity/Protocol.t.sol":11071:11089  i < markets.length */
      dup2
      lt
        /* "test/solidity/Protocol.t.sol":11054:11243  for (uint i = 0; i < markets.length; ++i) {... */
      iszero
      tag_1069
      jumpi
        /* "test/solidity/Protocol.t.sol":11104:11117  Market market */
      0x00
        /* "test/solidity/Protocol.t.sol":11120:11127  markets */
      0x1c
        /* "test/solidity/Protocol.t.sol":11128:11129  i */
      dup3
        /* "test/solidity/Protocol.t.sol":11120:11130  markets[i] */
      dup2
      sload
      dup2
      lt
      tag_2355
      jumpi
      tag_2355
      tag_162
      jump	// in
    tag_2355:
      swap1
      0x00
      mstore
      keccak256(0x00, 0x20)
      add
      0x00
      swap1
      sload
      swap1
      0x0100
      exp
      swap1
      div
      sub(shl(0xa0, 0x01), 0x01)
      and
        /* "test/solidity/Protocol.t.sol":11104:11130  Market market = markets[i] */
      swap1
      pop
        /* "test/solidity/Protocol.t.sol":11138:11236  assertLe(market.floatingDebt(), market.floatingAssets().mulWadDown(1e18 - market.reserveFactor())) */
      tag_2357
        /* "test/solidity/Protocol.t.sol":11147:11153  market */
      dup2
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":11147:11166  market.floatingDebt */
      and
      0x1a90f186
        /* "test/solidity/Protocol.t.sol":11147:11168  market.floatingDebt() */
      mload(0x40)
      dup2
      0xffffffff
      and
      0xe0
      shl
      dup2
      mstore
      0x04
      add
      0x20
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      dup7
      gas
      staticcall
      iszero
      dup1
      iszero
      tag_2359
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_2359:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      dup2
      add
      swap1
      tag_2360
      swap2
      swap1
      tag_212
      jump	// in
    tag_2360:
        /* "test/solidity/Protocol.t.sol":11170:11235  market.floatingAssets().mulWadDown(1e18 - market.reserveFactor()) */
      tag_2361
        /* "test/solidity/Protocol.t.sol":11212:11218  market */
      dup4
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":11212:11232  market.reserveFactor */
      and
      0x4322b714
        /* "test/solidity/Protocol.t.sol":11212:11234  market.reserveFactor() */
      mload(0x40)
      dup2
      0xffffffff
      and
      0xe0
      shl
      dup2
      mstore
      0x04
      add
      0x20
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      dup7
      gas
      staticcall
      iszero
      dup1
      iszero
      tag_2363
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_2363:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      dup2
      add
      swap1
      tag_2364
      swap2
      swap1
      tag_955
      jump	// in
    tag_2364:
        /* "test/solidity/Protocol.t.sol":11205:11234  1e18 - market.reserveFactor() */
      tag_2365
      swap1
        /* "test/solidity/Protocol.t.sol":11205:11209  1e18 */
      0x0de0b6b3a7640000
        /* "test/solidity/Protocol.t.sol":11205:11234  1e18 - market.reserveFactor() */
      tag_957
      jump	// in
    tag_2365:
      sub(shl(0x80, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":11170:11235  market.floatingAssets().mulWadDown(1e18 - market.reserveFactor()) */
      and
        /* "test/solidity/Protocol.t.sol":11170:11176  market */
      dup5
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":11170:11191  market.floatingAssets */
      and
      0x2e0af008
        /* "test/solidity/Protocol.t.sol":11170:11193  market.floatingAssets() */
      mload(0x40)
      dup2
      0xffffffff
      and
      0xe0
      shl
      dup2
      mstore
      0x04
      add
      0x20
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      dup7
      gas
      staticcall
      iszero
      dup1
      iszero
      tag_2367
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_2367:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      dup2
      add
      swap1
      tag_1374
      swap2
      swap1
      tag_212
      jump	// in
        /* "test/solidity/Protocol.t.sol":11170:11235  market.floatingAssets().mulWadDown(1e18 - market.reserveFactor()) */
    tag_2361:
        /* "test/solidity/Protocol.t.sol":11138:11146  assertLe */
      tag_2369
        /* "test/solidity/Protocol.t.sol":11138:11236  assertLe(market.floatingDebt(), market.floatingAssets().mulWadDown(1e18 - market.reserveFactor())) */
      jump	// in
    tag_2357:
      pop
        /* "test/solidity/Protocol.t.sol":11091:11094  ++i */
      tag_2370
      dup2
      tag_293
      jump	// in
    tag_2370:
      swap1
      pop
        /* "test/solidity/Protocol.t.sol":11054:11243  for (uint i = 0; i < markets.length; ++i) {... */
      jump(tag_2351)
        /* "test/solidity/Protocol.t.sol":18701:19041  function mint(uint56 shares, bytes32 seed) external context(seed) {... */
    tag_132:
        /* "test/solidity/Protocol.t.sol":31278:31285  _market */
      sload(0x23)
        /* "test/solidity/Protocol.t.sol":18761:18765  seed */
      dup2
      swap1
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":31278:31285  _market */
      and
        /* "test/solidity/Protocol.t.sol":31270:31300  address(_market) == address(0) */
      iszero
        /* "test/solidity/Protocol.t.sol":31263:31301  assert(address(_market) == address(0)) */
      tag_2373
      jumpi
      tag_2373
      tag_153
      jump	// in
    tag_2373:
        /* "test/solidity/Protocol.t.sol":31317:31324  markets */
      0x1c
        /* "test/solidity/Protocol.t.sol":31325:31402  _bound(uint256(keccak256(abi.encode(seed, "market"))), 0, markets.length - 1) */
      tag_2374
        /* "test/solidity/Protocol.t.sol":31361:31365  seed */
      dup3
        /* "test/solidity/Protocol.t.sol":31350:31376  abi.encode(seed, "market") */
      add(0x20, mload(0x40))
      tag_155
      swap2
      swap1
      tag_156
      jump	// in
        /* "test/solidity/Protocol.t.sol":31325:31402  _bound(uint256(keccak256(abi.encode(seed, "market"))), 0, markets.length - 1) */
    tag_2374:
        /* "test/solidity/Protocol.t.sol":31317:31403  markets[_bound(uint256(keccak256(abi.encode(seed, "market"))), 0, markets.length - 1)] */
      dup2
      sload
      dup2
      lt
      tag_2378
      jumpi
      tag_2378
      tag_162
      jump	// in
    tag_2378:
      0x00
      swap2
      dup3
      mstore
      0x20
      swap2
      dup3
      swap1
      keccak256
      add
      sload
        /* "test/solidity/Protocol.t.sol":31307:31314  _market */
      0x23
        /* "test/solidity/Protocol.t.sol":31307:31403  _market = markets[_bound(uint256(keccak256(abi.encode(seed, "market"))), 0, markets.length - 1)] */
      dup1
      sload
      not(sub(shl(0xa0, 0x01), 0x01))
      and
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":31317:31403  markets[_bound(uint256(keccak256(abi.encode(seed, "market"))), 0, markets.length - 1)] */
      swap1
      swap3
      and
        /* "test/solidity/Protocol.t.sol":31307:31403  _market = markets[_bound(uint256(keccak256(abi.encode(seed, "market"))), 0, markets.length - 1)] */
      swap2
      dup3
      or
      swap1
      sstore
        /* "test/solidity/Protocol.t.sol":31436:31451  _market.asset() */
      0x40
      dup1
      mload
      shl(0xe0, 0x38d52e0f)
      dup2
      mstore
      swap1
      mload
        /* "test/solidity/Protocol.t.sol":31317:31403  markets[_bound(uint256(keccak256(abi.encode(seed, "market"))), 0, markets.length - 1)] */
      swap2
      swap3
        /* "test/solidity/Protocol.t.sol":31436:31449  _market.asset */
      0x38d52e0f
      swap3
        /* "test/solidity/Protocol.t.sol":31436:31451  _market.asset() */
      0x04
      dup1
      dup5
      add
      swap4
      dup3
      swap1
      sub
      add
      dup2
        /* "test/solidity/Protocol.t.sol":31317:31403  markets[_bound(uint256(keccak256(abi.encode(seed, "market"))), 0, markets.length - 1)] */
      dup7
        /* "test/solidity/Protocol.t.sol":31436:31451  _market.asset() */
      gas
      staticcall
      iszero
      dup1
      iszero
      tag_2381
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_2381:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      dup2
      add
      swap1
      tag_2382
      swap2
      swap1
      tag_167
      jump	// in
    tag_2382:
        /* "test/solidity/Protocol.t.sol":31409:31415  _asset */
      0x24
      0x00
        /* "test/solidity/Protocol.t.sol":31409:31453  _asset = MockERC20(address(_market.asset())) */
      0x0100
      exp
      dup2
      sload
      dup2
      sub(shl(0xa0, 0x01), 0x01)
      mul
      not
      and
      swap1
      dup4
      sub(shl(0xa0, 0x01), 0x01)
      and
      mul
      or
      swap1
      sstore
      pop
        /* "test/solidity/Protocol.t.sol":31475:31483  accounts */
      0x1d
        /* "test/solidity/Protocol.t.sol":31484:31568  _bound(uint256(keccak256(abi.encode(seed, "counterparty"))), 0, accounts.length - 1) */
      tag_2383
        /* "test/solidity/Protocol.t.sol":31520:31524  seed */
      dup3
        /* "test/solidity/Protocol.t.sol":31509:31541  abi.encode(seed, "counterparty") */
      add(0x20, mload(0x40))
      tag_169
      swap2
      swap1
      tag_170
      jump	// in
        /* "test/solidity/Protocol.t.sol":31484:31568  _bound(uint256(keccak256(abi.encode(seed, "counterparty"))), 0, accounts.length - 1) */
    tag_2383:
        /* "test/solidity/Protocol.t.sol":31475:31569  accounts[_bound(uint256(keccak256(abi.encode(seed, "counterparty"))), 0, accounts.length - 1)] */
      dup2
      sload
      dup2
      lt
      tag_2387
      jumpi
      tag_2387
      tag_162
      jump	// in
    tag_2387:
      0x00
      swap2
      dup3
      mstore
      0x20
      swap2
      dup3
      swap1
      keccak256
      add
      sload
        /* "test/solidity/Protocol.t.sol":31459:31472  _counterparty */
      0x26
        /* "test/solidity/Protocol.t.sol":31459:31569  _counterparty = accounts[_bound(uint256(keccak256(abi.encode(seed, "counterparty"))), 0, accounts.length - 1)] */
      dup1
      sload
      not(sub(shl(0xa0, 0x01), 0x01))
      and
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":31475:31569  accounts[_bound(uint256(keccak256(abi.encode(seed, "counterparty"))), 0, accounts.length - 1)] */
      swap1
      swap3
      and
        /* "test/solidity/Protocol.t.sol":31459:31569  _counterparty = accounts[_bound(uint256(keccak256(abi.encode(seed, "counterparty"))), 0, accounts.length - 1)] */
      swap2
      swap1
      swap2
      or
      swap1
      sstore
        /* "test/solidity/Protocol.t.sol":31628:31658  abi.encode(seed, "collateral") */
      mload(0x40)
        /* "test/solidity/Protocol.t.sol":31595:31602  markets */
      0x1c
      swap2
        /* "test/solidity/Protocol.t.sol":31603:31684  _bound(uint256(keccak256(abi.encode(seed, "collateral"))), 0, markets.length - 1) */
      tag_2389
      swap2
        /* "test/solidity/Protocol.t.sol":31628:31658  abi.encode(seed, "collateral") */
      tag_155
      swap2
        /* "test/solidity/Protocol.t.sol":31639:31643  seed */
      dup6
      swap2
        /* "test/solidity/Protocol.t.sol":31628:31658  abi.encode(seed, "collateral") */
      add
      tag_177
      jump	// in
        /* "test/solidity/Protocol.t.sol":31603:31684  _bound(uint256(keccak256(abi.encode(seed, "collateral"))), 0, markets.length - 1) */
    tag_2389:
        /* "test/solidity/Protocol.t.sol":31595:31685  markets[_bound(uint256(keccak256(abi.encode(seed, "collateral"))), 0, markets.length - 1)] */
      dup2
      sload
      dup2
      lt
      tag_2393
      jumpi
      tag_2393
      tag_162
      jump	// in
    tag_2393:
      0x00
      swap2
      dup3
      mstore
      0x20
      swap1
      swap2
      keccak256
      add
      sload
        /* "test/solidity/Protocol.t.sol":31575:31592  _collateralMarket */
      0x27
        /* "test/solidity/Protocol.t.sol":31575:31685  _collateralMarket = markets[_bound(uint256(keccak256(abi.encode(seed, "collateral"))), 0, markets.length - 1)] */
      dup1
      sload
      not(sub(shl(0xa0, 0x01), 0x01))
      and
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":31595:31685  markets[_bound(uint256(keccak256(abi.encode(seed, "collateral"))), 0, markets.length - 1)] */
      swap1
      swap3
      and
        /* "test/solidity/Protocol.t.sol":31575:31685  _collateralMarket = markets[_bound(uint256(keccak256(abi.encode(seed, "collateral"))), 0, markets.length - 1)] */
      swap2
      swap1
      swap2
      or
      swap1
      sstore
        /* "contracts/utils/FixedLib.sol":306:313  4 weeks */
      0x24ea00
        /* "test/solidity/Protocol.t.sol":31722:31757  block.timestamp % FixedLib.INTERVAL */
      tag_2395
        /* "contracts/utils/FixedLib.sol":306:313  4 weeks */
      dup2
        /* "test/solidity/Protocol.t.sol":31722:31737  block.timestamp */
      timestamp
        /* "test/solidity/Protocol.t.sol":31722:31757  block.timestamp % FixedLib.INTERVAL */
      tag_183
      jump	// in
    tag_2395:
        /* "test/solidity/Protocol.t.sol":31703:31758  block.timestamp - (block.timestamp % FixedLib.INTERVAL) */
      tag_2396
      swap1
        /* "test/solidity/Protocol.t.sol":31703:31718  block.timestamp */
      timestamp
        /* "test/solidity/Protocol.t.sol":31703:31758  block.timestamp - (block.timestamp % FixedLib.INTERVAL) */
      tag_158
      jump	// in
    tag_2396:
        /* "test/solidity/Protocol.t.sol":31703:31778  block.timestamp - (block.timestamp % FixedLib.INTERVAL) + FixedLib.INTERVAL */
      tag_2397
      swap2
      swap1
      tag_186
      jump	// in
    tag_2397:
        /* "test/solidity/Protocol.t.sol":31691:31700  _maturity */
      0x25
        /* "test/solidity/Protocol.t.sol":31691:31778  _maturity = block.timestamp - (block.timestamp % FixedLib.INTERVAL) + FixedLib.INTERVAL */
      sstore
        /* "test/solidity/Protocol.t.sol":31784:31809  vm.startPrank(msg.sender) */
      mload(0x40)
      shl(0xe1, 0x03223eab)
      dup2
      mstore
        /* "test/solidity/Protocol.t.sol":31798:31808  msg.sender */
      caller
        /* "test/solidity/Protocol.t.sol":31784:31809  vm.startPrank(msg.sender) */
      0x04
      dup3
      add
        /* "#utility.yul":7560:7611   */
      mstore
      0x00
      dup1
      mload
      0x20
      data_1a390d6c2ee89e11d2dffeb86f753e43f966d02cbb0b3bd3e6e1cdf50245ef50
      dup4
      codecopy
      dup2
      mload
      swap2
      mstore
        /* "test/solidity/Protocol.t.sol":31784:31797  vm.startPrank */
      swap1
      0x06447d56
      swap1
        /* "#utility.yul":7533:7551   */
      0x24
      add
        /* "test/solidity/Protocol.t.sol":31784:31809  vm.startPrank(msg.sender) */
      0x00
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      0x00
      dup8
      dup1
      extcodesize
      iszero
      dup1
      iszero
      tag_2399
      jumpi
      0x00
      dup1
      revert
    tag_2399:
      pop
      gas
      call
      iszero
      dup1
      iszero
      tag_2401
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_2401:
      pop
      pop
        /* "test/solidity/Protocol.t.sol":18798:18805  _market */
      sload(0x23)
        /* "test/solidity/Protocol.t.sol":18798:18825  _market.previewMint(shares) */
      mload(0x40)
      shl(0xe0, 0xb3d7f6b9)
      dup2
      mstore
        /* "#utility.yul":24226:24242   */
      0xffffffffffffff
        /* "#utility.yul":24214:24243   */
      dup8
      and
        /* "test/solidity/Protocol.t.sol":18798:18825  _market.previewMint(shares) */
      0x04
      dup3
      add
        /* "#utility.yul":24196:24244   */
      mstore
        /* "test/solidity/Protocol.t.sol":18773:18795  uint256 expectedAssets */
      0x00
      swap4
      pop
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":18798:18805  _market */
      swap1
      swap2
      and
      swap2
      pop
        /* "test/solidity/Protocol.t.sol":18798:18817  _market.previewMint */
      0xb3d7f6b9
      swap1
        /* "#utility.yul":24169:24187   */
      0x24
      add
        /* "test/solidity/Protocol.t.sol":18798:18825  _market.previewMint(shares) */
      0x20
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      dup7
      gas
      staticcall
      iszero
      dup1
      iszero
      tag_2405
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_2405:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      dup2
      add
      swap1
      tag_2406
      swap2
      swap1
      tag_212
      jump	// in
    tag_2406:
        /* "test/solidity/Protocol.t.sol":18831:18837  _asset */
      sload(0x24)
        /* "test/solidity/Protocol.t.sol":18831:18870  _asset.mint(msg.sender, expectedAssets) */
      mload(0x40)
      shl(0xe0, 0x40c10f19)
      dup2
      mstore
        /* "test/solidity/Protocol.t.sol":18773:18825  uint256 expectedAssets = _market.previewMint(shares) */
      swap2
      swap3
      pop
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":18831:18837  _asset */
      and
      swap1
        /* "test/solidity/Protocol.t.sol":18831:18842  _asset.mint */
      0x40c10f19
      swap1
        /* "test/solidity/Protocol.t.sol":18831:18870  _asset.mint(msg.sender, expectedAssets) */
      tag_2407
      swap1
        /* "test/solidity/Protocol.t.sol":18843:18853  msg.sender */
      caller
      swap1
        /* "test/solidity/Protocol.t.sol":18773:18825  uint256 expectedAssets = _market.previewMint(shares) */
      dup6
      swap1
        /* "test/solidity/Protocol.t.sol":18831:18870  _asset.mint(msg.sender, expectedAssets) */
      0x04
      add
      tag_345
      jump	// in
    tag_2407:
      0x00
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      0x00
      dup8
      dup1
      extcodesize
      iszero
      dup1
      iszero
      tag_2408
      jumpi
      0x00
      dup1
      revert
    tag_2408:
      pop
      gas
      call
      iszero
      dup1
      iszero
      tag_2410
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_2410:
      pop
      pop
        /* "test/solidity/Protocol.t.sol":18923:18930  _market */
      sload(0x23)
        /* "test/solidity/Protocol.t.sol":18877:18932  vm.expectEmit(true, true, true, true, address(_market)) */
      mload(0x40)
      shl(0xe0, 0x81bad6f3)
      dup2
      mstore
      0x00
      dup1
      mload
      0x20
      data_1a390d6c2ee89e11d2dffeb86f753e43f966d02cbb0b3bd3e6e1cdf50245ef50
      dup4
      codecopy
      dup2
      mload
      swap2
      mstore
        /* "test/solidity/Protocol.t.sol":18877:18890  vm.expectEmit */
      swap4
      pop
      0x81bad6f3
      swap3
      pop
        /* "test/solidity/Protocol.t.sol":18877:18932  vm.expectEmit(true, true, true, true, address(_market)) */
      tag_2411
      swap2
        /* "test/solidity/Protocol.t.sol":18891:18895  true */
      0x01
      swap2
      dup3
      swap2
      dup3
      swap2
      dup3
      swap2
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":18923:18930  _market */
      and
      swap1
        /* "test/solidity/Protocol.t.sol":18877:18932  vm.expectEmit(true, true, true, true, address(_market)) */
      0x04
      add
      tag_228
      jump	// in
    tag_2411:
      0x00
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      0x00
      dup8
      dup1
      extcodesize
      iszero
      dup1
      iszero
      tag_2412
      jumpi
      0x00
      dup1
      revert
    tag_2412:
      pop
      gas
      call
      iszero
      dup1
      iszero
      tag_2414
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_2414:
      pop
      pop
        /* "test/solidity/Protocol.t.sol":18943:18998  Deposit(msg.sender, msg.sender, expectedAssets, shares) */
      0x40
      dup1
      mload
        /* "#utility.yul":31851:31876   */
      dup5
      dup2
      mstore
        /* "#utility.yul":31924:31940   */
      0xffffffffffffff
        /* "#utility.yul":31912:31941   */
      dup9
      and
        /* "#utility.yul":31907:31909   */
      0x20
        /* "#utility.yul":31892:31910   */
      dup3
      add
        /* "#utility.yul":31885:31942   */
      mstore
        /* "test/solidity/Protocol.t.sol":18963:18973  msg.sender */
      caller
      swap4
      pop
      dup4
      swap3
      pop
        /* "test/solidity/Protocol.t.sol":18943:18998  Deposit(msg.sender, msg.sender, expectedAssets, shares) */
      0xdcbc1c05240f31ff3ad067ef1ee35ce4997762752e3a095284754544f4c709d7
      swap2
        /* "#utility.yul":31824:31842   */
      add
        /* "test/solidity/Protocol.t.sol":18943:18998  Deposit(msg.sender, msg.sender, expectedAssets, shares) */
      mload(0x40)
      dup1
      swap2
      sub
      swap1
      log3
        /* "test/solidity/Protocol.t.sol":19004:19011  _market */
      sload(0x23)
        /* "test/solidity/Protocol.t.sol":19004:19036  _market.mint(shares, msg.sender) */
      mload(0x40)
      shl(0xe0, 0x94bf804d)
      dup2
      mstore
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":19004:19011  _market */
      swap1
      swap2
      and
      swap1
        /* "test/solidity/Protocol.t.sol":19004:19016  _market.mint */
      0x94bf804d
      swap1
        /* "test/solidity/Protocol.t.sol":19004:19036  _market.mint(shares, msg.sender) */
      tag_909
      swap1
        /* "test/solidity/Protocol.t.sol":19017:19023  shares */
      dup8
      swap1
        /* "test/solidity/Protocol.t.sol":19025:19035  msg.sender */
      caller
      swap1
        /* "test/solidity/Protocol.t.sol":19004:19036  _market.mint(shares, msg.sender) */
      0x04
      add
      tag_910
      jump	// in
        /* "test/solidity/Protocol.t.sol":10407:10710  function invariantShareValue() external {... */
    tag_134:
        /* "test/solidity/Protocol.t.sol":10458:10467  uint256 i */
      0x00
        /* "test/solidity/Protocol.t.sol":10453:10706  for (uint256 i = 0; i < markets.length; ++i) {... */
    tag_2424:
        /* "test/solidity/Protocol.t.sol":10477:10484  markets */
      0x1c
        /* "test/solidity/Protocol.t.sol":10477:10491  markets.length */
      sload
        /* "test/solidity/Protocol.t.sol":10473:10491  i < markets.length */
      dup2
      lt
        /* "test/solidity/Protocol.t.sol":10453:10706  for (uint256 i = 0; i < markets.length; ++i) {... */
      iszero
      tag_1069
      jumpi
        /* "test/solidity/Protocol.t.sol":10506:10519  Market market */
      0x00
        /* "test/solidity/Protocol.t.sol":10522:10529  markets */
      0x1c
        /* "test/solidity/Protocol.t.sol":10530:10531  i */
      dup3
        /* "test/solidity/Protocol.t.sol":10522:10532  markets[i] */
      dup2
      sload
      dup2
      lt
      tag_2428
      jumpi
      tag_2428
      tag_162
      jump	// in
    tag_2428:
      0x00
      swap2
      dup3
      mstore
      0x20
      dup1
      dup4
      keccak256
      swap1
      swap2
      add
      sload
        /* "test/solidity/Protocol.t.sol":10544:10564  market.totalSupply() */
      0x40
      dup1
      mload
      shl(0xe0, 0x18160ddd)
      dup2
      mstore
      swap1
      mload
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":10522:10532  markets[i] */
      swap1
      swap3
      and
      swap5
      pop
      dup5
      swap3
        /* "test/solidity/Protocol.t.sol":10544:10562  market.totalSupply */
      0x18160ddd
      swap3
        /* "test/solidity/Protocol.t.sol":10544:10564  market.totalSupply() */
      0x04
      dup1
      dup5
      add
      swap4
      dup3
      swap1
      sub
      add
      dup2
        /* "test/solidity/Protocol.t.sol":10522:10532  markets[i] */
      dup7
        /* "test/solidity/Protocol.t.sol":10544:10564  market.totalSupply() */
      gas
      staticcall
      iszero
      dup1
      iszero
      tag_2431
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_2431:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      dup2
      add
      swap1
      tag_2432
      swap2
      swap1
      tag_212
      jump	// in
    tag_2432:
        /* "test/solidity/Protocol.t.sol":10544:10568  market.totalSupply() > 0 */
      gt
        /* "test/solidity/Protocol.t.sol":10540:10700  if (market.totalSupply() > 0) {... */
      iszero
      tag_2433
      jumpi
        /* "test/solidity/Protocol.t.sol":10589:10613  market.previewMint(1e18) */
      mload(0x40)
      shl(0xe0, 0xb3d7f6b9)
      dup2
      mstore
        /* "test/solidity/Protocol.t.sol":10608:10612  1e18 */
      0x0de0b6b3a7640000
        /* "test/solidity/Protocol.t.sol":10589:10613  market.previewMint(1e18) */
      0x04
      dup3
      add
        /* "#utility.yul":10439:10464   */
      mstore
        /* "test/solidity/Protocol.t.sol":10580:10635  assertGe(market.previewMint(1e18), shareValues[market]) */
      tag_2434
      swap1
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":10589:10607  market.previewMint */
      dup4
      and
      swap1
      0xb3d7f6b9
      swap1
        /* "#utility.yul":10412:10430   */
      0x24
      add
        /* "test/solidity/Protocol.t.sol":10589:10613  market.previewMint(1e18) */
      0x20
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      dup7
      gas
      staticcall
      iszero
      dup1
      iszero
      tag_2438
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_2438:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      dup2
      add
      swap1
      tag_2439
      swap2
      swap1
      tag_212
      jump	// in
    tag_2439:
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":10615:10634  shareValues[market] */
      dup4
      and
      0x00
      swap1
      dup2
      mstore
        /* "test/solidity/Protocol.t.sol":10615:10626  shareValues */
      0x21
        /* "test/solidity/Protocol.t.sol":10615:10634  shareValues[market] */
      0x20
      mstore
      0x40
      swap1
      keccak256
      sload
        /* "test/solidity/Protocol.t.sol":10580:10588  assertGe */
      tag_2440
        /* "test/solidity/Protocol.t.sol":10580:10635  assertGe(market.previewMint(1e18), shareValues[market]) */
      jump	// in
    tag_2434:
        /* "test/solidity/Protocol.t.sol":10667:10691  market.previewMint(1e18) */
      mload(0x40)
      shl(0xe0, 0xb3d7f6b9)
      dup2
      mstore
        /* "test/solidity/Protocol.t.sol":10686:10690  1e18 */
      0x0de0b6b3a7640000
        /* "test/solidity/Protocol.t.sol":10667:10691  market.previewMint(1e18) */
      0x04
      dup3
      add
        /* "#utility.yul":10439:10464   */
      mstore
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":10667:10685  market.previewMint */
      dup3
      and
      swap1
      0xb3d7f6b9
      swap1
        /* "#utility.yul":10412:10430   */
      0x24
      add
        /* "test/solidity/Protocol.t.sol":10667:10691  market.previewMint(1e18) */
      0x20
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      dup7
      gas
      staticcall
      iszero
      dup1
      iszero
      tag_2443
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_2443:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      dup2
      add
      swap1
      tag_2444
      swap2
      swap1
      tag_212
      jump	// in
    tag_2444:
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":10645:10664  shareValues[market] */
      dup3
      and
      0x00
      swap1
      dup2
      mstore
        /* "test/solidity/Protocol.t.sol":10645:10656  shareValues */
      0x21
        /* "test/solidity/Protocol.t.sol":10645:10664  shareValues[market] */
      0x20
      mstore
      0x40
      swap1
      keccak256
        /* "test/solidity/Protocol.t.sol":10645:10691  shareValues[market] = market.previewMint(1e18) */
      sstore
        /* "test/solidity/Protocol.t.sol":10540:10700  if (market.totalSupply() > 0) {... */
    tag_2433:
      pop
        /* "test/solidity/Protocol.t.sol":10493:10496  ++i */
      tag_2445
      dup2
      tag_293
      jump	// in
    tag_2445:
      swap1
      pop
        /* "test/solidity/Protocol.t.sol":10453:10706  for (uint256 i = 0; i < markets.length; ++i) {... */
      jump(tag_2424)
        /* "lib/forge-std/src/StdInvariant.sol":2013:2155  function excludeContracts() public view returns (address[] memory excludedContracts_) {... */
    tag_136:
        /* "lib/forge-std/src/StdInvariant.sol":2062:2097  address[] memory excludedContracts_ */
      0x60
        /* "lib/forge-std/src/StdInvariant.sol":2130:2148  _excludedContracts */
      0x0c
        /* "lib/forge-std/src/StdInvariant.sol":2109:2148  excludedContracts_ = _excludedContracts */
      dup1
      sload
      dup1
      0x20
      mul
      0x20
      add
      mload(0x40)
      swap1
      dup2
      add
      0x40
      mstore
      dup1
      swap3
      swap2
      swap1
      dup2
      dup2
      mstore
      0x20
      add
      dup3
      dup1
      sload
      dup1
      iszero
      tag_849
      jumpi
      0x20
      mul
      dup3
      add
      swap2
      swap1
      0x00
      mstore
      keccak256(0x00, 0x20)
      swap1
      dup2
      sload
      sub(shl(0xa0, 0x01), 0x01)
      and
      dup2
      mstore
      0x01
      swap1
      swap2
      add
      swap1
      0x20
      add
      dup1
      dup4
      gt
      tag_850
      jumpi
      pop
      pop
      pop
      pop
      pop
      swap1
      pop
        /* "lib/forge-std/src/StdInvariant.sol":2013:2155  function excludeContracts() public view returns (address[] memory excludedContracts_) {... */
      swap1
      jump	// out
        /* "test/solidity/Protocol.t.sol":11251:11566  function invariantAssetTransfer() external view {... */
    tag_139:
        /* "test/solidity/Protocol.t.sol":11310:11316  uint i */
      0x00
        /* "test/solidity/Protocol.t.sol":11305:11562  for (uint i = 0; i < accounts.length; ++i) {... */
    tag_2450:
        /* "test/solidity/Protocol.t.sol":11326:11334  accounts */
      0x1d
        /* "test/solidity/Protocol.t.sol":11326:11341  accounts.length */
      sload
        /* "test/solidity/Protocol.t.sol":11322:11341  i < accounts.length */
      dup2
      lt
        /* "test/solidity/Protocol.t.sol":11305:11562  for (uint i = 0; i < accounts.length; ++i) {... */
      iszero
      tag_1069
      jumpi
        /* "test/solidity/Protocol.t.sol":11361:11367  uint j */
      0x00
        /* "test/solidity/Protocol.t.sol":11356:11556  for (uint j = 0; j < markets.length; ++j) {... */
    tag_2453:
        /* "test/solidity/Protocol.t.sol":11377:11384  markets */
      0x1c
        /* "test/solidity/Protocol.t.sol":11377:11391  markets.length */
      sload
        /* "test/solidity/Protocol.t.sol":11373:11391  j < markets.length */
      dup2
      lt
        /* "test/solidity/Protocol.t.sol":11356:11556  for (uint j = 0; j < markets.length; ++j) {... */
      iszero
      tag_2454
      jumpi
        /* "test/solidity/Protocol.t.sol":11408:11421  Market market */
      0x00
        /* "test/solidity/Protocol.t.sol":11424:11431  markets */
      0x1c
        /* "test/solidity/Protocol.t.sol":11432:11433  j */
      dup3
        /* "test/solidity/Protocol.t.sol":11424:11434  markets[j] */
      dup2
      sload
      dup2
      lt
      tag_2457
      jumpi
      tag_2457
      tag_162
      jump	// in
    tag_2457:
      0x00
      swap2
      dup3
      mstore
      0x20
      dup1
      dup4
      keccak256
      swap1
      swap2
      add
      sload
        /* "test/solidity/Protocol.t.sol":11480:11494  market.asset() */
      0x40
      dup1
      mload
      shl(0xe0, 0x38d52e0f)
      dup2
      mstore
      swap1
      mload
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":11424:11434  markets[j] */
      swap1
      swap3
      and
      swap5
      pop
      dup5
      swap3
        /* "test/solidity/Protocol.t.sol":11480:11492  market.asset */
      0x38d52e0f
      swap3
        /* "test/solidity/Protocol.t.sol":11480:11494  market.asset() */
      0x04
      dup1
      dup5
      add
      swap4
      dup3
      swap1
      sub
      add
      dup2
        /* "test/solidity/Protocol.t.sol":11424:11434  markets[j] */
      dup7
        /* "test/solidity/Protocol.t.sol":11480:11494  market.asset() */
      gas
      staticcall
      iszero
      dup1
      iszero
      tag_2460
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_2460:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      dup2
      add
      swap1
      tag_2461
      swap2
      swap1
      tag_167
      jump	// in
    tag_2461:
        /* "test/solidity/Protocol.t.sol":11444:11496  MockERC20 asset = MockERC20(address(market.asset())) */
      swap1
      pop
        /* "test/solidity/Protocol.t.sol":11513:11518  asset */
      dup1
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":11513:11528  asset.balanceOf */
      and
      0x70a08231
        /* "test/solidity/Protocol.t.sol":11529:11537  accounts */
      0x1d
        /* "test/solidity/Protocol.t.sol":11538:11539  i */
      dup7
        /* "test/solidity/Protocol.t.sol":11529:11540  accounts[i] */
      dup2
      sload
      dup2
      lt
      tag_2463
      jumpi
      tag_2463
      tag_162
      jump	// in
    tag_2463:
      0x00
      swap2
      dup3
      mstore
      0x20
      swap1
      swap2
      keccak256
      add
      sload
        /* "test/solidity/Protocol.t.sol":11513:11541  asset.balanceOf(accounts[i]) */
      mload(0x40)
      0xe0
      dup4
      swap1
      shl
      not(sub(shl(0xe0, 0x01), 0x01))
      and
      dup2
      mstore
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":11529:11540  accounts[i] */
      swap1
      swap2
      and
        /* "test/solidity/Protocol.t.sol":11513:11541  asset.balanceOf(accounts[i]) */
      0x04
      dup3
      add
        /* "#utility.yul":7560:7611   */
      mstore
        /* "#utility.yul":7533:7551   */
      0x24
      add
        /* "test/solidity/Protocol.t.sol":11513:11541  asset.balanceOf(accounts[i]) */
      0x20
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      dup7
      gas
      staticcall
      iszero
      dup1
      iszero
      tag_2467
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_2467:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      dup2
      add
      swap1
      tag_2468
      swap2
      swap1
      tag_212
      jump	// in
    tag_2468:
        /* "test/solidity/Protocol.t.sol":11513:11546  asset.balanceOf(accounts[i]) == 0 */
      iszero
        /* "test/solidity/Protocol.t.sol":11506:11547  assert(asset.balanceOf(accounts[i]) == 0) */
      tag_2470
      jumpi
      tag_2470
      tag_153
      jump	// in
    tag_2470:
        /* "test/solidity/Protocol.t.sol":11398:11556  {... */
      pop
      pop
        /* "test/solidity/Protocol.t.sol":11393:11396  ++j */
      dup1
      tag_2471
      swap1
      tag_293
      jump	// in
    tag_2471:
      swap1
      pop
        /* "test/solidity/Protocol.t.sol":11356:11556  for (uint j = 0; j < markets.length; ++j) {... */
      jump(tag_2453)
    tag_2454:
      pop
        /* "test/solidity/Protocol.t.sol":11343:11346  ++i */
      tag_2472
      dup2
      tag_293
      jump	// in
    tag_2472:
      swap1
      pop
        /* "test/solidity/Protocol.t.sol":11305:11562  for (uint i = 0; i < accounts.length; ++i) {... */
      jump(tag_2450)
        /* "test/solidity/Protocol.t.sol":15986:18261  function borrowAtMaturity(uint56 assets, bytes32 seed) external context(seed) _collateral(assets, msg.sender) {... */
    tag_142:
        /* "test/solidity/Protocol.t.sol":31278:31285  _market */
      sload(0x23)
        /* "test/solidity/Protocol.t.sol":16058:16062  seed */
      dup2
      swap1
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":31278:31285  _market */
      and
        /* "test/solidity/Protocol.t.sol":31270:31300  address(_market) == address(0) */
      iszero
        /* "test/solidity/Protocol.t.sol":31263:31301  assert(address(_market) == address(0)) */
      tag_2475
      jumpi
      tag_2475
      tag_153
      jump	// in
    tag_2475:
        /* "test/solidity/Protocol.t.sol":31317:31324  markets */
      0x1c
        /* "test/solidity/Protocol.t.sol":31325:31402  _bound(uint256(keccak256(abi.encode(seed, "market"))), 0, markets.length - 1) */
      tag_2476
        /* "test/solidity/Protocol.t.sol":31361:31365  seed */
      dup3
        /* "test/solidity/Protocol.t.sol":31350:31376  abi.encode(seed, "market") */
      add(0x20, mload(0x40))
      tag_155
      swap2
      swap1
      tag_156
      jump	// in
        /* "test/solidity/Protocol.t.sol":31325:31402  _bound(uint256(keccak256(abi.encode(seed, "market"))), 0, markets.length - 1) */
    tag_2476:
        /* "test/solidity/Protocol.t.sol":31317:31403  markets[_bound(uint256(keccak256(abi.encode(seed, "market"))), 0, markets.length - 1)] */
      dup2
      sload
      dup2
      lt
      tag_2480
      jumpi
      tag_2480
      tag_162
      jump	// in
    tag_2480:
      0x00
      swap2
      dup3
      mstore
      0x20
      swap2
      dup3
      swap1
      keccak256
      add
      sload
        /* "test/solidity/Protocol.t.sol":31307:31314  _market */
      0x23
        /* "test/solidity/Protocol.t.sol":31307:31403  _market = markets[_bound(uint256(keccak256(abi.encode(seed, "market"))), 0, markets.length - 1)] */
      dup1
      sload
      not(sub(shl(0xa0, 0x01), 0x01))
      and
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":31317:31403  markets[_bound(uint256(keccak256(abi.encode(seed, "market"))), 0, markets.length - 1)] */
      swap1
      swap3
      and
        /* "test/solidity/Protocol.t.sol":31307:31403  _market = markets[_bound(uint256(keccak256(abi.encode(seed, "market"))), 0, markets.length - 1)] */
      swap2
      dup3
      or
      swap1
      sstore
        /* "test/solidity/Protocol.t.sol":31436:31451  _market.asset() */
      0x40
      dup1
      mload
      shl(0xe0, 0x38d52e0f)
      dup2
      mstore
      swap1
      mload
        /* "test/solidity/Protocol.t.sol":31317:31403  markets[_bound(uint256(keccak256(abi.encode(seed, "market"))), 0, markets.length - 1)] */
      swap2
      swap3
        /* "test/solidity/Protocol.t.sol":31436:31449  _market.asset */
      0x38d52e0f
      swap3
        /* "test/solidity/Protocol.t.sol":31436:31451  _market.asset() */
      0x04
      dup1
      dup5
      add
      swap4
      dup3
      swap1
      sub
      add
      dup2
        /* "test/solidity/Protocol.t.sol":31317:31403  markets[_bound(uint256(keccak256(abi.encode(seed, "market"))), 0, markets.length - 1)] */
      dup7
        /* "test/solidity/Protocol.t.sol":31436:31451  _market.asset() */
      gas
      staticcall
      iszero
      dup1
      iszero
      tag_2483
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_2483:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      dup2
      add
      swap1
      tag_2484
      swap2
      swap1
      tag_167
      jump	// in
    tag_2484:
        /* "test/solidity/Protocol.t.sol":31409:31415  _asset */
      0x24
      0x00
        /* "test/solidity/Protocol.t.sol":31409:31453  _asset = MockERC20(address(_market.asset())) */
      0x0100
      exp
      dup2
      sload
      dup2
      sub(shl(0xa0, 0x01), 0x01)
      mul
      not
      and
      swap1
      dup4
      sub(shl(0xa0, 0x01), 0x01)
      and
      mul
      or
      swap1
      sstore
      pop
        /* "test/solidity/Protocol.t.sol":31475:31483  accounts */
      0x1d
        /* "test/solidity/Protocol.t.sol":31484:31568  _bound(uint256(keccak256(abi.encode(seed, "counterparty"))), 0, accounts.length - 1) */
      tag_2485
        /* "test/solidity/Protocol.t.sol":31520:31524  seed */
      dup3
        /* "test/solidity/Protocol.t.sol":31509:31541  abi.encode(seed, "counterparty") */
      add(0x20, mload(0x40))
      tag_169
      swap2
      swap1
      tag_170
      jump	// in
        /* "test/solidity/Protocol.t.sol":31484:31568  _bound(uint256(keccak256(abi.encode(seed, "counterparty"))), 0, accounts.length - 1) */
    tag_2485:
        /* "test/solidity/Protocol.t.sol":31475:31569  accounts[_bound(uint256(keccak256(abi.encode(seed, "counterparty"))), 0, accounts.length - 1)] */
      dup2
      sload
      dup2
      lt
      tag_2489
      jumpi
      tag_2489
      tag_162
      jump	// in
    tag_2489:
      0x00
      swap2
      dup3
      mstore
      0x20
      swap2
      dup3
      swap1
      keccak256
      add
      sload
        /* "test/solidity/Protocol.t.sol":31459:31472  _counterparty */
      0x26
        /* "test/solidity/Protocol.t.sol":31459:31569  _counterparty = accounts[_bound(uint256(keccak256(abi.encode(seed, "counterparty"))), 0, accounts.length - 1)] */
      dup1
      sload
      not(sub(shl(0xa0, 0x01), 0x01))
      and
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":31475:31569  accounts[_bound(uint256(keccak256(abi.encode(seed, "counterparty"))), 0, accounts.length - 1)] */
      swap1
      swap3
      and
        /* "test/solidity/Protocol.t.sol":31459:31569  _counterparty = accounts[_bound(uint256(keccak256(abi.encode(seed, "counterparty"))), 0, accounts.length - 1)] */
      swap2
      swap1
      swap2
      or
      swap1
      sstore
        /* "test/solidity/Protocol.t.sol":31628:31658  abi.encode(seed, "collateral") */
      mload(0x40)
        /* "test/solidity/Protocol.t.sol":31595:31602  markets */
      0x1c
      swap2
        /* "test/solidity/Protocol.t.sol":31603:31684  _bound(uint256(keccak256(abi.encode(seed, "collateral"))), 0, markets.length - 1) */
      tag_2491
      swap2
        /* "test/solidity/Protocol.t.sol":31628:31658  abi.encode(seed, "collateral") */
      tag_155
      swap2
        /* "test/solidity/Protocol.t.sol":31639:31643  seed */
      dup6
      swap2
        /* "test/solidity/Protocol.t.sol":31628:31658  abi.encode(seed, "collateral") */
      add
      tag_177
      jump	// in
        /* "test/solidity/Protocol.t.sol":31603:31684  _bound(uint256(keccak256(abi.encode(seed, "collateral"))), 0, markets.length - 1) */
    tag_2491:
        /* "test/solidity/Protocol.t.sol":31595:31685  markets[_bound(uint256(keccak256(abi.encode(seed, "collateral"))), 0, markets.length - 1)] */
      dup2
      sload
      dup2
      lt
      tag_2495
      jumpi
      tag_2495
      tag_162
      jump	// in
    tag_2495:
      0x00
      swap2
      dup3
      mstore
      0x20
      swap1
      swap2
      keccak256
      add
      sload
        /* "test/solidity/Protocol.t.sol":31575:31592  _collateralMarket */
      0x27
        /* "test/solidity/Protocol.t.sol":31575:31685  _collateralMarket = markets[_bound(uint256(keccak256(abi.encode(seed, "collateral"))), 0, markets.length - 1)] */
      dup1
      sload
      not(sub(shl(0xa0, 0x01), 0x01))
      and
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":31595:31685  markets[_bound(uint256(keccak256(abi.encode(seed, "collateral"))), 0, markets.length - 1)] */
      swap1
      swap3
      and
        /* "test/solidity/Protocol.t.sol":31575:31685  _collateralMarket = markets[_bound(uint256(keccak256(abi.encode(seed, "collateral"))), 0, markets.length - 1)] */
      swap2
      swap1
      swap2
      or
      swap1
      sstore
        /* "contracts/utils/FixedLib.sol":306:313  4 weeks */
      0x24ea00
        /* "test/solidity/Protocol.t.sol":31722:31757  block.timestamp % FixedLib.INTERVAL */
      tag_2497
        /* "contracts/utils/FixedLib.sol":306:313  4 weeks */
      dup2
        /* "test/solidity/Protocol.t.sol":31722:31737  block.timestamp */
      timestamp
        /* "test/solidity/Protocol.t.sol":31722:31757  block.timestamp % FixedLib.INTERVAL */
      tag_183
      jump	// in
    tag_2497:
        /* "test/solidity/Protocol.t.sol":31703:31758  block.timestamp - (block.timestamp % FixedLib.INTERVAL) */
      tag_2498
      swap1
        /* "test/solidity/Protocol.t.sol":31703:31718  block.timestamp */
      timestamp
        /* "test/solidity/Protocol.t.sol":31703:31758  block.timestamp - (block.timestamp % FixedLib.INTERVAL) */
      tag_158
      jump	// in
    tag_2498:
        /* "test/solidity/Protocol.t.sol":31703:31778  block.timestamp - (block.timestamp % FixedLib.INTERVAL) + FixedLib.INTERVAL */
      tag_2499
      swap2
      swap1
      tag_186
      jump	// in
    tag_2499:
        /* "test/solidity/Protocol.t.sol":31691:31700  _maturity */
      0x25
        /* "test/solidity/Protocol.t.sol":31691:31778  _maturity = block.timestamp - (block.timestamp % FixedLib.INTERVAL) + FixedLib.INTERVAL */
      sstore
        /* "test/solidity/Protocol.t.sol":31784:31809  vm.startPrank(msg.sender) */
      mload(0x40)
      shl(0xe1, 0x03223eab)
      dup2
      mstore
        /* "test/solidity/Protocol.t.sol":31798:31808  msg.sender */
      caller
        /* "test/solidity/Protocol.t.sol":31784:31809  vm.startPrank(msg.sender) */
      0x04
      dup3
      add
        /* "#utility.yul":7560:7611   */
      mstore
      0x00
      dup1
      mload
      0x20
      data_1a390d6c2ee89e11d2dffeb86f753e43f966d02cbb0b3bd3e6e1cdf50245ef50
      dup4
      codecopy
      dup2
      mload
      swap2
      mstore
        /* "test/solidity/Protocol.t.sol":31784:31797  vm.startPrank */
      swap1
      0x06447d56
      swap1
        /* "#utility.yul":7533:7551   */
      0x24
      add
        /* "test/solidity/Protocol.t.sol":31784:31809  vm.startPrank(msg.sender) */
      0x00
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      0x00
      dup8
      dup1
      extcodesize
      iszero
      dup1
      iszero
      tag_2501
      jumpi
      0x00
      dup1
      revert
    tag_2501:
      pop
      gas
      call
      iszero
      dup1
      iszero
      tag_2503
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_2503:
      pop
      pop
      pop
      pop
        /* "test/solidity/Protocol.t.sol":16076:16082  assets */
      dup3
        /* "test/solidity/Protocol.t.sol":33304:34233  modifier _collateral(uint256 assets, address account) {... */
      0xffffffffffffff
      and
        /* "test/solidity/Protocol.t.sol":16084:16094  msg.sender */
      caller
        /* "test/solidity/Protocol.t.sol":33372:33400  Auditor.MarketData memory md */
      tag_2505
      tag_974
      jump	// in
    tag_2505:
        /* "test/solidity/Protocol.t.sol":33408:33436  Auditor.MarketData memory cd */
      tag_2506
      tag_974
      jump	// in
    tag_2506:
        /* "test/solidity/Protocol.t.sol":33514:33521  auditor */
      sload(0x1b)
        /* "test/solidity/Protocol.t.sol":33530:33537  _market */
      sload(0x23)
        /* "test/solidity/Protocol.t.sol":33514:33538  auditor.markets(_market) */
      mload(0x40)
      shl(0xe0, 0x8e8f294b)
      dup2
      mstore
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":33530:33537  _market */
      swap2
      dup3
      and
        /* "test/solidity/Protocol.t.sol":33514:33538  auditor.markets(_market) */
      0x04
      dup3
      add
        /* "#utility.yul":7560:7611   */
      mstore
        /* "test/solidity/Protocol.t.sol":33514:33521  auditor */
      swap2
      and
      swap1
        /* "test/solidity/Protocol.t.sol":33514:33529  auditor.markets */
      0x8e8f294b
      swap1
        /* "#utility.yul":7533:7551   */
      0x24
      add
        /* "test/solidity/Protocol.t.sol":33514:33538  auditor.markets(_market) */
      0xa0
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      dup7
      gas
      staticcall
      iszero
      dup1
      iszero
      tag_2509
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_2509:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      dup2
      add
      swap1
      tag_2510
      swap2
      swap1
      tag_198
      jump	// in
    tag_2510:
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":33444:33538  (md.adjustFactor, md.decimals, md.index, md.isListed, md.priceFeed) = auditor.markets(_market) */
      swap1
      dup2
      and
        /* "test/solidity/Protocol.t.sol":33498:33510  md.priceFeed */
      0x80
      dup9
      add
        /* "test/solidity/Protocol.t.sol":33444:33538  (md.adjustFactor, md.decimals, md.index, md.isListed, md.priceFeed) = auditor.markets(_market) */
      mstore
      swap1
      iszero
      iszero
        /* "test/solidity/Protocol.t.sol":33485:33496  md.isListed */
      0x60
      dup8
      add
        /* "test/solidity/Protocol.t.sol":33444:33538  (md.adjustFactor, md.decimals, md.index, md.isListed, md.priceFeed) = auditor.markets(_market) */
      mstore
      0xff
      swap2
      dup3
      and
        /* "test/solidity/Protocol.t.sol":33475:33483  md.index */
      0x40
      dup1
      dup9
      add
        /* "test/solidity/Protocol.t.sol":33444:33538  (md.adjustFactor, md.decimals, md.index, md.isListed, md.priceFeed) = auditor.markets(_market) */
      swap2
      swap1
      swap2
      mstore
      swap3
      swap1
      swap2
      and
      0x20
        /* "test/solidity/Protocol.t.sol":33462:33473  md.decimals */
      dup7
      add
        /* "test/solidity/Protocol.t.sol":33444:33538  (md.adjustFactor, md.decimals, md.index, md.isListed, md.priceFeed) = auditor.markets(_market) */
      mstore
      sub(shl(0x80, 0x01), 0x01)
      swap3
      swap1
      swap3
      and
      dup5
      mstore
        /* "test/solidity/Protocol.t.sol":33616:33623  auditor */
      sload(0x1b)
        /* "test/solidity/Protocol.t.sol":33632:33649  _collateralMarket */
      sload(0x27)
        /* "test/solidity/Protocol.t.sol":33616:33650  auditor.markets(_collateralMarket) */
      swap2
      mload
      shl(0xe0, 0x8e8f294b)
      dup2
      mstore
        /* "test/solidity/Protocol.t.sol":33632:33649  _collateralMarket */
      swap2
      dup4
      and
        /* "test/solidity/Protocol.t.sol":33616:33650  auditor.markets(_collateralMarket) */
      0x04
      dup4
      add
        /* "#utility.yul":7560:7611   */
      mstore
        /* "test/solidity/Protocol.t.sol":33616:33623  auditor */
      swap1
      swap2
      and
      swap1
        /* "test/solidity/Protocol.t.sol":33616:33631  auditor.markets */
      0x8e8f294b
      swap1
        /* "#utility.yul":7533:7551   */
      0x24
      add
        /* "test/solidity/Protocol.t.sol":33616:33650  auditor.markets(_collateralMarket) */
      0xa0
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      dup7
      gas
      staticcall
      iszero
      dup1
      iszero
      tag_2513
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_2513:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      dup2
      add
      swap1
      tag_2514
      swap2
      swap1
      tag_198
      jump	// in
    tag_2514:
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":33546:33650  (cd.adjustFactor, cd.decimals, cd.index, cd.isListed, cd.priceFeed) = auditor.markets(_collateralMarket) */
      and
        /* "test/solidity/Protocol.t.sol":33600:33612  cd.priceFeed */
      0x80
      dup7
      add
        /* "test/solidity/Protocol.t.sol":33546:33650  (cd.adjustFactor, cd.decimals, cd.index, cd.isListed, cd.priceFeed) = auditor.markets(_collateralMarket) */
      mstore
      iszero
      iszero
        /* "test/solidity/Protocol.t.sol":33587:33598  cd.isListed */
      0x60
      dup6
      add
        /* "test/solidity/Protocol.t.sol":33546:33650  (cd.adjustFactor, cd.decimals, cd.index, cd.isListed, cd.priceFeed) = auditor.markets(_collateralMarket) */
      mstore
      0xff
      swap1
      dup2
      and
        /* "test/solidity/Protocol.t.sol":33577:33585  cd.index */
      0x40
      dup6
      add
        /* "test/solidity/Protocol.t.sol":33546:33650  (cd.adjustFactor, cd.decimals, cd.index, cd.isListed, cd.priceFeed) = auditor.markets(_collateralMarket) */
      mstore
      and
        /* "test/solidity/Protocol.t.sol":33564:33575  cd.decimals */
      0x20
      dup4
      add
        /* "test/solidity/Protocol.t.sol":33546:33650  (cd.adjustFactor, cd.decimals, cd.index, cd.isListed, cd.priceFeed) = auditor.markets(_collateralMarket) */
      dup2
      swap1
      mstore
      sub(shl(0x80, 0x01), 0x01)
      swap1
      swap2
      and
      dup3
      mstore
        /* "test/solidity/Protocol.t.sol":33547:33562  cd.adjustFactor */
      0x00
      swap1
        /* "test/solidity/Protocol.t.sol":33679:33897  assets... */
      tag_2515
      swap1
        /* "test/solidity/Protocol.t.sol":33845:33862  10 ** cd.decimals */
      tag_1327
      swap1
        /* "test/solidity/Protocol.t.sol":33845:33847  10 */
      0x0a
        /* "test/solidity/Protocol.t.sol":33845:33862  10 ** cd.decimals */
      tag_987
      jump	// in
        /* "test/solidity/Protocol.t.sol":33679:33897  assets... */
    tag_2515:
        /* "test/solidity/Protocol.t.sol":33658:33897  uint256 collateral = assets... */
      swap1
      pop
        /* "test/solidity/Protocol.t.sol":33909:33924  collateral != 0 */
      dup1
      iszero
        /* "test/solidity/Protocol.t.sol":33905:34216  if (collateral != 0) {... */
      tag_2529
      jumpi
        /* "test/solidity/Protocol.t.sol":33953:33963  msg.sender */
      caller
        /* "test/solidity/Protocol.t.sol":33973:33993  changePrank(account) */
      tag_2530
        /* "test/solidity/Protocol.t.sol":33985:33992  account */
      dup6
        /* "test/solidity/Protocol.t.sol":33973:33984  changePrank */
      tag_549
        /* "test/solidity/Protocol.t.sol":33973:33993  changePrank(account) */
      jump	// in
    tag_2530:
        /* "test/solidity/Protocol.t.sol":34021:34038  _collateralMarket */
      0x27
      0x00
      swap1
      sload
      swap1
      0x0100
      exp
      swap1
      div
      sub(shl(0xa0, 0x01), 0x01)
      and
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":34021:34044  _collateralMarket.asset */
      and
      0x38d52e0f
        /* "test/solidity/Protocol.t.sol":34021:34046  _collateralMarket.asset() */
      mload(0x40)
      dup2
      0xffffffff
      and
      0xe0
      shl
      dup2
      mstore
      0x04
      add
      0x20
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      dup7
      gas
      staticcall
      iszero
      dup1
      iszero
      tag_2532
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_2532:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      dup2
      add
      swap1
      tag_2533
      swap2
      swap1
      tag_167
      jump	// in
    tag_2533:
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":34003:34053  MockERC20(address(_collateralMarket.asset())).mint */
      and
      0x40c10f19
        /* "test/solidity/Protocol.t.sol":34054:34061  account */
      dup7
        /* "test/solidity/Protocol.t.sol":34063:34073  collateral */
      dup5
        /* "test/solidity/Protocol.t.sol":34003:34074  MockERC20(address(_collateralMarket.asset())).mint(account, collateral) */
      mload(0x40)
      dup4
      0xffffffff
      and
      0xe0
      shl
      dup2
      mstore
      0x04
      add
      tag_2534
      swap3
      swap2
      swap1
      tag_345
      jump	// in
    tag_2534:
      0x00
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      0x00
      dup8
      dup1
      extcodesize
      iszero
      dup1
      iszero
      tag_2535
      jumpi
      0x00
      dup1
      revert
    tag_2535:
      pop
      gas
      call
      iszero
      dup1
      iszero
      tag_2537
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_2537:
      pop
      pop
        /* "test/solidity/Protocol.t.sol":34084:34101  _collateralMarket */
      sload(0x27)
        /* "test/solidity/Protocol.t.sol":34084:34130  _collateralMarket.deposit(collateral, account) */
      mload(0x40)
      shl(0xe0, 0x6e553f65)
      dup2
      mstore
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":34084:34101  _collateralMarket */
      swap1
      swap2
      and
      swap3
      pop
        /* "test/solidity/Protocol.t.sol":34084:34109  _collateralMarket.deposit */
      0x6e553f65
      swap2
      pop
        /* "test/solidity/Protocol.t.sol":34084:34130  _collateralMarket.deposit(collateral, account) */
      tag_2538
      swap1
        /* "test/solidity/Protocol.t.sol":34110:34120  collateral */
      dup6
      swap1
        /* "test/solidity/Protocol.t.sol":34122:34129  account */
      dup10
      swap1
        /* "test/solidity/Protocol.t.sol":34084:34130  _collateralMarket.deposit(collateral, account) */
      0x04
      add
      tag_555
      jump	// in
    tag_2538:
      0x20
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      0x00
      dup8
      gas
      call
      iszero
      dup1
      iszero
      tag_2540
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_2540:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      dup2
      add
      swap1
      tag_2541
      swap2
      swap1
      tag_212
      jump	// in
    tag_2541:
      pop
        /* "test/solidity/Protocol.t.sol":34140:34147  auditor */
      sload(0x1b)
        /* "test/solidity/Protocol.t.sol":34160:34177  _collateralMarket */
      sload(0x27)
        /* "test/solidity/Protocol.t.sol":34140:34178  auditor.enterMarket(_collateralMarket) */
      mload(0x40)
      shl(0xe0, 0x3fe5d425)
      dup2
      mstore
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":34160:34177  _collateralMarket */
      swap2
      dup3
      and
        /* "test/solidity/Protocol.t.sol":34140:34178  auditor.enterMarket(_collateralMarket) */
      0x04
      dup3
      add
        /* "#utility.yul":7560:7611   */
      mstore
        /* "test/solidity/Protocol.t.sol":34140:34147  auditor */
      swap2
      and
      swap1
        /* "test/solidity/Protocol.t.sol":34140:34159  auditor.enterMarket */
      0x3fe5d425
      swap1
        /* "#utility.yul":7533:7551   */
      0x24
      add
        /* "test/solidity/Protocol.t.sol":34140:34178  auditor.enterMarket(_collateralMarket) */
      0x00
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      0x00
      dup8
      dup1
      extcodesize
      iszero
      dup1
      iszero
      tag_2543
      jumpi
      0x00
      dup1
      revert
    tag_2543:
      pop
      gas
      call
      iszero
      dup1
      iszero
      tag_2545
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_2545:
      pop
      pop
      pop
      pop
        /* "test/solidity/Protocol.t.sol":34188:34207  changePrank(sender) */
      tag_2546
        /* "test/solidity/Protocol.t.sol":34200:34206  sender */
      dup2
        /* "test/solidity/Protocol.t.sol":34188:34199  changePrank */
      tag_549
        /* "test/solidity/Protocol.t.sol":34188:34207  changePrank(sender) */
      jump	// in
    tag_2546:
        /* "test/solidity/Protocol.t.sol":33926:34216  {... */
      pop
        /* "test/solidity/Protocol.t.sol":33905:34216  if (collateral != 0) {... */
    tag_2529:
        /* "test/solidity/Protocol.t.sol":33364:34222  {... */
      pop
      pop
      pop
        /* "test/solidity/Protocol.t.sol":16102:16120  Binary memory pool */
      tag_2548
      mload(0x40)
      dup1
      0x40
      add
      0x40
      mstore
      dup1
      0x00
      dup2
      mstore
      0x20
      add
      0x00
      dup2
      mstore
      pop
      swap1
      jump
    tag_2548:
        /* "test/solidity/Protocol.t.sol":16163:16170  _market */
      sload(0x23)
        /* "test/solidity/Protocol.t.sol":16182:16191  _maturity */
      sload(0x25)
        /* "test/solidity/Protocol.t.sol":16163:16192  _market.fixedPools(_maturity) */
      mload(0x40)
      shl(0xe0, 0x4e7c5059)
      dup2
      mstore
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":16163:16170  _market */
      swap1
      swap3
      and
      swap2
        /* "test/solidity/Protocol.t.sol":16163:16181  _market.fixedPools */
      0x4e7c5059
      swap2
        /* "test/solidity/Protocol.t.sol":16163:16192  _market.fixedPools(_maturity) */
      tag_2549
      swap2
      0x04
      add
        /* "#utility.yul":10439:10464   */
      swap1
      dup2
      mstore
        /* "#utility.yul":10427:10429   */
      0x20
        /* "#utility.yul":10412:10430   */
      add
      swap1
        /* "#utility.yul":10284:10470   */
      jump
        /* "test/solidity/Protocol.t.sol":16163:16192  _market.fixedPools(_maturity) */
    tag_2549:
      0x80
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      dup7
      gas
      staticcall
      iszero
      dup1
      iszero
      tag_2551
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_2551:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      dup2
      add
      swap1
      tag_2552
      swap2
      swap1
      tag_730
      jump	// in
    tag_2552:
      pop
      pop
        /* "test/solidity/Protocol.t.sol":16126:16192  (pool.negative, pool.positive, , ) = _market.fixedPools(_maturity) */
      dup3
      mstore
        /* "test/solidity/Protocol.t.sol":16127:16140  pool.negative */
      0x20
      dup3
      add
        /* "test/solidity/Protocol.t.sol":16126:16192  (pool.negative, pool.positive, , ) = _market.fixedPools(_maturity) */
      mstore
        /* "test/solidity/Protocol.t.sol":16250:16257  _market */
      sload(0x23)
        /* "test/solidity/Protocol.t.sol":16142:16155  pool.positive */
      0x00
      swap1
        /* "test/solidity/Protocol.t.sol":16221:16258  previewFloatingAssetsAverage(_market) */
      tag_2553
      swap1
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":16250:16257  _market */
      and
        /* "test/solidity/Protocol.t.sol":16221:16249  previewFloatingAssetsAverage */
      tag_740
        /* "test/solidity/Protocol.t.sol":16221:16258  previewFloatingAssetsAverage(_market) */
      jump	// in
    tag_2553:
        /* "test/solidity/Protocol.t.sol":16198:16258  uint256 backupAssets = previewFloatingAssetsAverage(_market) */
      swap1
      pop
        /* "test/solidity/Protocol.t.sol":16264:16290  uint256 backupDebtAddition */
      0x00
        /* "test/solidity/Protocol.t.sol":16304:16323  uint256 newBorrowed */
      dup1
        /* "test/solidity/Protocol.t.sol":16342:16348  assets */
      dup9
        /* "test/solidity/Protocol.t.sol":16326:16348  pool.negative + assets */
      0xffffffffffffff
      and
        /* "test/solidity/Protocol.t.sol":16326:16330  pool */
      dup5
        /* "test/solidity/Protocol.t.sol":16326:16339  pool.negative */
      0x20
      add
      mload
        /* "test/solidity/Protocol.t.sol":16326:16348  pool.negative + assets */
      tag_2554
      swap2
      swap1
      tag_186
      jump	// in
    tag_2554:
        /* "test/solidity/Protocol.t.sol":16304:16348  uint256 newBorrowed = pool.negative + assets */
      swap1
      pop
        /* "test/solidity/Protocol.t.sol":16391:16452  Math.min(Math.max(pool.negative, pool.positive), newBorrowed) */
      tag_2555
        /* "test/solidity/Protocol.t.sol":16400:16438  Math.max(pool.negative, pool.positive) */
      tag_2556
        /* "test/solidity/Protocol.t.sol":16409:16413  pool */
      dup6
        /* "test/solidity/Protocol.t.sol":16409:16422  pool.negative */
      0x20
      add
      mload
        /* "test/solidity/Protocol.t.sol":16424:16428  pool */
      dup7
        /* "test/solidity/Protocol.t.sol":16424:16437  pool.positive */
      0x00
      add
      mload
        /* "test/solidity/Protocol.t.sol":16400:16408  Math.max */
      tag_2557
        /* "test/solidity/Protocol.t.sol":16400:16438  Math.max(pool.negative, pool.positive) */
      jump	// in
    tag_2556:
        /* "test/solidity/Protocol.t.sol":16440:16451  newBorrowed */
      dup3
        /* "test/solidity/Protocol.t.sol":16391:16399  Math.min */
      tag_791
        /* "test/solidity/Protocol.t.sol":16391:16452  Math.min(Math.max(pool.negative, pool.positive), newBorrowed) */
      jump	// in
    tag_2555:
        /* "test/solidity/Protocol.t.sol":16377:16452  newBorrowed - Math.min(Math.max(pool.negative, pool.positive), newBorrowed) */
      tag_2558
      swap1
        /* "test/solidity/Protocol.t.sol":16377:16388  newBorrowed */
      dup3
        /* "test/solidity/Protocol.t.sol":16377:16452  newBorrowed - Math.min(Math.max(pool.negative, pool.positive), newBorrowed) */
      tag_158
      jump	// in
    tag_2558:
        /* "test/solidity/Protocol.t.sol":16356:16452  backupDebtAddition = newBorrowed - Math.min(Math.max(pool.negative, pool.positive), newBorrowed) */
      swap2
      pop
        /* "test/solidity/Protocol.t.sol":16296:16459  {... */
      pop
        /* "test/solidity/Protocol.t.sol":16469:16475  assets */
      dup8
        /* "test/solidity/Protocol.t.sol":16469:16480  assets == 0 */
      0xffffffffffffff
      and
        /* "test/solidity/Protocol.t.sol":16479:16480  0 */
      0x00
        /* "test/solidity/Protocol.t.sol":16469:16480  assets == 0 */
      sub
        /* "test/solidity/Protocol.t.sol":16465:18087  if (assets == 0) {... */
      tag_2559
      jumpi
        /* "test/solidity/Protocol.t.sol":16490:16526  vm.expectRevert(ZeroBorrow.selector) */
      mload(0x40)
      shl(0xe5, 0x0618f587)
      dup2
      mstore
      0x00
      dup1
      mload
      0x20
      data_1a390d6c2ee89e11d2dffeb86f753e43f966d02cbb0b3bd3e6e1cdf50245ef50
      dup4
      codecopy
      dup2
      mload
      swap2
      mstore
        /* "test/solidity/Protocol.t.sol":16490:16505  vm.expectRevert */
      swap1
      0xc31eb0e0
      swap1
        /* "test/solidity/Protocol.t.sol":16490:16526  vm.expectRevert(ZeroBorrow.selector) */
      tag_2560
      swap1
      shl(0xe0, 0x774257f7)
        /* "test/solidity/Protocol.t.sol":16506:16525  ZeroBorrow.selector */
      swap1
        /* "test/solidity/Protocol.t.sol":16490:16526  vm.expectRevert(ZeroBorrow.selector) */
      0x04
      add
      tag_216
      jump	// in
    tag_2560:
      0x00
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      0x00
      dup8
      dup1
      extcodesize
      iszero
      dup1
      iszero
      tag_2561
      jumpi
      0x00
      dup1
      revert
    tag_2561:
      pop
      gas
      call
      iszero
      dup1
      iszero
      tag_2563
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_2563:
      pop
      pop
      pop
      pop
        /* "test/solidity/Protocol.t.sol":16465:18087  if (assets == 0) {... */
      jump(tag_2607)
    tag_2559:
        /* "test/solidity/Protocol.t.sol":16543:16556  pool.positive */
      dup3
      mload
        /* "test/solidity/Protocol.t.sol":16543:16571  pool.positive + backupAssets */
      tag_2565
      swap1
        /* "test/solidity/Protocol.t.sol":16559:16571  backupAssets */
      dup4
      swap1
        /* "test/solidity/Protocol.t.sol":16543:16571  pool.positive + backupAssets */
      tag_186
      jump	// in
    tag_2565:
        /* "test/solidity/Protocol.t.sol":16575:16576  0 */
      0x00
        /* "test/solidity/Protocol.t.sol":16543:16576  pool.positive + backupAssets == 0 */
      sub
        /* "test/solidity/Protocol.t.sol":16539:18087  if (pool.positive + backupAssets == 0) {... */
      tag_2566
      jumpi
        /* "test/solidity/Protocol.t.sol":16602:16611  bytes("") */
      0x40
      dup1
      mload
      0x20
      dup2
      add
      dup3
      mstore
        /* "lib/forge-std/src/Base.sol":309:346  uint256(keccak256("hevm cheat code")) */
      0x00
        /* "test/solidity/Protocol.t.sol":16602:16611  bytes("") */
      dup2
      mstore
        /* "test/solidity/Protocol.t.sol":16586:16612  vm.expectRevert(bytes("")) */
      swap1
      mload
      shl(0xe0, 0xf28dceb3)
      dup2
      mstore
      0x00
      dup1
      mload
      0x20
      data_1a390d6c2ee89e11d2dffeb86f753e43f966d02cbb0b3bd3e6e1cdf50245ef50
      dup4
      codecopy
      dup2
      mload
      swap2
      mstore
        /* "test/solidity/Protocol.t.sol":16586:16601  vm.expectRevert */
      swap2
      0xf28dceb3
      swap2
        /* "test/solidity/Protocol.t.sol":16586:16612  vm.expectRevert(bytes("")) */
      tag_2560
      swap2
        /* "test/solidity/Protocol.t.sol":16602:16611  bytes("") */
      swap1
        /* "test/solidity/Protocol.t.sol":16586:16612  vm.expectRevert(bytes("")) */
      0x04
      add
      tag_599
      jump	// in
        /* "test/solidity/Protocol.t.sol":16539:18087  if (pool.positive + backupAssets == 0) {... */
    tag_2566:
        /* "test/solidity/Protocol.t.sol":16660:16673  pool.positive */
      dup3
      mload
        /* "test/solidity/Protocol.t.sol":16645:16673  backupAssets + pool.positive */
      tag_2572
      swap1
        /* "test/solidity/Protocol.t.sol":16645:16657  backupAssets */
      dup4
        /* "test/solidity/Protocol.t.sol":16645:16673  backupAssets + pool.positive */
      tag_186
      jump	// in
    tag_2572:
        /* "test/solidity/Protocol.t.sol":16636:16642  assets */
      dup9
        /* "test/solidity/Protocol.t.sol":16636:16673  assets > backupAssets + pool.positive */
      0xffffffffffffff
      and
      gt
        /* "test/solidity/Protocol.t.sol":16636:16747  assets > backupAssets + pool.positive || (pool.negative + assets).divWadUp(backupAssets + pool.positive) > 1e18 */
      dup1
      tag_2573
      jumpi
      pop
        /* "test/solidity/Protocol.t.sol":16726:16739  pool.positive */
      dup3
      mload
        /* "test/solidity/Protocol.t.sol":16743:16747  1e18 */
      0x0de0b6b3a7640000
      swap1
        /* "test/solidity/Protocol.t.sol":16677:16740  (pool.negative + assets).divWadUp(backupAssets + pool.positive) */
      tag_2574
      swap1
        /* "test/solidity/Protocol.t.sol":16711:16739  backupAssets + pool.positive */
      tag_2575
      swap1
        /* "test/solidity/Protocol.t.sol":16711:16723  backupAssets */
      dup6
        /* "test/solidity/Protocol.t.sol":16711:16739  backupAssets + pool.positive */
      tag_186
      jump	// in
    tag_2575:
        /* "test/solidity/Protocol.t.sol":16694:16700  assets */
      dup11
        /* "test/solidity/Protocol.t.sol":16678:16700  pool.negative + assets */
      0xffffffffffffff
      and
        /* "test/solidity/Protocol.t.sol":16678:16682  pool */
      dup7
        /* "test/solidity/Protocol.t.sol":16678:16691  pool.negative */
      0x20
      add
      mload
        /* "test/solidity/Protocol.t.sol":16678:16700  pool.negative + assets */
      tag_760
      swap2
      swap1
      tag_186
      jump	// in
        /* "test/solidity/Protocol.t.sol":16677:16740  (pool.negative + assets).divWadUp(backupAssets + pool.positive) */
    tag_2574:
        /* "test/solidity/Protocol.t.sol":16677:16747  (pool.negative + assets).divWadUp(backupAssets + pool.positive) > 1e18 */
      gt
        /* "test/solidity/Protocol.t.sol":16636:16747  assets > backupAssets + pool.positive || (pool.negative + assets).divWadUp(backupAssets + pool.positive) > 1e18 */
    tag_2573:
        /* "test/solidity/Protocol.t.sol":16625:18087  if (... */
      iszero
      tag_2577
      jumpi
        /* "test/solidity/Protocol.t.sol":16762:16807  vm.expectRevert(UtilizationExceeded.selector) */
      mload(0x40)
      shl(0xe5, 0x0618f587)
      dup2
      mstore
      0x00
      dup1
      mload
      0x20
      data_1a390d6c2ee89e11d2dffeb86f753e43f966d02cbb0b3bd3e6e1cdf50245ef50
      dup4
      codecopy
      dup2
      mload
      swap2
      mstore
        /* "test/solidity/Protocol.t.sol":16762:16777  vm.expectRevert */
      swap1
      0xc31eb0e0
      swap1
        /* "test/solidity/Protocol.t.sol":16762:16807  vm.expectRevert(UtilizationExceeded.selector) */
      tag_2560
      swap1
      shl(0xe0, 0x86a8c2bd)
        /* "test/solidity/Protocol.t.sol":16778:16806  UtilizationExceeded.selector */
      swap1
        /* "test/solidity/Protocol.t.sol":16762:16807  vm.expectRevert(UtilizationExceeded.selector) */
      0x04
      add
      tag_216
      jump	// in
        /* "test/solidity/Protocol.t.sol":16625:18087  if (... */
    tag_2577:
        /* "test/solidity/Protocol.t.sol":16852:16853  0 */
      0x00
        /* "test/solidity/Protocol.t.sol":16831:16849  backupDebtAddition */
      dup2
        /* "test/solidity/Protocol.t.sol":16831:16853  backupDebtAddition > 0 */
      gt
        /* "test/solidity/Protocol.t.sol":16831:17066  backupDebtAddition > 0 &&... */
      dup1
      iszero
      tag_2583
      jumpi
      pop
        /* "test/solidity/Protocol.t.sol":17042:17049  _market */
      sload(0x23)
        /* "test/solidity/Protocol.t.sol":17042:17065  _market.reserveFactor() */
      0x40
      dup1
      mload
      shl(0xe2, 0x10c8adc5)
      dup2
      mstore
      swap1
      mload
        /* "test/solidity/Protocol.t.sol":16963:17066  (_market.floatingAssets() + previewNewFloatingDebt(_market)).mulWadDown(1e18 - _market.reserveFactor()) */
      tag_2584
      swap3
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":17042:17049  _market */
      and
      swap2
        /* "test/solidity/Protocol.t.sol":17042:17063  _market.reserveFactor */
      0x4322b714
      swap2
        /* "test/solidity/Protocol.t.sol":17042:17065  _market.reserveFactor() */
      0x04
      dup1
      dup4
      add
      swap3
      0x20
      swap3
      swap2
      swap1
      dup3
      swap1
      sub
      add
      dup2
        /* "test/solidity/Protocol.t.sol":17042:17049  _market */
      dup7
        /* "test/solidity/Protocol.t.sol":17042:17065  _market.reserveFactor() */
      gas
      staticcall
      iszero
      dup1
      iszero
      tag_1367
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
        /* "test/solidity/Protocol.t.sol":16963:17066  (_market.floatingAssets() + previewNewFloatingDebt(_market)).mulWadDown(1e18 - _market.reserveFactor()) */
    tag_2584:
        /* "test/solidity/Protocol.t.sol":16919:16926  _market */
      0x23
      0x00
      swap1
      sload
      swap1
      0x0100
      exp
      swap1
      div
      sub(shl(0xa0, 0x01), 0x01)
      and
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":16919:16952  _market.totalFloatingBorrowAssets */
      and
      0xeee8c9e0
        /* "test/solidity/Protocol.t.sol":16919:16954  _market.totalFloatingBorrowAssets() */
      mload(0x40)
      dup2
      0xffffffff
      and
      0xe0
      shl
      dup2
      mstore
      0x04
      add
      0x20
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      dup7
      gas
      staticcall
      iszero
      dup1
      iszero
      tag_2595
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_2595:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      dup2
      add
      swap1
      tag_2596
      swap2
      swap1
      tag_212
      jump	// in
    tag_2596:
        /* "test/solidity/Protocol.t.sol":16863:16870  _market */
      sload(0x23)
        /* "test/solidity/Protocol.t.sol":16863:16895  _market.floatingBackupBorrowed() */
      0x40
      dup1
      mload
      shl(0xe1, 0x461e5d2d)
      dup2
      mstore
      swap1
      mload
        /* "test/solidity/Protocol.t.sol":16898:16916  backupDebtAddition */
      dup6
      swap3
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":16863:16870  _market */
      and
      swap2
        /* "test/solidity/Protocol.t.sol":16863:16893  _market.floatingBackupBorrowed */
      0x8c3cba5a
      swap2
        /* "test/solidity/Protocol.t.sol":16863:16895  _market.floatingBackupBorrowed() */
      0x04
      dup1
      dup4
      add
      swap3
      0x20
      swap3
      swap2
      swap1
      dup3
      swap1
      sub
      add
      dup2
        /* "test/solidity/Protocol.t.sol":16863:16870  _market */
      dup7
        /* "test/solidity/Protocol.t.sol":16863:16895  _market.floatingBackupBorrowed() */
      gas
      staticcall
      iszero
      dup1
      iszero
      tag_2598
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_2598:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      dup2
      add
      swap1
      tag_2599
      swap2
      swap1
      tag_212
      jump	// in
    tag_2599:
        /* "test/solidity/Protocol.t.sol":16863:16916  _market.floatingBackupBorrowed() + backupDebtAddition */
      tag_2600
      swap2
      swap1
      tag_186
      jump	// in
    tag_2600:
        /* "test/solidity/Protocol.t.sol":16863:16954  _market.floatingBackupBorrowed() + backupDebtAddition + _market.totalFloatingBorrowAssets() */
      tag_2601
      swap2
      swap1
      tag_186
      jump	// in
    tag_2601:
        /* "test/solidity/Protocol.t.sol":16863:17066  _market.floatingBackupBorrowed() + backupDebtAddition + _market.totalFloatingBorrowAssets() >... */
      gt
        /* "test/solidity/Protocol.t.sol":16831:17066  backupDebtAddition > 0 &&... */
    tag_2583:
        /* "test/solidity/Protocol.t.sol":16820:18087  if (... */
      iszero
      tag_2602
      jumpi
        /* "test/solidity/Protocol.t.sol":17081:17136  vm.expectRevert(InsufficientProtocolLiquidity.selector) */
      mload(0x40)
      shl(0xe5, 0x0618f587)
      dup2
      mstore
      0x00
      dup1
      mload
      0x20
      data_1a390d6c2ee89e11d2dffeb86f753e43f966d02cbb0b3bd3e6e1cdf50245ef50
      dup4
      codecopy
      dup2
      mload
      swap2
      mstore
        /* "test/solidity/Protocol.t.sol":17081:17096  vm.expectRevert */
      swap1
      0xc31eb0e0
      swap1
        /* "test/solidity/Protocol.t.sol":17081:17136  vm.expectRevert(InsufficientProtocolLiquidity.selector) */
      tag_2560
      swap1
      shl(0xe3, 0x2d41ad)
        /* "test/solidity/Protocol.t.sol":17097:17135  InsufficientProtocolLiquidity.selector */
      swap1
        /* "test/solidity/Protocol.t.sol":17081:17136  vm.expectRevert(InsufficientProtocolLiquidity.selector) */
      0x04
      add
      tag_216
      jump	// in
        /* "test/solidity/Protocol.t.sol":16820:18087  if (... */
    tag_2602:
        /* "test/solidity/Protocol.t.sol":17157:17169  uint256 fees */
      0x00
        /* "test/solidity/Protocol.t.sol":17172:17313  assets.mulWadDown(... */
      tag_2608
        /* "test/solidity/Protocol.t.sol":17199:17206  _market */
      0x23
      0x00
      swap1
      sload
      swap1
      0x0100
      exp
      swap1
      div
      sub(shl(0xa0, 0x01), 0x01)
      and
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":17199:17224  _market.interestRateModel */
      and
      0xf3fdb15a
        /* "test/solidity/Protocol.t.sol":17199:17226  _market.interestRateModel() */
      mload(0x40)
      dup2
      0xffffffff
      and
      0xe0
      shl
      dup2
      mstore
      0x04
      add
      0x20
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      dup7
      gas
      staticcall
      iszero
      dup1
      iszero
      tag_2610
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_2610:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      dup2
      add
      swap1
      tag_2611
      swap2
      swap1
      tag_167
      jump	// in
    tag_2611:
        /* "test/solidity/Protocol.t.sol":17243:17252  _maturity */
      sload(0x25)
        /* "test/solidity/Protocol.t.sol":17262:17275  pool.negative */
      0x20
      dup8
      add
      mload
        /* "test/solidity/Protocol.t.sol":17277:17290  pool.positive */
      dup8
      mload
        /* "test/solidity/Protocol.t.sol":17199:17305  _market.interestRateModel().fixedBorrowRate(_maturity, assets, pool.negative, pool.positive, backupAssets) */
      mload(0x40)
      shl(0xe0, 0xdf635f3d)
      dup2
      mstore
      0x04
      dup2
      add
        /* "#utility.yul":39190:39215   */
      swap4
      swap1
      swap4
      mstore
        /* "#utility.yul":39263:39279   */
      0xffffffffffffff
        /* "#utility.yul":39251:39280   */
      dup15
      and
        /* "#utility.yul":39231:39249   */
      0x24
      dup5
      add
        /* "#utility.yul":39224:39281   */
      mstore
        /* "#utility.yul":39297:39315   */
      0x44
      dup4
      add
        /* "#utility.yul":39290:39324   */
      swap2
      swap1
      swap2
      mstore
        /* "#utility.yul":39340:39358   */
      0x64
      dup3
      add
        /* "#utility.yul":39333:39367   */
      mstore
        /* "#utility.yul":39383:39402   */
      0x84
      dup2
      add
        /* "#utility.yul":39376:39411   */
      dup7
      swap1
      mstore
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":17199:17242  _market.interestRateModel().fixedBorrowRate */
      swap2
      swap1
      swap2
      and
      swap1
      0xdf635f3d
      swap1
        /* "#utility.yul":39162:39181   */
      0xa4
      add
        /* "test/solidity/Protocol.t.sol":17199:17305  _market.interestRateModel().fixedBorrowRate(_maturity, assets, pool.negative, pool.positive, backupAssets) */
      0x20
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      dup7
      gas
      staticcall
      iszero
      dup1
      iszero
      tag_2615
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_2615:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      dup2
      add
      swap1
      tag_2616
      swap2
      swap1
      tag_212
      jump	// in
    tag_2616:
        /* "test/solidity/Protocol.t.sol":17172:17189  assets.mulWadDown */
      0xffffffffffffff
      dup12
      and
      swap1
      tag_1375
        /* "test/solidity/Protocol.t.sol":17172:17313  assets.mulWadDown(... */
      jump	// in
    tag_2608:
        /* "test/solidity/Protocol.t.sol":17157:17313  uint256 fees = assets.mulWadDown(... */
      swap1
      pop
        /* "test/solidity/Protocol.t.sol":17355:17503  fees.mulDivDown(... */
      tag_2617
        /* "test/solidity/Protocol.t.sol":17389:17479  Math.min(pool.negative + assets - Math.min(pool.negative + assets, pool.positive), assets) */
      tag_2618
        /* "test/solidity/Protocol.t.sol":17423:17470  Math.min(pool.negative + assets, pool.positive) */
      tag_2619
        /* "test/solidity/Protocol.t.sol":17448:17454  assets */
      dup12
        /* "test/solidity/Protocol.t.sol":17432:17454  pool.negative + assets */
      0xffffffffffffff
      and
        /* "test/solidity/Protocol.t.sol":17432:17436  pool */
      dup8
        /* "test/solidity/Protocol.t.sol":17432:17445  pool.negative */
      0x20
      add
      mload
        /* "test/solidity/Protocol.t.sol":17432:17454  pool.negative + assets */
      tag_2620
      swap2
      swap1
      tag_186
      jump	// in
    tag_2620:
        /* "test/solidity/Protocol.t.sol":17456:17469  pool.positive */
      dup8
      mload
        /* "test/solidity/Protocol.t.sol":17423:17431  Math.min */
      tag_791
        /* "test/solidity/Protocol.t.sol":17423:17470  Math.min(pool.negative + assets, pool.positive) */
      jump	// in
    tag_2619:
        /* "test/solidity/Protocol.t.sol":17414:17420  assets */
      dup12
        /* "test/solidity/Protocol.t.sol":17398:17420  pool.negative + assets */
      0xffffffffffffff
      and
        /* "test/solidity/Protocol.t.sol":17398:17402  pool */
      dup8
        /* "test/solidity/Protocol.t.sol":17398:17411  pool.negative */
      0x20
      add
      mload
        /* "test/solidity/Protocol.t.sol":17398:17420  pool.negative + assets */
      tag_2621
      swap2
      swap1
      tag_186
      jump	// in
    tag_2621:
        /* "test/solidity/Protocol.t.sol":17398:17470  pool.negative + assets - Math.min(pool.negative + assets, pool.positive) */
      tag_2622
      swap2
      swap1
      tag_158
      jump	// in
    tag_2622:
        /* "test/solidity/Protocol.t.sol":17472:17478  assets */
      dup12
        /* "test/solidity/Protocol.t.sol":17389:17479  Math.min(pool.negative + assets - Math.min(pool.negative + assets, pool.positive), assets) */
      0xffffffffffffff
      and
        /* "test/solidity/Protocol.t.sol":17389:17397  Math.min */
      tag_791
        /* "test/solidity/Protocol.t.sol":17389:17479  Math.min(pool.negative + assets - Math.min(pool.negative + assets, pool.positive), assets) */
      jump	// in
    tag_2618:
        /* "test/solidity/Protocol.t.sol":17380:17479  assets - Math.min(pool.negative + assets - Math.min(pool.negative + assets, pool.positive), assets) */
      tag_2623
      swap1
      0xffffffffffffff
      dup13
      and
      tag_158
      jump	// in
    tag_2623:
        /* "test/solidity/Protocol.t.sol":17355:17359  fees */
      dup3
      swap1
        /* "test/solidity/Protocol.t.sol":17355:17503  fees.mulDivDown(... */
      0xffffffffffffff
      dup13
      and
        /* "test/solidity/Protocol.t.sol":17355:17370  fees.mulDivDown */
      tag_2085
        /* "test/solidity/Protocol.t.sol":17355:17503  fees.mulDivDown(... */
      jump	// in
    tag_2617:
        /* "test/solidity/Protocol.t.sol":17344:17351  _market */
      and(sub(shl(0xa0, 0x01), 0x01), sload(0x23))
        /* "test/solidity/Protocol.t.sol":17321:17352  newAccumulatedEarnings[_market] */
      0x00
      swap1
      dup2
      mstore
        /* "test/solidity/Protocol.t.sol":17321:17343  newAccumulatedEarnings */
      0x22
        /* "test/solidity/Protocol.t.sol":17321:17352  newAccumulatedEarnings[_market] */
      0x20
      swap1
      dup2
      mstore
      0x40
      dup1
      dup4
      keccak256
        /* "test/solidity/Protocol.t.sol":17321:17503  newAccumulatedEarnings[_market] = fees.mulDivDown(... */
      swap4
      swap1
      swap4
      sstore
      dup3
      mload
      dup1
      dup5
      add
      swap1
      swap4
      mstore
      dup2
      dup4
      mstore
      dup3
      add
      mstore
        /* "test/solidity/Protocol.t.sol":17614:17621  _market */
      sload(0x23)
        /* "test/solidity/Protocol.t.sol":17585:17640  accountLiquidity(msg.sender, _market, assets + fees, 0) */
      tag_2625
      swap1
        /* "test/solidity/Protocol.t.sol":17602:17612  msg.sender */
      caller
      swap1
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":17614:17621  _market */
      and
        /* "test/solidity/Protocol.t.sol":17623:17636  assets + fees */
      tag_2626
        /* "test/solidity/Protocol.t.sol":17632:17636  fees */
      dup6
        /* "test/solidity/Protocol.t.sol":17623:17636  assets + fees */
      0xffffffffffffff
      dup16
      and
      tag_186
      jump	// in
    tag_2626:
        /* "test/solidity/Protocol.t.sol":17638:17639  0 */
      0x00
        /* "test/solidity/Protocol.t.sol":17585:17601  accountLiquidity */
      tag_207
        /* "test/solidity/Protocol.t.sol":17585:17640  accountLiquidity(msg.sender, _market, assets + fees, 0) */
      jump	// in
    tag_2625:
        /* "test/solidity/Protocol.t.sol":17563:17581  liquidity.negative */
      0x20
      dup1
      dup5
      add
        /* "test/solidity/Protocol.t.sol":17542:17640  (liquidity.positive, liquidity.negative) = accountLiquidity(msg.sender, _market, assets + fees, 0) */
      swap2
      dup3
      mstore
      swap2
      dup4
      mstore
        /* "test/solidity/Protocol.t.sol":17671:17678  _market */
      and(sub(shl(0xa0, 0x01), 0x01), sload(0x23))
        /* "test/solidity/Protocol.t.sol":17543:17561  liquidity.positive */
      0x00
        /* "test/solidity/Protocol.t.sol":17648:17679  newAccumulatedEarnings[_market] */
      swap1
      dup2
      mstore
        /* "test/solidity/Protocol.t.sol":17648:17670  newAccumulatedEarnings */
      0x22
        /* "test/solidity/Protocol.t.sol":17648:17679  newAccumulatedEarnings[_market] */
      swap1
      swap3
      mstore
      0x40
      dup3
      keccak256
        /* "test/solidity/Protocol.t.sol":17648:17683  newAccumulatedEarnings[_market] = 0 */
      swap2
      swap1
      swap2
      sstore
        /* "test/solidity/Protocol.t.sol":17716:17734  liquidity.negative */
      mload
        /* "test/solidity/Protocol.t.sol":17695:17713  liquidity.positive */
      dup2
      mload
        /* "test/solidity/Protocol.t.sol":17695:17734  liquidity.positive < liquidity.negative */
      lt
        /* "test/solidity/Protocol.t.sol":17691:18081  if (liquidity.positive < liquidity.negative) {... */
      iszero
      tag_2627
      jumpi
        /* "test/solidity/Protocol.t.sol":17746:17800  vm.expectRevert(InsufficientAccountLiquidity.selector) */
      mload(0x40)
      shl(0xe5, 0x0618f587)
      dup2
      mstore
      0x00
      dup1
      mload
      0x20
      data_1a390d6c2ee89e11d2dffeb86f753e43f966d02cbb0b3bd3e6e1cdf50245ef50
      dup4
      codecopy
      dup2
      mload
      swap2
      mstore
        /* "test/solidity/Protocol.t.sol":17746:17761  vm.expectRevert */
      swap1
      0xc31eb0e0
      swap1
        /* "test/solidity/Protocol.t.sol":17746:17800  vm.expectRevert(InsufficientAccountLiquidity.selector) */
      tag_2628
      swap1
      shl(0xe1, 0x0aeac0bb)
        /* "test/solidity/Protocol.t.sol":17762:17799  InsufficientAccountLiquidity.selector */
      swap1
        /* "test/solidity/Protocol.t.sol":17746:17800  vm.expectRevert(InsufficientAccountLiquidity.selector) */
      0x04
      add
      tag_216
      jump	// in
    tag_2628:
      0x00
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      0x00
      dup8
      dup1
      extcodesize
      iszero
      dup1
      iszero
      tag_2629
      jumpi
      0x00
      dup1
      revert
    tag_2629:
      pop
      gas
      call
      iszero
      dup1
      iszero
      tag_2631
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_2631:
      pop
      pop
      pop
      pop
        /* "test/solidity/Protocol.t.sol":17691:18081  if (liquidity.positive < liquidity.negative) {... */
      jump(tag_2642)
    tag_2627:
        /* "test/solidity/Protocol.t.sol":17828:17834  _asset */
      0x24
      dup1
      sload
        /* "test/solidity/Protocol.t.sol":17853:17860  _market */
      sload(0x23)
        /* "test/solidity/Protocol.t.sol":17828:17862  _asset.balanceOf(address(_market)) */
      mload(0x40)
      shl(0xe0, 0x70a08231)
      dup2
      mstore
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":17853:17860  _market */
      swap2
      dup3
      and
        /* "test/solidity/Protocol.t.sol":17828:17862  _asset.balanceOf(address(_market)) */
      0x04
      dup3
      add
        /* "#utility.yul":7560:7611   */
      mstore
        /* "test/solidity/Protocol.t.sol":17828:17834  _asset */
      swap2
      and
      swap2
        /* "test/solidity/Protocol.t.sol":17828:17844  _asset.balanceOf */
      0x70a08231
      swap2
        /* "#utility.yul":7533:7551   */
      add
        /* "test/solidity/Protocol.t.sol":17828:17862  _asset.balanceOf(address(_market)) */
      0x20
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      dup7
      gas
      staticcall
      iszero
      dup1
      iszero
      tag_2635
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_2635:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      dup2
      add
      swap1
      tag_2636
      swap2
      swap1
      tag_212
      jump	// in
    tag_2636:
        /* "test/solidity/Protocol.t.sol":17819:17825  assets */
      dup11
        /* "test/solidity/Protocol.t.sol":17819:17862  assets > _asset.balanceOf(address(_market)) */
      0xffffffffffffff
      and
      gt
        /* "test/solidity/Protocol.t.sol":17815:18081  if (assets > _asset.balanceOf(address(_market))) {... */
      iszero
      tag_2637
      jumpi
        /* "test/solidity/Protocol.t.sol":17890:17899  bytes("") */
      0x40
      dup1
      mload
      0x20
      dup2
      add
      dup3
      mstore
        /* "lib/forge-std/src/Base.sol":309:346  uint256(keccak256("hevm cheat code")) */
      0x00
        /* "test/solidity/Protocol.t.sol":17890:17899  bytes("") */
      dup2
      mstore
        /* "test/solidity/Protocol.t.sol":17874:17900  vm.expectRevert(bytes("")) */
      swap1
      mload
      shl(0xe0, 0xf28dceb3)
      dup2
      mstore
      0x00
      dup1
      mload
      0x20
      data_1a390d6c2ee89e11d2dffeb86f753e43f966d02cbb0b3bd3e6e1cdf50245ef50
      dup4
      codecopy
      dup2
      mload
      swap2
      mstore
        /* "test/solidity/Protocol.t.sol":17874:17889  vm.expectRevert */
      swap2
      0xf28dceb3
      swap2
        /* "test/solidity/Protocol.t.sol":17874:17900  vm.expectRevert(bytes("")) */
      tag_2628
      swap2
        /* "test/solidity/Protocol.t.sol":17890:17899  bytes("") */
      swap1
        /* "test/solidity/Protocol.t.sol":17874:17900  vm.expectRevert(bytes("")) */
      0x04
      add
      tag_599
      jump	// in
        /* "test/solidity/Protocol.t.sol":17815:18081  if (assets > _asset.balanceOf(address(_market))) {... */
    tag_2637:
        /* "test/solidity/Protocol.t.sol":17971:17978  _market */
      sload(0x23)
        /* "test/solidity/Protocol.t.sol":17925:17980  vm.expectEmit(true, true, true, true, address(_market)) */
      mload(0x40)
      shl(0xe0, 0x81bad6f3)
      dup2
      mstore
      0x00
      dup1
      mload
      0x20
      data_1a390d6c2ee89e11d2dffeb86f753e43f966d02cbb0b3bd3e6e1cdf50245ef50
      dup4
      codecopy
      dup2
      mload
      swap2
      mstore
        /* "test/solidity/Protocol.t.sol":17925:17938  vm.expectEmit */
      swap2
      0x81bad6f3
      swap2
        /* "test/solidity/Protocol.t.sol":17925:17980  vm.expectEmit(true, true, true, true, address(_market)) */
      tag_2643
      swap2
        /* "test/solidity/Protocol.t.sol":17939:17943  true */
      0x01
      swap2
      dup3
      swap2
      dup3
      swap2
      dup3
      swap2
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":17971:17978  _market */
      and
      swap1
        /* "test/solidity/Protocol.t.sol":17925:17980  vm.expectEmit(true, true, true, true, address(_market)) */
      0x04
      add
      tag_228
      jump	// in
    tag_2643:
      0x00
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      0x00
      dup8
      dup1
      extcodesize
      iszero
      dup1
      iszero
      tag_2644
      jumpi
      0x00
      dup1
      revert
    tag_2644:
      pop
      gas
      call
      iszero
      dup1
      iszero
      tag_2646
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_2646:
      pop
      pop
      pop
      pop
        /* "test/solidity/Protocol.t.sol":18047:18057  msg.sender */
      caller
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":17995:18072  BorrowAtMaturity(_maturity, msg.sender, msg.sender, msg.sender, assets, fees) */
      and
        /* "test/solidity/Protocol.t.sol":18035:18045  msg.sender */
      caller
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":17995:18072  BorrowAtMaturity(_maturity, msg.sender, msg.sender, msg.sender, assets, fees) */
      and
        /* "test/solidity/Protocol.t.sol":18012:18021  _maturity */
      sload(0x25)
        /* "test/solidity/Protocol.t.sol":17995:18072  BorrowAtMaturity(_maturity, msg.sender, msg.sender, msg.sender, assets, fees) */
      0x66866b472f27d55d69496091bbd651907b2fb1041b3eeaca6e565ae5b5af4013
        /* "test/solidity/Protocol.t.sol":18023:18033  msg.sender */
      caller
        /* "test/solidity/Protocol.t.sol":18059:18065  assets */
      dup15
        /* "test/solidity/Protocol.t.sol":18067:18071  fees */
      dup8
        /* "test/solidity/Protocol.t.sol":17995:18072  BorrowAtMaturity(_maturity, msg.sender, msg.sender, msg.sender, assets, fees) */
      mload(0x40)
      tag_2647
      swap4
      swap3
      swap2
      swap1
      sub(shl(0xa0, 0x01), 0x01)
        /* "#utility.yul":39641:39673   */
      swap4
      swap1
      swap4
      and
        /* "#utility.yul":39623:39674   */
      dup4
      mstore
        /* "#utility.yul":39722:39738   */
      0xffffffffffffff
        /* "#utility.yul":39710:39739   */
      swap2
      swap1
      swap2
      and
        /* "#utility.yul":39705:39707   */
      0x20
        /* "#utility.yul":39690:39708   */
      dup4
      add
        /* "#utility.yul":39683:39740   */
      mstore
        /* "#utility.yul":39771:39773   */
      0x40
        /* "#utility.yul":39756:39774   */
      dup3
      add
        /* "#utility.yul":39749:39783   */
      mstore
        /* "#utility.yul":39611:39613   */
      0x60
        /* "#utility.yul":39596:39614   */
      add
      swap1
        /* "#utility.yul":39422:39789   */
      jump
        /* "test/solidity/Protocol.t.sol":17995:18072  BorrowAtMaturity(_maturity, msg.sender, msg.sender, msg.sender, assets, fees) */
    tag_2647:
      mload(0x40)
      dup1
      swap2
      sub
      swap1
      log4
        /* "test/solidity/Protocol.t.sol":17815:18081  if (assets > _asset.balanceOf(address(_market))) {... */
    tag_2642:
        /* "test/solidity/Protocol.t.sol":17149:18087  {... */
      pop
      pop
        /* "test/solidity/Protocol.t.sol":16820:18087  if (... */
    tag_2607:
        /* "test/solidity/Protocol.t.sol":18113:18120  _market */
      sload(0x23)
        /* "test/solidity/Protocol.t.sol":18138:18147  _maturity */
      sload(0x25)
        /* "test/solidity/Protocol.t.sol":18113:18199  _market.borrowAtMaturity(_maturity, assets, type(uint256).max, msg.sender, msg.sender) */
      mload(0x40)
      shl(0xe1, 0x0d2dcf31)
      dup2
      mstore
        /* "test/solidity/Protocol.t.sol":18092:18110  uint256 assetsOwed */
      0x00
      swap3
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":18113:18120  _market */
      and
      swap2
        /* "test/solidity/Protocol.t.sol":18113:18137  _market.borrowAtMaturity */
      0x1a5b9e62
      swap2
        /* "test/solidity/Protocol.t.sol":18113:18199  _market.borrowAtMaturity(_maturity, assets, type(uint256).max, msg.sender, msg.sender) */
      tag_2649
      swap2
        /* "test/solidity/Protocol.t.sol":18138:18147  _maturity */
      swap1
        /* "test/solidity/Protocol.t.sol":18149:18155  assets */
      dup14
      swap1
      not(0x00)
        /* "test/solidity/Protocol.t.sol":18157:18174  type(uint256).max */
      swap1
        /* "test/solidity/Protocol.t.sol":18176:18186  msg.sender */
      caller
      swap1
      dup2
      swap1
        /* "test/solidity/Protocol.t.sol":18113:18199  _market.borrowAtMaturity(_maturity, assets, type(uint256).max, msg.sender, msg.sender) */
      0x04
      add
      tag_836
      jump	// in
    tag_2649:
      0x20
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      0x00
      dup8
      gas
      call
      iszero
      dup1
      iszero
      tag_2652
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_2652:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      dup2
      add
      swap1
      tag_2653
      swap2
      swap1
      tag_212
      jump	// in
    tag_2653:
        /* "test/solidity/Protocol.t.sol":18092:18199  uint256 assetsOwed = _market.borrowAtMaturity(_maturity, assets, type(uint256).max, msg.sender, msg.sender) */
      swap1
      pop
        /* "test/solidity/Protocol.t.sol":18209:18223  assetsOwed > 0 */
      dup1
      iszero
        /* "test/solidity/Protocol.t.sol":18205:18256  if (assetsOwed > 0) _asset.burn(msg.sender, assets) */
      tag_1250
      jumpi
        /* "test/solidity/Protocol.t.sol":18225:18231  _asset */
      sload(0x24)
        /* "test/solidity/Protocol.t.sol":18225:18256  _asset.burn(msg.sender, assets) */
      mload(0x40)
      shl(0xe2, 0x2770a7eb)
      dup2
      mstore
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":18225:18231  _asset */
      swap1
      swap2
      and
      swap1
        /* "test/solidity/Protocol.t.sol":18225:18236  _asset.burn */
      0x9dc29fac
      swap1
        /* "test/solidity/Protocol.t.sol":18225:18256  _asset.burn(msg.sender, assets) */
      tag_1251
      swap1
        /* "test/solidity/Protocol.t.sol":18237:18247  msg.sender */
      caller
      swap1
        /* "test/solidity/Protocol.t.sol":18249:18255  assets */
      dup14
      swap1
        /* "test/solidity/Protocol.t.sol":18225:18256  _asset.burn(msg.sender, assets) */
      0x04
      add
      tag_497
      jump	// in
        /* "test/solidity/Protocol.t.sol":5233:10403  function invariants() external {... */
    tag_147:
        /* "test/solidity/Protocol.t.sol":5275:5284  uint256 i */
      0x00
        /* "test/solidity/Protocol.t.sol":5270:6531  for (uint256 i = 0; i < accounts.length; ++i) {... */
    tag_2663:
        /* "test/solidity/Protocol.t.sol":5294:5302  accounts */
      0x1d
        /* "test/solidity/Protocol.t.sol":5294:5309  accounts.length */
      sload
        /* "test/solidity/Protocol.t.sol":5290:5309  i < accounts.length */
      dup2
      lt
        /* "test/solidity/Protocol.t.sol":5270:6531  for (uint256 i = 0; i < accounts.length; ++i) {... */
      iszero
      tag_2664
      jumpi
        /* "test/solidity/Protocol.t.sol":5324:5339  address account */
      0x00
        /* "test/solidity/Protocol.t.sol":5342:5350  accounts */
      0x1d
        /* "test/solidity/Protocol.t.sol":5351:5352  i */
      dup3
        /* "test/solidity/Protocol.t.sol":5342:5353  accounts[i] */
      dup2
      sload
      dup2
      lt
      tag_2667
      jumpi
      tag_2667
      tag_162
      jump	// in
    tag_2667:
      0x00
      swap2
      dup3
      mstore
      0x20
      dup3
      keccak256
      add
      sload
      sub(shl(0xa0, 0x01), 0x01)
      and
      swap2
      pop
        /* "test/solidity/Protocol.t.sol":5361:6525  for (uint256 j = 0; j < markets.length; ++j) {... */
    tag_2669:
        /* "test/solidity/Protocol.t.sol":5385:5392  markets */
      0x1c
        /* "test/solidity/Protocol.t.sol":5385:5399  markets.length */
      sload
        /* "test/solidity/Protocol.t.sol":5381:5399  j < markets.length */
      dup2
      lt
        /* "test/solidity/Protocol.t.sol":5361:6525  for (uint256 j = 0; j < markets.length; ++j) {... */
      iszero
      tag_2670
      jumpi
        /* "test/solidity/Protocol.t.sol":5419:5443  uint256 packedMaturities */
      0x00
        /* "test/solidity/Protocol.t.sol":5449:5456  markets */
      0x1c
        /* "test/solidity/Protocol.t.sol":5457:5458  j */
      dup3
        /* "test/solidity/Protocol.t.sol":5449:5459  markets[j] */
      dup2
      sload
      dup2
      lt
      tag_2673
      jumpi
      tag_2673
      tag_162
      jump	// in
    tag_2673:
      0x00
      swap2
      dup3
      mstore
      0x20
      swap1
      swap2
      keccak256
      add
      sload
        /* "test/solidity/Protocol.t.sol":5449:5477  markets[j].accounts(account) */
      mload(0x40)
      shl(0xe1, 0x2f2e0371)
      dup2
      mstore
      sub(shl(0xa0, 0x01), 0x01)
        /* "#utility.yul":7578:7610   */
      dup6
      dup2
      and
        /* "test/solidity/Protocol.t.sol":5449:5477  markets[j].accounts(account) */
      0x04
      dup4
      add
        /* "#utility.yul":7560:7611   */
      mstore
        /* "test/solidity/Protocol.t.sol":5449:5459  markets[j] */
      swap1
      swap2
      and
      swap1
        /* "test/solidity/Protocol.t.sol":5449:5468  markets[j].accounts */
      0x5e5c06e2
      swap1
        /* "#utility.yul":7533:7551   */
      0x24
      add
        /* "test/solidity/Protocol.t.sol":5449:5477  markets[j].accounts(account) */
      0x60
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      dup7
      gas
      staticcall
      iszero
      dup1
      iszero
      tag_2677
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_2677:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      dup2
      add
      swap1
      tag_2678
      swap2
      swap1
      tag_1034
      jump	// in
    tag_2678:
      pop
        /* "test/solidity/Protocol.t.sol":5589:5591  32 */
      0x20
        /* "test/solidity/Protocol.t.sol":5569:5591  packedMaturities >> 32 */
      dup2
      swap1
      shr
      swap3
      pop
        /* "test/solidity/Protocol.t.sol":5526:5539  (1 << 32) - 1 */
      0xffffffff
        /* "test/solidity/Protocol.t.sol":5506:5540  packedMaturities & ((1 << 32) - 1) */
      and
      swap1
      pop
        /* "test/solidity/Protocol.t.sol":5601:5968  while (packedMaturities != 0) {... */
    tag_2679:
        /* "test/solidity/Protocol.t.sol":5608:5629  packedMaturities != 0 */
      dup2
      iszero
        /* "test/solidity/Protocol.t.sol":5601:5968  while (packedMaturities != 0) {... */
      tag_2680
      jumpi
        /* "test/solidity/Protocol.t.sol":5666:5667  1 */
      0x01
        /* "test/solidity/Protocol.t.sol":5647:5667  packedMaturities & 1 */
      dup3
      and
        /* "test/solidity/Protocol.t.sol":5647:5672  packedMaturities & 1 != 0 */
      iszero
        /* "test/solidity/Protocol.t.sol":5643:5883  if (packedMaturities & 1 != 0) {... */
      tag_2681
      jumpi
      0x40
      dup1
      mload
      dup1
      dup3
      add
      swap1
      swap2
      mstore
      0x00
      dup1
      dup3
      mstore
      0x20
      dup3
      add
      mstore
        /* "test/solidity/Protocol.t.sol":5751:5758  markets */
      0x1c
        /* "test/solidity/Protocol.t.sol":5759:5760  j */
      dup5
        /* "test/solidity/Protocol.t.sol":5751:5761  markets[j] */
      dup2
      sload
      dup2
      lt
      tag_2685
      jumpi
      tag_2685
      tag_162
      jump	// in
    tag_2685:
      0x00
      swap2
      dup3
      mstore
      0x20
      swap1
      swap2
      keccak256
      add
      sload
        /* "test/solidity/Protocol.t.sol":5751:5801  markets[j].fixedBorrowPositions(maturity, account) */
      mload(0x40)
      shl(0xe0, 0xd2681a0b)
      dup2
      mstore
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":5751:5761  markets[j] */
      swap1
      swap2
      and
      swap1
        /* "test/solidity/Protocol.t.sol":5751:5782  markets[j].fixedBorrowPositions */
      0xd2681a0b
      swap1
        /* "test/solidity/Protocol.t.sol":5751:5801  markets[j].fixedBorrowPositions(maturity, account) */
      tag_2687
      swap1
        /* "test/solidity/Protocol.t.sol":5783:5791  maturity */
      dup6
      swap1
        /* "test/solidity/Protocol.t.sol":5793:5800  account */
      dup10
      swap1
        /* "test/solidity/Protocol.t.sol":5751:5801  markets[j].fixedBorrowPositions(maturity, account) */
      0x04
      add
      tag_555
      jump	// in
    tag_2687:
      0x40
      dup1
      mload
      dup1
      dup4
      sub
      dup2
      dup7
      gas
      staticcall
      iszero
      dup1
      iszero
      tag_2689
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_2689:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      dup2
      add
      swap1
      tag_2690
      swap2
      swap1
      tag_203
      jump	// in
    tag_2690:
        /* "test/solidity/Protocol.t.sol":5742:5747  p.fee */
      0x20
      dup4
      add
        /* "test/solidity/Protocol.t.sol":5728:5801  (p.principal, p.fee) = markets[j].fixedBorrowPositions(maturity, account) */
      dup2
      swap1
      mstore
      dup2
      dup4
      mstore
        /* "test/solidity/Protocol.t.sol":5815:5870  assertGt(p.principal + p.fee, 0, "should contain debt") */
      tag_2691
      swap2
        /* "test/solidity/Protocol.t.sol":5824:5843  p.principal + p.fee */
      tag_2692
      swap2
        /* "test/solidity/Protocol.t.sol":5728:5801  (p.principal, p.fee) = markets[j].fixedBorrowPositions(maturity, account) */
      swap1
        /* "test/solidity/Protocol.t.sol":5824:5843  p.principal + p.fee */
      tag_186
      jump	// in
    tag_2692:
        /* "test/solidity/Protocol.t.sol":5845:5846  0 */
      0x00
        /* "test/solidity/Protocol.t.sol":5815:5870  assertGt(p.principal + p.fee, 0, "should contain debt") */
      mload(0x40)
      dup1
      0x40
      add
      0x40
      mstore
      dup1
      0x13
      dup2
      mstore
      0x20
      add
      shl(0x6a, 0x1cda1bdd5b190818dbdb9d185a5b881919589d)
      dup2
      mstore
      pop
        /* "test/solidity/Protocol.t.sol":5815:5823  assertGt */
      tag_2693
        /* "test/solidity/Protocol.t.sol":5815:5870  assertGt(p.principal + p.fee, 0, "should contain debt") */
      jump	// in
    tag_2691:
        /* "test/solidity/Protocol.t.sol":5674:5883  {... */
      pop
        /* "test/solidity/Protocol.t.sol":5643:5883  if (packedMaturities & 1 != 0) {... */
    tag_2681:
        /* "test/solidity/Protocol.t.sol":5915:5916  1 */
      0x01
        /* "test/solidity/Protocol.t.sol":5894:5916  packedMaturities >>= 1 */
      swap2
      swap1
      swap2
      shr
      swap1
        /* "test/solidity/Protocol.t.sol":5928:5957  maturity += FixedLib.INTERVAL */
      tag_2694
        /* "contracts/utils/FixedLib.sol":306:313  4 weeks */
      0x24ea00
        /* "test/solidity/Protocol.t.sol":5928:5957  maturity += FixedLib.INTERVAL */
      dup3
      tag_186
      jump	// in
    tag_2694:
      swap1
      pop
        /* "test/solidity/Protocol.t.sol":5601:5968  while (packedMaturities != 0) {... */
      jump(tag_2679)
    tag_2680:
        /* "test/solidity/Protocol.t.sol":6002:6009  markets */
      0x1c
        /* "test/solidity/Protocol.t.sol":6010:6011  j */
      dup4
        /* "test/solidity/Protocol.t.sol":6002:6012  markets[j] */
      dup2
      sload
      dup2
      lt
      tag_2696
      jumpi
      tag_2696
      tag_162
      jump	// in
    tag_2696:
      0x00
      swap2
      dup3
      mstore
      0x20
      swap1
      swap2
      keccak256
      add
      sload
        /* "test/solidity/Protocol.t.sol":6002:6030  markets[j].accounts(account) */
      mload(0x40)
      shl(0xe1, 0x2f2e0371)
      dup2
      mstore
      sub(shl(0xa0, 0x01), 0x01)
        /* "#utility.yul":7578:7610   */
      dup7
      dup2
      and
        /* "test/solidity/Protocol.t.sol":6002:6030  markets[j].accounts(account) */
      0x04
      dup4
      add
        /* "#utility.yul":7560:7611   */
      mstore
        /* "test/solidity/Protocol.t.sol":6002:6012  markets[j] */
      swap1
      swap2
      and
      swap1
        /* "test/solidity/Protocol.t.sol":6002:6021  markets[j].accounts */
      0x5e5c06e2
      swap1
        /* "#utility.yul":7533:7551   */
      0x24
      add
        /* "test/solidity/Protocol.t.sol":6002:6030  markets[j].accounts(account) */
      0x60
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      dup7
      gas
      staticcall
      iszero
      dup1
      iszero
      tag_2700
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_2700:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      dup2
      add
      swap1
      tag_2701
      swap2
      swap1
      tag_1034
      jump	// in
    tag_2701:
      pop
      pop
        /* "test/solidity/Protocol.t.sol":6134:6136  32 */
      0x20
        /* "test/solidity/Protocol.t.sol":6114:6136  packedMaturities >> 32 */
      dup2
      swap1
      shr
      swap3
      pop
        /* "test/solidity/Protocol.t.sol":6071:6084  (1 << 32) - 1 */
      0xffffffff
        /* "test/solidity/Protocol.t.sol":6051:6085  packedMaturities & ((1 << 32) - 1) */
      and
      swap1
      pop
        /* "test/solidity/Protocol.t.sol":6146:6517  while (packedMaturities != 0) {... */
    tag_2702:
        /* "test/solidity/Protocol.t.sol":6153:6174  packedMaturities != 0 */
      dup2
      iszero
        /* "test/solidity/Protocol.t.sol":6146:6517  while (packedMaturities != 0) {... */
      tag_2703
      jumpi
        /* "test/solidity/Protocol.t.sol":6211:6212  1 */
      0x01
        /* "test/solidity/Protocol.t.sol":6192:6212  packedMaturities & 1 */
      dup3
      and
        /* "test/solidity/Protocol.t.sol":6192:6217  packedMaturities & 1 != 0 */
      iszero
        /* "test/solidity/Protocol.t.sol":6188:6432  if (packedMaturities & 1 != 0) {... */
      tag_2704
      jumpi
      0x40
      dup1
      mload
      dup1
      dup3
      add
      swap1
      swap2
      mstore
      0x00
      dup1
      dup3
      mstore
      0x20
      dup3
      add
      mstore
        /* "test/solidity/Protocol.t.sol":6296:6303  markets */
      0x1c
        /* "test/solidity/Protocol.t.sol":6304:6305  j */
      dup5
        /* "test/solidity/Protocol.t.sol":6296:6306  markets[j] */
      dup2
      sload
      dup2
      lt
      tag_2707
      jumpi
      tag_2707
      tag_162
      jump	// in
    tag_2707:
      0x00
      swap2
      dup3
      mstore
      0x20
      swap1
      swap2
      keccak256
      add
      sload
        /* "test/solidity/Protocol.t.sol":6296:6347  markets[j].fixedDepositPositions(maturity, account) */
      mload(0x40)
      shl(0xe0, 0xccfd8b11)
      dup2
      mstore
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":6296:6306  markets[j] */
      swap1
      swap2
      and
      swap1
        /* "test/solidity/Protocol.t.sol":6296:6328  markets[j].fixedDepositPositions */
      0xccfd8b11
      swap1
        /* "test/solidity/Protocol.t.sol":6296:6347  markets[j].fixedDepositPositions(maturity, account) */
      tag_2709
      swap1
        /* "test/solidity/Protocol.t.sol":6329:6337  maturity */
      dup6
      swap1
        /* "test/solidity/Protocol.t.sol":6339:6346  account */
      dup10
      swap1
        /* "test/solidity/Protocol.t.sol":6296:6347  markets[j].fixedDepositPositions(maturity, account) */
      0x04
      add
      tag_555
      jump	// in
    tag_2709:
      0x40
      dup1
      mload
      dup1
      dup4
      sub
      dup2
      dup7
      gas
      staticcall
      iszero
      dup1
      iszero
      tag_2711
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_2711:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      dup2
      add
      swap1
      tag_2712
      swap2
      swap1
      tag_203
      jump	// in
    tag_2712:
        /* "test/solidity/Protocol.t.sol":6287:6292  p.fee */
      0x20
      dup4
      add
        /* "test/solidity/Protocol.t.sol":6273:6347  (p.principal, p.fee) = markets[j].fixedDepositPositions(maturity, account) */
      dup2
      swap1
      mstore
      dup2
      dup4
      mstore
        /* "test/solidity/Protocol.t.sol":6361:6419  assertGt(p.principal + p.fee, 0, "should contain deposit") */
      tag_2713
      swap2
        /* "test/solidity/Protocol.t.sol":6370:6389  p.principal + p.fee */
      tag_2714
      swap2
        /* "test/solidity/Protocol.t.sol":6273:6347  (p.principal, p.fee) = markets[j].fixedDepositPositions(maturity, account) */
      swap1
        /* "test/solidity/Protocol.t.sol":6370:6389  p.principal + p.fee */
      tag_186
      jump	// in
    tag_2714:
        /* "test/solidity/Protocol.t.sol":6391:6392  0 */
      0x00
        /* "test/solidity/Protocol.t.sol":6361:6419  assertGt(p.principal + p.fee, 0, "should contain deposit") */
      mload(0x40)
      dup1
      0x40
      add
      0x40
      mstore
      dup1
      0x16
      dup2
      mstore
      0x20
      add
      shl(0x52, 0x1cda1bdd5b190818dbdb9d185a5b8819195c1bdcda5d)
      dup2
      mstore
      pop
        /* "test/solidity/Protocol.t.sol":6361:6369  assertGt */
      tag_2693
        /* "test/solidity/Protocol.t.sol":6361:6419  assertGt(p.principal + p.fee, 0, "should contain deposit") */
      jump	// in
    tag_2713:
        /* "test/solidity/Protocol.t.sol":6219:6432  {... */
      pop
        /* "test/solidity/Protocol.t.sol":6188:6432  if (packedMaturities & 1 != 0) {... */
    tag_2704:
        /* "test/solidity/Protocol.t.sol":6464:6465  1 */
      0x01
        /* "test/solidity/Protocol.t.sol":6443:6465  packedMaturities >>= 1 */
      swap2
      swap1
      swap2
      shr
      swap1
        /* "test/solidity/Protocol.t.sol":6477:6506  maturity += FixedLib.INTERVAL */
      tag_2715
        /* "contracts/utils/FixedLib.sol":306:313  4 weeks */
      0x24ea00
        /* "test/solidity/Protocol.t.sol":6477:6506  maturity += FixedLib.INTERVAL */
      dup3
      tag_186
      jump	// in
    tag_2715:
      swap1
      pop
        /* "test/solidity/Protocol.t.sol":6146:6517  while (packedMaturities != 0) {... */
      jump(tag_2702)
    tag_2703:
        /* "test/solidity/Protocol.t.sol":5406:6525  {... */
      pop
      pop
        /* "test/solidity/Protocol.t.sol":5401:5404  ++j */
      dup1
      tag_2716
      swap1
      tag_293
      jump	// in
    tag_2716:
      swap1
      pop
        /* "test/solidity/Protocol.t.sol":5361:6525  for (uint256 j = 0; j < markets.length; ++j) {... */
      jump(tag_2669)
    tag_2670:
      pop
        /* "test/solidity/Protocol.t.sol":5316:6531  {... */
      pop
        /* "test/solidity/Protocol.t.sol":5311:5314  ++i */
      dup1
      tag_2717
      swap1
      tag_293
      jump	// in
    tag_2717:
      swap1
      pop
        /* "test/solidity/Protocol.t.sol":5270:6531  for (uint256 i = 0; i < accounts.length; ++i) {... */
      jump(tag_2663)
    tag_2664:
      pop
        /* "test/solidity/Protocol.t.sol":6541:6550  uint256 i */
      0x00
        /* "test/solidity/Protocol.t.sol":6536:9663  for (uint256 i = 0; i < markets.length; ++i) {... */
    tag_2718:
        /* "test/solidity/Protocol.t.sol":6560:6567  markets */
      0x1c
        /* "test/solidity/Protocol.t.sol":6560:6574  markets.length */
      sload
        /* "test/solidity/Protocol.t.sol":6556:6574  i < markets.length */
      dup2
      lt
        /* "test/solidity/Protocol.t.sol":6536:9663  for (uint256 i = 0; i < markets.length; ++i) {... */
      iszero
      tag_2719
      jumpi
        /* "test/solidity/Protocol.t.sol":6605:6612  auditor */
      sload(0x1b)
        /* "test/solidity/Protocol.t.sol":6605:6626  auditor.marketList(i) */
      mload(0x40)
      shl(0xe2, 0x08cae55b)
      dup2
      mstore
      0x04
      dup2
      add
        /* "#utility.yul":10439:10464   */
      dup4
      swap1
      mstore
        /* "test/solidity/Protocol.t.sol":6589:6602  Market market */
      0x00
      swap2
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":6605:6612  auditor */
      and
      swap1
        /* "test/solidity/Protocol.t.sol":6605:6623  auditor.marketList */
      0x232b956c
      swap1
        /* "#utility.yul":10412:10430   */
      0x24
      add
        /* "test/solidity/Protocol.t.sol":6605:6626  auditor.marketList(i) */
      0x20
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      dup7
      gas
      staticcall
      iszero
      dup1
      iszero
      tag_2723
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_2723:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      dup2
      add
      swap1
      tag_2724
      swap2
      swap1
      tag_167
      jump	// in
    tag_2724:
        /* "test/solidity/Protocol.t.sol":6589:6626  Market market = auditor.marketList(i) */
      swap1
      pop
        /* "test/solidity/Protocol.t.sol":6634:6654  uint256 fixedBorrows */
      0x00
        /* "test/solidity/Protocol.t.sol":6666:6687  uint256 fixedDeposits */
      dup1
        /* "test/solidity/Protocol.t.sol":6704:6713  uint256 j */
      0x00
        /* "test/solidity/Protocol.t.sol":6699:7895  for (uint256 j = 0; j < accounts.length; ++j) {... */
    tag_2726:
        /* "test/solidity/Protocol.t.sol":6723:6731  accounts */
      0x1d
        /* "test/solidity/Protocol.t.sol":6723:6738  accounts.length */
      sload
        /* "test/solidity/Protocol.t.sol":6719:6738  j < accounts.length */
      dup2
      lt
        /* "test/solidity/Protocol.t.sol":6699:7895  for (uint256 j = 0; j < accounts.length; ++j) {... */
      iszero
      tag_2727
      jumpi
        /* "test/solidity/Protocol.t.sol":6755:6770  address account */
      0x00
        /* "test/solidity/Protocol.t.sol":6773:6781  accounts */
      0x1d
        /* "test/solidity/Protocol.t.sol":6782:6783  j */
      dup3
        /* "test/solidity/Protocol.t.sol":6773:6784  accounts[j] */
      dup2
      sload
      dup2
      lt
      tag_2730
      jumpi
      tag_2730
      tag_162
      jump	// in
    tag_2730:
      0x00
      swap2
      dup3
      mstore
      0x20
      dup3
      keccak256
      add
      sload
        /* "test/solidity/Protocol.t.sol":6827:6851  market.accounts(account) */
      mload(0x40)
      shl(0xe1, 0x2f2e0371)
      dup2
      mstore
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":6773:6784  accounts[j] */
      swap2
      dup3
      and
        /* "test/solidity/Protocol.t.sol":6827:6851  market.accounts(account) */
      0x04
      dup3
      add
        /* "#utility.yul":7560:7611   */
      dup2
      swap1
      mstore
        /* "test/solidity/Protocol.t.sol":6773:6784  accounts[j] */
      swap4
      pop
        /* "test/solidity/Protocol.t.sol":6827:6842  market.accounts */
      swap1
      dup8
      and
      swap1
      0x5e5c06e2
      swap1
        /* "#utility.yul":7533:7551   */
      0x24
      add
        /* "test/solidity/Protocol.t.sol":6827:6851  market.accounts(account) */
      0x60
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      dup7
      gas
      staticcall
      iszero
      dup1
      iszero
      tag_2734
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_2734:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      dup2
      add
      swap1
      tag_2735
      swap2
      swap1
      tag_1034
      jump	// in
    tag_2735:
      pop
        /* "test/solidity/Protocol.t.sol":6794:6851  (, uint256 packedMaturities, ) = market.accounts(account) */
      swap2
      pop
        /* "test/solidity/Protocol.t.sol":6861:6881  uint256 baseMaturity */
      0x00
      swap1
      pop
        /* "test/solidity/Protocol.t.sol":6884:6912  packedMaturities % (1 << 32) */
      tag_2736
        /* "test/solidity/Protocol.t.sol":6904:6911  1 << 32 */
      0x0100000000
        /* "test/solidity/Protocol.t.sol":6794:6851  (, uint256 packedMaturities, ) = market.accounts(account) */
      dup4
        /* "test/solidity/Protocol.t.sol":6884:6912  packedMaturities % (1 << 32) */
      tag_183
      jump	// in
    tag_2736:
        /* "test/solidity/Protocol.t.sol":6861:6912  uint256 baseMaturity = packedMaturities % (1 << 32) */
      swap1
      pop
        /* "test/solidity/Protocol.t.sol":6961:6963  32 */
      0x20
        /* "test/solidity/Protocol.t.sol":6941:6957  packedMaturities */
      dup3
        /* "test/solidity/Protocol.t.sol":6941:6963  packedMaturities >> 32 */
      swap1
      shr
        /* "test/solidity/Protocol.t.sol":6922:6963  packedMaturities = packedMaturities >> 32 */
      swap2
      pop
        /* "test/solidity/Protocol.t.sol":6978:6987  uint256 k */
      0x00
        /* "test/solidity/Protocol.t.sol":6973:7343  for (uint256 k = 0; k < 224; ++k) {... */
    tag_2737:
        /* "test/solidity/Protocol.t.sol":6997:7000  224 */
      0xe0
        /* "test/solidity/Protocol.t.sol":6993:6994  k */
      dup2
        /* "test/solidity/Protocol.t.sol":6993:7000  k < 224 */
      lt
        /* "test/solidity/Protocol.t.sol":6973:7343  for (uint256 k = 0; k < 224; ++k) {... */
      iszero
      tag_2738
      jumpi
        /* "test/solidity/Protocol.t.sol":7044:7045  1 */
      0x01
        /* "test/solidity/Protocol.t.sol":7044:7050  1 << k */
      dup2
      shl
        /* "test/solidity/Protocol.t.sol":7024:7051  packedMaturities & (1 << k) */
      dup4
      and
        /* "test/solidity/Protocol.t.sol":7023:7057  (packedMaturities & (1 << k)) != 0 */
      iszero
        /* "test/solidity/Protocol.t.sol":7019:7283  if ((packedMaturities & (1 << k)) != 0) {... */
      tag_2740
      jumpi
        /* "test/solidity/Protocol.t.sol":7073:7089  uint256 maturity */
      0x00
        /* "test/solidity/Protocol.t.sol":7108:7129  k * FixedLib.INTERVAL */
      tag_2741
        /* "contracts/utils/FixedLib.sol":306:313  4 weeks */
      0x24ea00
        /* "test/solidity/Protocol.t.sol":7108:7109  k */
      dup4
        /* "test/solidity/Protocol.t.sol":7108:7129  k * FixedLib.INTERVAL */
      tag_278
      jump	// in
    tag_2741:
        /* "test/solidity/Protocol.t.sol":7092:7130  baseMaturity + (k * FixedLib.INTERVAL) */
      tag_2742
      swap1
        /* "test/solidity/Protocol.t.sol":7092:7104  baseMaturity */
      dup5
        /* "test/solidity/Protocol.t.sol":7092:7130  baseMaturity + (k * FixedLib.INTERVAL) */
      tag_186
      jump	// in
    tag_2742:
        /* "test/solidity/Protocol.t.sol":7073:7130  uint256 maturity = baseMaturity + (k * FixedLib.INTERVAL) */
      swap1
      pop
        /* "test/solidity/Protocol.t.sol":7145:7162  uint256 principal */
      0x00
        /* "test/solidity/Protocol.t.sol":7164:7175  uint256 fee */
      dup1
        /* "test/solidity/Protocol.t.sol":7179:7185  market */
      dup11
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":7179:7206  market.fixedBorrowPositions */
      and
      0xd2681a0b
        /* "test/solidity/Protocol.t.sol":7207:7215  maturity */
      dup5
        /* "test/solidity/Protocol.t.sol":7217:7224  account */
      dup10
        /* "test/solidity/Protocol.t.sol":7179:7225  market.fixedBorrowPositions(maturity, account) */
      mload(0x40)
      dup4
      0xffffffff
      and
      0xe0
      shl
      dup2
      mstore
      0x04
      add
      tag_2743
      swap3
      swap2
      swap1
      tag_555
      jump	// in
    tag_2743:
      0x40
      dup1
      mload
      dup1
      dup4
      sub
      dup2
      dup7
      gas
      staticcall
      iszero
      dup1
      iszero
      tag_2745
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_2745:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      dup2
      add
      swap1
      tag_2746
      swap2
      swap1
      tag_203
      jump	// in
    tag_2746:
        /* "test/solidity/Protocol.t.sol":7144:7225  (uint256 principal, uint256 fee) = market.fixedBorrowPositions(maturity, account) */
      swap1
      swap3
      pop
      swap1
      pop
        /* "test/solidity/Protocol.t.sol":7255:7270  principal + fee */
      tag_2747
        /* "test/solidity/Protocol.t.sol":7144:7225  (uint256 principal, uint256 fee) = market.fixedBorrowPositions(maturity, account) */
      dup2
      dup4
        /* "test/solidity/Protocol.t.sol":7255:7270  principal + fee */
      tag_186
      jump	// in
    tag_2747:
        /* "test/solidity/Protocol.t.sol":7239:7270  fixedBorrows += principal + fee */
      tag_2748
      swap1
      dup12
      tag_186
      jump	// in
    tag_2748:
      swap10
      pop
        /* "test/solidity/Protocol.t.sol":7059:7283  {... */
      pop
      pop
      pop
        /* "test/solidity/Protocol.t.sol":7019:7283  if ((packedMaturities & (1 << k)) != 0) {... */
    tag_2740:
        /* "test/solidity/Protocol.t.sol":7309:7325  packedMaturities */
      dup3
        /* "test/solidity/Protocol.t.sol":7304:7305  k */
      dup2
        /* "test/solidity/Protocol.t.sol":7299:7300  1 */
      0x01
        /* "test/solidity/Protocol.t.sol":7299:7305  1 << k */
      swap1
      shl
        /* "test/solidity/Protocol.t.sol":7298:7325  (1 << k) > packedMaturities */
      gt
        /* "test/solidity/Protocol.t.sol":7327:7332  break */
      tag_2738
        /* "test/solidity/Protocol.t.sol":7294:7332  if ((1 << k) > packedMaturities) break */
      jumpi
        /* "test/solidity/Protocol.t.sol":7002:7005  ++k */
      tag_2750
      dup2
      tag_293
      jump	// in
    tag_2750:
      swap1
      pop
        /* "test/solidity/Protocol.t.sol":6973:7343  for (uint256 k = 0; k < 224; ++k) {... */
      jump(tag_2737)
    tag_2738:
      pop
        /* "test/solidity/Protocol.t.sol":7377:7401  market.accounts(account) */
      mload(0x40)
      shl(0xe1, 0x2f2e0371)
      dup2
      mstore
      sub(shl(0xa0, 0x01), 0x01)
        /* "#utility.yul":7578:7610   */
      dup5
      dup2
      and
        /* "test/solidity/Protocol.t.sol":7377:7401  market.accounts(account) */
      0x04
      dup4
      add
        /* "#utility.yul":7560:7611   */
      mstore
        /* "test/solidity/Protocol.t.sol":7377:7392  market.accounts */
      dup9
      and
      swap1
      0x5e5c06e2
      swap1
        /* "#utility.yul":7533:7551   */
      0x24
      add
        /* "test/solidity/Protocol.t.sol":7377:7401  market.accounts(account) */
      0x60
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      dup7
      gas
      staticcall
      iszero
      dup1
      iszero
      tag_2753
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_2753:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      dup2
      add
      swap1
      tag_2754
      swap2
      swap1
      tag_1034
      jump	// in
    tag_2754:
      pop
        /* "test/solidity/Protocol.t.sol":7352:7401  (packedMaturities, , ) = market.accounts(account) */
      swap1
      swap3
      pop
        /* "test/solidity/Protocol.t.sol":7426:7454  packedMaturities % (1 << 32) */
      tag_2755
      swap1
      pop
        /* "test/solidity/Protocol.t.sol":7446:7453  1 << 32 */
      0x0100000000
        /* "test/solidity/Protocol.t.sol":7352:7401  (packedMaturities, , ) = market.accounts(account) */
      dup4
        /* "test/solidity/Protocol.t.sol":7426:7454  packedMaturities % (1 << 32) */
      tag_183
      jump	// in
    tag_2755:
        /* "test/solidity/Protocol.t.sol":7411:7454  baseMaturity = packedMaturities % (1 << 32) */
      swap1
      pop
        /* "test/solidity/Protocol.t.sol":7503:7505  32 */
      0x20
        /* "test/solidity/Protocol.t.sol":7483:7499  packedMaturities */
      dup3
        /* "test/solidity/Protocol.t.sol":7483:7505  packedMaturities >> 32 */
      swap1
      shr
        /* "test/solidity/Protocol.t.sol":7464:7505  packedMaturities = packedMaturities >> 32 */
      swap2
      pop
        /* "test/solidity/Protocol.t.sol":7520:7529  uint256 k */
      0x00
        /* "test/solidity/Protocol.t.sol":7515:7887  for (uint256 k = 0; k < 224; ++k) {... */
    tag_2756:
        /* "test/solidity/Protocol.t.sol":7539:7542  224 */
      0xe0
        /* "test/solidity/Protocol.t.sol":7535:7536  k */
      dup2
        /* "test/solidity/Protocol.t.sol":7535:7542  k < 224 */
      lt
        /* "test/solidity/Protocol.t.sol":7515:7887  for (uint256 k = 0; k < 224; ++k) {... */
      iszero
      tag_2757
      jumpi
        /* "test/solidity/Protocol.t.sol":7586:7587  1 */
      0x01
        /* "test/solidity/Protocol.t.sol":7586:7592  1 << k */
      dup2
      shl
        /* "test/solidity/Protocol.t.sol":7566:7593  packedMaturities & (1 << k) */
      dup4
      and
        /* "test/solidity/Protocol.t.sol":7565:7599  (packedMaturities & (1 << k)) != 0 */
      iszero
        /* "test/solidity/Protocol.t.sol":7561:7827  if ((packedMaturities & (1 << k)) != 0) {... */
      tag_2759
      jumpi
        /* "test/solidity/Protocol.t.sol":7615:7631  uint256 maturity */
      0x00
        /* "test/solidity/Protocol.t.sol":7650:7671  k * FixedLib.INTERVAL */
      tag_2760
        /* "contracts/utils/FixedLib.sol":306:313  4 weeks */
      0x24ea00
        /* "test/solidity/Protocol.t.sol":7650:7651  k */
      dup4
        /* "test/solidity/Protocol.t.sol":7650:7671  k * FixedLib.INTERVAL */
      tag_278
      jump	// in
    tag_2760:
        /* "test/solidity/Protocol.t.sol":7634:7672  baseMaturity + (k * FixedLib.INTERVAL) */
      tag_2761
      swap1
        /* "test/solidity/Protocol.t.sol":7634:7646  baseMaturity */
      dup5
        /* "test/solidity/Protocol.t.sol":7634:7672  baseMaturity + (k * FixedLib.INTERVAL) */
      tag_186
      jump	// in
    tag_2761:
        /* "test/solidity/Protocol.t.sol":7615:7672  uint256 maturity = baseMaturity + (k * FixedLib.INTERVAL) */
      swap1
      pop
        /* "test/solidity/Protocol.t.sol":7687:7704  uint256 principal */
      0x00
        /* "test/solidity/Protocol.t.sol":7706:7717  uint256 fee */
      dup1
        /* "test/solidity/Protocol.t.sol":7721:7727  market */
      dup11
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":7721:7749  market.fixedDepositPositions */
      and
      0xccfd8b11
        /* "test/solidity/Protocol.t.sol":7750:7758  maturity */
      dup5
        /* "test/solidity/Protocol.t.sol":7760:7767  account */
      dup10
        /* "test/solidity/Protocol.t.sol":7721:7768  market.fixedDepositPositions(maturity, account) */
      mload(0x40)
      dup4
      0xffffffff
      and
      0xe0
      shl
      dup2
      mstore
      0x04
      add
      tag_2762
      swap3
      swap2
      swap1
      tag_555
      jump	// in
    tag_2762:
      0x40
      dup1
      mload
      dup1
      dup4
      sub
      dup2
      dup7
      gas
      staticcall
      iszero
      dup1
      iszero
      tag_2764
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_2764:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      dup2
      add
      swap1
      tag_2765
      swap2
      swap1
      tag_203
      jump	// in
    tag_2765:
        /* "test/solidity/Protocol.t.sol":7686:7768  (uint256 principal, uint256 fee) = market.fixedDepositPositions(maturity, account) */
      swap1
      swap3
      pop
      swap1
      pop
        /* "test/solidity/Protocol.t.sol":7799:7814  principal + fee */
      tag_2766
        /* "test/solidity/Protocol.t.sol":7686:7768  (uint256 principal, uint256 fee) = market.fixedDepositPositions(maturity, account) */
      dup2
      dup4
        /* "test/solidity/Protocol.t.sol":7799:7814  principal + fee */
      tag_186
      jump	// in
    tag_2766:
        /* "test/solidity/Protocol.t.sol":7782:7814  fixedDeposits += principal + fee */
      tag_2767
      swap1
      dup11
      tag_186
      jump	// in
    tag_2767:
      swap9
      pop
        /* "test/solidity/Protocol.t.sol":7601:7827  {... */
      pop
      pop
      pop
        /* "test/solidity/Protocol.t.sol":7561:7827  if ((packedMaturities & (1 << k)) != 0) {... */
    tag_2759:
        /* "test/solidity/Protocol.t.sol":7853:7869  packedMaturities */
      dup3
        /* "test/solidity/Protocol.t.sol":7848:7849  k */
      dup2
        /* "test/solidity/Protocol.t.sol":7843:7844  1 */
      0x01
        /* "test/solidity/Protocol.t.sol":7843:7849  1 << k */
      swap1
      shl
        /* "test/solidity/Protocol.t.sol":7842:7869  (1 << k) > packedMaturities */
      gt
        /* "test/solidity/Protocol.t.sol":7871:7876  break */
      tag_2757
        /* "test/solidity/Protocol.t.sol":7838:7876  if ((1 << k) > packedMaturities) break */
      jumpi
        /* "test/solidity/Protocol.t.sol":7544:7547  ++k */
      tag_2769
      dup2
      tag_293
      jump	// in
    tag_2769:
      swap1
      pop
        /* "test/solidity/Protocol.t.sol":7515:7887  for (uint256 k = 0; k < 224; ++k) {... */
      jump(tag_2756)
    tag_2757:
      pop
        /* "test/solidity/Protocol.t.sol":6745:7895  {... */
      pop
      pop
      pop
        /* "test/solidity/Protocol.t.sol":6740:6743  ++j */
      dup1
      tag_2770
      swap1
      tag_293
      jump	// in
    tag_2770:
      swap1
      pop
        /* "test/solidity/Protocol.t.sol":6699:7895  for (uint256 j = 0; j < accounts.length; ++j) {... */
      jump(tag_2726)
    tag_2727:
      pop
        /* "test/solidity/Protocol.t.sol":7902:7933  uint256 fixedUnassignedEarnings */
      0x00
      dup1
      dup1
      dup1
        /* "test/solidity/Protocol.t.sol":8065:8100  block.timestamp % FixedLib.INTERVAL */
      tag_2771
        /* "contracts/utils/FixedLib.sol":306:313  4 weeks */
      0x24ea00
        /* "test/solidity/Protocol.t.sol":8065:8080  block.timestamp */
      timestamp
        /* "test/solidity/Protocol.t.sol":8065:8100  block.timestamp % FixedLib.INTERVAL */
      tag_183
      jump	// in
    tag_2771:
        /* "test/solidity/Protocol.t.sol":8046:8101  block.timestamp - (block.timestamp % FixedLib.INTERVAL) */
      tag_2772
      swap1
        /* "test/solidity/Protocol.t.sol":8046:8061  block.timestamp */
      timestamp
        /* "test/solidity/Protocol.t.sol":8046:8101  block.timestamp - (block.timestamp % FixedLib.INTERVAL) */
      tag_158
      jump	// in
    tag_2772:
        /* "test/solidity/Protocol.t.sol":8021:8101  uint256 latestMaturity = block.timestamp - (block.timestamp % FixedLib.INTERVAL) */
      swap1
      pop
        /* "test/solidity/Protocol.t.sol":8109:8128  uint256 maxMaturity */
      0x00
        /* "contracts/utils/FixedLib.sol":306:313  4 weeks */
      0x24ea00
        /* "test/solidity/Protocol.t.sol":8205:8211  market */
      dup9
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":8205:8226  market.maxFuturePools */
      and
      0x0e52dbec
        /* "test/solidity/Protocol.t.sol":8205:8228  market.maxFuturePools() */
      mload(0x40)
      dup2
      0xffffffff
      and
      0xe0
      shl
      dup2
      mstore
      0x04
      add
      0x20
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      dup7
      gas
      staticcall
      iszero
      dup1
      iszero
      tag_2774
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_2774:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      dup2
      add
      swap1
      tag_2775
      swap2
      swap1
      tag_2776
      jump	// in
    tag_2775:
        /* "test/solidity/Protocol.t.sol":8205:8256  market.maxFuturePools() *... */
      0xff
      and
      tag_2777
      swap2
      swap1
      tag_278
      jump	// in
    tag_2777:
        /* "test/solidity/Protocol.t.sol":8158:8193  block.timestamp % FixedLib.INTERVAL */
      tag_2778
        /* "contracts/utils/FixedLib.sol":306:313  4 weeks */
      0x24ea00
        /* "test/solidity/Protocol.t.sol":8158:8173  block.timestamp */
      timestamp
        /* "test/solidity/Protocol.t.sol":8158:8193  block.timestamp % FixedLib.INTERVAL */
      tag_183
      jump	// in
    tag_2778:
        /* "test/solidity/Protocol.t.sol":8131:8194  block.timestamp -... */
      tag_2779
      swap1
        /* "test/solidity/Protocol.t.sol":8131:8146  block.timestamp */
      timestamp
        /* "test/solidity/Protocol.t.sol":8131:8194  block.timestamp -... */
      tag_158
      jump	// in
    tag_2779:
        /* "test/solidity/Protocol.t.sol":8131:8256  block.timestamp -... */
      tag_2780
      swap2
      swap1
      tag_186
      jump	// in
    tag_2780:
        /* "test/solidity/Protocol.t.sol":8109:8256  uint256 maxMaturity = block.timestamp -... */
      swap1
      pop
        /* "test/solidity/Protocol.t.sol":8269:8285  uint256 maturity */
      0x00
        /* "test/solidity/Protocol.t.sol":8264:8961  for (uint256 maturity = 0; maturity <= maxMaturity; maturity += FixedLib.INTERVAL) {... */
    tag_2781:
        /* "test/solidity/Protocol.t.sol":8303:8314  maxMaturity */
      dup2
        /* "test/solidity/Protocol.t.sol":8291:8299  maturity */
      dup2
        /* "test/solidity/Protocol.t.sol":8291:8314  maturity <= maxMaturity */
      gt
        /* "test/solidity/Protocol.t.sol":8264:8961  for (uint256 maturity = 0; maturity <= maxMaturity; maturity += FixedLib.INTERVAL) {... */
      tag_2782
      jumpi
        /* "test/solidity/Protocol.t.sol":8358:8374  uint256 borrowed */
      0x00
        /* "test/solidity/Protocol.t.sol":8376:8392  uint256 supplied */
      dup1
        /* "test/solidity/Protocol.t.sol":8394:8420  uint256 unassignedEarnings */
      0x00
        /* "test/solidity/Protocol.t.sol":8422:8441  uint256 lastAccrual */
      dup1
        /* "test/solidity/Protocol.t.sol":8445:8451  market */
      dup13
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":8445:8462  market.fixedPools */
      and
      0x4e7c5059
        /* "test/solidity/Protocol.t.sol":8474:8482  maturity */
      dup7
        /* "test/solidity/Protocol.t.sol":8445:8492  market.fixedPools(... */
      mload(0x40)
      dup3
      0xffffffff
      and
      0xe0
      shl
      dup2
      mstore
      0x04
      add
      tag_2784
      swap2
        /* "#utility.yul":10439:10464   */
      dup2
      mstore
        /* "#utility.yul":10427:10429   */
      0x20
        /* "#utility.yul":10412:10430   */
      add
      swap1
        /* "#utility.yul":10284:10470   */
      jump
        /* "test/solidity/Protocol.t.sol":8445:8492  market.fixedPools(... */
    tag_2784:
      0x80
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      dup7
      gas
      staticcall
      iszero
      dup1
      iszero
      tag_2786
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_2786:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      dup2
      add
      swap1
      tag_2787
      swap2
      swap1
      tag_730
      jump	// in
    tag_2787:
        /* "test/solidity/Protocol.t.sol":8357:8492  (uint256 borrowed, uint256 supplied, uint256 unassignedEarnings, uint256 lastAccrual) = market.fixedPools(... */
      swap4
      pop
      swap4
      pop
      swap4
      pop
      swap4
      pop
        /* "test/solidity/Protocol.t.sol":8539:8567  Math.min(supplied, borrowed) */
      tag_2788
        /* "test/solidity/Protocol.t.sol":8548:8556  supplied */
      dup4
        /* "test/solidity/Protocol.t.sol":8558:8566  borrowed */
      dup6
        /* "test/solidity/Protocol.t.sol":8539:8547  Math.min */
      tag_791
        /* "test/solidity/Protocol.t.sol":8539:8567  Math.min(supplied, borrowed) */
      jump	// in
    tag_2788:
        /* "test/solidity/Protocol.t.sol":8528:8567  borrowed - Math.min(supplied, borrowed) */
      tag_2789
      swap1
        /* "test/solidity/Protocol.t.sol":8528:8536  borrowed */
      dup6
        /* "test/solidity/Protocol.t.sol":8528:8567  borrowed - Math.min(supplied, borrowed) */
      tag_158
      jump	// in
    tag_2789:
        /* "test/solidity/Protocol.t.sol":8502:8567  floatingBackupBorrowed += borrowed - Math.min(supplied, borrowed) */
      tag_2790
      swap1
      dup11
      tag_186
      jump	// in
    tag_2790:
      swap9
      pop
        /* "test/solidity/Protocol.t.sol":8656:8667  lastAccrual */
      dup1
        /* "test/solidity/Protocol.t.sol":8645:8653  maturity */
      dup6
        /* "test/solidity/Protocol.t.sol":8645:8667  maturity > lastAccrual */
      gt
        /* "test/solidity/Protocol.t.sol":8645:8697  maturity > lastAccrual && maturity >= latestMaturity */
      dup1
      iszero
      tag_2791
      jumpi
      pop
        /* "test/solidity/Protocol.t.sol":8683:8697  latestMaturity */
      dup7
        /* "test/solidity/Protocol.t.sol":8671:8679  maturity */
      dup6
        /* "test/solidity/Protocol.t.sol":8671:8697  maturity >= latestMaturity */
      lt
      iszero
        /* "test/solidity/Protocol.t.sol":8645:8697  maturity > lastAccrual && maturity >= latestMaturity */
    tag_2791:
        /* "test/solidity/Protocol.t.sol":8641:8898  if (maturity > lastAccrual && maturity >= latestMaturity) {... */
      iszero
      tag_2792
      jumpi
        /* "test/solidity/Protocol.t.sol":8747:8755  maturity */
      dup5
        /* "test/solidity/Protocol.t.sol":8729:8744  block.timestamp */
      timestamp
        /* "test/solidity/Protocol.t.sol":8729:8755  block.timestamp < maturity */
      lt
        /* "test/solidity/Protocol.t.sol":8729:8887  block.timestamp < maturity... */
      tag_2793
      jumpi
        /* "test/solidity/Protocol.t.sol":8869:8887  unassignedEarnings */
      dup2
        /* "test/solidity/Protocol.t.sol":8729:8887  block.timestamp < maturity... */
      jump(tag_2795)
    tag_2793:
        /* "test/solidity/Protocol.t.sol":8770:8854  unassignedEarnings.mulDivDown(block.timestamp - lastAccrual, maturity - lastAccrual) */
      tag_2795
        /* "test/solidity/Protocol.t.sol":8800:8829  block.timestamp - lastAccrual */
      tag_2796
        /* "test/solidity/Protocol.t.sol":8818:8829  lastAccrual */
      dup3
        /* "test/solidity/Protocol.t.sol":8800:8815  block.timestamp */
      timestamp
        /* "test/solidity/Protocol.t.sol":8800:8829  block.timestamp - lastAccrual */
      tag_158
      jump	// in
    tag_2796:
        /* "test/solidity/Protocol.t.sol":8831:8853  maturity - lastAccrual */
      tag_2797
        /* "test/solidity/Protocol.t.sol":8842:8853  lastAccrual */
      dup4
        /* "test/solidity/Protocol.t.sol":8831:8839  maturity */
      dup9
        /* "test/solidity/Protocol.t.sol":8831:8853  maturity - lastAccrual */
      tag_158
      jump	// in
    tag_2797:
        /* "test/solidity/Protocol.t.sol":8770:8788  unassignedEarnings */
      dup5
      swap2
        /* "test/solidity/Protocol.t.sol":8770:8854  unassignedEarnings.mulDivDown(block.timestamp - lastAccrual, maturity - lastAccrual) */
      swap1
        /* "test/solidity/Protocol.t.sol":8770:8799  unassignedEarnings.mulDivDown */
      tag_2085
        /* "test/solidity/Protocol.t.sol":8770:8854  unassignedEarnings.mulDivDown(block.timestamp - lastAccrual, maturity - lastAccrual) */
      jump	// in
    tag_2795:
        /* "test/solidity/Protocol.t.sol":8711:8887  backupEarnings += block.timestamp < maturity... */
      tag_2798
      swap1
      dup10
      tag_186
      jump	// in
    tag_2798:
      swap8
      pop
        /* "test/solidity/Protocol.t.sol":8641:8898  if (maturity > lastAccrual && maturity >= latestMaturity) {... */
    tag_2792:
        /* "test/solidity/Protocol.t.sol":8907:8952  fixedUnassignedEarnings += unassignedEarnings */
      tag_2799
        /* "test/solidity/Protocol.t.sol":8934:8952  unassignedEarnings */
      dup3
        /* "test/solidity/Protocol.t.sol":8907:8952  fixedUnassignedEarnings += unassignedEarnings */
      dup12
      tag_186
      jump	// in
    tag_2799:
      swap10
      pop
        /* "test/solidity/Protocol.t.sol":8347:8961  {... */
      pop
      pop
      pop
      pop
        /* "contracts/utils/FixedLib.sol":306:313  4 weeks */
      0x24ea00
        /* "test/solidity/Protocol.t.sol":8316:8345  maturity += FixedLib.INTERVAL */
      dup2
      tag_2800
      swap2
      swap1
      tag_186
      jump	// in
    tag_2800:
      swap1
      pop
        /* "test/solidity/Protocol.t.sol":8264:8961  for (uint256 maturity = 0; maturity <= maxMaturity; maturity += FixedLib.INTERVAL) {... */
      jump(tag_2781)
    tag_2782:
      pop
        /* "test/solidity/Protocol.t.sol":8968:8987  uint256 totalAssets */
      0x00
        /* "test/solidity/Protocol.t.sol":9139:9145  market */
      dup9
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":9139:9158  market.floatingDebt */
      and
      0x1a90f186
        /* "test/solidity/Protocol.t.sol":9139:9160  market.floatingDebt() */
      mload(0x40)
      dup2
      0xffffffff
      and
      0xe0
      shl
      dup2
      mstore
      0x04
      add
      0x20
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      dup7
      gas
      staticcall
      iszero
      dup1
      iszero
      tag_2802
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_2802:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      dup2
      add
      swap1
      tag_2803
      swap2
      swap1
      tag_212
      jump	// in
    tag_2803:
        /* "test/solidity/Protocol.t.sol":9094:9100  market */
      dup10
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":9094:9126  market.totalFloatingBorrowAssets */
      and
      0xeee8c9e0
        /* "test/solidity/Protocol.t.sol":9094:9128  market.totalFloatingBorrowAssets() */
      mload(0x40)
      dup2
      0xffffffff
      and
      0xe0
      shl
      dup2
      mstore
      0x04
      add
      0x20
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      dup7
      gas
      staticcall
      iszero
      dup1
      iszero
      tag_2805
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_2805:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      dup2
      add
      swap1
      tag_2806
      swap2
      swap1
      tag_212
      jump	// in
    tag_2806:
        /* "test/solidity/Protocol.t.sol":9049:9083  previewAccumulatedEarnings(market) */
      tag_2807
        /* "test/solidity/Protocol.t.sol":9076:9082  market */
      dup12
        /* "test/solidity/Protocol.t.sol":9049:9075  previewAccumulatedEarnings */
      tag_578
        /* "test/solidity/Protocol.t.sol":9049:9083  previewAccumulatedEarnings(market) */
      jump	// in
    tag_2807:
        /* "test/solidity/Protocol.t.sol":9024:9038  backupEarnings */
      dup7
        /* "test/solidity/Protocol.t.sol":8990:8996  market */
      dup13
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":8990:9011  market.floatingAssets */
      and
      0x2e0af008
        /* "test/solidity/Protocol.t.sol":8990:9013  market.floatingAssets() */
      mload(0x40)
      dup2
      0xffffffff
      and
      0xe0
      shl
      dup2
      mstore
      0x04
      add
      0x20
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      dup7
      gas
      staticcall
      iszero
      dup1
      iszero
      tag_2809
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_2809:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      dup2
      add
      swap1
      tag_2810
      swap2
      swap1
      tag_212
      jump	// in
    tag_2810:
        /* "test/solidity/Protocol.t.sol":8990:9038  market.floatingAssets() +... */
      tag_2811
      swap2
      swap1
      tag_186
      jump	// in
    tag_2811:
        /* "test/solidity/Protocol.t.sol":8990:9083  market.floatingAssets() +... */
      tag_2812
      swap2
      swap1
      tag_186
      jump	// in
    tag_2812:
        /* "test/solidity/Protocol.t.sol":8990:9128  market.floatingAssets() +... */
      tag_2813
      swap2
      swap1
      tag_186
      jump	// in
    tag_2813:
        /* "test/solidity/Protocol.t.sol":8990:9160  market.floatingAssets() +... */
      tag_2814
      swap2
      swap1
      tag_158
      jump	// in
    tag_2814:
        /* "test/solidity/Protocol.t.sol":8968:9160  uint256 totalAssets = market.floatingAssets() +... */
      swap1
      pop
        /* "test/solidity/Protocol.t.sol":9168:9182  uint256 assets */
      0x00
        /* "test/solidity/Protocol.t.sol":9348:9360  fixedBorrows */
      dup9
        /* "test/solidity/Protocol.t.sol":9324:9337  fixedDeposits */
      dup9
        /* "test/solidity/Protocol.t.sol":9290:9313  fixedUnassignedEarnings */
      dup9
        /* "test/solidity/Protocol.t.sol":9251:9257  market */
      dup13
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":9251:9277  market.earningsAccumulator */
      and
      0x8a1baa46
        /* "test/solidity/Protocol.t.sol":9251:9279  market.earningsAccumulator() */
      mload(0x40)
      dup2
      0xffffffff
      and
      0xe0
      shl
      dup2
      mstore
      0x04
      add
      0x20
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      dup7
      gas
      staticcall
      iszero
      dup1
      iszero
      tag_2816
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_2816:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      dup2
      add
      swap1
      tag_2817
      swap2
      swap1
      tag_212
      jump	// in
    tag_2817:
        /* "test/solidity/Protocol.t.sol":9219:9225  market */
      dup14
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":9219:9238  market.floatingDebt */
      and
      0x1a90f186
        /* "test/solidity/Protocol.t.sol":9219:9240  market.floatingDebt() */
      mload(0x40)
      dup2
      0xffffffff
      and
      0xe0
      shl
      dup2
      mstore
      0x04
      add
      0x20
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      dup7
      gas
      staticcall
      iszero
      dup1
      iszero
      tag_2819
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_2819:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      dup2
      add
      swap1
      tag_2820
      swap2
      swap1
      tag_212
      jump	// in
    tag_2820:
        /* "test/solidity/Protocol.t.sol":9185:9191  market */
      dup15
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":9185:9206  market.floatingAssets */
      and
      0x2e0af008
        /* "test/solidity/Protocol.t.sol":9185:9208  market.floatingAssets() */
      mload(0x40)
      dup2
      0xffffffff
      and
      0xe0
      shl
      dup2
      mstore
      0x04
      add
      0x20
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      dup7
      gas
      staticcall
      iszero
      dup1
      iszero
      tag_2822
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_2822:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      dup2
      add
      swap1
      tag_2823
      swap2
      swap1
      tag_212
      jump	// in
    tag_2823:
        /* "test/solidity/Protocol.t.sol":9185:9240  market.floatingAssets() -... */
      tag_2824
      swap2
      swap1
      tag_158
      jump	// in
    tag_2824:
        /* "test/solidity/Protocol.t.sol":9185:9279  market.floatingAssets() -... */
      tag_2825
      swap2
      swap1
      tag_186
      jump	// in
    tag_2825:
        /* "test/solidity/Protocol.t.sol":9185:9313  market.floatingAssets() -... */
      tag_2826
      swap2
      swap1
      tag_186
      jump	// in
    tag_2826:
        /* "test/solidity/Protocol.t.sol":9185:9337  market.floatingAssets() -... */
      tag_2827
      swap2
      swap1
      tag_186
      jump	// in
    tag_2827:
        /* "test/solidity/Protocol.t.sol":9185:9360  market.floatingAssets() -... */
      tag_2828
      swap2
      swap1
      tag_158
      jump	// in
    tag_2828:
        /* "test/solidity/Protocol.t.sol":9168:9360  uint256 assets = market.floatingAssets() -... */
      swap1
      pop
        /* "test/solidity/Protocol.t.sol":9369:9473  assertEq(floatingBackupBorrowed, market.floatingBackupBorrowed(), "should match floatingBackupBorrowed") */
      tag_2829
        /* "test/solidity/Protocol.t.sol":9378:9400  floatingBackupBorrowed */
      dup7
        /* "test/solidity/Protocol.t.sol":9402:9408  market */
      dup12
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":9402:9431  market.floatingBackupBorrowed */
      and
      0x8c3cba5a
        /* "test/solidity/Protocol.t.sol":9402:9433  market.floatingBackupBorrowed() */
      mload(0x40)
      dup2
      0xffffffff
      and
      0xe0
      shl
      dup2
      mstore
      0x04
      add
      0x20
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      dup7
      gas
      staticcall
      iszero
      dup1
      iszero
      tag_2831
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_2831:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      dup2
      add
      swap1
      tag_2832
      swap2
      swap1
      tag_212
      jump	// in
    tag_2832:
        /* "test/solidity/Protocol.t.sol":9369:9473  assertEq(floatingBackupBorrowed, market.floatingBackupBorrowed(), "should match floatingBackupBorrowed") */
      mload(0x40)
      dup1
      0x60
      add
      0x40
      mstore
      dup1
      0x23
      dup2
      mstore
      0x20
      add
      data_af60a355de262f5909867e4323707fb5b157eae0e494de4c75083157ea7f5669
      0x23
      swap2
      codecopy
        /* "test/solidity/Protocol.t.sol":9369:9377  assertEq */
      tag_2107
        /* "test/solidity/Protocol.t.sol":9369:9473  assertEq(floatingBackupBorrowed, market.floatingBackupBorrowed(), "should match floatingBackupBorrowed") */
      jump	// in
    tag_2829:
        /* "test/solidity/Protocol.t.sol":9481:9554  assertEq(totalAssets, market.totalAssets(), "should match totalAssets()") */
      tag_2833
        /* "test/solidity/Protocol.t.sol":9490:9501  totalAssets */
      dup3
        /* "test/solidity/Protocol.t.sol":9503:9509  market */
      dup12
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":9503:9521  market.totalAssets */
      and
      0x01e1d114
        /* "test/solidity/Protocol.t.sol":9503:9523  market.totalAssets() */
      mload(0x40)
      dup2
      0xffffffff
      and
      0xe0
      shl
      dup2
      mstore
      0x04
      add
      0x20
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      dup7
      gas
      staticcall
      iszero
      dup1
      iszero
      tag_2835
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_2835:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      dup2
      add
      swap1
      tag_2836
      swap2
      swap1
      tag_212
      jump	// in
    tag_2836:
        /* "test/solidity/Protocol.t.sol":9481:9554  assertEq(totalAssets, market.totalAssets(), "should match totalAssets()") */
      mload(0x40)
      dup1
      0x40
      add
      0x40
      mstore
      dup1
      0x1a
      dup2
      mstore
      0x20
      add
      0x73686f756c64206d6174636820746f74616c4173736574732829000000000000
      dup2
      mstore
      pop
        /* "test/solidity/Protocol.t.sol":9481:9489  assertEq */
      tag_2107
        /* "test/solidity/Protocol.t.sol":9481:9554  assertEq(totalAssets, market.totalAssets(), "should match totalAssets()") */
      jump	// in
    tag_2833:
        /* "test/solidity/Protocol.t.sol":9562:9656  assertEq(assets, market.asset().balanceOf(address(market)), "should match underlying balance") */
      tag_2837
        /* "test/solidity/Protocol.t.sol":9571:9577  assets */
      dup2
        /* "test/solidity/Protocol.t.sol":9579:9585  market */
      dup12
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":9579:9591  market.asset */
      and
      0x38d52e0f
        /* "test/solidity/Protocol.t.sol":9579:9593  market.asset() */
      mload(0x40)
      dup2
      0xffffffff
      and
      0xe0
      shl
      dup2
      mstore
      0x04
      add
      0x20
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      dup7
      gas
      staticcall
      iszero
      dup1
      iszero
      tag_2839
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_2839:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      dup2
      add
      swap1
      tag_2840
      swap2
      swap1
      tag_167
      jump	// in
    tag_2840:
        /* "test/solidity/Protocol.t.sol":9579:9620  market.asset().balanceOf(address(market)) */
      mload(0x40)
      shl(0xe0, 0x70a08231)
      dup2
      mstore
      sub(shl(0xa0, 0x01), 0x01)
        /* "#utility.yul":7578:7610   */
      dup15
      dup2
      and
        /* "test/solidity/Protocol.t.sol":9579:9620  market.asset().balanceOf(address(market)) */
      0x04
      dup4
      add
        /* "#utility.yul":7560:7611   */
      mstore
        /* "test/solidity/Protocol.t.sol":9579:9603  market.asset().balanceOf */
      swap2
      swap1
      swap2
      and
      swap1
      0x70a08231
      swap1
        /* "#utility.yul":7533:7551   */
      0x24
      add
        /* "test/solidity/Protocol.t.sol":9579:9620  market.asset().balanceOf(address(market)) */
      0x20
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      dup7
      gas
      staticcall
      iszero
      dup1
      iszero
      tag_2843
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_2843:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      dup2
      add
      swap1
      tag_2844
      swap2
      swap1
      tag_212
      jump	// in
    tag_2844:
        /* "test/solidity/Protocol.t.sol":9562:9656  assertEq(assets, market.asset().balanceOf(address(market)), "should match underlying balance") */
      mload(0x40)
      dup1
      0x40
      add
      0x40
      mstore
      dup1
      0x1f
      dup2
      mstore
      0x20
      add
      0x73686f756c64206d6174636820756e6465726c79696e672062616c616e636500
      dup2
      mstore
      pop
        /* "test/solidity/Protocol.t.sol":9562:9570  assertEq */
      tag_2107
        /* "test/solidity/Protocol.t.sol":9562:9656  assertEq(assets, market.asset().balanceOf(address(market)), "should match underlying balance") */
      jump	// in
    tag_2837:
        /* "test/solidity/Protocol.t.sol":6581:9663  {... */
      pop
      pop
      pop
      pop
      pop
      pop
      pop
      pop
      pop
      pop
        /* "test/solidity/Protocol.t.sol":6576:6579  ++i */
      dup1
      tag_2845
      swap1
      tag_293
      jump	// in
    tag_2845:
      swap1
      pop
        /* "test/solidity/Protocol.t.sol":6536:9663  for (uint256 i = 0; i < markets.length; ++i) {... */
      jump(tag_2718)
    tag_2719:
      pop
        /* "test/solidity/Protocol.t.sol":9669:9682  uint256 start */
      0x00
        /* "test/solidity/Protocol.t.sol":9684:9695  uint256 end */
      dup1
        /* "test/solidity/Protocol.t.sol":9697:9715  uint256 lastUpdate */
      0x00
        /* "test/solidity/Protocol.t.sol":9719:9736  rewardsController */
      0x1e
      0x00
      swap1
      sload
      swap1
      0x0100
      exp
      swap1
      div
      sub(shl(0xa0, 0x01), 0x01)
      and
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":9719:9753  rewardsController.distributionTime */
      and
      0x5684aa46
        /* "test/solidity/Protocol.t.sol":9754:9761  markets */
      0x1c
        /* "test/solidity/Protocol.t.sol":9762:9763  0 */
      0x00
        /* "test/solidity/Protocol.t.sol":9754:9764  markets[0] */
      dup2
      sload
      dup2
      lt
      tag_2847
      jumpi
      tag_2847
      tag_162
      jump	// in
    tag_2847:
      0x00
      swap2
      dup3
      mstore
      0x20
      swap1
      swap2
      keccak256
      add
      sload
        /* "test/solidity/Protocol.t.sol":9766:9777  rewardAsset */
      sload(0x1f)
        /* "test/solidity/Protocol.t.sol":9719:9778  rewardsController.distributionTime(markets[0], rewardAsset) */
      mload(0x40)
      0xe0
      dup5
      swap1
      shl
      not(sub(shl(0xe0, 0x01), 0x01))
      and
      dup2
      mstore
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":9754:9764  markets[0] */
      swap3
      dup4
      and
        /* "test/solidity/Protocol.t.sol":9719:9778  rewardsController.distributionTime(markets[0], rewardAsset) */
      0x04
      dup3
      add
        /* "#utility.yul":14543:14577   */
      mstore
        /* "test/solidity/Protocol.t.sol":9766:9777  rewardAsset */
      swap2
      and
        /* "#utility.yul":14593:14611   */
      0x24
      dup3
      add
        /* "#utility.yul":14586:14629   */
      mstore
        /* "#utility.yul":14478:14496   */
      0x44
      add
        /* "test/solidity/Protocol.t.sol":9719:9778  rewardsController.distributionTime(markets[0], rewardAsset) */
      0x60
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      dup7
      gas
      staticcall
      iszero
      dup1
      iszero
      tag_2852
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_2852:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      dup2
      add
      swap1
      tag_2853
      swap2
      swap1
      tag_2854
      jump	// in
    tag_2853:
        /* "test/solidity/Protocol.t.sol":9668:9778  (uint256 start, uint256 end, uint256 lastUpdate) = rewardsController.distributionTime(markets[0], rewardAsset) */
      0xffffffff
      and
      swap3
      pop
      0xffffffff
      and
      swap3
      pop
      0xffffffff
      and
      swap3
      pop
        /* "test/solidity/Protocol.t.sol":9789:9814  uint256 lastUndistributed */
      0x00
        /* "test/solidity/Protocol.t.sol":9818:9835  rewardsController */
      0x1e
      0x00
      swap1
      sload
      swap1
      0x0100
      exp
      swap1
      div
      sub(shl(0xa0, 0x01), 0x01)
      and
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":9818:9849  rewardsController.rewardIndexes */
      and
      0x44e250f8
        /* "test/solidity/Protocol.t.sol":9850:9857  markets */
      0x1c
        /* "test/solidity/Protocol.t.sol":9858:9859  0 */
      0x00
        /* "test/solidity/Protocol.t.sol":9850:9860  markets[0] */
      dup2
      sload
      dup2
      lt
      tag_2856
      jumpi
      tag_2856
      tag_162
      jump	// in
    tag_2856:
      0x00
      swap2
      dup3
      mstore
      0x20
      swap1
      swap2
      keccak256
      add
      sload
        /* "test/solidity/Protocol.t.sol":9862:9873  rewardAsset */
      sload(0x1f)
        /* "test/solidity/Protocol.t.sol":9818:9874  rewardsController.rewardIndexes(markets[0], rewardAsset) */
      mload(0x40)
      0xe0
      dup5
      swap1
      shl
      not(sub(shl(0xe0, 0x01), 0x01))
      and
      dup2
      mstore
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":9850:9860  markets[0] */
      swap3
      dup4
      and
        /* "test/solidity/Protocol.t.sol":9818:9874  rewardsController.rewardIndexes(markets[0], rewardAsset) */
      0x04
      dup3
      add
        /* "#utility.yul":14543:14577   */
      mstore
        /* "test/solidity/Protocol.t.sol":9862:9873  rewardAsset */
      swap2
      and
        /* "#utility.yul":14593:14611   */
      0x24
      dup3
      add
        /* "#utility.yul":14586:14629   */
      mstore
        /* "#utility.yul":14478:14496   */
      0x44
      add
        /* "test/solidity/Protocol.t.sol":9818:9874  rewardsController.rewardIndexes(markets[0], rewardAsset) */
      0x60
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      dup7
      gas
      staticcall
      iszero
      dup1
      iszero
      tag_2860
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_2860:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      dup2
      add
      swap1
      tag_2861
      swap2
      swap1
      tag_1034
      jump	// in
    tag_2861:
        /* "test/solidity/Protocol.t.sol":9921:9938  rewardsController */
      sload(0x1e)
        /* "test/solidity/Protocol.t.sol":9952:9959  markets */
      0x1c
        /* "test/solidity/Protocol.t.sol":9952:9962  markets[0] */
      dup1
      sload
        /* "test/solidity/Protocol.t.sol":9784:9874  (, , uint256 lastUndistributed) = rewardsController.rewardIndexes(markets[0], rewardAsset) */
      swap3
      swap6
      pop
        /* "test/solidity/Protocol.t.sol":9880:9918  RewardsController.Config memory config */
      0x00
      swap5
      pop
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":9921:9938  rewardsController */
      swap1
      swap2
      and
      swap3
      pop
        /* "test/solidity/Protocol.t.sol":9921:9951  rewardsController.rewardConfig */
      0xf2426f9a
      swap2
        /* "test/solidity/Protocol.t.sol":9880:9918  RewardsController.Config memory config */
      dup5
      swap1
        /* "test/solidity/Protocol.t.sol":9952:9962  markets[0] */
      tag_2863
      jumpi
      tag_2863
      tag_162
      jump	// in
    tag_2863:
      0x00
      swap2
      dup3
      mstore
      0x20
      swap1
      swap2
      keccak256
      add
      sload
        /* "test/solidity/Protocol.t.sol":9964:9975  rewardAsset */
      sload(0x1f)
        /* "test/solidity/Protocol.t.sol":9921:9976  rewardsController.rewardConfig(markets[0], rewardAsset) */
      mload(0x40)
      0xe0
      dup5
      swap1
      shl
      not(sub(shl(0xe0, 0x01), 0x01))
      and
      dup2
      mstore
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":9952:9962  markets[0] */
      swap3
      dup4
      and
        /* "test/solidity/Protocol.t.sol":9921:9976  rewardsController.rewardConfig(markets[0], rewardAsset) */
      0x04
      dup3
      add
        /* "#utility.yul":14543:14577   */
      mstore
        /* "test/solidity/Protocol.t.sol":9964:9975  rewardAsset */
      swap2
      and
        /* "#utility.yul":14593:14611   */
      0x24
      dup3
      add
        /* "#utility.yul":14586:14629   */
      mstore
        /* "#utility.yul":14478:14496   */
      0x44
      add
        /* "test/solidity/Protocol.t.sol":9921:9976  rewardsController.rewardConfig(markets[0], rewardAsset) */
      0x01c0
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      dup7
      gas
      staticcall
      iszero
      dup1
      iszero
      tag_2867
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_2867:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      dup2
      add
      swap1
      tag_2868
      swap2
      swap1
      tag_2869
      jump	// in
    tag_2868:
        /* "test/solidity/Protocol.t.sol":9880:9976  RewardsController.Config memory config = rewardsController.rewardConfig(markets[0], rewardAsset) */
      swap1
      pop
        /* "test/solidity/Protocol.t.sol":9982:10001  uint256 releaseRate */
      0x00
        /* "test/solidity/Protocol.t.sol":10004:10073  config.totalDistribution.mulWadDown(1e18 / config.distributionPeriod) */
      tag_2870
        /* "test/solidity/Protocol.t.sol":10047:10053  config */
      dup3
        /* "test/solidity/Protocol.t.sol":10047:10072  config.distributionPeriod */
      0x80
      add
      mload
        /* "test/solidity/Protocol.t.sol":10040:10044  1e18 */
      0x0de0b6b3a7640000
        /* "test/solidity/Protocol.t.sol":10040:10072  1e18 / config.distributionPeriod */
      tag_2871
      swap2
      swap1
      tag_320
      jump	// in
    tag_2871:
        /* "test/solidity/Protocol.t.sol":10004:10028  config.totalDistribution */
      0xc0
      dup5
      add
      mload
      swap1
        /* "test/solidity/Protocol.t.sol":10004:10039  config.totalDistribution.mulWadDown */
      tag_1375
        /* "test/solidity/Protocol.t.sol":10004:10073  config.totalDistribution.mulWadDown(1e18 / config.distributionPeriod) */
      jump	// in
    tag_2870:
        /* "test/solidity/Protocol.t.sol":9982:10073  uint256 releaseRate = config.totalDistribution.mulWadDown(1e18 / config.distributionPeriod) */
      swap1
      pop
        /* "test/solidity/Protocol.t.sol":10079:10233  assertApproxEqAbs(... */
      tag_2872
        /* "test/solidity/Protocol.t.sol":10121:10138  lastUndistributed */
      dup4
        /* "test/solidity/Protocol.t.sol":10104:10118  claimedRewards */
      sload(0x20)
        /* "test/solidity/Protocol.t.sol":10104:10138  claimedRewards + lastUndistributed */
      tag_2873
      swap2
      swap1
      tag_186
      jump	// in
    tag_2873:
        /* "test/solidity/Protocol.t.sol":10160:10215  Math.min(lastUpdate - start, config.distributionPeriod) */
      tag_2874
        /* "test/solidity/Protocol.t.sol":10169:10187  lastUpdate - start */
      tag_2875
        /* "test/solidity/Protocol.t.sol":10182:10187  start */
      dup10
        /* "test/solidity/Protocol.t.sol":10169:10179  lastUpdate */
      dup9
        /* "test/solidity/Protocol.t.sol":10169:10187  lastUpdate - start */
      tag_158
      jump	// in
    tag_2875:
        /* "test/solidity/Protocol.t.sol":10189:10195  config */
      dup6
        /* "test/solidity/Protocol.t.sol":10189:10214  config.distributionPeriod */
      0x80
      add
      mload
        /* "test/solidity/Protocol.t.sol":10160:10168  Math.min */
      tag_791
        /* "test/solidity/Protocol.t.sol":10160:10215  Math.min(lastUpdate - start, config.distributionPeriod) */
      jump	// in
    tag_2874:
        /* "test/solidity/Protocol.t.sol":10146:10215  releaseRate * Math.min(lastUpdate - start, config.distributionPeriod) */
      tag_2876
      swap1
        /* "test/solidity/Protocol.t.sol":10146:10157  releaseRate */
      dup5
        /* "test/solidity/Protocol.t.sol":10146:10215  releaseRate * Math.min(lastUpdate - start, config.distributionPeriod) */
      tag_278
      jump	// in
    tag_2876:
        /* "test/solidity/Protocol.t.sol":10223:10227  1e14 */
      0x5af3107a4000
        /* "test/solidity/Protocol.t.sol":10079:10096  assertApproxEqAbs */
      tag_2877
        /* "test/solidity/Protocol.t.sol":10079:10233  assertApproxEqAbs(... */
      jump	// in
    tag_2872:
        /* "test/solidity/Protocol.t.sol":10239:10398  assertApproxEqAbs(... */
      tag_2878
        /* "test/solidity/Protocol.t.sol":10305:10330  Math.min(lastUpdate, end) */
      tag_2879
        /* "test/solidity/Protocol.t.sol":10314:10324  lastUpdate */
      dup6
        /* "test/solidity/Protocol.t.sol":10326:10329  end */
      dup8
        /* "test/solidity/Protocol.t.sol":10305:10313  Math.min */
      tag_791
        /* "test/solidity/Protocol.t.sol":10305:10330  Math.min(lastUpdate, end) */
      jump	// in
    tag_2879:
        /* "test/solidity/Protocol.t.sol":10299:10330  end - Math.min(lastUpdate, end) */
      tag_2880
      swap1
        /* "test/solidity/Protocol.t.sol":10299:10302  end */
      dup8
        /* "test/solidity/Protocol.t.sol":10299:10330  end - Math.min(lastUpdate, end) */
      tag_158
      jump	// in
    tag_2880:
        /* "test/solidity/Protocol.t.sol":10284:10331  releaseRate * (end - Math.min(lastUpdate, end)) */
      tag_2881
      swap1
        /* "test/solidity/Protocol.t.sol":10284:10295  releaseRate */
      dup4
        /* "test/solidity/Protocol.t.sol":10284:10331  releaseRate * (end - Math.min(lastUpdate, end)) */
      tag_278
      jump	// in
    tag_2881:
        /* "test/solidity/Protocol.t.sol":10264:10331  lastUndistributed + releaseRate * (end - Math.min(lastUpdate, end)) */
      tag_2882
      swap1
        /* "test/solidity/Protocol.t.sol":10264:10281  lastUndistributed */
      dup6
        /* "test/solidity/Protocol.t.sol":10264:10331  lastUndistributed + releaseRate * (end - Math.min(lastUpdate, end)) */
      tag_186
      jump	// in
    tag_2882:
        /* "test/solidity/Protocol.t.sol":10366:10380  claimedRewards */
      sload(0x20)
        /* "test/solidity/Protocol.t.sol":10339:10345  config */
      dup5
        /* "test/solidity/Protocol.t.sol":10339:10363  config.totalDistribution */
      0xc0
      add
      mload
        /* "test/solidity/Protocol.t.sol":10339:10380  config.totalDistribution - claimedRewards */
      tag_2876
      swap2
      swap1
      tag_158
      jump	// in
        /* "test/solidity/Protocol.t.sol":10239:10398  assertApproxEqAbs(... */
    tag_2878:
        /* "test/solidity/Protocol.t.sol":5264:10403  {... */
      pop
      pop
      pop
      pop
      pop
      pop
        /* "test/solidity/Protocol.t.sol":5233:10403  function invariants() external {... */
      jump	// out
        /* "test/solidity/Protocol.t.sol":11570:11920  function invariantNoCollateralNoDebt() external {... */
    tag_149:
        /* "test/solidity/Protocol.t.sol":11629:11635  uint i */
      0x00
        /* "test/solidity/Protocol.t.sol":11624:11916  for (uint i = 0; i < accounts.length; ++i) {... */
    tag_2885:
        /* "test/solidity/Protocol.t.sol":11645:11653  accounts */
      0x1d
        /* "test/solidity/Protocol.t.sol":11645:11660  accounts.length */
      sload
        /* "test/solidity/Protocol.t.sol":11641:11660  i < accounts.length */
      dup2
      lt
        /* "test/solidity/Protocol.t.sol":11624:11916  for (uint i = 0; i < accounts.length; ++i) {... */
      iszero
      tag_1069
      jumpi
        /* "test/solidity/Protocol.t.sol":11675:11690  address account */
      0x00
        /* "test/solidity/Protocol.t.sol":11693:11701  accounts */
      0x1d
        /* "test/solidity/Protocol.t.sol":11702:11703  i */
      dup3
        /* "test/solidity/Protocol.t.sol":11693:11704  accounts[i] */
      dup2
      sload
      dup2
      lt
      tag_2889
      jumpi
      tag_2889
      tag_162
      jump	// in
    tag_2889:
      0x00
      swap2
      dup3
      mstore
      0x20
      swap1
      swap2
      keccak256
      add
      sload
        /* "test/solidity/Protocol.t.sol":11716:11723  auditor */
      sload(0x1b)
        /* "test/solidity/Protocol.t.sol":11716:11747  auditor.accountMarkets(account) */
      mload(0x40)
      not(sub(shl(0xe1, 0x63e28d), 0x01))
      dup2
      mstore
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":11693:11704  accounts[i] */
      swap3
      dup4
      and
        /* "test/solidity/Protocol.t.sol":11716:11747  auditor.accountMarkets(account) */
      0x04
      dup3
      add
        /* "#utility.yul":7560:7611   */
      dup2
      swap1
      mstore
        /* "test/solidity/Protocol.t.sol":11693:11704  accounts[i] */
      swap4
      pop
        /* "test/solidity/Protocol.t.sol":11716:11723  auditor */
      swap2
      and
      swap1
        /* "test/solidity/Protocol.t.sol":11716:11738  auditor.accountMarkets */
      0xff383ae6
      swap1
        /* "#utility.yul":7533:7551   */
      0x24
      add
        /* "test/solidity/Protocol.t.sol":11716:11747  auditor.accountMarkets(account) */
      0x20
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      dup7
      gas
      staticcall
      iszero
      dup1
      iszero
      tag_2893
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_2893:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      dup2
      add
      swap1
      tag_2894
      swap2
      swap1
      tag_212
      jump	// in
    tag_2894:
        /* "test/solidity/Protocol.t.sol":11751:11752  0 */
      0x00
        /* "test/solidity/Protocol.t.sol":11716:11752  auditor.accountMarkets(account) == 0 */
      sub
        /* "test/solidity/Protocol.t.sol":11712:11910  if (auditor.accountMarkets(account) == 0) {... */
      tag_2895
      jumpi
        /* "test/solidity/Protocol.t.sol":11769:11778  uint256 j */
      0x00
        /* "test/solidity/Protocol.t.sol":11764:11902  for (uint256 j = 0; j < markets.length; ++j) {... */
    tag_2896:
        /* "test/solidity/Protocol.t.sol":11788:11795  markets */
      0x1c
        /* "test/solidity/Protocol.t.sol":11788:11802  markets.length */
      sload
        /* "test/solidity/Protocol.t.sol":11784:11802  j < markets.length */
      dup2
      lt
        /* "test/solidity/Protocol.t.sol":11764:11902  for (uint256 j = 0; j < markets.length; ++j) {... */
      iszero
      tag_2897
      jumpi
        /* "test/solidity/Protocol.t.sol":11821:11891  assertEq(markets[j].previewDebt(account), 0, "should contain no debt") */
      tag_2899
        /* "test/solidity/Protocol.t.sol":11830:11837  markets */
      0x1c
        /* "test/solidity/Protocol.t.sol":11838:11839  j */
      dup3
        /* "test/solidity/Protocol.t.sol":11830:11840  markets[j] */
      dup2
      sload
      dup2
      lt
      tag_2901
      jumpi
      tag_2901
      tag_162
      jump	// in
    tag_2901:
      0x00
      swap2
      dup3
      mstore
      0x20
      swap1
      swap2
      keccak256
      add
      sload
        /* "test/solidity/Protocol.t.sol":11830:11861  markets[j].previewDebt(account) */
      mload(0x40)
      shl(0xe0, 0x1d43b30b)
      dup2
      mstore
      sub(shl(0xa0, 0x01), 0x01)
        /* "#utility.yul":7578:7610   */
      dup6
      dup2
      and
        /* "test/solidity/Protocol.t.sol":11830:11861  markets[j].previewDebt(account) */
      0x04
      dup4
      add
        /* "#utility.yul":7560:7611   */
      mstore
        /* "test/solidity/Protocol.t.sol":11830:11840  markets[j] */
      swap1
      swap2
      and
      swap1
        /* "test/solidity/Protocol.t.sol":11830:11852  markets[j].previewDebt */
      0x1d43b30b
      swap1
        /* "#utility.yul":7533:7551   */
      0x24
      add
        /* "test/solidity/Protocol.t.sol":11830:11861  markets[j].previewDebt(account) */
      0x20
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      dup7
      gas
      staticcall
      iszero
      dup1
      iszero
      tag_2905
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_2905:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      dup2
      add
      swap1
      tag_2906
      swap2
      swap1
      tag_212
      jump	// in
    tag_2906:
        /* "test/solidity/Protocol.t.sol":11863:11864  0 */
      0x00
        /* "test/solidity/Protocol.t.sol":11821:11891  assertEq(markets[j].previewDebt(account), 0, "should contain no debt") */
      mload(0x40)
      dup1
      0x40
      add
      0x40
      mstore
      dup1
      0x16
      dup2
      mstore
      0x20
      add
      shl(0x52, 0x1cda1bdd5b190818dbdb9d185a5b881b9bc81919589d)
      dup2
      mstore
      pop
        /* "test/solidity/Protocol.t.sol":11821:11829  assertEq */
      tag_2107
        /* "test/solidity/Protocol.t.sol":11821:11891  assertEq(markets[j].previewDebt(account), 0, "should contain no debt") */
      jump	// in
    tag_2899:
        /* "test/solidity/Protocol.t.sol":11804:11807  ++j */
      tag_2907
      dup2
      tag_293
      jump	// in
    tag_2907:
      swap1
      pop
        /* "test/solidity/Protocol.t.sol":11764:11902  for (uint256 j = 0; j < markets.length; ++j) {... */
      jump(tag_2896)
    tag_2897:
      pop
        /* "test/solidity/Protocol.t.sol":11712:11910  if (auditor.accountMarkets(account) == 0) {... */
    tag_2895:
      pop
        /* "test/solidity/Protocol.t.sol":11662:11665  ++i */
      tag_2908
      dup2
      tag_293
      jump	// in
    tag_2908:
      swap1
      pop
        /* "test/solidity/Protocol.t.sol":11624:11916  for (uint i = 0; i < accounts.length; ++i) {... */
      jump(tag_2885)
        /* "lib/forge-std/src/StdUtils.sol":1411:2674  function _bound(uint256 x, uint256 min, uint256 max) internal pure virtual returns (uint256 result) {... */
    tag_159:
        /* "lib/forge-std/src/StdUtils.sol":1495:1509  uint256 result */
      0x00
        /* "lib/forge-std/src/StdUtils.sol":1536:1539  max */
      dup2
        /* "lib/forge-std/src/StdUtils.sol":1529:1532  min */
      dup4
        /* "lib/forge-std/src/StdUtils.sol":1529:1539  min <= max */
      gt
      iszero
        /* "lib/forge-std/src/StdUtils.sol":1521:1606  require(min <= max, "StdUtils bound(uint256,uint256,uint256): Max is less than min.") */
      tag_2910
      jumpi
      0x00
      dup1
      revert
    tag_2910:
        /* "lib/forge-std/src/StdUtils.sol":1840:1843  min */
      dup3
        /* "lib/forge-std/src/StdUtils.sol":1835:1836  x */
      dup5
        /* "lib/forge-std/src/StdUtils.sol":1835:1843  x >= min */
      lt
      iszero
        /* "lib/forge-std/src/StdUtils.sol":1835:1855  x >= min && x <= max */
      dup1
      iszero
      tag_2911
      jumpi
      pop
        /* "lib/forge-std/src/StdUtils.sol":1852:1855  max */
      dup2
        /* "lib/forge-std/src/StdUtils.sol":1847:1848  x */
      dup5
        /* "lib/forge-std/src/StdUtils.sol":1847:1855  x <= max */
      gt
      iszero
        /* "lib/forge-std/src/StdUtils.sol":1835:1855  x >= min && x <= max */
    tag_2911:
        /* "lib/forge-std/src/StdUtils.sol":1831:1865  if (x >= min && x <= max) return x */
      iszero
      tag_2912
      jumpi
      pop
        /* "lib/forge-std/src/StdUtils.sol":1864:1865  x */
      dup3
        /* "lib/forge-std/src/StdUtils.sol":1857:1865  return x */
      jump(tag_2909)
        /* "lib/forge-std/src/StdUtils.sol":1831:1865  if (x >= min && x <= max) return x */
    tag_2912:
        /* "lib/forge-std/src/StdUtils.sol":1876:1888  uint256 size */
      0x00
        /* "lib/forge-std/src/StdUtils.sol":1891:1900  max - min */
      tag_2913
        /* "lib/forge-std/src/StdUtils.sol":1897:1900  min */
      dup5
        /* "lib/forge-std/src/StdUtils.sol":1891:1894  max */
      dup5
        /* "lib/forge-std/src/StdUtils.sol":1891:1900  max - min */
      tag_158
      jump	// in
    tag_2913:
        /* "lib/forge-std/src/StdUtils.sol":1891:1904  max - min + 1 */
      tag_2914
      swap1
        /* "lib/forge-std/src/StdUtils.sol":1903:1904  1 */
      0x01
        /* "lib/forge-std/src/StdUtils.sol":1891:1904  max - min + 1 */
      tag_186
      jump	// in
    tag_2914:
        /* "lib/forge-std/src/StdUtils.sol":1876:1904  uint256 size = max - min + 1 */
      swap1
      pop
        /* "lib/forge-std/src/StdUtils.sol":2099:2100  3 */
      0x03
        /* "lib/forge-std/src/StdUtils.sol":2094:2095  x */
      dup6
        /* "lib/forge-std/src/StdUtils.sol":2094:2100  x <= 3 */
      gt
      iszero
        /* "lib/forge-std/src/StdUtils.sol":2094:2112  x <= 3 && size > x */
      dup1
      iszero
      tag_2915
      jumpi
      pop
        /* "lib/forge-std/src/StdUtils.sol":2111:2112  x */
      dup5
        /* "lib/forge-std/src/StdUtils.sol":2104:2108  size */
      dup2
        /* "lib/forge-std/src/StdUtils.sol":2104:2112  size > x */
      gt
        /* "lib/forge-std/src/StdUtils.sol":2094:2112  x <= 3 && size > x */
    tag_2915:
        /* "lib/forge-std/src/StdUtils.sol":2090:2128  if (x <= 3 && size > x) return min + x */
      iszero
      tag_2916
      jumpi
        /* "lib/forge-std/src/StdUtils.sol":2121:2128  min + x */
      tag_2917
        /* "lib/forge-std/src/StdUtils.sol":2127:2128  x */
      dup6
        /* "lib/forge-std/src/StdUtils.sol":2121:2124  min */
      dup6
        /* "lib/forge-std/src/StdUtils.sol":2121:2128  min + x */
      tag_186
      jump	// in
    tag_2917:
        /* "lib/forge-std/src/StdUtils.sol":2114:2128  return min + x */
      swap2
      pop
      pop
      jump(tag_2909)
        /* "lib/forge-std/src/StdUtils.sol":2090:2128  if (x <= 3 && size > x) return min + x */
    tag_2916:
        /* "lib/forge-std/src/StdUtils.sol":2147:2162  UINT256_MAX - 3 */
      tag_2918
        /* "lib/forge-std/src/StdUtils.sol":2161:2162  3 */
      0x03
      not(0x00)
        /* "lib/forge-std/src/StdUtils.sol":2147:2162  UINT256_MAX - 3 */
      tag_158
      jump	// in
    tag_2918:
        /* "lib/forge-std/src/StdUtils.sol":2142:2143  x */
      dup6
        /* "lib/forge-std/src/StdUtils.sol":2142:2162  x >= UINT256_MAX - 3 */
      lt
      iszero
        /* "lib/forge-std/src/StdUtils.sol":2142:2188  x >= UINT256_MAX - 3 && size > UINT256_MAX - x */
      dup1
      iszero
      tag_2919
      jumpi
      pop
        /* "lib/forge-std/src/StdUtils.sol":2173:2188  UINT256_MAX - x */
      tag_2920
        /* "lib/forge-std/src/StdUtils.sol":2187:2188  x */
      dup6
      not(0x00)
        /* "lib/forge-std/src/StdUtils.sol":2173:2188  UINT256_MAX - x */
      tag_158
      jump	// in
    tag_2920:
        /* "lib/forge-std/src/StdUtils.sol":2166:2170  size */
      dup2
        /* "lib/forge-std/src/StdUtils.sol":2166:2188  size > UINT256_MAX - x */
      gt
        /* "lib/forge-std/src/StdUtils.sol":2142:2188  x >= UINT256_MAX - 3 && size > UINT256_MAX - x */
    tag_2919:
        /* "lib/forge-std/src/StdUtils.sol":2138:2220  if (x >= UINT256_MAX - 3 && size > UINT256_MAX - x) return max - (UINT256_MAX - x) */
      iszero
      tag_2921
      jumpi
        /* "lib/forge-std/src/StdUtils.sol":2204:2219  UINT256_MAX - x */
      tag_2922
        /* "lib/forge-std/src/StdUtils.sol":2218:2219  x */
      dup6
      not(0x00)
        /* "lib/forge-std/src/StdUtils.sol":2204:2219  UINT256_MAX - x */
      tag_158
      jump	// in
    tag_2922:
        /* "lib/forge-std/src/StdUtils.sol":2197:2220  max - (UINT256_MAX - x) */
      tag_2917
      swap1
        /* "lib/forge-std/src/StdUtils.sol":2197:2200  max */
      dup5
        /* "lib/forge-std/src/StdUtils.sol":2197:2220  max - (UINT256_MAX - x) */
      tag_158
      jump	// in
        /* "lib/forge-std/src/StdUtils.sol":2138:2220  if (x >= UINT256_MAX - 3 && size > UINT256_MAX - x) return max - (UINT256_MAX - x) */
    tag_2921:
        /* "lib/forge-std/src/StdUtils.sol":2324:2327  max */
      dup3
        /* "lib/forge-std/src/StdUtils.sol":2320:2321  x */
      dup6
        /* "lib/forge-std/src/StdUtils.sol":2320:2327  x > max */
      gt
        /* "lib/forge-std/src/StdUtils.sol":2316:2668  if (x > max) {... */
      iszero
      tag_2924
      jumpi
        /* "lib/forge-std/src/StdUtils.sol":2343:2355  uint256 diff */
      0x00
        /* "lib/forge-std/src/StdUtils.sol":2358:2365  x - max */
      tag_2925
        /* "lib/forge-std/src/StdUtils.sol":2362:2365  max */
      dup5
        /* "lib/forge-std/src/StdUtils.sol":2358:2359  x */
      dup8
        /* "lib/forge-std/src/StdUtils.sol":2358:2365  x - max */
      tag_158
      jump	// in
    tag_2925:
        /* "lib/forge-std/src/StdUtils.sol":2343:2365  uint256 diff = x - max */
      swap1
      pop
        /* "lib/forge-std/src/StdUtils.sol":2379:2390  uint256 rem */
      0x00
        /* "lib/forge-std/src/StdUtils.sol":2393:2404  diff % size */
      tag_2926
        /* "lib/forge-std/src/StdUtils.sol":2400:2404  size */
      dup4
        /* "lib/forge-std/src/StdUtils.sol":2343:2365  uint256 diff = x - max */
      dup4
        /* "lib/forge-std/src/StdUtils.sol":2393:2404  diff % size */
      tag_183
      jump	// in
    tag_2926:
        /* "lib/forge-std/src/StdUtils.sol":2379:2404  uint256 rem = diff % size */
      swap1
      pop
        /* "lib/forge-std/src/StdUtils.sol":2422:2425  rem */
      dup1
        /* "lib/forge-std/src/StdUtils.sol":2429:2430  0 */
      0x00
        /* "lib/forge-std/src/StdUtils.sol":2422:2430  rem == 0 */
      sub
        /* "lib/forge-std/src/StdUtils.sol":2418:2442  if (rem == 0) return max */
      tag_2927
      jumpi
        /* "lib/forge-std/src/StdUtils.sol":2439:2442  max */
      dup5
        /* "lib/forge-std/src/StdUtils.sol":2432:2442  return max */
      swap4
      pop
      pop
      pop
      pop
      jump(tag_2909)
        /* "lib/forge-std/src/StdUtils.sol":2418:2442  if (rem == 0) return max */
    tag_2927:
        /* "lib/forge-std/src/StdUtils.sol":2477:2478  1 */
      0x01
        /* "lib/forge-std/src/StdUtils.sol":2465:2474  min + rem */
      tag_2928
        /* "lib/forge-std/src/StdUtils.sol":2471:2474  rem */
      dup3
        /* "lib/forge-std/src/StdUtils.sol":2465:2468  min */
      dup9
        /* "lib/forge-std/src/StdUtils.sol":2465:2474  min + rem */
      tag_186
      jump	// in
    tag_2928:
        /* "lib/forge-std/src/StdUtils.sol":2465:2478  min + rem - 1 */
      tag_2929
      swap2
      swap1
      tag_158
      jump	// in
    tag_2929:
        /* "lib/forge-std/src/StdUtils.sol":2456:2478  result = min + rem - 1 */
      swap4
      pop
        /* "lib/forge-std/src/StdUtils.sol":2329:2489  {... */
      pop
      pop
        /* "lib/forge-std/src/StdUtils.sol":2316:2668  if (x > max) {... */
      jump(tag_2931)
    tag_2924:
        /* "lib/forge-std/src/StdUtils.sol":2503:2506  min */
      dup4
        /* "lib/forge-std/src/StdUtils.sol":2499:2500  x */
      dup6
        /* "lib/forge-std/src/StdUtils.sol":2499:2506  x < min */
      lt
        /* "lib/forge-std/src/StdUtils.sol":2495:2668  if (x < min) {... */
      iszero
      tag_2931
      jumpi
        /* "lib/forge-std/src/StdUtils.sol":2522:2534  uint256 diff */
      0x00
        /* "lib/forge-std/src/StdUtils.sol":2537:2544  min - x */
      tag_2932
        /* "lib/forge-std/src/StdUtils.sol":2543:2544  x */
      dup7
        /* "lib/forge-std/src/StdUtils.sol":2537:2540  min */
      dup7
        /* "lib/forge-std/src/StdUtils.sol":2537:2544  min - x */
      tag_158
      jump	// in
    tag_2932:
        /* "lib/forge-std/src/StdUtils.sol":2522:2544  uint256 diff = min - x */
      swap1
      pop
        /* "lib/forge-std/src/StdUtils.sol":2558:2569  uint256 rem */
      0x00
        /* "lib/forge-std/src/StdUtils.sol":2572:2583  diff % size */
      tag_2933
        /* "lib/forge-std/src/StdUtils.sol":2579:2583  size */
      dup4
        /* "lib/forge-std/src/StdUtils.sol":2522:2544  uint256 diff = min - x */
      dup4
        /* "lib/forge-std/src/StdUtils.sol":2572:2583  diff % size */
      tag_183
      jump	// in
    tag_2933:
        /* "lib/forge-std/src/StdUtils.sol":2558:2583  uint256 rem = diff % size */
      swap1
      pop
        /* "lib/forge-std/src/StdUtils.sol":2601:2604  rem */
      dup1
        /* "lib/forge-std/src/StdUtils.sol":2608:2609  0 */
      0x00
        /* "lib/forge-std/src/StdUtils.sol":2601:2609  rem == 0 */
      sub
        /* "lib/forge-std/src/StdUtils.sol":2597:2621  if (rem == 0) return min */
      tag_2934
      jumpi
        /* "lib/forge-std/src/StdUtils.sol":2618:2621  min */
      dup6
        /* "lib/forge-std/src/StdUtils.sol":2611:2621  return min */
      swap4
      pop
      pop
      pop
      pop
      jump(tag_2909)
        /* "lib/forge-std/src/StdUtils.sol":2597:2621  if (rem == 0) return min */
    tag_2934:
        /* "lib/forge-std/src/StdUtils.sol":2644:2653  max - rem */
      tag_2935
        /* "lib/forge-std/src/StdUtils.sol":2650:2653  rem */
      dup2
        /* "lib/forge-std/src/StdUtils.sol":2644:2647  max */
      dup7
        /* "lib/forge-std/src/StdUtils.sol":2644:2653  max - rem */
      tag_158
      jump	// in
    tag_2935:
        /* "lib/forge-std/src/StdUtils.sol":2644:2657  max - rem + 1 */
      tag_2936
      swap1
        /* "lib/forge-std/src/StdUtils.sol":2656:2657  1 */
      0x01
        /* "lib/forge-std/src/StdUtils.sol":2644:2657  max - rem + 1 */
      tag_186
      jump	// in
    tag_2936:
        /* "lib/forge-std/src/StdUtils.sol":2635:2657  result = max - rem + 1 */
      swap4
      pop
        /* "lib/forge-std/src/StdUtils.sol":2508:2668  {... */
      pop
      pop
        /* "lib/forge-std/src/StdUtils.sol":2495:2668  if (x < min) {... */
    tag_2931:
        /* "lib/forge-std/src/StdUtils.sol":1511:2674  {... */
      pop
        /* "lib/forge-std/src/StdUtils.sol":1411:2674  function _bound(uint256 x, uint256 min, uint256 max) internal pure virtual returns (uint256 result) {... */
    tag_2909:
      swap4
      swap3
      pop
      pop
      pop
      jump	// out
        /* "test/solidity/Protocol.t.sol":44648:46207  function accountLiquidity(... */
    tag_207:
        /* "test/solidity/Protocol.t.sol":44805:44826  uint256 sumCollateral */
      0x00
        /* "test/solidity/Protocol.t.sol":44828:44854  uint256 sumDebtPlusEffects */
      dup1
        /* "test/solidity/Protocol.t.sol":44862:44898  Auditor.AccountLiquidity memory vars */
      tag_2938
      mload(0x40)
      dup1
      0x60
      add
      0x40
      mstore
      dup1
      0x00
      dup2
      mstore
      0x20
      add
      0x00
      dup2
      mstore
      0x20
      add
      0x00
      dup2
      mstore
      pop
      swap1
      jump
    tag_2938:
        /* "test/solidity/Protocol.t.sol":44962:44969  auditor */
      sload(0x1b)
        /* "test/solidity/Protocol.t.sol":44962:44993  auditor.accountMarkets(account) */
      mload(0x40)
      not(sub(shl(0xe1, 0x63e28d), 0x01))
      dup2
      mstore
      sub(shl(0xa0, 0x01), 0x01)
        /* "#utility.yul":7578:7610   */
      dup10
      dup2
      and
        /* "test/solidity/Protocol.t.sol":44962:44993  auditor.accountMarkets(account) */
      0x04
      dup4
      add
        /* "#utility.yul":7560:7611   */
      mstore
        /* "test/solidity/Protocol.t.sol":44942:44959  uint256 marketMap */
      0x00
      swap3
        /* "test/solidity/Protocol.t.sol":44962:44969  auditor */
      and
      swap1
        /* "test/solidity/Protocol.t.sol":44962:44984  auditor.accountMarkets */
      0xff383ae6
      swap1
        /* "#utility.yul":7533:7551   */
      0x24
      add
        /* "test/solidity/Protocol.t.sol":44962:44993  auditor.accountMarkets(account) */
      0x20
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      dup7
      gas
      staticcall
      iszero
      dup1
      iszero
      tag_2942
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_2942:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      dup2
      add
      swap1
      tag_2943
      swap2
      swap1
      tag_212
      jump	// in
    tag_2943:
        /* "test/solidity/Protocol.t.sol":44942:44993  uint256 marketMap = auditor.accountMarkets(account) */
      swap1
      pop
        /* "test/solidity/Protocol.t.sol":45070:45086  borrowAssets > 0 */
      dup6
      iszero
        /* "test/solidity/Protocol.t.sol":45066:45243  if (borrowAssets > 0) {... */
      tag_2944
      jumpi
        /* "test/solidity/Protocol.t.sol":45122:45129  auditor */
      sload(0x1b)
        /* "test/solidity/Protocol.t.sol":45122:45155  auditor.markets(marketToSimulate) */
      mload(0x40)
      shl(0xe0, 0x8e8f294b)
      dup2
      mstore
      sub(shl(0xa0, 0x01), 0x01)
        /* "#utility.yul":7578:7610   */
      dup10
      dup2
      and
        /* "test/solidity/Protocol.t.sol":45122:45155  auditor.markets(marketToSimulate) */
      0x04
      dup4
      add
        /* "#utility.yul":7560:7611   */
      mstore
        /* "test/solidity/Protocol.t.sol":45101:45114  uint256 index */
      0x00
      swap3
        /* "test/solidity/Protocol.t.sol":45122:45129  auditor */
      and
      swap1
        /* "test/solidity/Protocol.t.sol":45122:45137  auditor.markets */
      0x8e8f294b
      swap1
        /* "#utility.yul":7533:7551   */
      0x24
      add
        /* "test/solidity/Protocol.t.sol":45122:45155  auditor.markets(marketToSimulate) */
      0xa0
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      dup7
      gas
      staticcall
      iszero
      dup1
      iszero
      tag_2947
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_2947:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      dup2
      add
      swap1
      tag_2948
      swap2
      swap1
      tag_198
      jump	// in
    tag_2948:
      pop
      pop
        /* "test/solidity/Protocol.t.sol":45096:45155  (, , uint256 index, , ) = auditor.markets(marketToSimulate) */
      0xff
      and
      swap3
      pop
      pop
      pop
        /* "test/solidity/Protocol.t.sol":45181:45182  1 */
      0x01
        /* "test/solidity/Protocol.t.sol":45181:45191  1 << index */
      dup2
      shl
        /* "test/solidity/Protocol.t.sol":45168:45192  marketMap & (1 << index) */
      dup3
      and
        /* "test/solidity/Protocol.t.sol":45197:45198  0 */
      0x00
        /* "test/solidity/Protocol.t.sol":45167:45198  (marketMap & (1 << index)) == 0 */
      sub
        /* "test/solidity/Protocol.t.sol":45163:45236  if ((marketMap & (1 << index)) == 0) marketMap = marketMap | (1 << index) */
      tag_2949
      jumpi
        /* "test/solidity/Protocol.t.sol":45230:45235  index */
      dup1
        /* "test/solidity/Protocol.t.sol":45225:45226  1 */
      0x01
        /* "test/solidity/Protocol.t.sol":45225:45235  1 << index */
      swap1
      shl
        /* "test/solidity/Protocol.t.sol":45212:45221  marketMap */
      dup3
        /* "test/solidity/Protocol.t.sol":45212:45236  marketMap | (1 << index) */
      or
        /* "test/solidity/Protocol.t.sol":45200:45236  marketMap = marketMap | (1 << index) */
      swap2
      pop
        /* "test/solidity/Protocol.t.sol":45163:45236  if ((marketMap & (1 << index)) == 0) marketMap = marketMap | (1 << index) */
    tag_2949:
        /* "test/solidity/Protocol.t.sol":45088:45243  {... */
      pop
        /* "test/solidity/Protocol.t.sol":45066:45243  if (borrowAssets > 0) {... */
    tag_2944:
        /* "test/solidity/Protocol.t.sol":45253:45262  uint256 i */
      0x00
        /* "test/solidity/Protocol.t.sol":45248:46203  for (uint256 i = 0; i < markets.length; ++i) {... */
    tag_2950:
        /* "test/solidity/Protocol.t.sol":45272:45279  markets */
      0x1c
        /* "test/solidity/Protocol.t.sol":45272:45286  markets.length */
      sload
        /* "test/solidity/Protocol.t.sol":45268:45286  i < markets.length */
      dup2
      lt
        /* "test/solidity/Protocol.t.sol":45248:46203  for (uint256 i = 0; i < markets.length; ++i) {... */
      iszero
      tag_2951
      jumpi
        /* "test/solidity/Protocol.t.sol":45317:45324  auditor */
      sload(0x1b)
        /* "test/solidity/Protocol.t.sol":45317:45338  auditor.marketList(i) */
      mload(0x40)
      shl(0xe2, 0x08cae55b)
      dup2
      mstore
      0x04
      dup2
      add
        /* "#utility.yul":10439:10464   */
      dup4
      swap1
      mstore
        /* "test/solidity/Protocol.t.sol":45301:45314  Market market */
      0x00
      swap2
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":45317:45324  auditor */
      and
      swap1
        /* "test/solidity/Protocol.t.sol":45317:45335  auditor.marketList */
      0x232b956c
      swap1
        /* "#utility.yul":10412:10430   */
      0x24
      add
        /* "test/solidity/Protocol.t.sol":45317:45338  auditor.marketList(i) */
      0x20
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      dup7
      gas
      staticcall
      iszero
      dup1
      iszero
      tag_2955
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_2955:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      dup2
      add
      swap1
      tag_2956
      swap2
      swap1
      tag_167
      jump	// in
    tag_2956:
        /* "test/solidity/Protocol.t.sol":45301:45338  Market market = auditor.marketList(i) */
      swap1
      pop
        /* "test/solidity/Protocol.t.sol":45364:45365  1 */
      0x01
        /* "test/solidity/Protocol.t.sol":45364:45370  1 << i */
      dup3
      shl
        /* "test/solidity/Protocol.t.sol":45351:45371  marketMap & (1 << i) */
      dup4
      and
        /* "test/solidity/Protocol.t.sol":45350:45377  (marketMap & (1 << i)) != 0 */
      iszero
        /* "test/solidity/Protocol.t.sol":45346:46158  if ((marketMap & (1 << i)) != 0) {... */
      tag_2957
      jumpi
        /* "test/solidity/Protocol.t.sol":45389:45417  Auditor.MarketData memory md */
      tag_2958
      tag_974
      jump	// in
    tag_2958:
        /* "test/solidity/Protocol.t.sol":45497:45504  auditor */
      sload(0x1b)
        /* "test/solidity/Protocol.t.sol":45497:45520  auditor.markets(market) */
      mload(0x40)
      shl(0xe0, 0x8e8f294b)
      dup2
      mstore
      sub(shl(0xa0, 0x01), 0x01)
        /* "#utility.yul":7578:7610   */
      dup5
      dup2
      and
        /* "test/solidity/Protocol.t.sol":45497:45520  auditor.markets(market) */
      0x04
      dup4
      add
        /* "#utility.yul":7560:7611   */
      mstore
        /* "test/solidity/Protocol.t.sol":45497:45504  auditor */
      swap1
      swap2
      and
      swap1
        /* "test/solidity/Protocol.t.sol":45497:45512  auditor.markets */
      0x8e8f294b
      swap1
        /* "#utility.yul":7533:7551   */
      0x24
      add
        /* "test/solidity/Protocol.t.sol":45497:45520  auditor.markets(market) */
      0xa0
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      dup7
      gas
      staticcall
      iszero
      dup1
      iszero
      tag_2961
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_2961:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      dup2
      add
      swap1
      tag_2962
      swap2
      swap1
      tag_198
      jump	// in
    tag_2962:
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":45427:45520  (md.adjustFactor, md.decimals, md.index, md.isListed, md.priceFeed) = auditor.markets(market) */
      swap1
      dup2
      and
        /* "test/solidity/Protocol.t.sol":45481:45493  md.priceFeed */
      0x80
      dup8
      add
        /* "test/solidity/Protocol.t.sol":45427:45520  (md.adjustFactor, md.decimals, md.index, md.isListed, md.priceFeed) = auditor.markets(market) */
      mstore
      swap1
      iszero
      iszero
        /* "test/solidity/Protocol.t.sol":45468:45479  md.isListed */
      0x60
      dup7
      add
        /* "test/solidity/Protocol.t.sol":45427:45520  (md.adjustFactor, md.decimals, md.index, md.isListed, md.priceFeed) = auditor.markets(market) */
      mstore
      0xff
      swap2
      dup3
      and
        /* "test/solidity/Protocol.t.sol":45458:45466  md.index */
      0x40
      dup1
      dup8
      add
        /* "test/solidity/Protocol.t.sol":45427:45520  (md.adjustFactor, md.decimals, md.index, md.isListed, md.priceFeed) = auditor.markets(market) */
      swap2
      swap1
      swap2
      mstore
      swap3
      swap1
      swap2
      and
      0x20
        /* "test/solidity/Protocol.t.sol":45445:45456  md.decimals */
      dup6
      add
        /* "test/solidity/Protocol.t.sol":45427:45520  (md.adjustFactor, md.decimals, md.index, md.isListed, md.priceFeed) = auditor.markets(market) */
      mstore
      sub(shl(0x80, 0x01), 0x01)
      swap3
      swap1
      swap3
      and
      dup4
      mstore
        /* "test/solidity/Protocol.t.sol":45567:45598  market.accountSnapshot(account) */
      mload
      shl(0xe0, 0x014a296f)
      dup2
      mstore
        /* "#utility.yul":7578:7610   */
      dup13
      dup3
      and
        /* "test/solidity/Protocol.t.sol":45567:45598  market.accountSnapshot(account) */
      0x04
      dup3
      add
        /* "#utility.yul":7560:7611   */
      mstore
        /* "test/solidity/Protocol.t.sol":45567:45589  market.accountSnapshot */
      swap1
      dup4
      and
      swap1
      0x014a296f
      swap1
        /* "#utility.yul":7533:7551   */
      0x24
      add
        /* "test/solidity/Protocol.t.sol":45567:45598  market.accountSnapshot(account) */
      0x40
      dup1
      mload
      dup1
      dup4
      sub
      dup2
      dup7
      gas
      staticcall
      iszero
      dup1
      iszero
      tag_2965
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_2965:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      dup2
      add
      swap1
      tag_2966
      swap2
      swap1
      tag_203
      jump	// in
    tag_2966:
        /* "test/solidity/Protocol.t.sol":45545:45563  vars.borrowBalance */
      0x20
      dup1
      dup9
      add
        /* "test/solidity/Protocol.t.sol":45530:45598  (vars.balance, vars.borrowBalance) = market.accountSnapshot(account) */
      swap2
      swap1
      swap2
      mstore
      swap1
      dup7
      mstore
        /* "test/solidity/Protocol.t.sol":45629:45641  md.priceFeed */
      0x80
      dup3
      add
      mload
        /* "test/solidity/Protocol.t.sol":45629:45656  md.priceFeed.latestAnswer() */
      0x40
      dup1
      mload
      shl(0xe0, 0x50d25bcd)
      dup2
      mstore
      swap1
      mload
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":45629:45654  md.priceFeed.latestAnswer */
      swap1
      swap3
      and
      swap3
      0x50d25bcd
      swap3
        /* "test/solidity/Protocol.t.sol":45629:45656  md.priceFeed.latestAnswer() */
      0x04
      dup1
      dup5
      add
      swap4
      dup3
      swap1
      sub
      add
      dup2
        /* "test/solidity/Protocol.t.sol":45629:45654  md.priceFeed.latestAnswer */
      dup7
        /* "test/solidity/Protocol.t.sol":45629:45656  md.priceFeed.latestAnswer() */
      gas
      staticcall
      iszero
      dup1
      iszero
      tag_2968
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_2968:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      dup2
      add
      swap1
      tag_2969
      swap2
      swap1
      tag_212
      jump	// in
    tag_2969:
        /* "test/solidity/Protocol.t.sol":45608:45618  vars.price */
      0x40
      dup7
      add
        /* "test/solidity/Protocol.t.sol":45608:45657  vars.price = uint256(md.priceFeed.latestAnswer()) */
      dup2
      swap1
      mstore
        /* "test/solidity/Protocol.t.sol":45750:45765  md.adjustFactor */
      dup2
      mload
        /* "test/solidity/Protocol.t.sol":45726:45737  md.decimals */
      0x20
      dup4
      add
      mload
        /* "test/solidity/Protocol.t.sol":45684:45766  vars.balance.mulDivDown(vars.price, 10 ** md.decimals).mulWadDown(md.adjustFactor) */
      tag_2970
      swap3
      sub(shl(0x80, 0x01), 0x01)
      swap1
      swap3
      and
      swap2
        /* "test/solidity/Protocol.t.sol":45684:45738  vars.balance.mulDivDown(vars.price, 10 ** md.decimals) */
      tag_1374
      swap2
        /* "test/solidity/Protocol.t.sol":45720:45737  10 ** md.decimals */
      tag_2972
      swap1
        /* "test/solidity/Protocol.t.sol":45720:45722  10 */
      0x0a
        /* "test/solidity/Protocol.t.sol":45720:45737  10 ** md.decimals */
      tag_987
      jump	// in
    tag_2972:
        /* "test/solidity/Protocol.t.sol":45684:45696  vars.balance */
      dup10
      mload
      swap2
        /* "test/solidity/Protocol.t.sol":45684:45738  vars.balance.mulDivDown(vars.price, 10 ** md.decimals) */
      swap1
        /* "test/solidity/Protocol.t.sol":45684:45707  vars.balance.mulDivDown */
      tag_2085
        /* "test/solidity/Protocol.t.sol":45684:45738  vars.balance.mulDivDown(vars.price, 10 ** md.decimals) */
      jump	// in
        /* "test/solidity/Protocol.t.sol":45684:45766  vars.balance.mulDivDown(vars.price, 10 ** md.decimals).mulWadDown(md.adjustFactor) */
    tag_2970:
        /* "test/solidity/Protocol.t.sol":45667:45766  sumCollateral += vars.balance.mulDivDown(vars.price, 10 ** md.decimals).mulWadDown(md.adjustFactor) */
      tag_2973
      swap1
      dup9
      tag_186
      jump	// in
    tag_2973:
      swap7
      pop
        /* "test/solidity/Protocol.t.sol":45798:45956  (vars.borrowBalance + (market == marketToSimulate ? borrowAssets : 0))... */
      tag_2974
        /* "test/solidity/Protocol.t.sol":45940:45942  md */
      dup2
        /* "test/solidity/Protocol.t.sol":45940:45955  md.adjustFactor */
      0x00
      add
      mload
      sub(shl(0x80, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":45798:45956  (vars.borrowBalance + (market == marketToSimulate ? borrowAssets : 0))... */
      and
        /* "test/solidity/Protocol.t.sol":45798:45919  (vars.borrowBalance + (market == marketToSimulate ? borrowAssets : 0))... */
      tag_760
        /* "test/solidity/Protocol.t.sol":45889:45893  vars */
      dup8
        /* "test/solidity/Protocol.t.sol":45889:45899  vars.price */
      0x40
      add
      mload
        /* "test/solidity/Protocol.t.sol":45907:45909  md */
      dup5
        /* "test/solidity/Protocol.t.sol":45907:45918  md.decimals */
      0x20
      add
      mload
        /* "test/solidity/Protocol.t.sol":45901:45903  10 */
      0x0a
        /* "test/solidity/Protocol.t.sol":45901:45918  10 ** md.decimals */
      tag_2976
      swap2
      swap1
      tag_987
      jump	// in
    tag_2976:
        /* "test/solidity/Protocol.t.sol":45831:45847  marketToSimulate */
      dup15
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":45821:45847  market == marketToSimulate */
      and
        /* "test/solidity/Protocol.t.sol":45821:45827  market */
      dup8
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":45821:45847  market == marketToSimulate */
      and
      eq
        /* "test/solidity/Protocol.t.sol":45821:45866  market == marketToSimulate ? borrowAssets : 0 */
      tag_2977
      jumpi
        /* "test/solidity/Protocol.t.sol":45865:45866  0 */
      0x00
        /* "test/solidity/Protocol.t.sol":45821:45866  market == marketToSimulate ? borrowAssets : 0 */
      jump(tag_2978)
    tag_2977:
        /* "test/solidity/Protocol.t.sol":45850:45862  borrowAssets */
      dup14
        /* "test/solidity/Protocol.t.sol":45821:45866  market == marketToSimulate ? borrowAssets : 0 */
    tag_2978:
        /* "test/solidity/Protocol.t.sol":45799:45803  vars */
      dup11
        /* "test/solidity/Protocol.t.sol":45799:45817  vars.borrowBalance */
      0x20
      add
      mload
        /* "test/solidity/Protocol.t.sol":45799:45867  vars.borrowBalance + (market == marketToSimulate ? borrowAssets : 0) */
      tag_1003
      swap2
      swap1
      tag_186
      jump	// in
        /* "test/solidity/Protocol.t.sol":45798:45956  (vars.borrowBalance + (market == marketToSimulate ? borrowAssets : 0))... */
    tag_2974:
        /* "test/solidity/Protocol.t.sol":45776:45956  sumDebtPlusEffects += (vars.borrowBalance + (market == marketToSimulate ? borrowAssets : 0))... */
      tag_2980
      swap1
      dup8
      tag_186
      jump	// in
    tag_2980:
      swap6
      pop
        /* "test/solidity/Protocol.t.sol":45980:45996  marketToSimulate */
      dup10
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":45970:45996  market == marketToSimulate */
      and
        /* "test/solidity/Protocol.t.sol":45970:45976  market */
      dup3
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":45970:45996  market == marketToSimulate */
      and
      eq
        /* "test/solidity/Protocol.t.sol":45970:46019  market == marketToSimulate && withdrawAssets != 0 */
      dup1
      iszero
      tag_2981
      jumpi
      pop
        /* "test/solidity/Protocol.t.sol":46000:46019  withdrawAssets != 0 */
      dup8
      iszero
      iszero
        /* "test/solidity/Protocol.t.sol":45970:46019  market == marketToSimulate && withdrawAssets != 0 */
    tag_2981:
        /* "test/solidity/Protocol.t.sol":45966:46150  if (market == marketToSimulate && withdrawAssets != 0) {... */
      iszero
      tag_2982
      jumpi
        /* "test/solidity/Protocol.t.sol":46055:46139  withdrawAssets.mulDivDown(vars.price, 10 ** md.decimals).mulWadDown(md.adjustFactor) */
      tag_2983
        /* "test/solidity/Protocol.t.sol":46123:46125  md */
      dup2
        /* "test/solidity/Protocol.t.sol":46123:46138  md.adjustFactor */
      0x00
      add
      mload
      sub(shl(0x80, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":46055:46139  withdrawAssets.mulDivDown(vars.price, 10 ** md.decimals).mulWadDown(md.adjustFactor) */
      and
        /* "test/solidity/Protocol.t.sol":46055:46111  withdrawAssets.mulDivDown(vars.price, 10 ** md.decimals) */
      tag_1374
        /* "test/solidity/Protocol.t.sol":46081:46085  vars */
      dup8
        /* "test/solidity/Protocol.t.sol":46081:46091  vars.price */
      0x40
      add
      mload
        /* "test/solidity/Protocol.t.sol":46099:46101  md */
      dup5
        /* "test/solidity/Protocol.t.sol":46099:46110  md.decimals */
      0x20
      add
      mload
        /* "test/solidity/Protocol.t.sol":46093:46095  10 */
      0x0a
        /* "test/solidity/Protocol.t.sol":46093:46110  10 ** md.decimals */
      tag_2985
      swap2
      swap1
      tag_987
      jump	// in
    tag_2985:
        /* "test/solidity/Protocol.t.sol":46055:46069  withdrawAssets */
      dup13
      swap2
        /* "test/solidity/Protocol.t.sol":46055:46111  withdrawAssets.mulDivDown(vars.price, 10 ** md.decimals) */
      swap1
        /* "test/solidity/Protocol.t.sol":46055:46080  withdrawAssets.mulDivDown */
      tag_2085
        /* "test/solidity/Protocol.t.sol":46055:46111  withdrawAssets.mulDivDown(vars.price, 10 ** md.decimals) */
      jump	// in
        /* "test/solidity/Protocol.t.sol":46055:46139  withdrawAssets.mulDivDown(vars.price, 10 ** md.decimals).mulWadDown(md.adjustFactor) */
    tag_2983:
        /* "test/solidity/Protocol.t.sol":46033:46139  sumDebtPlusEffects += withdrawAssets.mulDivDown(vars.price, 10 ** md.decimals).mulWadDown(md.adjustFactor) */
      tag_2986
      swap1
      dup8
      tag_186
      jump	// in
    tag_2986:
      swap6
      pop
        /* "test/solidity/Protocol.t.sol":45966:46150  if (market == marketToSimulate && withdrawAssets != 0) {... */
    tag_2982:
        /* "test/solidity/Protocol.t.sol":45379:46158  {... */
      pop
        /* "test/solidity/Protocol.t.sol":45346:46158  if ((marketMap & (1 << i)) != 0) {... */
    tag_2957:
        /* "test/solidity/Protocol.t.sol":46180:46189  marketMap */
      dup3
        /* "test/solidity/Protocol.t.sol":46175:46176  i */
      dup3
        /* "test/solidity/Protocol.t.sol":46170:46171  1 */
      0x01
        /* "test/solidity/Protocol.t.sol":46170:46176  1 << i */
      swap1
      shl
        /* "test/solidity/Protocol.t.sol":46169:46189  (1 << i) > marketMap */
      gt
        /* "test/solidity/Protocol.t.sol":46165:46196  if ((1 << i) > marketMap) break */
      iszero
      tag_2987
      jumpi
        /* "test/solidity/Protocol.t.sol":46191:46196  break */
      pop
      jump(tag_2951)
        /* "test/solidity/Protocol.t.sol":46165:46196  if ((1 << i) > marketMap) break */
    tag_2987:
      pop
        /* "test/solidity/Protocol.t.sol":45288:45291  ++i */
      tag_2988
      dup2
      tag_293
      jump	// in
    tag_2988:
      swap1
      pop
        /* "test/solidity/Protocol.t.sol":45248:46203  for (uint256 i = 0; i < markets.length; ++i) {... */
      jump(tag_2950)
    tag_2951:
      pop
        /* "test/solidity/Protocol.t.sol":44856:46207  {... */
      pop
      pop
        /* "test/solidity/Protocol.t.sol":44648:46207  function accountLiquidity(... */
      swap5
      pop
      swap5
      swap3
      pop
      pop
      pop
      jump	// out
        /* "lib/forge-std/lib/ds-test/src/test.sol":5209:5471  function assertEq(uint a, uint b) internal {... */
    tag_242:
        /* "lib/forge-std/lib/ds-test/src/test.sol":5271:5272  b */
      dup1
        /* "lib/forge-std/lib/ds-test/src/test.sol":5266:5267  a */
      dup3
        /* "lib/forge-std/lib/ds-test/src/test.sol":5266:5272  a != b */
      eq
        /* "lib/forge-std/lib/ds-test/src/test.sol":5262:5465  if (a != b) {... */
      tag_2997
      jumpi
      0x00
      dup1
      mload
      0x20
      data_0ce61cd341b8163eeea68ffa812723a7ddba7801eab724a90491dada6fa91900
      dup4
      codecopy
      dup2
      mload
      swap2
      mstore
        /* "lib/forge-std/lib/ds-test/src/test.sol":5293:5334  log("Error: a == b not satisfied [uint]") */
      mload(0x40)
      tag_2991
      swap1
        /* "#utility.yul":43817:43819   */
      0x20
        /* "#utility.yul":43799:43820   */
      dup1
      dup3
      mstore
        /* "#utility.yul":43856:43858   */
      0x22
        /* "#utility.yul":43836:43854   */
      swap1
      dup3
      add
        /* "#utility.yul":43829:43859   */
      mstore
        /* "#utility.yul":43895:43929   */
      0x4572726f723a2061203d3d2062206e6f7420736174697366696564205b75696e
        /* "#utility.yul":43890:43892   */
      0x40
        /* "#utility.yul":43875:43893   */
      dup3
      add
        /* "#utility.yul":43868:43930   */
      mstore
      shl(0xf0, 0x745d)
        /* "#utility.yul":43961:43963   */
      0x60
        /* "#utility.yul":43946:43964   */
      dup3
      add
        /* "#utility.yul":43939:43971   */
      mstore
        /* "#utility.yul":44003:44006   */
      0x80
        /* "#utility.yul":43988:44007   */
      add
      swap1
        /* "#utility.yul":43615:44013   */
      jump
        /* "lib/forge-std/lib/ds-test/src/test.sol":5293:5334  log("Error: a == b not satisfied [uint]") */
    tag_2991:
      mload(0x40)
      dup1
      swap2
      sub
      swap1
      log1
        /* "lib/forge-std/lib/ds-test/src/test.sol":5353:5384  log_named_uint("      Left", a) */
      0x40
      dup1
      mload
        /* "#utility.yul":44230:44251   */
      dup2
      dup2
      mstore
        /* "#utility.yul":44287:44289   */
      0x0a
        /* "#utility.yul":44267:44285   */
      dup2
      dup4
      add
        /* "#utility.yul":44260:44290   */
      mstore
      shl(0xb2, 0x0808080808081319599d)
        /* "#utility.yul":44321:44323   */
      0x60
        /* "#utility.yul":44306:44324   */
      dup3
      add
        /* "#utility.yul":44299:44339   */
      mstore
        /* "#utility.yul":44406:44410   */
      0x20
        /* "#utility.yul":44391:44411   */
      dup2
      add
        /* "#utility.yul":44384:44420   */
      dup5
      swap1
      mstore
        /* "lib/forge-std/lib/ds-test/src/test.sol":5353:5384  log_named_uint("      Left", a) */
      swap1
      mload
      0x00
      dup1
      mload
      0x20
      data_e1160fc331ef5f8b3c86b8372ca727c40590de90473ca17e0048eeb4bc27f848
      dup4
      codecopy
      dup2
      mload
      swap2
      mstore
      swap2
      dup2
      swap1
      sub
        /* "#utility.yul":44371:44374   */
      0x80
        /* "lib/forge-std/lib/ds-test/src/test.sol":5353:5384  log_named_uint("      Left", a) */
      add
      swap1
      log1
        /* "lib/forge-std/lib/ds-test/src/test.sol":5403:5434  log_named_uint("     Right", b) */
      0x40
      dup1
      mload
        /* "#utility.yul":44643:44664   */
      dup2
      dup2
      mstore
        /* "#utility.yul":44700:44702   */
      0x0a
        /* "#utility.yul":44680:44698   */
      swap2
      dup2
      add
        /* "#utility.yul":44673:44703   */
      swap2
      swap1
      swap2
      mstore
      shl(0xb2, 0x0808080808149a59da1d)
        /* "#utility.yul":44734:44736   */
      0x60
        /* "#utility.yul":44719:44737   */
      dup3
      add
        /* "#utility.yul":44712:44752   */
      mstore
        /* "#utility.yul":44819:44823   */
      0x20
        /* "#utility.yul":44804:44824   */
      dup2
      add
        /* "#utility.yul":44797:44833   */
      dup3
      swap1
      mstore
      0x00
      dup1
      mload
      0x20
      data_e1160fc331ef5f8b3c86b8372ca727c40590de90473ca17e0048eeb4bc27f848
      dup4
      codecopy
      dup2
      mload
      swap2
      mstore
        /* "lib/forge-std/lib/ds-test/src/test.sol":5403:5434  log_named_uint("     Right", b) */
      swap1
        /* "#utility.yul":44784:44787   */
      0x80
        /* "#utility.yul":44769:44788   */
      add
        /* "lib/forge-std/lib/ds-test/src/test.sol":5403:5434  log_named_uint("     Right", b) */
    tag_2995:
      mload(0x40)
      dup1
      swap2
      sub
      swap1
      log1
        /* "lib/forge-std/lib/ds-test/src/test.sol":5448:5454  fail() */
      tag_2997
        /* "lib/forge-std/lib/ds-test/src/test.sol":5448:5452  fail */
      tag_2998
        /* "lib/forge-std/lib/ds-test/src/test.sol":5448:5454  fail() */
      jump	// in
    tag_2997:
        /* "lib/forge-std/lib/ds-test/src/test.sol":5209:5471  function assertEq(uint a, uint b) internal {... */
      pop
      pop
      jump	// out
        /* "node_modules/solmate/src/utils/LibString.sol":257:1622  function toString(uint256 n) internal pure returns (string memory str) {... */
    tag_281:
        /* "node_modules/solmate/src/utils/LibString.sol":309:326  string memory str */
      0x60
        /* "node_modules/solmate/src/utils/LibString.sol":342:343  n */
      dup2
        /* "node_modules/solmate/src/utils/LibString.sol":347:348  0 */
      0x00
        /* "node_modules/solmate/src/utils/LibString.sol":342:348  n == 0 */
      sub
        /* "node_modules/solmate/src/utils/LibString.sol":338:360  if (n == 0) return "0" */
      tag_3000
      jumpi
      pop
      pop
        /* "node_modules/solmate/src/utils/LibString.sol":350:360  return "0" */
      0x40
      dup1
      mload
      dup1
      dup3
      add
      swap1
      swap2
      mstore
      0x01
      dup2
      mstore
      shl(0xfc, 0x03)
      0x20
      dup3
      add
      mstore
      swap1
        /* "node_modules/solmate/src/utils/LibString.sol":257:1622  function toString(uint256 n) internal pure returns (string memory str) {... */
      jump	// out
        /* "node_modules/solmate/src/utils/LibString.sol":338:360  if (n == 0) return "0" */
    tag_3000:
        /* "node_modules/solmate/src/utils/LibString.sol":451:453  78 */
      0x4e
        /* "node_modules/solmate/src/utils/LibString.sol":609:613  0x40 */
      0x40
        /* "node_modules/solmate/src/utils/LibString.sol":603:614  mload(0x40) */
      mload
        /* "node_modules/solmate/src/utils/LibString.sol":596:614  str := mload(0x40) */
      swap2
      pop
        /* "node_modules/solmate/src/utils/LibString.sol":713:714  k */
      dup1
        /* "node_modules/solmate/src/utils/LibString.sol":708:711  str */
      dup3
        /* "node_modules/solmate/src/utils/LibString.sol":701:715  mstore(str, k) */
      mstore
        /* "node_modules/solmate/src/utils/LibString.sol":1003:1006  128 */
      0x80
        /* "node_modules/solmate/src/utils/LibString.sol":998:1001  str */
      dup3
        /* "node_modules/solmate/src/utils/LibString.sol":994:1007  add(str, 128) */
      add
        /* "node_modules/solmate/src/utils/LibString.sol":988:992  0x40 */
      0x40
        /* "node_modules/solmate/src/utils/LibString.sol":981:1008  mstore(0x40, add(str, 128)) */
      mstore
        /* "node_modules/solmate/src/utils/LibString.sol":1114:1410  for {} n {} {... */
    tag_3001:
        /* "node_modules/solmate/src/utils/LibString.sol":1121:1122  n */
      dup3
        /* "node_modules/solmate/src/utils/LibString.sol":1114:1410  for {} n {} {... */
      iszero
      tag_3003
      jumpi
        /* "node_modules/solmate/src/utils/LibString.sol":1228:1230  10 */
      0x0a
        /* "node_modules/solmate/src/utils/LibString.sol":1221:1231  mod(n, 10) */
      dup1
      dup5
      mod
        /* "node_modules/solmate/src/utils/LibString.sol":1217:1219  48 */
      0x30
        /* "node_modules/solmate/src/utils/LibString.sol":1213:1232  add(48, mod(n, 10)) */
      add
        /* "node_modules/solmate/src/utils/LibString.sol":1314:1325  add(str, k) */
      dup3
      dup5
      add
        /* "node_modules/solmate/src/utils/LibString.sol":1307:1332  mstore(add(str, k), char) */
      mstore
        /* "node_modules/solmate/src/utils/LibString.sol":1386:1396  div(n, 10) */
      swap1
      swap3
      div
      swap2
      not(0x00)
        /* "node_modules/solmate/src/utils/LibString.sol":1355:1364  sub(k, 1) */
      add
        /* "node_modules/solmate/src/utils/LibString.sol":1114:1410  for {} n {} {... */
      jump(tag_3001)
    tag_3003:
        /* "node_modules/solmate/src/utils/LibString.sol":1599:1601  78 */
      0x4e
        /* "node_modules/solmate/src/utils/LibString.sol":1595:1605  sub(78, k) */
      dup2
      swap1
      sub
        /* "node_modules/solmate/src/utils/LibString.sol":1492:1503  add(str, k) */
      swap2
      add
        /* "node_modules/solmate/src/utils/LibString.sol":1583:1606  mstore(str, sub(78, k)) */
      swap1
      dup2
      mstore
        /* "node_modules/solmate/src/utils/LibString.sol":1492:1503  add(str, k) */
      swap2
        /* "node_modules/solmate/src/utils/LibString.sol":257:1622  function toString(uint256 n) internal pure returns (string memory str) {... */
      swap1
      pop
      jump	// out
        /* "lib/forge-std/src/StdInvariant.sol":1477:1614  function targetSelector(FuzzSelector memory newTargetedSelector_) internal {... */
    tag_457:
        /* "lib/forge-std/src/StdInvariant.sol":1562:1580  _targetedSelectors */
      0x13
        /* "lib/forge-std/src/StdInvariant.sol":1562:1607  _targetedSelectors.push(newTargetedSelector_) */
      dup1
      sload
      0x01
      dup2
      add
      dup3
      sstore
      0x00
      swap2
      swap1
      swap2
      mstore
      dup2
      mload
      0x66de8ffda797e3de9c05e8fc57b3bf0ec28a930d40b0d285d93c06501cf6a090
      0x02
      swap1
      swap3
      mul
      swap2
      dup3
      add
      dup1
      sload
      not(sub(shl(0xa0, 0x01), 0x01))
      and
      sub(shl(0xa0, 0x01), 0x01)
      swap1
      swap3
      and
      swap2
      swap1
      swap2
      or
      dup2
      sstore
      0x20
      dup1
      dup5
      add
      mload
      dup1
      mload
      dup6
      swap5
      tag_3010
      swap4
      0x66de8ffda797e3de9c05e8fc57b3bf0ec28a930d40b0d285d93c06501cf6a091
      swap1
      swap2
      add
      swap3
      add
      swap1
      tag_3011
      jump	// in
    tag_3010:
      pop
      pop
      pop
        /* "lib/forge-std/src/StdInvariant.sol":1477:1614  function targetSelector(FuzzSelector memory newTargetedSelector_) internal {... */
      pop
      jump	// out
        /* "lib/forge-std/src/StdCheats.sol":19783:19905  function changePrank(address msgSender) internal virtual {... */
    tag_549:
      0x00
      dup1
      mload
      0x20
      data_b627c71dec38ae7fa273aa3bb9b6210fd4a76d47f44ae646db16da401b96db40
      dup4
      codecopy
      dup2
      mload
      swap2
      mstore
        /* "lib/forge-std/src/StdCheats.sol":18015:18052  uint256(keccak256("hevm cheat code")) */
      0x00
      shr
      sub(shl(0xa0, 0x01), 0x01)
        /* "lib/forge-std/src/StdCheats.sol":19850:19862  vm.stopPrank */
      and
      0x90c5013b
        /* "lib/forge-std/src/StdCheats.sol":19850:19864  vm.stopPrank() */
      mload(0x40)
      dup2
      0xffffffff
      and
      0xe0
      shl
      dup2
      mstore
      0x04
      add
      0x00
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      0x00
      dup8
      dup1
      extcodesize
      iszero
      dup1
      iszero
      tag_3013
      jumpi
      0x00
      dup1
      revert
    tag_3013:
      pop
      gas
      call
      iszero
      dup1
      iszero
      tag_3015
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_3015:
      pop
      pop
        /* "lib/forge-std/src/StdCheats.sol":19874:19898  vm.startPrank(msgSender) */
      mload(0x40)
      shl(0xe1, 0x03223eab)
      dup2
      mstore
      sub(shl(0xa0, 0x01), 0x01)
        /* "#utility.yul":7578:7610   */
      dup5
      and
        /* "lib/forge-std/src/StdCheats.sol":19874:19898  vm.startPrank(msgSender) */
      0x04
      dup3
      add
        /* "#utility.yul":7560:7611   */
      mstore
      0x00
      dup1
      mload
      0x20
      data_1a390d6c2ee89e11d2dffeb86f753e43f966d02cbb0b3bd3e6e1cdf50245ef50
      dup4
      codecopy
      dup2
      mload
      swap2
      mstore
        /* "lib/forge-std/src/StdCheats.sol":19874:19887  vm.startPrank */
      swap3
      pop
      0x06447d56
      swap2
      pop
        /* "#utility.yul":7533:7551   */
      0x24
      add
        /* "lib/forge-std/src/StdCheats.sol":19874:19898  vm.startPrank(msgSender) */
      tag_854
        /* "#utility.yul":7414:7617   */
      jump
        /* "test/solidity/Protocol.t.sol":52393:52818  function previewAccumulatedEarnings(Market market) internal view returns (uint256) {... */
    tag_578:
        /* "test/solidity/Protocol.t.sol":52467:52474  uint256 */
      0x00
        /* "test/solidity/Protocol.t.sol":52482:52497  uint256 elapsed */
      dup1
        /* "test/solidity/Protocol.t.sol":52518:52524  market */
      dup3
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":52518:52547  market.lastAccumulatorAccrual */
      and
      0xa16a8850
        /* "test/solidity/Protocol.t.sol":52518:52549  market.lastAccumulatorAccrual() */
      mload(0x40)
      dup2
      0xffffffff
      and
      0xe0
      shl
      dup2
      mstore
      0x04
      add
      0x20
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      dup7
      gas
      staticcall
      iszero
      dup1
      iszero
      tag_3022
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_3022:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      dup2
      add
      swap1
      tag_3023
      swap2
      swap1
      tag_3024
      jump	// in
    tag_3023:
        /* "test/solidity/Protocol.t.sol":52500:52549  block.timestamp - market.lastAccumulatorAccrual() */
      tag_3025
      swap1
      0xffffffff
      and
        /* "test/solidity/Protocol.t.sol":52500:52515  block.timestamp */
      timestamp
        /* "test/solidity/Protocol.t.sol":52500:52549  block.timestamp - market.lastAccumulatorAccrual() */
      tag_158
      jump	// in
    tag_3025:
        /* "test/solidity/Protocol.t.sol":52482:52549  uint256 elapsed = block.timestamp - market.lastAccumulatorAccrual() */
      swap1
      pop
        /* "test/solidity/Protocol.t.sol":52559:52566  elapsed */
      dup1
        /* "test/solidity/Protocol.t.sol":52570:52571  0 */
      0x00
        /* "test/solidity/Protocol.t.sol":52559:52571  elapsed == 0 */
      sub
        /* "test/solidity/Protocol.t.sol":52555:52581  if (elapsed == 0) return 0 */
      tag_3026
      jumpi
      pop
        /* "test/solidity/Protocol.t.sol":52580:52581  0 */
      0x00
      swap3
        /* "test/solidity/Protocol.t.sol":52393:52818  function previewAccumulatedEarnings(Market market) internal view returns (uint256) {... */
      swap2
      pop
      pop
      jump	// out
        /* "test/solidity/Protocol.t.sol":52555:52581  if (elapsed == 0) return 0 */
    tag_3026:
        /* "test/solidity/Protocol.t.sol":52600:52813  elapsed.mulDivDown(... */
      tag_2909
        /* "test/solidity/Protocol.t.sol":52659:52681  newAccumulatedEarnings */
      0x22
        /* "test/solidity/Protocol.t.sol":52659:52689  newAccumulatedEarnings[market] */
      0x00
        /* "test/solidity/Protocol.t.sol":52682:52688  market */
      dup6
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":52659:52689  newAccumulatedEarnings[market] */
      and
      sub(shl(0xa0, 0x01), 0x01)
      and
      dup2
      mstore
      0x20
      add
      swap1
      dup2
      mstore
      0x20
      add
      0x00
      keccak256
      sload
        /* "test/solidity/Protocol.t.sol":52628:52634  market */
      dup5
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":52628:52654  market.earningsAccumulator */
      and
      0x8a1baa46
        /* "test/solidity/Protocol.t.sol":52628:52656  market.earningsAccumulator() */
      mload(0x40)
      dup2
      0xffffffff
      and
      0xe0
      shl
      dup2
      mstore
      0x04
      add
      0x20
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      dup7
      gas
      staticcall
      iszero
      dup1
      iszero
      tag_3029
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_3029:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      dup2
      add
      swap1
      tag_3030
      swap2
      swap1
      tag_212
      jump	// in
    tag_3030:
        /* "test/solidity/Protocol.t.sol":52628:52689  market.earningsAccumulator() + newAccumulatedEarnings[market] */
      tag_3031
      swap2
      swap1
      tag_186
      jump	// in
    tag_3031:
        /* "test/solidity/Protocol.t.sol":52709:52805  market.earningsAccumulatorSmoothFactor().mulWadDown(market.maxFuturePools() * FixedLib.INTERVAL) */
      tag_3032
        /* "contracts/utils/FixedLib.sol":306:313  4 weeks */
      0x24ea00
        /* "test/solidity/Protocol.t.sol":52761:52767  market */
      dup7
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":52761:52782  market.maxFuturePools */
      and
      0x0e52dbec
        /* "test/solidity/Protocol.t.sol":52761:52784  market.maxFuturePools() */
      mload(0x40)
      dup2
      0xffffffff
      and
      0xe0
      shl
      dup2
      mstore
      0x04
      add
      0x20
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      dup7
      gas
      staticcall
      iszero
      dup1
      iszero
      tag_3034
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_3034:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      dup2
      add
      swap1
      tag_3035
      swap2
      swap1
      tag_2776
      jump	// in
    tag_3035:
        /* "test/solidity/Protocol.t.sol":52761:52804  market.maxFuturePools() * FixedLib.INTERVAL */
      0xff
      and
      tag_3036
      swap2
      swap1
      tag_278
      jump	// in
    tag_3036:
        /* "test/solidity/Protocol.t.sol":52709:52715  market */
      dup7
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":52709:52747  market.earningsAccumulatorSmoothFactor */
      and
      0xfea45d94
        /* "test/solidity/Protocol.t.sol":52709:52749  market.earningsAccumulatorSmoothFactor() */
      mload(0x40)
      dup2
      0xffffffff
      and
      0xe0
      shl
      dup2
      mstore
      0x04
      add
      0x20
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      dup7
      gas
      staticcall
      iszero
      dup1
      iszero
      tag_3038
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_3038:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      dup2
      add
      swap1
      tag_3039
      swap2
      swap1
      tag_955
      jump	// in
    tag_3039:
      sub(shl(0x80, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":52709:52760  market.earningsAccumulatorSmoothFactor().mulWadDown */
      and
      swap1
      tag_1375
        /* "test/solidity/Protocol.t.sol":52709:52805  market.earningsAccumulatorSmoothFactor().mulWadDown(market.maxFuturePools() * FixedLib.INTERVAL) */
      jump	// in
    tag_3032:
        /* "test/solidity/Protocol.t.sol":52699:52805  elapsed + market.earningsAccumulatorSmoothFactor().mulWadDown(market.maxFuturePools() * FixedLib.INTERVAL) */
      tag_3040
      swap1
        /* "test/solidity/Protocol.t.sol":52699:52706  elapsed */
      dup5
        /* "test/solidity/Protocol.t.sol":52699:52805  elapsed + market.earningsAccumulatorSmoothFactor().mulWadDown(market.maxFuturePools() * FixedLib.INTERVAL) */
      tag_186
      jump	// in
    tag_3040:
        /* "test/solidity/Protocol.t.sol":52600:52607  elapsed */
      dup4
      swap2
        /* "test/solidity/Protocol.t.sol":52600:52813  elapsed.mulDivDown(... */
      swap1
        /* "test/solidity/Protocol.t.sol":52600:52618  elapsed.mulDivDown */
      tag_2085
        /* "test/solidity/Protocol.t.sol":52600:52813  elapsed.mulDivDown(... */
      jump	// in
        /* "test/solidity/Protocol.t.sol":51826:52389  function previewNewFloatingDebt(Market market) internal view returns (uint256) {... */
    tag_605:
        /* "test/solidity/Protocol.t.sol":51896:51903  uint256 */
      0x00
        /* "test/solidity/Protocol.t.sol":51911:51935  InterestRateModel memIRM */
      dup1
        /* "test/solidity/Protocol.t.sol":51938:51944  market */
      dup3
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":51938:51962  market.interestRateModel */
      and
      0xf3fdb15a
        /* "test/solidity/Protocol.t.sol":51938:51964  market.interestRateModel() */
      mload(0x40)
      dup2
      0xffffffff
      and
      0xe0
      shl
      dup2
      mstore
      0x04
      add
      0x20
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      dup7
      gas
      staticcall
      iszero
      dup1
      iszero
      tag_3043
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_3043:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      dup2
      add
      swap1
      tag_3044
      swap2
      swap1
      tag_167
      jump	// in
    tag_3044:
        /* "test/solidity/Protocol.t.sol":51911:51964  InterestRateModel memIRM = market.interestRateModel() */
      swap1
      pop
        /* "test/solidity/Protocol.t.sol":51970:51993  uint256 memFloatingDebt */
      0x00
        /* "test/solidity/Protocol.t.sol":51996:52002  market */
      dup4
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":51996:52015  market.floatingDebt */
      and
      0x1a90f186
        /* "test/solidity/Protocol.t.sol":51996:52017  market.floatingDebt() */
      mload(0x40)
      dup2
      0xffffffff
      and
      0xe0
      shl
      dup2
      mstore
      0x04
      add
      0x20
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      dup7
      gas
      staticcall
      iszero
      dup1
      iszero
      tag_3046
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_3046:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      dup2
      add
      swap1
      tag_3047
      swap2
      swap1
      tag_212
      jump	// in
    tag_3047:
        /* "test/solidity/Protocol.t.sol":51970:52017  uint256 memFloatingDebt = market.floatingDebt() */
      swap1
      pop
        /* "test/solidity/Protocol.t.sol":52023:52048  uint256 memFloatingAssets */
      0x00
        /* "test/solidity/Protocol.t.sol":52051:52057  market */
      dup5
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":52051:52072  market.floatingAssets */
      and
      0x2e0af008
        /* "test/solidity/Protocol.t.sol":52051:52074  market.floatingAssets() */
      mload(0x40)
      dup2
      0xffffffff
      and
      0xe0
      shl
      dup2
      mstore
      0x04
      add
      0x20
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      dup7
      gas
      staticcall
      iszero
      dup1
      iszero
      tag_3049
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_3049:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      dup2
      add
      swap1
      tag_3050
      swap2
      swap1
      tag_212
      jump	// in
    tag_3050:
        /* "test/solidity/Protocol.t.sol":52023:52074  uint256 memFloatingAssets = market.floatingAssets() */
      swap1
      pop
        /* "test/solidity/Protocol.t.sol":52080:52107  uint256 floatingUtilization */
      0x00
        /* "test/solidity/Protocol.t.sol":52130:52131  0 */
      dup1
        /* "test/solidity/Protocol.t.sol":52110:52127  memFloatingAssets */
      dup3
        /* "test/solidity/Protocol.t.sol":52110:52131  memFloatingAssets > 0 */
      gt
        /* "test/solidity/Protocol.t.sol":52110:52209  memFloatingAssets > 0... */
      tag_3051
      jumpi
        /* "test/solidity/Protocol.t.sol":52208:52209  0 */
      0x00
        /* "test/solidity/Protocol.t.sol":52110:52209  memFloatingAssets > 0... */
      jump(tag_3053)
    tag_3051:
        /* "test/solidity/Protocol.t.sol":52140:52199  Math.min(memFloatingDebt.divWadUp(memFloatingAssets), 1e18) */
      tag_3053
        /* "test/solidity/Protocol.t.sol":52149:52192  memFloatingDebt.divWadUp(memFloatingAssets) */
      tag_3054
        /* "test/solidity/Protocol.t.sol":52149:52164  memFloatingDebt */
      dup5
        /* "test/solidity/Protocol.t.sol":52174:52191  memFloatingAssets */
      dup5
        /* "test/solidity/Protocol.t.sol":52149:52173  memFloatingDebt.divWadUp */
      tag_761
        /* "test/solidity/Protocol.t.sol":52149:52192  memFloatingDebt.divWadUp(memFloatingAssets) */
      jump	// in
    tag_3054:
        /* "test/solidity/Protocol.t.sol":52194:52198  1e18 */
      0x0de0b6b3a7640000
        /* "test/solidity/Protocol.t.sol":52140:52148  Math.min */
      tag_791
        /* "test/solidity/Protocol.t.sol":52140:52199  Math.min(memFloatingDebt.divWadUp(memFloatingAssets), 1e18) */
      jump	// in
    tag_3053:
        /* "test/solidity/Protocol.t.sol":52080:52209  uint256 floatingUtilization = memFloatingAssets > 0... */
      swap1
      pop
        /* "test/solidity/Protocol.t.sol":52228:52384  memFloatingDebt.mulWadDown(... */
      tag_3055
        /* "test/solidity/Protocol.t.sol":52264:52376  memIRM.floatingRate(floatingUtilization).mulDivDown(block.timestamp - market.lastFloatingDebtUpdate(), 365 days) */
      tag_2329
        /* "test/solidity/Protocol.t.sol":52334:52340  market */
      dup8
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":52334:52363  market.lastFloatingDebtUpdate */
      and
      0x6eb9ffeb
        /* "test/solidity/Protocol.t.sol":52334:52365  market.lastFloatingDebtUpdate() */
      mload(0x40)
      dup2
      0xffffffff
      and
      0xe0
      shl
      dup2
      mstore
      0x04
      add
      0x20
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      dup7
      gas
      staticcall
      iszero
      dup1
      iszero
      tag_3058
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_3058:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      dup2
      add
      swap1
      tag_3059
      swap2
      swap1
      tag_3024
      jump	// in
    tag_3059:
        /* "test/solidity/Protocol.t.sol":52316:52365  block.timestamp - market.lastFloatingDebtUpdate() */
      tag_3060
      swap1
      0xffffffff
      and
        /* "test/solidity/Protocol.t.sol":52316:52331  block.timestamp */
      timestamp
        /* "test/solidity/Protocol.t.sol":52316:52365  block.timestamp - market.lastFloatingDebtUpdate() */
      tag_158
      jump	// in
    tag_3060:
        /* "test/solidity/Protocol.t.sol":52264:52304  memIRM.floatingRate(floatingUtilization) */
      mload(0x40)
      shl(0xe1, 0x42543a33)
      dup2
      mstore
      0x04
      dup2
      add
        /* "#utility.yul":10439:10464   */
      dup6
      swap1
      mstore
        /* "test/solidity/Protocol.t.sol":52367:52375  365 days */
      0x01e13380
      swap1
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":52264:52283  memIRM.floatingRate */
      dup10
      and
      swap1
      0x84a87466
      swap1
        /* "#utility.yul":10412:10430   */
      0x24
      add
        /* "test/solidity/Protocol.t.sol":52264:52304  memIRM.floatingRate(floatingUtilization) */
    tag_3061:
      0x20
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      dup7
      gas
      staticcall
      iszero
      dup1
      iszero
      tag_3063
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_3063:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      dup2
      add
      swap1
      tag_3064
      swap2
      swap1
      tag_212
      jump	// in
    tag_3064:
        /* "test/solidity/Protocol.t.sol":52264:52315  memIRM.floatingRate(floatingUtilization).mulDivDown */
      swap2
        /* "test/solidity/Protocol.t.sol":52264:52376  memIRM.floatingRate(floatingUtilization).mulDivDown(block.timestamp - market.lastFloatingDebtUpdate(), 365 days) */
      swap1
        /* "test/solidity/Protocol.t.sol":52264:52315  memIRM.floatingRate(floatingUtilization).mulDivDown */
      tag_2085
        /* "test/solidity/Protocol.t.sol":52264:52376  memIRM.floatingRate(floatingUtilization).mulDivDown(block.timestamp - market.lastFloatingDebtUpdate(), 365 days) */
      jump	// in
        /* "test/solidity/Protocol.t.sol":52228:52384  memFloatingDebt.mulWadDown(... */
    tag_3055:
        /* "test/solidity/Protocol.t.sol":52215:52384  return... */
      swap7
        /* "test/solidity/Protocol.t.sol":51826:52389  function previewNewFloatingDebt(Market market) internal view returns (uint256) {... */
      swap6
      pop
      pop
      pop
      pop
      pop
      pop
      jump	// out
        /* "test/solidity/Protocol.t.sol":52822:53438  function previewFloatingAssetsAverage(Market market) internal view returns (uint256) {... */
    tag_740:
        /* "test/solidity/Protocol.t.sol":52898:52905  uint256 */
      0x00
        /* "test/solidity/Protocol.t.sol":52913:52942  uint256 floatingDepositAssets */
      dup1
        /* "test/solidity/Protocol.t.sol":52945:52951  market */
      dup3
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":52945:52966  market.floatingAssets */
      and
      0x2e0af008
        /* "test/solidity/Protocol.t.sol":52945:52968  market.floatingAssets() */
      mload(0x40)
      dup2
      0xffffffff
      and
      0xe0
      shl
      dup2
      mstore
      0x04
      add
      0x20
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      dup7
      gas
      staticcall
      iszero
      dup1
      iszero
      tag_3067
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_3067:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      dup2
      add
      swap1
      tag_3068
      swap2
      swap1
      tag_212
      jump	// in
    tag_3068:
        /* "test/solidity/Protocol.t.sol":52913:52968  uint256 floatingDepositAssets = market.floatingAssets() */
      swap1
      pop
        /* "test/solidity/Protocol.t.sol":52974:53003  uint256 floatingAssetsAverage */
      0x00
        /* "test/solidity/Protocol.t.sol":53006:53012  market */
      dup4
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":53006:53034  market.floatingAssetsAverage */
      and
      0xe94b3c21
        /* "test/solidity/Protocol.t.sol":53006:53036  market.floatingAssetsAverage() */
      mload(0x40)
      dup2
      0xffffffff
      and
      0xe0
      shl
      dup2
      mstore
      0x04
      add
      0x20
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      dup7
      gas
      staticcall
      iszero
      dup1
      iszero
      tag_3070
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_3070:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      dup2
      add
      swap1
      tag_3071
      swap2
      swap1
      tag_212
      jump	// in
    tag_3071:
        /* "test/solidity/Protocol.t.sol":52974:53036  uint256 floatingAssetsAverage = market.floatingAssetsAverage() */
      swap1
      pop
        /* "test/solidity/Protocol.t.sol":53042:53065  uint256 dampSpeedFactor */
      0x00
        /* "test/solidity/Protocol.t.sol":53092:53113  floatingAssetsAverage */
      dup2
        /* "test/solidity/Protocol.t.sol":53068:53089  floatingDepositAssets */
      dup4
        /* "test/solidity/Protocol.t.sol":53068:53113  floatingDepositAssets < floatingAssetsAverage */
      lt
        /* "test/solidity/Protocol.t.sol":53068:53173  floatingDepositAssets < floatingAssetsAverage... */
      tag_3072
      jumpi
        /* "test/solidity/Protocol.t.sol":53153:53159  market */
      dup5
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":53153:53171  market.dampSpeedUp */
      and
      0x0539fa8c
        /* "test/solidity/Protocol.t.sol":53153:53173  market.dampSpeedUp() */
      mload(0x40)
      dup2
      0xffffffff
      and
      0xe0
      shl
      dup2
      mstore
      0x04
      add
      0x20
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      dup7
      gas
      staticcall
      iszero
      dup1
      iszero
      tag_3074
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_3074:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      dup2
      add
      swap1
      tag_3075
      swap2
      swap1
      tag_212
      jump	// in
    tag_3075:
        /* "test/solidity/Protocol.t.sol":53068:53173  floatingDepositAssets < floatingAssetsAverage... */
      jump(tag_3079)
    tag_3072:
        /* "test/solidity/Protocol.t.sol":53122:53128  market */
      dup5
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":53122:53142  market.dampSpeedDown */
      and
      0x3aa18d6f
        /* "test/solidity/Protocol.t.sol":53122:53144  market.dampSpeedDown() */
      mload(0x40)
      dup2
      0xffffffff
      and
      0xe0
      shl
      dup2
      mstore
      0x04
      add
      0x20
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      dup7
      gas
      staticcall
      iszero
      dup1
      iszero
      tag_3078
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_3078:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      dup2
      add
      swap1
      tag_3079
      swap2
      swap1
      tag_212
      jump	// in
    tag_3079:
        /* "test/solidity/Protocol.t.sol":53042:53173  uint256 dampSpeedFactor = floatingDepositAssets < floatingAssetsAverage... */
      swap1
      pop
        /* "test/solidity/Protocol.t.sol":53179:53200  uint256 averageFactor */
      0x00
        /* "test/solidity/Protocol.t.sol":53225:53309  (-int256(dampSpeedFactor * (block.timestamp - market.lastAverageUpdate()))).expWad() */
      tag_3080
        /* "test/solidity/Protocol.t.sol":53271:53277  market */
      dup7
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":53271:53295  market.lastAverageUpdate */
      and
      0xfb0fc4c3
        /* "test/solidity/Protocol.t.sol":53271:53297  market.lastAverageUpdate() */
      mload(0x40)
      dup2
      0xffffffff
      and
      0xe0
      shl
      dup2
      mstore
      0x04
      add
      0x20
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      dup7
      gas
      staticcall
      iszero
      dup1
      iszero
      tag_3082
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_3082:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      dup2
      add
      swap1
      tag_3083
      swap2
      swap1
      tag_3024
      jump	// in
    tag_3083:
        /* "test/solidity/Protocol.t.sol":53253:53297  block.timestamp - market.lastAverageUpdate() */
      tag_3084
      swap1
      0xffffffff
      and
        /* "test/solidity/Protocol.t.sol":53253:53268  block.timestamp */
      timestamp
        /* "test/solidity/Protocol.t.sol":53253:53297  block.timestamp - market.lastAverageUpdate() */
      tag_158
      jump	// in
    tag_3084:
        /* "test/solidity/Protocol.t.sol":53234:53298  dampSpeedFactor * (block.timestamp - market.lastAverageUpdate()) */
      tag_3085
      swap1
        /* "test/solidity/Protocol.t.sol":53234:53249  dampSpeedFactor */
      dup5
        /* "test/solidity/Protocol.t.sol":53234:53298  dampSpeedFactor * (block.timestamp - market.lastAverageUpdate()) */
      tag_278
      jump	// in
    tag_3085:
        /* "test/solidity/Protocol.t.sol":53226:53299  -int256(dampSpeedFactor * (block.timestamp - market.lastAverageUpdate())) */
      tag_3086
      swap1
      tag_3087
      jump	// in
    tag_3086:
        /* "test/solidity/Protocol.t.sol":53225:53307  (-int256(dampSpeedFactor * (block.timestamp - market.lastAverageUpdate()))).expWad */
      tag_3088
        /* "test/solidity/Protocol.t.sol":53225:53309  (-int256(dampSpeedFactor * (block.timestamp - market.lastAverageUpdate()))).expWad() */
      jump	// in
    tag_3080:
        /* "test/solidity/Protocol.t.sol":53218:53309  1e18 - (-int256(dampSpeedFactor * (block.timestamp - market.lastAverageUpdate()))).expWad() */
      tag_3089
      swap1
        /* "test/solidity/Protocol.t.sol":53218:53222  1e18 */
      0x0de0b6b3a7640000
        /* "test/solidity/Protocol.t.sol":53218:53309  1e18 - (-int256(dampSpeedFactor * (block.timestamp - market.lastAverageUpdate()))).expWad() */
      tag_3090
      jump	// in
    tag_3089:
        /* "test/solidity/Protocol.t.sol":53179:53315  uint256 averageFactor = uint256(... */
      swap1
      pop
        /* "test/solidity/Protocol.t.sol":53386:53433  averageFactor.mulWadDown(floatingDepositAssets) */
      tag_3091
        /* "test/solidity/Protocol.t.sol":53179:53315  uint256 averageFactor = uint256(... */
      dup2
        /* "test/solidity/Protocol.t.sol":53411:53432  floatingDepositAssets */
      dup6
        /* "test/solidity/Protocol.t.sol":53386:53410  averageFactor.mulWadDown */
      tag_1375
        /* "test/solidity/Protocol.t.sol":53386:53433  averageFactor.mulWadDown(floatingDepositAssets) */
      jump	// in
    tag_3091:
        /* "test/solidity/Protocol.t.sol":53329:53383  floatingAssetsAverage.mulWadDown(1e18 - averageFactor) */
      tag_3092
        /* "test/solidity/Protocol.t.sol":53362:53382  1e18 - averageFactor */
      tag_3093
        /* "test/solidity/Protocol.t.sol":53369:53382  averageFactor */
      dup4
        /* "test/solidity/Protocol.t.sol":53362:53366  1e18 */
      0x0de0b6b3a7640000
        /* "test/solidity/Protocol.t.sol":53362:53382  1e18 - averageFactor */
      tag_158
      jump	// in
    tag_3093:
        /* "test/solidity/Protocol.t.sol":53329:53350  floatingAssetsAverage */
      dup6
      swap1
        /* "test/solidity/Protocol.t.sol":53329:53361  floatingAssetsAverage.mulWadDown */
      tag_1375
        /* "test/solidity/Protocol.t.sol":53329:53383  floatingAssetsAverage.mulWadDown(1e18 - averageFactor) */
      jump	// in
    tag_3092:
        /* "test/solidity/Protocol.t.sol":53329:53433  floatingAssetsAverage.mulWadDown(1e18 - averageFactor) + averageFactor.mulWadDown(floatingDepositAssets) */
      tag_3055
      swap2
      swap1
      tag_186
      jump	// in
        /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":1044:1202  function divWadUp(uint256 x, uint256 y) internal pure returns (uint256) {... */
    tag_761:
        /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":1107:1114  uint256 */
      0x00
        /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":1133:1152  mulDivUp(x, WAD, y) */
      tag_3096
        /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":1142:1143  x */
      dup4
        /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":491:495  1e18 */
      0x0de0b6b3a7640000
        /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":1150:1151  y */
      dup5
        /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":1133:1141  mulDivUp */
      tag_988
        /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":1133:1152  mulDivUp(x, WAD, y) */
      jump	// in
    tag_3096:
        /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":1126:1152  return mulDivUp(x, WAD, y) */
      swap1
      pop
        /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":1044:1202  function divWadUp(uint256 x, uint256 y) internal pure returns (uint256) {... */
    tag_3095:
      swap3
      swap2
      pop
      pop
      jump	// out
        /* "contracts/utils/FixedLib.sol":5708:6018  function scaleProportionally(Position memory position, uint256 amount) internal pure returns (Position memory) {... */
    tag_789:
      0x40
      dup1
      mload
      dup1
      dup3
      add
      swap1
      swap2
      mstore
      0x00
      dup1
      dup3
      mstore
      0x20
      dup3
      add
      mstore
        /* "contracts/utils/FixedLib.sol":5863:5881  position.principal */
      dup3
      mload
        /* "contracts/utils/FixedLib.sol":5904:5916  position.fee */
      0x20
      dup5
      add
      mload
        /* "contracts/utils/FixedLib.sol":5825:5842  uint256 principal */
      0x00
      swap2
        /* "contracts/utils/FixedLib.sol":5845:5917  amount.mulDivDown(position.principal, position.principal + position.fee) */
      tag_3099
      swap2
        /* "contracts/utils/FixedLib.sol":5883:5916  position.principal + position.fee */
      tag_3100
      swap1
        /* "contracts/utils/FixedLib.sol":5863:5881  position.principal */
      dup3
        /* "contracts/utils/FixedLib.sol":5883:5916  position.principal + position.fee */
      tag_186
      jump	// in
    tag_3100:
        /* "contracts/utils/FixedLib.sol":5845:5851  amount */
      dup6
      swap2
        /* "contracts/utils/FixedLib.sol":5845:5917  amount.mulDivDown(position.principal, position.principal + position.fee) */
      swap1
        /* "contracts/utils/FixedLib.sol":5845:5862  amount.mulDivDown */
      tag_2085
        /* "contracts/utils/FixedLib.sol":5845:5917  amount.mulDivDown(position.principal, position.principal + position.fee) */
      jump	// in
    tag_3099:
        /* "contracts/utils/FixedLib.sol":5923:5953  position.principal = principal */
      dup1
      dup6
      mstore
        /* "contracts/utils/FixedLib.sol":5825:5917  uint256 principal = amount.mulDivDown(position.principal, position.principal + position.fee) */
      swap1
      pop
        /* "contracts/utils/FixedLib.sol":5974:5992  amount - principal */
      tag_3101
        /* "contracts/utils/FixedLib.sol":5825:5917  uint256 principal = amount.mulDivDown(position.principal, position.principal + position.fee) */
      dup2
        /* "contracts/utils/FixedLib.sol":5974:5980  amount */
      dup5
        /* "contracts/utils/FixedLib.sol":5974:5992  amount - principal */
      tag_158
      jump	// in
    tag_3101:
        /* "contracts/utils/FixedLib.sol":5959:5971  position.fee */
      0x20
      dup6
      add
        /* "contracts/utils/FixedLib.sol":5959:5992  position.fee = amount - principal */
      mstore
      pop
        /* "contracts/utils/FixedLib.sol":5959:5971  position.fee */
      swap2
      swap3
        /* "contracts/utils/FixedLib.sol":5708:6018  function scaleProportionally(Position memory position, uint256 amount) internal pure returns (Position memory) {... */
      swap2
      pop
      pop
      jump	// out
        /* "node_modules/@openzeppelin/contracts/utils/math/Math.sol":588:692  function min(uint256 a, uint256 b) internal pure returns (uint256) {... */
    tag_791:
        /* "node_modules/@openzeppelin/contracts/utils/math/Math.sol":646:653  uint256 */
      0x00
        /* "node_modules/@openzeppelin/contracts/utils/math/Math.sol":676:677  b */
      dup2
        /* "node_modules/@openzeppelin/contracts/utils/math/Math.sol":672:673  a */
      dup4
        /* "node_modules/@openzeppelin/contracts/utils/math/Math.sol":672:677  a < b */
      lt
        /* "node_modules/@openzeppelin/contracts/utils/math/Math.sol":672:685  a < b ? a : b */
      tag_3103
      jumpi
        /* "node_modules/@openzeppelin/contracts/utils/math/Math.sol":684:685  b */
      dup2
        /* "node_modules/@openzeppelin/contracts/utils/math/Math.sol":672:685  a < b ? a : b */
      jump(tag_3096)
    tag_3103:
      pop
        /* "node_modules/@openzeppelin/contracts/utils/math/Math.sol":680:681  a */
      swap1
      swap2
        /* "node_modules/@openzeppelin/contracts/utils/math/Math.sol":588:692  function min(uint256 a, uint256 b) internal pure returns (uint256) {... */
      swap1
      pop
      jump	// out
        /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":874:1038  function divWadDown(uint256 x, uint256 y) internal pure returns (uint256) {... */
    tag_818:
        /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":939:946  uint256 */
      0x00
        /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":965:986  mulDivDown(x, WAD, y) */
      tag_3096
        /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":976:977  x */
      dup4
        /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":491:495  1e18 */
      0x0de0b6b3a7640000
        /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":984:985  y */
      dup5
        /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":965:975  mulDivDown */
      tag_2085
        /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":965:986  mulDivDown(x, WAD, y) */
      jump	// in
        /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":8282:9034  function mulDivUp(... */
    tag_988:
        /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":8486:8495  mul(x, y) */
      dup3
      dup3
      mul
        /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":8617:8636  iszero(denominator) */
      dup2
      iszero
        /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":8610:8637  iszero(iszero(denominator)) */
      iszero
        /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":8642:8651  iszero(x) */
      dup5
      iszero
        /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":8656:8665  div(z, x) */
      dup6
      dup4
      div
        /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":8653:8669  eq(div(z, x), y) */
      dup6
      eq
        /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":8639:8670  or(iszero(x), eq(div(z, x), y)) */
      or
        /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":8606:8671  and(iszero(iszero(denominator)), or(iszero(x), eq(div(z, x), y))) */
      and
        /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":8596:8717  if iszero(and(iszero(iszero(denominator)), or(iszero(x), eq(div(z, x), y)))) {... */
      tag_3108
      jumpi
        /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":8701:8702  0 */
      0x00
        /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":8698:8699  0 */
      dup1
        /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":8691:8703  revert(0, 0) */
      revert
        /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":8596:8717  if iszero(and(iszero(iszero(denominator)), or(iszero(x), eq(div(z, x), y)))) {... */
    tag_3108:
        /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":9015:9016  1 */
      0x01
        /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":9001:9012  denominator */
      dup3
        /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":8997:8998  1 */
      0x01
        /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":8994:8995  z */
      dup4
        /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":8990:8999  sub(z, 1) */
      sub
        /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":8986:9013  div(sub(z, 1), denominator) */
      div
        /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":8982:9017  add(div(sub(z, 1), denominator), 1) */
      add
        /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":8977:8978  z */
      dup2
        /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":8970:8979  iszero(z) */
      iszero
        /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":8963:8980  iszero(iszero(z)) */
      iszero
        /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":8959:9018  mul(iszero(iszero(z)), add(div(sub(z, 1), denominator), 1)) */
      mul
        /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":8954:9018  z := mul(iszero(iszero(z)), add(div(sub(z, 1), denominator), 1)) */
      swap1
      pop
        /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":8282:9034  function mulDivUp(... */
      swap4
      swap3
      pop
      pop
      pop
      jump	// out
        /* "test/solidity/Protocol.t.sol":46211:47579  function previewAccountLiquidity(... */
    tag_1364:
        /* "test/solidity/Protocol.t.sol":46373:46394  uint256 sumCollateral */
      0x00
        /* "test/solidity/Protocol.t.sol":46396:46422  uint256 sumDebtPlusEffects */
      dup1
        /* "test/solidity/Protocol.t.sol":46430:46466  Auditor.AccountLiquidity memory vars */
      tag_3110
      mload(0x40)
      dup1
      0x60
      add
      0x40
      mstore
      dup1
      0x00
      dup2
      mstore
      0x20
      add
      0x00
      dup2
      mstore
      0x20
      add
      0x00
      dup2
      mstore
      pop
      swap1
      jump
    tag_3110:
        /* "test/solidity/Protocol.t.sol":46530:46537  auditor */
      sload(0x1b)
        /* "test/solidity/Protocol.t.sol":46530:46561  auditor.accountMarkets(account) */
      mload(0x40)
      not(sub(shl(0xe1, 0x63e28d), 0x01))
      dup2
      mstore
      sub(shl(0xa0, 0x01), 0x01)
        /* "#utility.yul":7578:7610   */
      dup10
      dup2
      and
        /* "test/solidity/Protocol.t.sol":46530:46561  auditor.accountMarkets(account) */
      0x04
      dup4
      add
        /* "#utility.yul":7560:7611   */
      mstore
        /* "test/solidity/Protocol.t.sol":46510:46527  uint256 marketMap */
      0x00
      swap3
        /* "test/solidity/Protocol.t.sol":46530:46537  auditor */
      and
      swap1
        /* "test/solidity/Protocol.t.sol":46530:46552  auditor.accountMarkets */
      0xff383ae6
      swap1
        /* "#utility.yul":7533:7551   */
      0x24
      add
        /* "test/solidity/Protocol.t.sol":46530:46561  auditor.accountMarkets(account) */
      0x20
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      dup7
      gas
      staticcall
      iszero
      dup1
      iszero
      tag_3113
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_3113:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      dup2
      add
      swap1
      tag_3114
      swap2
      swap1
      tag_212
      jump	// in
    tag_3114:
        /* "test/solidity/Protocol.t.sol":46660:46667  auditor */
      sload(0x1b)
        /* "test/solidity/Protocol.t.sol":46660:46693  auditor.markets(marketToSimulate) */
      mload(0x40)
      shl(0xe0, 0x8e8f294b)
      dup2
      mstore
      sub(shl(0xa0, 0x01), 0x01)
        /* "#utility.yul":7578:7610   */
      dup11
      dup2
      and
        /* "test/solidity/Protocol.t.sol":46660:46693  auditor.markets(marketToSimulate) */
      0x04
      dup4
      add
        /* "#utility.yul":7560:7611   */
      mstore
        /* "test/solidity/Protocol.t.sol":46510:46561  uint256 marketMap = auditor.accountMarkets(account) */
      swap3
      swap4
      pop
        /* "test/solidity/Protocol.t.sol":46639:46652  uint256 index */
      0x00
      swap3
        /* "test/solidity/Protocol.t.sol":46660:46667  auditor */
      swap1
      swap2
      and
      swap1
        /* "test/solidity/Protocol.t.sol":46660:46675  auditor.markets */
      0x8e8f294b
      swap1
        /* "#utility.yul":7533:7551   */
      0x24
      add
        /* "test/solidity/Protocol.t.sol":46660:46693  auditor.markets(marketToSimulate) */
      0xa0
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      dup7
      gas
      staticcall
      iszero
      dup1
      iszero
      tag_3117
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_3117:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      dup2
      add
      swap1
      tag_3118
      swap2
      swap1
      tag_198
      jump	// in
    tag_3118:
      pop
      pop
        /* "test/solidity/Protocol.t.sol":46634:46693  (, , uint256 index, , ) = auditor.markets(marketToSimulate) */
      0xff
      and
      swap3
      pop
      pop
      pop
        /* "test/solidity/Protocol.t.sol":46717:46718  1 */
      0x01
        /* "test/solidity/Protocol.t.sol":46717:46727  1 << index */
      dup2
      shl
        /* "test/solidity/Protocol.t.sol":46704:46728  marketMap & (1 << index) */
      dup3
      and
        /* "test/solidity/Protocol.t.sol":46733:46734  0 */
      0x00
        /* "test/solidity/Protocol.t.sol":46703:46734  (marketMap & (1 << index)) == 0 */
      sub
        /* "test/solidity/Protocol.t.sol":46699:46772  if ((marketMap & (1 << index)) == 0) marketMap = marketMap | (1 << index) */
      tag_3119
      jumpi
        /* "test/solidity/Protocol.t.sol":46766:46771  index */
      dup1
        /* "test/solidity/Protocol.t.sol":46761:46762  1 */
      0x01
        /* "test/solidity/Protocol.t.sol":46761:46771  1 << index */
      swap1
      shl
        /* "test/solidity/Protocol.t.sol":46748:46757  marketMap */
      dup3
        /* "test/solidity/Protocol.t.sol":46748:46772  marketMap | (1 << index) */
      or
        /* "test/solidity/Protocol.t.sol":46736:46772  marketMap = marketMap | (1 << index) */
      swap2
      pop
        /* "test/solidity/Protocol.t.sol":46699:46772  if ((marketMap & (1 << index)) == 0) marketMap = marketMap | (1 << index) */
    tag_3119:
        /* "test/solidity/Protocol.t.sol":46783:46792  uint256 i */
      0x00
        /* "test/solidity/Protocol.t.sol":46778:47575  for (uint256 i = 0; i < markets.length; ++i) {... */
    tag_3120:
        /* "test/solidity/Protocol.t.sol":46802:46809  markets */
      0x1c
        /* "test/solidity/Protocol.t.sol":46802:46816  markets.length */
      sload
        /* "test/solidity/Protocol.t.sol":46798:46816  i < markets.length */
      dup2
      lt
        /* "test/solidity/Protocol.t.sol":46778:47575  for (uint256 i = 0; i < markets.length; ++i) {... */
      iszero
      tag_3121
      jumpi
        /* "test/solidity/Protocol.t.sol":46847:46854  auditor */
      sload(0x1b)
        /* "test/solidity/Protocol.t.sol":46847:46868  auditor.marketList(i) */
      mload(0x40)
      shl(0xe2, 0x08cae55b)
      dup2
      mstore
      0x04
      dup2
      add
        /* "#utility.yul":10439:10464   */
      dup4
      swap1
      mstore
        /* "test/solidity/Protocol.t.sol":46831:46844  Market market */
      0x00
      swap2
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":46847:46854  auditor */
      and
      swap1
        /* "test/solidity/Protocol.t.sol":46847:46865  auditor.marketList */
      0x232b956c
      swap1
        /* "#utility.yul":10412:10430   */
      0x24
      add
        /* "test/solidity/Protocol.t.sol":46847:46868  auditor.marketList(i) */
      0x20
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      dup7
      gas
      staticcall
      iszero
      dup1
      iszero
      tag_3125
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_3125:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      dup2
      add
      swap1
      tag_3126
      swap2
      swap1
      tag_167
      jump	// in
    tag_3126:
        /* "test/solidity/Protocol.t.sol":46831:46868  Market market = auditor.marketList(i) */
      swap1
      pop
        /* "test/solidity/Protocol.t.sol":46894:46895  1 */
      0x01
        /* "test/solidity/Protocol.t.sol":46894:46900  1 << i */
      dup3
      shl
        /* "test/solidity/Protocol.t.sol":46881:46901  marketMap & (1 << i) */
      dup5
      and
        /* "test/solidity/Protocol.t.sol":46880:46907  (marketMap & (1 << i)) != 0 */
      iszero
        /* "test/solidity/Protocol.t.sol":46876:47530  if ((marketMap & (1 << i)) != 0) {... */
      tag_3127
      jumpi
        /* "test/solidity/Protocol.t.sol":46986:46993  auditor */
      sload(0x1b)
        /* "test/solidity/Protocol.t.sol":46986:47009  auditor.markets(market) */
      mload(0x40)
      shl(0xe0, 0x8e8f294b)
      dup2
      mstore
      sub(shl(0xa0, 0x01), 0x01)
        /* "#utility.yul":7578:7610   */
      dup4
      dup2
      and
        /* "test/solidity/Protocol.t.sol":46986:47009  auditor.markets(market) */
      0x04
      dup4
      add
        /* "#utility.yul":7560:7611   */
      mstore
        /* "test/solidity/Protocol.t.sol":46920:46940  uint128 adjustFactor */
      0x00
      swap3
      dup4
      swap3
      dup4
      swap3
        /* "test/solidity/Protocol.t.sol":46986:46993  auditor */
      swap1
      swap2
      and
      swap1
        /* "test/solidity/Protocol.t.sol":46986:47001  auditor.markets */
      0x8e8f294b
      swap1
        /* "#utility.yul":7533:7551   */
      0x24
      add
        /* "test/solidity/Protocol.t.sol":46986:47009  auditor.markets(market) */
      0xa0
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      dup7
      gas
      staticcall
      iszero
      dup1
      iszero
      tag_3130
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_3130:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      dup2
      add
      swap1
      tag_3131
      swap2
      swap1
      tag_198
      jump	// in
    tag_3131:
        /* "test/solidity/Protocol.t.sol":46919:47009  (uint128 adjustFactor, uint8 decimals, , , IPriceFeed priceFeed) = auditor.markets(market) */
      swap5
      pop
      pop
      pop
      swap3
      pop
      swap3
      pop
        /* "test/solidity/Protocol.t.sol":47033:47049  marketToSimulate */
      dup13
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":47023:47049  market == marketToSimulate */
      and
        /* "test/solidity/Protocol.t.sol":47023:47029  market */
      dup5
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":47023:47049  market == marketToSimulate */
      and
      sub
        /* "test/solidity/Protocol.t.sol":47019:47252  if (market == marketToSimulate) {... */
      tag_3132
      jumpi
        /* "test/solidity/Protocol.t.sol":47100:47167  previewAccountSnapshot(market, account, borrowAssets, borrowShares) */
      tag_3133
        /* "test/solidity/Protocol.t.sol":47123:47129  market */
      dup5
        /* "test/solidity/Protocol.t.sol":47131:47138  account */
      dup16
        /* "test/solidity/Protocol.t.sol":47140:47152  borrowAssets */
      dup15
        /* "test/solidity/Protocol.t.sol":47154:47166  borrowShares */
      dup15
        /* "test/solidity/Protocol.t.sol":47100:47122  previewAccountSnapshot */
      tag_3134
        /* "test/solidity/Protocol.t.sol":47100:47167  previewAccountSnapshot(market, account, borrowAssets, borrowShares) */
      jump	// in
    tag_3133:
        /* "test/solidity/Protocol.t.sol":47078:47096  vars.borrowBalance */
      0x20
      dup11
      add
        /* "test/solidity/Protocol.t.sol":47063:47167  (vars.balance, vars.borrowBalance) = previewAccountSnapshot(market, account, borrowAssets, borrowShares) */
      mstore
      dup9
      mstore
        /* "test/solidity/Protocol.t.sol":47019:47252  if (market == marketToSimulate) {... */
      jump(tag_3135)
    tag_3132:
        /* "test/solidity/Protocol.t.sol":47221:47252  market.accountSnapshot(account) */
      mload(0x40)
      shl(0xe0, 0x014a296f)
      dup2
      mstore
      sub(shl(0xa0, 0x01), 0x01)
        /* "#utility.yul":7578:7610   */
      dup16
      dup2
      and
        /* "test/solidity/Protocol.t.sol":47221:47252  market.accountSnapshot(account) */
      0x04
      dup4
      add
        /* "#utility.yul":7560:7611   */
      mstore
        /* "test/solidity/Protocol.t.sol":47221:47243  market.accountSnapshot */
      dup6
      and
      swap1
      0x014a296f
      swap1
        /* "#utility.yul":7533:7551   */
      0x24
      add
        /* "test/solidity/Protocol.t.sol":47221:47252  market.accountSnapshot(account) */
      0x40
      dup1
      mload
      dup1
      dup4
      sub
      dup2
      dup7
      gas
      staticcall
      iszero
      dup1
      iszero
      tag_3138
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_3138:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      dup2
      add
      swap1
      tag_3139
      swap2
      swap1
      tag_203
      jump	// in
    tag_3139:
        /* "test/solidity/Protocol.t.sol":47199:47217  vars.borrowBalance */
      0x20
      dup11
      add
        /* "test/solidity/Protocol.t.sol":47184:47252  (vars.balance, vars.borrowBalance) = market.accountSnapshot(account) */
      mstore
      dup9
      mstore
        /* "test/solidity/Protocol.t.sol":47019:47252  if (market == marketToSimulate) {... */
    tag_3135:
        /* "test/solidity/Protocol.t.sol":47283:47292  priceFeed */
      dup1
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":47283:47305  priceFeed.latestAnswer */
      and
      0x50d25bcd
        /* "test/solidity/Protocol.t.sol":47283:47307  priceFeed.latestAnswer() */
      mload(0x40)
      dup2
      0xffffffff
      and
      0xe0
      shl
      dup2
      mstore
      0x04
      add
      0x20
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      dup7
      gas
      staticcall
      iszero
      dup1
      iszero
      tag_3141
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_3141:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      dup2
      add
      swap1
      tag_3142
      swap2
      swap1
      tag_212
      jump	// in
    tag_3142:
        /* "test/solidity/Protocol.t.sol":47262:47272  vars.price */
      0x40
      dup10
      add
        /* "test/solidity/Protocol.t.sol":47262:47308  vars.price = uint256(priceFeed.latestAnswer()) */
      dup2
      swap1
      mstore
        /* "test/solidity/Protocol.t.sol":47335:47411  vars.balance.mulDivDown(vars.price, 10 ** decimals).mulWadDown(adjustFactor) */
      tag_3143
      swap1
      sub(shl(0x80, 0x01), 0x01)
      dup6
      and
      swap1
        /* "test/solidity/Protocol.t.sol":47335:47386  vars.balance.mulDivDown(vars.price, 10 ** decimals) */
      tag_1374
      swap1
        /* "test/solidity/Protocol.t.sol":47371:47385  10 ** decimals */
      tag_3145
        /* "test/solidity/Protocol.t.sol":47377:47385  decimals */
      dup7
        /* "test/solidity/Protocol.t.sol":47371:47373  10 */
      0x0a
        /* "test/solidity/Protocol.t.sol":47371:47385  10 ** decimals */
      tag_987
      jump	// in
    tag_3145:
        /* "test/solidity/Protocol.t.sol":47335:47347  vars.balance */
      dup13
      mload
      swap2
        /* "test/solidity/Protocol.t.sol":47335:47386  vars.balance.mulDivDown(vars.price, 10 ** decimals) */
      swap1
        /* "test/solidity/Protocol.t.sol":47335:47358  vars.balance.mulDivDown */
      tag_2085
        /* "test/solidity/Protocol.t.sol":47335:47386  vars.balance.mulDivDown(vars.price, 10 ** decimals) */
      jump	// in
        /* "test/solidity/Protocol.t.sol":47335:47411  vars.balance.mulDivDown(vars.price, 10 ** decimals).mulWadDown(adjustFactor) */
    tag_3143:
        /* "test/solidity/Protocol.t.sol":47318:47411  sumCollateral += vars.balance.mulDivDown(vars.price, 10 ** decimals).mulWadDown(adjustFactor) */
      tag_3146
      swap1
      dup12
      tag_186
      jump	// in
    tag_3146:
      swap10
      pop
        /* "test/solidity/Protocol.t.sol":47443:47521  vars.borrowBalance.mulDivUp(vars.price, 10 ** decimals).divWadUp(adjustFactor) */
      tag_3147
        /* "test/solidity/Protocol.t.sol":47508:47520  adjustFactor */
      dup4
      sub(shl(0x80, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":47443:47521  vars.borrowBalance.mulDivUp(vars.price, 10 ** decimals).divWadUp(adjustFactor) */
      and
        /* "test/solidity/Protocol.t.sol":47443:47498  vars.borrowBalance.mulDivUp(vars.price, 10 ** decimals) */
      tag_760
        /* "test/solidity/Protocol.t.sol":47471:47475  vars */
      dup11
        /* "test/solidity/Protocol.t.sol":47471:47481  vars.price */
      0x40
      add
      mload
        /* "test/solidity/Protocol.t.sol":47489:47497  decimals */
      dup6
        /* "test/solidity/Protocol.t.sol":47483:47485  10 */
      0x0a
        /* "test/solidity/Protocol.t.sol":47483:47497  10 ** decimals */
      tag_3149
      swap2
      swap1
      tag_987
      jump	// in
    tag_3149:
        /* "test/solidity/Protocol.t.sol":47443:47461  vars.borrowBalance */
      0x20
      dup14
      add
      mload
      swap2
        /* "test/solidity/Protocol.t.sol":47443:47498  vars.borrowBalance.mulDivUp(vars.price, 10 ** decimals) */
      swap1
        /* "test/solidity/Protocol.t.sol":47443:47470  vars.borrowBalance.mulDivUp */
      tag_988
        /* "test/solidity/Protocol.t.sol":47443:47498  vars.borrowBalance.mulDivUp(vars.price, 10 ** decimals) */
      jump	// in
        /* "test/solidity/Protocol.t.sol":47443:47521  vars.borrowBalance.mulDivUp(vars.price, 10 ** decimals).divWadUp(adjustFactor) */
    tag_3147:
        /* "test/solidity/Protocol.t.sol":47421:47521  sumDebtPlusEffects += vars.borrowBalance.mulDivUp(vars.price, 10 ** decimals).divWadUp(adjustFactor) */
      tag_3150
      swap1
      dup11
      tag_186
      jump	// in
    tag_3150:
      swap9
      pop
        /* "test/solidity/Protocol.t.sol":46909:47530  {... */
      pop
      pop
      pop
        /* "test/solidity/Protocol.t.sol":46876:47530  if ((marketMap & (1 << i)) != 0) {... */
    tag_3127:
        /* "test/solidity/Protocol.t.sol":47552:47561  marketMap */
      dup4
        /* "test/solidity/Protocol.t.sol":47547:47548  i */
      dup3
        /* "test/solidity/Protocol.t.sol":47542:47543  1 */
      0x01
        /* "test/solidity/Protocol.t.sol":47542:47548  1 << i */
      swap1
      shl
        /* "test/solidity/Protocol.t.sol":47541:47561  (1 << i) > marketMap */
      gt
        /* "test/solidity/Protocol.t.sol":47537:47568  if ((1 << i) > marketMap) break */
      iszero
      tag_3151
      jumpi
        /* "test/solidity/Protocol.t.sol":47563:47568  break */
      pop
      jump(tag_3121)
        /* "test/solidity/Protocol.t.sol":47537:47568  if ((1 << i) > marketMap) break */
    tag_3151:
      pop
        /* "test/solidity/Protocol.t.sol":46818:46821  ++i */
      tag_3152
      dup2
      tag_293
      jump	// in
    tag_3152:
      swap1
      pop
        /* "test/solidity/Protocol.t.sol":46778:47575  for (uint256 i = 0; i < markets.length; ++i) {... */
      jump(tag_3120)
    tag_3121:
      pop
        /* "test/solidity/Protocol.t.sol":46424:47579  {... */
      pop
      pop
      pop
        /* "test/solidity/Protocol.t.sol":46211:47579  function previewAccountLiquidity(... */
      swap5
      pop
      swap5
      swap3
      pop
      pop
      pop
      jump	// out
        /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":540:704  function mulWadDown(uint256 x, uint256 y) internal pure returns (uint256) {... */
    tag_1375:
        /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":605:612  uint256 */
      0x00
        /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":631:652  mulDivDown(x, y, WAD) */
      tag_3096
        /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":642:643  x */
      dup4
        /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":645:646  y */
      dup4
        /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":491:495  1e18 */
      0x0de0b6b3a7640000
        /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":631:641  mulDivDown */
      tag_2085
        /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":631:652  mulDivDown(x, y, WAD) */
      jump	// in
        /* "test/solidity/Protocol.t.sol":43733:44310  function rawCollateral(address account) internal view returns (uint256 sumCollateral) {... */
    tag_1928:
        /* "test/solidity/Protocol.t.sol":43845:43852  auditor */
      sload(0x1b)
        /* "test/solidity/Protocol.t.sol":43845:43876  auditor.accountMarkets(account) */
      mload(0x40)
      not(sub(shl(0xe1, 0x63e28d), 0x01))
      dup2
      mstore
      sub(shl(0xa0, 0x01), 0x01)
        /* "#utility.yul":7578:7610   */
      dup4
      dup2
      and
        /* "test/solidity/Protocol.t.sol":43845:43876  auditor.accountMarkets(account) */
      0x04
      dup4
      add
        /* "#utility.yul":7560:7611   */
      mstore
        /* "test/solidity/Protocol.t.sol":43796:43817  uint256 sumCollateral */
      0x00
      swap3
      dup4
      swap3
        /* "test/solidity/Protocol.t.sol":43845:43852  auditor */
      swap2
      and
      swap1
        /* "test/solidity/Protocol.t.sol":43845:43867  auditor.accountMarkets */
      0xff383ae6
      swap1
        /* "#utility.yul":7533:7551   */
      0x24
      add
        /* "test/solidity/Protocol.t.sol":43845:43876  auditor.accountMarkets(account) */
      0x20
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      dup7
      gas
      staticcall
      iszero
      dup1
      iszero
      tag_3158
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_3158:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      dup2
      add
      swap1
      tag_3159
      swap2
      swap1
      tag_212
      jump	// in
    tag_3159:
        /* "test/solidity/Protocol.t.sol":43825:43876  uint256 marketMap = auditor.accountMarkets(account) */
      swap1
      pop
        /* "test/solidity/Protocol.t.sol":43887:43896  uint256 i */
      0x00
        /* "test/solidity/Protocol.t.sol":43882:44306  for (uint256 i = 0; i < markets.length; ++i) {... */
    tag_3160:
        /* "test/solidity/Protocol.t.sol":43906:43913  markets */
      0x1c
        /* "test/solidity/Protocol.t.sol":43906:43920  markets.length */
      sload
        /* "test/solidity/Protocol.t.sol":43902:43920  i < markets.length */
      dup2
      lt
        /* "test/solidity/Protocol.t.sol":43882:44306  for (uint256 i = 0; i < markets.length; ++i) {... */
      iszero
      tag_3161
      jumpi
        /* "test/solidity/Protocol.t.sol":43951:43958  auditor */
      sload(0x1b)
        /* "test/solidity/Protocol.t.sol":43951:43972  auditor.marketList(i) */
      mload(0x40)
      shl(0xe2, 0x08cae55b)
      dup2
      mstore
      0x04
      dup2
      add
        /* "#utility.yul":10439:10464   */
      dup4
      swap1
      mstore
        /* "test/solidity/Protocol.t.sol":43935:43948  Market market */
      0x00
      swap2
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":43951:43958  auditor */
      and
      swap1
        /* "test/solidity/Protocol.t.sol":43951:43969  auditor.marketList */
      0x232b956c
      swap1
        /* "#utility.yul":10412:10430   */
      0x24
      add
        /* "test/solidity/Protocol.t.sol":43951:43972  auditor.marketList(i) */
      0x20
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      dup7
      gas
      staticcall
      iszero
      dup1
      iszero
      tag_3165
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_3165:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      dup2
      add
      swap1
      tag_3166
      swap2
      swap1
      tag_167
      jump	// in
    tag_3166:
        /* "test/solidity/Protocol.t.sol":43935:43972  Market market = auditor.marketList(i) */
      swap1
      pop
        /* "test/solidity/Protocol.t.sol":43998:43999  1 */
      0x01
        /* "test/solidity/Protocol.t.sol":43998:44004  1 << i */
      dup3
      shl
        /* "test/solidity/Protocol.t.sol":43985:44005  marketMap & (1 << i) */
      dup4
      and
        /* "test/solidity/Protocol.t.sol":43984:44011  (marketMap & (1 << i)) != 0 */
      iszero
        /* "test/solidity/Protocol.t.sol":43980:44261  if ((marketMap & (1 << i)) != 0) {... */
      tag_3167
      jumpi
        /* "test/solidity/Protocol.t.sol":44070:44077  auditor */
      sload(0x1b)
        /* "test/solidity/Protocol.t.sol":44070:44093  auditor.markets(market) */
      mload(0x40)
      shl(0xe0, 0x8e8f294b)
      dup2
      mstore
      sub(shl(0xa0, 0x01), 0x01)
        /* "#utility.yul":7578:7610   */
      dup4
      dup2
      and
        /* "test/solidity/Protocol.t.sol":44070:44093  auditor.markets(market) */
      0x04
      dup4
      add
        /* "#utility.yul":7560:7611   */
      mstore
        /* "test/solidity/Protocol.t.sol":44026:44040  uint8 decimals */
      0x00
      swap3
      dup4
      swap3
        /* "test/solidity/Protocol.t.sol":44070:44077  auditor */
      swap2
      and
      swap1
        /* "test/solidity/Protocol.t.sol":44070:44085  auditor.markets */
      0x8e8f294b
      swap1
        /* "#utility.yul":7533:7551   */
      0x24
      add
        /* "test/solidity/Protocol.t.sol":44070:44093  auditor.markets(market) */
      0xa0
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      dup7
      gas
      staticcall
      iszero
      dup1
      iszero
      tag_3170
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_3170:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      dup2
      add
      swap1
      tag_3171
      swap2
      swap1
      tag_198
      jump	// in
    tag_3171:
        /* "test/solidity/Protocol.t.sol":44125:44156  market.accountSnapshot(account) */
      mload(0x40)
      shl(0xe0, 0x014a296f)
      dup2
      mstore
      sub(shl(0xa0, 0x01), 0x01)
        /* "#utility.yul":7578:7610   */
      dup14
      dup2
      and
        /* "test/solidity/Protocol.t.sol":44125:44156  market.accountSnapshot(account) */
      0x04
      dup4
      add
        /* "#utility.yul":7560:7611   */
      mstore
        /* "test/solidity/Protocol.t.sol":44023:44093  (, uint8 decimals, , , IPriceFeed priceFeed) = auditor.markets(market) */
      swap5
      swap8
      pop
      swap1
      swap6
      pop
        /* "test/solidity/Protocol.t.sol":44104:44119  uint256 balance */
      0x00
      swap5
      pop
        /* "test/solidity/Protocol.t.sol":44125:44147  market.accountSnapshot */
      swap3
      dup8
      and
      swap3
      0x014a296f
      swap3
      pop
        /* "#utility.yul":7533:7551   */
      0x24
      add
      swap1
      pop
        /* "test/solidity/Protocol.t.sol":44125:44156  market.accountSnapshot(account) */
      0x40
      dup1
      mload
      dup1
      dup4
      sub
      dup2
      dup7
      gas
      staticcall
      iszero
      dup1
      iszero
      tag_3174
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_3174:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      dup2
      add
      swap1
      tag_3175
      swap2
      swap1
      tag_203
      jump	// in
    tag_3175:
        /* "test/solidity/Protocol.t.sol":44103:44156  (uint256 balance, ) = market.accountSnapshot(account) */
      pop
      swap1
      pop
        /* "test/solidity/Protocol.t.sol":44183:44252  balance.mulDivDown(uint256(priceFeed.latestAnswer()), 10 ** decimals) */
      tag_3176
        /* "test/solidity/Protocol.t.sol":44210:44219  priceFeed */
      dup3
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":44210:44232  priceFeed.latestAnswer */
      and
      0x50d25bcd
        /* "test/solidity/Protocol.t.sol":44210:44234  priceFeed.latestAnswer() */
      mload(0x40)
      dup2
      0xffffffff
      and
      0xe0
      shl
      dup2
      mstore
      0x04
      add
      0x20
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      dup7
      gas
      staticcall
      iszero
      dup1
      iszero
      tag_3178
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_3178:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      dup2
      add
      swap1
      tag_3179
      swap2
      swap1
      tag_212
      jump	// in
    tag_3179:
        /* "test/solidity/Protocol.t.sol":44237:44251  10 ** decimals */
      tag_3040
        /* "test/solidity/Protocol.t.sol":44243:44251  decimals */
      dup6
        /* "test/solidity/Protocol.t.sol":44237:44239  10 */
      0x0a
        /* "test/solidity/Protocol.t.sol":44237:44251  10 ** decimals */
      tag_987
      jump	// in
        /* "test/solidity/Protocol.t.sol":44183:44252  balance.mulDivDown(uint256(priceFeed.latestAnswer()), 10 ** decimals) */
    tag_3176:
        /* "test/solidity/Protocol.t.sol":44166:44252  sumCollateral += balance.mulDivDown(uint256(priceFeed.latestAnswer()), 10 ** decimals) */
      tag_3181
      swap1
      dup9
      tag_186
      jump	// in
    tag_3181:
      swap7
      pop
        /* "test/solidity/Protocol.t.sol":44013:44261  {... */
      pop
      pop
      pop
        /* "test/solidity/Protocol.t.sol":43980:44261  if ((marketMap & (1 << i)) != 0) {... */
    tag_3167:
        /* "test/solidity/Protocol.t.sol":44283:44292  marketMap */
      dup3
        /* "test/solidity/Protocol.t.sol":44278:44279  i */
      dup3
        /* "test/solidity/Protocol.t.sol":44273:44274  1 */
      0x01
        /* "test/solidity/Protocol.t.sol":44273:44279  1 << i */
      swap1
      shl
        /* "test/solidity/Protocol.t.sol":44272:44292  (1 << i) > marketMap */
      gt
        /* "test/solidity/Protocol.t.sol":44268:44299  if ((1 << i) > marketMap) break */
      iszero
      tag_3182
      jumpi
        /* "test/solidity/Protocol.t.sol":44294:44299  break */
      pop
      jump(tag_3161)
        /* "test/solidity/Protocol.t.sol":44268:44299  if ((1 << i) > marketMap) break */
    tag_3182:
      pop
        /* "test/solidity/Protocol.t.sol":43922:43925  ++i */
      tag_3183
      dup2
      tag_293
      jump	// in
    tag_3183:
      swap1
      pop
        /* "test/solidity/Protocol.t.sol":43882:44306  for (uint256 i = 0; i < markets.length; ++i) {... */
      jump(tag_3160)
    tag_3161:
      pop
        /* "test/solidity/Protocol.t.sol":43819:44310  {... */
      pop
        /* "test/solidity/Protocol.t.sol":43733:44310  function rawCollateral(address account) internal view returns (uint256 sumCollateral) {... */
      swap2
      swap1
      pop
      jump	// out
        /* "test/solidity/Protocol.t.sol":44314:44644  function seizeAvailable(address account, Market market) internal view returns (uint256) {... */
    tag_1941:
        /* "test/solidity/Protocol.t.sol":44452:44477  market.balanceOf(account) */
      mload(0x40)
      shl(0xe0, 0x70a08231)
      dup2
      mstore
      sub(shl(0xa0, 0x01), 0x01)
        /* "#utility.yul":7578:7610   */
      dup4
      dup2
      and
        /* "test/solidity/Protocol.t.sol":44452:44477  market.balanceOf(account) */
      0x04
      dup4
      add
        /* "#utility.yul":7560:7611   */
      mstore
        /* "test/solidity/Protocol.t.sol":44393:44400  uint256 */
      0x00
      swap2
      dup3
      swap2
        /* "test/solidity/Protocol.t.sol":44429:44451  market.convertToAssets */
      dup5
      and
      swap1
      0x07a2d13a
      swap1
      dup3
      swap1
        /* "test/solidity/Protocol.t.sol":44452:44468  market.balanceOf */
      0x70a08231
      swap1
        /* "#utility.yul":7533:7551   */
      0x24
      add
        /* "test/solidity/Protocol.t.sol":44452:44477  market.balanceOf(account) */
      0x20
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      dup7
      gas
      staticcall
      iszero
      dup1
      iszero
      tag_3187
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_3187:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      dup2
      add
      swap1
      tag_3188
      swap2
      swap1
      tag_212
      jump	// in
    tag_3188:
        /* "test/solidity/Protocol.t.sol":44429:44478  market.convertToAssets(market.balanceOf(account)) */
      mload(0x40)
      dup3
      0xffffffff
      and
      0xe0
      shl
      dup2
      mstore
      0x04
      add
      tag_3189
      swap2
        /* "#utility.yul":10439:10464   */
      dup2
      mstore
        /* "#utility.yul":10427:10429   */
      0x20
        /* "#utility.yul":10412:10430   */
      add
      swap1
        /* "#utility.yul":10284:10470   */
      jump
        /* "test/solidity/Protocol.t.sol":44429:44478  market.convertToAssets(market.balanceOf(account)) */
    tag_3189:
      0x20
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      dup7
      gas
      staticcall
      iszero
      dup1
      iszero
      tag_3191
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_3191:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      dup2
      add
      swap1
      tag_3192
      swap2
      swap1
      tag_212
      jump	// in
    tag_3192:
        /* "test/solidity/Protocol.t.sol":44531:44538  auditor */
      sload(0x1b)
        /* "test/solidity/Protocol.t.sol":44531:44554  auditor.markets(market) */
      mload(0x40)
      shl(0xe0, 0x8e8f294b)
      dup2
      mstore
      sub(shl(0xa0, 0x01), 0x01)
        /* "#utility.yul":7578:7610   */
      dup7
      dup2
      and
        /* "test/solidity/Protocol.t.sol":44531:44554  auditor.markets(market) */
      0x04
      dup4
      add
        /* "#utility.yul":7560:7611   */
      mstore
        /* "test/solidity/Protocol.t.sol":44408:44478  uint256 collateral = market.convertToAssets(market.balanceOf(account)) */
      swap3
      swap4
      pop
        /* "test/solidity/Protocol.t.sol":44487:44501  uint8 decimals */
      0x00
      swap3
      dup4
      swap3
        /* "test/solidity/Protocol.t.sol":44531:44538  auditor */
      and
      swap1
        /* "test/solidity/Protocol.t.sol":44531:44546  auditor.markets */
      0x8e8f294b
      swap1
        /* "#utility.yul":7533:7551   */
      0x24
      add
        /* "test/solidity/Protocol.t.sol":44531:44554  auditor.markets(market) */
      0xa0
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      dup7
      gas
      staticcall
      iszero
      dup1
      iszero
      tag_3195
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_3195:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      dup2
      add
      swap1
      tag_3196
      swap2
      swap1
      tag_198
      jump	// in
    tag_3196:
        /* "test/solidity/Protocol.t.sol":44484:44554  (, uint8 decimals, , , IPriceFeed priceFeed) = auditor.markets(market) */
      swap5
      pop
      pop
      pop
      swap3
      pop
      pop
        /* "test/solidity/Protocol.t.sol":44567:44639  collateral.mulDivDown(uint256(priceFeed.latestAnswer()), 10 ** decimals) */
      tag_3055
        /* "test/solidity/Protocol.t.sol":44597:44606  priceFeed */
      dup2
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":44597:44619  priceFeed.latestAnswer */
      and
      0x50d25bcd
        /* "test/solidity/Protocol.t.sol":44597:44621  priceFeed.latestAnswer() */
      mload(0x40)
      dup2
      0xffffffff
      and
      0xe0
      shl
      dup2
      mstore
      0x04
      add
      0x20
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      dup7
      gas
      staticcall
      iszero
      dup1
      iszero
      tag_3199
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_3199:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      dup2
      add
      swap1
      tag_3200
      swap2
      swap1
      tag_212
      jump	// in
    tag_3200:
        /* "test/solidity/Protocol.t.sol":44624:44638  10 ** decimals */
      tag_3100
        /* "test/solidity/Protocol.t.sol":44630:44638  decimals */
      dup5
        /* "test/solidity/Protocol.t.sol":44624:44626  10 */
      0x0a
        /* "test/solidity/Protocol.t.sol":44624:44638  10 ** decimals */
      tag_987
      jump	// in
        /* "test/solidity/Protocol.t.sol":39803:40532  function previewTotalLiquidity(address account) internal view returns (uint256 totalCollateral, uint256 totalDebt) {... */
    tag_1969:
        /* "test/solidity/Protocol.t.sol":39944:39951  auditor */
      sload(0x1b)
        /* "test/solidity/Protocol.t.sol":39944:39975  auditor.accountMarkets(account) */
      mload(0x40)
      not(sub(shl(0xe1, 0x63e28d), 0x01))
      dup2
      mstore
      sub(shl(0xa0, 0x01), 0x01)
        /* "#utility.yul":7578:7610   */
      dup4
      dup2
      and
        /* "test/solidity/Protocol.t.sol":39944:39975  auditor.accountMarkets(account) */
      0x04
      dup4
      add
        /* "#utility.yul":7560:7611   */
      mstore
        /* "test/solidity/Protocol.t.sol":39874:39897  uint256 totalCollateral */
      0x00
      swap3
      dup4
      swap3
      dup4
      swap3
        /* "test/solidity/Protocol.t.sol":39944:39951  auditor */
      swap1
      swap2
      and
      swap1
        /* "test/solidity/Protocol.t.sol":39944:39966  auditor.accountMarkets */
      0xff383ae6
      swap1
        /* "#utility.yul":7533:7551   */
      0x24
      add
        /* "test/solidity/Protocol.t.sol":39944:39975  auditor.accountMarkets(account) */
      0x20
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      dup7
      gas
      staticcall
      iszero
      dup1
      iszero
      tag_3205
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_3205:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      dup2
      add
      swap1
      tag_3206
      swap2
      swap1
      tag_212
      jump	// in
    tag_3206:
        /* "test/solidity/Protocol.t.sol":39924:39975  uint256 marketMap = auditor.accountMarkets(account) */
      swap1
      pop
        /* "test/solidity/Protocol.t.sol":39986:39995  uint256 i */
      0x00
        /* "test/solidity/Protocol.t.sol":39981:40528  for (uint256 i = 0; marketMap != 0; marketMap >>= 1) {... */
    tag_3207:
        /* "test/solidity/Protocol.t.sol":40001:40015  marketMap != 0 */
      dup2
      iszero
        /* "test/solidity/Protocol.t.sol":39981:40528  for (uint256 i = 0; marketMap != 0; marketMap >>= 1) {... */
      tag_3208
      jumpi
        /* "test/solidity/Protocol.t.sol":40058:40059  1 */
      0x01
        /* "test/solidity/Protocol.t.sol":40046:40059  marketMap & 1 */
      dup3
      and
        /* "test/solidity/Protocol.t.sol":40046:40064  marketMap & 1 != 0 */
      iszero
        /* "test/solidity/Protocol.t.sol":40042:40483  if (marketMap & 1 != 0) {... */
      tag_3210
      jumpi
        /* "test/solidity/Protocol.t.sol":40092:40099  auditor */
      sload(0x1b)
        /* "test/solidity/Protocol.t.sol":40092:40113  auditor.marketList(i) */
      mload(0x40)
      shl(0xe2, 0x08cae55b)
      dup2
      mstore
      0x04
      dup2
      add
        /* "#utility.yul":10439:10464   */
      dup4
      swap1
      mstore
        /* "test/solidity/Protocol.t.sol":40076:40089  Market market */
      0x00
      swap2
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":40092:40099  auditor */
      and
      swap1
        /* "test/solidity/Protocol.t.sol":40092:40110  auditor.marketList */
      0x232b956c
      swap1
        /* "#utility.yul":10412:10430   */
      0x24
      add
        /* "test/solidity/Protocol.t.sol":40092:40113  auditor.marketList(i) */
      0x20
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      dup7
      gas
      staticcall
      iszero
      dup1
      iszero
      tag_3213
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_3213:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      dup2
      add
      swap1
      tag_3214
      swap2
      swap1
      tag_167
      jump	// in
    tag_3214:
        /* "test/solidity/Protocol.t.sol":40170:40177  auditor */
      sload(0x1b)
        /* "test/solidity/Protocol.t.sol":40170:40193  auditor.markets(market) */
      mload(0x40)
      shl(0xe0, 0x8e8f294b)
      dup2
      mstore
      sub(shl(0xa0, 0x01), 0x01)
        /* "#utility.yul":7578:7610   */
      dup1
      dup5
      and
        /* "test/solidity/Protocol.t.sol":40170:40193  auditor.markets(market) */
      0x04
      dup4
      add
        /* "#utility.yul":7560:7611   */
      mstore
        /* "test/solidity/Protocol.t.sol":40076:40113  Market market = auditor.marketList(i) */
      swap3
      swap4
      pop
        /* "test/solidity/Protocol.t.sol":40126:40140  uint8 decimals */
      0x00
      swap3
      dup4
      swap3
        /* "test/solidity/Protocol.t.sol":40170:40177  auditor */
      and
      swap1
        /* "test/solidity/Protocol.t.sol":40170:40185  auditor.markets */
      0x8e8f294b
      swap1
        /* "#utility.yul":7533:7551   */
      0x24
      add
        /* "test/solidity/Protocol.t.sol":40170:40193  auditor.markets(market) */
      0xa0
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      dup7
      gas
      staticcall
      iszero
      dup1
      iszero
      tag_3217
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_3217:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      dup2
      add
      swap1
      tag_3218
      swap2
      swap1
      tag_198
      jump	// in
    tag_3218:
        /* "test/solidity/Protocol.t.sol":40240:40271  market.accountSnapshot(account) */
      mload(0x40)
      shl(0xe0, 0x014a296f)
      dup2
      mstore
      sub(shl(0xa0, 0x01), 0x01)
        /* "#utility.yul":7578:7610   */
      dup15
      dup2
      and
        /* "test/solidity/Protocol.t.sol":40240:40271  market.accountSnapshot(account) */
      0x04
      dup4
      add
        /* "#utility.yul":7560:7611   */
      mstore
        /* "test/solidity/Protocol.t.sol":40123:40193  (, uint8 decimals, , , IPriceFeed priceFeed) = auditor.markets(market) */
      swap5
      swap8
      pop
      swap1
      swap6
      pop
        /* "test/solidity/Protocol.t.sol":40204:40222  uint256 collateral */
      0x00
      swap5
      pop
      dup5
      swap4
        /* "test/solidity/Protocol.t.sol":40240:40262  market.accountSnapshot */
      dup9
      and
      swap3
      pop
      0x014a296f
      swap2
      pop
        /* "#utility.yul":7533:7551   */
      0x24
      add
        /* "test/solidity/Protocol.t.sol":40240:40271  market.accountSnapshot(account) */
      0x40
      dup1
      mload
      dup1
      dup4
      sub
      dup2
      dup7
      gas
      staticcall
      iszero
      dup1
      iszero
      tag_3221
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_3221:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      dup2
      add
      swap1
      tag_3222
      swap2
      swap1
      tag_203
      jump	// in
    tag_3222:
        /* "test/solidity/Protocol.t.sol":40302:40309  auditor */
      sload(0x1b)
        /* "test/solidity/Protocol.t.sol":40302:40331  auditor.assetPrice(priceFeed) */
      mload(0x40)
      shl(0xe3, 0x1710760b)
      dup2
      mstore
      sub(shl(0xa0, 0x01), 0x01)
        /* "#utility.yul":7578:7610   */
      dup8
      dup2
      and
        /* "test/solidity/Protocol.t.sol":40302:40331  auditor.assetPrice(priceFeed) */
      0x04
      dup4
      add
        /* "#utility.yul":7560:7611   */
      mstore
        /* "test/solidity/Protocol.t.sol":40203:40271  (uint256 collateral, uint256 debt) = market.accountSnapshot(account) */
      swap4
      swap6
      pop
      swap2
      swap4
      pop
        /* "test/solidity/Protocol.t.sol":40281:40299  uint256 assetPrice */
      0x00
      swap3
        /* "test/solidity/Protocol.t.sol":40302:40309  auditor */
      and
      swap1
        /* "test/solidity/Protocol.t.sol":40302:40320  auditor.assetPrice */
      0xb883b058
      swap1
        /* "#utility.yul":7533:7551   */
      0x24
      add
        /* "test/solidity/Protocol.t.sol":40302:40331  auditor.assetPrice(priceFeed) */
      0x20
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      dup7
      gas
      staticcall
      iszero
      dup1
      iszero
      tag_3225
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_3225:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      dup2
      add
      swap1
      tag_3226
      swap2
      swap1
      tag_212
      jump	// in
    tag_3226:
        /* "test/solidity/Protocol.t.sol":40281:40331  uint256 assetPrice = auditor.assetPrice(priceFeed) */
      swap1
      pop
        /* "test/solidity/Protocol.t.sol":40361:40410  collateral.mulDivDown(assetPrice, 10 ** decimals) */
      tag_3227
        /* "test/solidity/Protocol.t.sol":40281:40331  uint256 assetPrice = auditor.assetPrice(priceFeed) */
      dup2
        /* "test/solidity/Protocol.t.sol":40395:40409  10 ** decimals */
      tag_3100
        /* "test/solidity/Protocol.t.sol":40401:40409  decimals */
      dup8
        /* "test/solidity/Protocol.t.sol":40395:40397  10 */
      0x0a
        /* "test/solidity/Protocol.t.sol":40395:40409  10 ** decimals */
      tag_987
      jump	// in
        /* "test/solidity/Protocol.t.sol":40361:40410  collateral.mulDivDown(assetPrice, 10 ** decimals) */
    tag_3227:
        /* "test/solidity/Protocol.t.sol":40342:40410  totalCollateral += collateral.mulDivDown(assetPrice, 10 ** decimals) */
      tag_3229
      swap1
      dup12
      tag_186
      jump	// in
    tag_3229:
      swap10
      pop
        /* "test/solidity/Protocol.t.sol":40433:40474  debt.mulDivUp(assetPrice, 10 ** decimals) */
      tag_3230
        /* "test/solidity/Protocol.t.sol":40447:40457  assetPrice */
      dup2
        /* "test/solidity/Protocol.t.sol":40459:40473  10 ** decimals */
      tag_3231
        /* "test/solidity/Protocol.t.sol":40465:40473  decimals */
      dup8
        /* "test/solidity/Protocol.t.sol":40459:40461  10 */
      0x0a
        /* "test/solidity/Protocol.t.sol":40459:40473  10 ** decimals */
      tag_987
      jump	// in
    tag_3231:
        /* "test/solidity/Protocol.t.sol":40433:40437  debt */
      dup5
      swap2
        /* "test/solidity/Protocol.t.sol":40433:40474  debt.mulDivUp(assetPrice, 10 ** decimals) */
      swap1
        /* "test/solidity/Protocol.t.sol":40433:40446  debt.mulDivUp */
      tag_988
        /* "test/solidity/Protocol.t.sol":40433:40474  debt.mulDivUp(assetPrice, 10 ** decimals) */
      jump	// in
    tag_3230:
        /* "test/solidity/Protocol.t.sol":40420:40474  totalDebt += debt.mulDivUp(assetPrice, 10 ** decimals) */
      tag_3232
      swap1
      dup11
      tag_186
      jump	// in
    tag_3232:
      swap9
      pop
        /* "test/solidity/Protocol.t.sol":40066:40483  {... */
      pop
      pop
      pop
      pop
      pop
      pop
        /* "test/solidity/Protocol.t.sol":40042:40483  if (marketMap & 1 != 0) {... */
    tag_3210:
        /* "test/solidity/Protocol.t.sol":40510:40513  ++i */
      0x01
        /* "test/solidity/Protocol.t.sol":40017:40032  marketMap >>= 1 */
      swap2
      dup3
      shr
      swap2
        /* "test/solidity/Protocol.t.sol":40510:40513  ++i */
      add
        /* "test/solidity/Protocol.t.sol":39981:40528  for (uint256 i = 0; marketMap != 0; marketMap >>= 1) {... */
      jump(tag_3207)
    tag_3208:
      pop
        /* "test/solidity/Protocol.t.sol":39918:40532  {... */
      pop
        /* "test/solidity/Protocol.t.sol":39803:40532  function previewTotalLiquidity(address account) internal view returns (uint256 totalCollateral, uint256 totalDebt) {... */
      swap2
      pop
      swap2
      jump	// out
        /* "test/solidity/Protocol.t.sol":40536:43072  function previewLiquidation(... */
    tag_1985:
        /* "test/solidity/Protocol.t.sol":40660:40685  LiquidationVars memory lv */
      tag_3233
      mload(0x40)
      dup1
      0xc0
      add
      0x40
      mstore
      dup1
      0x00
      dup2
      mstore
      0x20
      add
      0x00
      dup2
      mstore
      0x20
      add
      0x00
      dup2
      mstore
      0x20
      add
      0x00
      dup2
      mstore
      0x20
      add
      0x00
      dup2
      mstore
      0x20
      add
      0x00
      dup2
      mstore
      pop
      swap1
      jump
    tag_3233:
        /* "test/solidity/Protocol.t.sol":40766:40773  auditor */
      sload(0x1b)
        /* "test/solidity/Protocol.t.sol":40766:40844  auditor.checkLiquidation(market, collateralMarket, account, type(uint256).max) */
      mload(0x40)
      shl(0xe3, 0x042dcf6b)
      dup2
      mstore
      sub(shl(0xa0, 0x01), 0x01)
        /* "#utility.yul":45761:45776   */
      dup7
      dup2
      and
        /* "test/solidity/Protocol.t.sol":40766:40844  auditor.checkLiquidation(market, collateralMarket, account, type(uint256).max) */
      0x04
      dup4
      add
        /* "#utility.yul":45743:45777   */
      mstore
        /* "#utility.yul":45813:45828   */
      dup6
      dup2
      and
        /* "#utility.yul":45793:45811   */
      0x24
      dup4
      add
        /* "#utility.yul":45786:45829   */
      mstore
        /* "#utility.yul":45865:45880   */
      dup5
      dup2
      and
        /* "#utility.yul":45845:45863   */
      0x44
      dup4
      add
        /* "#utility.yul":45838:45881   */
      mstore
      not(0x00)
        /* "#utility.yul":45897:45915   */
      0x64
      dup4
      add
        /* "#utility.yul":45890:45924   */
      mstore
        /* "test/solidity/Protocol.t.sol":40693:40715  uint256 floatingAssets */
      0x00
      swap3
      dup4
      swap3
      dup4
      swap3
        /* "test/solidity/Protocol.t.sol":40766:40773  auditor */
      swap1
      swap2
      and
      swap1
        /* "test/solidity/Protocol.t.sol":40766:40790  auditor.checkLiquidation */
      0x216e7b58
      swap1
        /* "#utility.yul":45677:45696   */
      0x84
      add
        /* "test/solidity/Protocol.t.sol":40766:40844  auditor.checkLiquidation(market, collateralMarket, account, type(uint256).max) */
      0x20
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      dup7
      gas
      staticcall
      iszero
      dup1
      iszero
      tag_3238
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_3238:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      dup2
      add
      swap1
      tag_3239
      swap2
      swap1
      tag_212
      jump	// in
    tag_3239:
        /* "test/solidity/Protocol.t.sol":40883:40907  market.accounts(account) */
      mload(0x40)
      shl(0xe1, 0x2f2e0371)
      dup2
      mstore
      sub(shl(0xa0, 0x01), 0x01)
        /* "#utility.yul":7578:7610   */
      dup8
      dup2
      and
        /* "test/solidity/Protocol.t.sol":40883:40907  market.accounts(account) */
      0x04
      dup4
      add
        /* "#utility.yul":7560:7611   */
      mstore
        /* "test/solidity/Protocol.t.sol":40746:40844  uint256 maxAssets = auditor.checkLiquidation(market, collateralMarket, account, type(uint256).max) */
      swap2
      swap3
      pop
        /* "test/solidity/Protocol.t.sol":40853:40877  uint256 packedMaturities */
      0x00
      swap2
        /* "test/solidity/Protocol.t.sol":40883:40898  market.accounts */
      dup10
      and
      swap1
      0x5e5c06e2
      swap1
        /* "#utility.yul":7533:7551   */
      0x24
      add
        /* "test/solidity/Protocol.t.sol":40883:40907  market.accounts(account) */
      0x60
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      dup7
      gas
      staticcall
      iszero
      dup1
      iszero
      tag_3242
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_3242:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      dup2
      add
      swap1
      tag_3243
      swap2
      swap1
      tag_1034
      jump	// in
    tag_3243:
      pop
        /* "test/solidity/Protocol.t.sol":40850:40907  (, uint256 packedMaturities, ) = market.accounts(account) */
      swap2
      pop
        /* "test/solidity/Protocol.t.sol":40913:40933  uint256 baseMaturity */
      0x00
      swap1
      pop
        /* "test/solidity/Protocol.t.sol":40936:40964  packedMaturities % (1 << 32) */
      tag_3244
        /* "test/solidity/Protocol.t.sol":40956:40963  1 << 32 */
      0x0100000000
        /* "test/solidity/Protocol.t.sol":40850:40907  (, uint256 packedMaturities, ) = market.accounts(account) */
      dup4
        /* "test/solidity/Protocol.t.sol":40936:40964  packedMaturities % (1 << 32) */
      tag_183
      jump	// in
    tag_3244:
        /* "test/solidity/Protocol.t.sol":40913:40964  uint256 baseMaturity = packedMaturities % (1 << 32) */
      swap1
      pop
        /* "test/solidity/Protocol.t.sol":41009:41011  32 */
      0x20
        /* "test/solidity/Protocol.t.sol":40989:41005  packedMaturities */
      dup3
        /* "test/solidity/Protocol.t.sol":40989:41011  packedMaturities >> 32 */
      swap1
      shr
        /* "test/solidity/Protocol.t.sol":40970:41011  packedMaturities = packedMaturities >> 32 */
      swap2
      pop
        /* "test/solidity/Protocol.t.sol":41022:41031  uint256 i */
      0x00
        /* "test/solidity/Protocol.t.sol":41017:42503  for (uint256 i = 0; i < 224; ++i) {... */
    tag_3245:
        /* "test/solidity/Protocol.t.sol":41041:41044  224 */
      0xe0
        /* "test/solidity/Protocol.t.sol":41037:41038  i */
      dup2
        /* "test/solidity/Protocol.t.sol":41037:41044  i < 224 */
      lt
        /* "test/solidity/Protocol.t.sol":41017:42503  for (uint256 i = 0; i < 224; ++i) {... */
      iszero
      tag_3246
      jumpi
        /* "test/solidity/Protocol.t.sol":41084:41085  1 */
      0x01
        /* "test/solidity/Protocol.t.sol":41084:41090  1 << i */
      dup2
      shl
        /* "test/solidity/Protocol.t.sol":41064:41091  packedMaturities & (1 << i) */
      dup4
      and
        /* "test/solidity/Protocol.t.sol":41063:41097  (packedMaturities & (1 << i)) != 0 */
      iszero
        /* "test/solidity/Protocol.t.sol":41059:42433  if ((packedMaturities & (1 << i)) != 0) {... */
      tag_3248
      jumpi
        /* "test/solidity/Protocol.t.sol":41109:41125  uint256 maturity */
      0x00
        /* "test/solidity/Protocol.t.sol":41144:41165  i * FixedLib.INTERVAL */
      tag_3249
        /* "contracts/utils/FixedLib.sol":306:313  4 weeks */
      0x24ea00
        /* "test/solidity/Protocol.t.sol":41144:41145  i */
      dup4
        /* "test/solidity/Protocol.t.sol":41144:41165  i * FixedLib.INTERVAL */
      tag_278
      jump	// in
    tag_3249:
        /* "test/solidity/Protocol.t.sol":41128:41166  baseMaturity + (i * FixedLib.INTERVAL) */
      tag_3250
      swap1
        /* "test/solidity/Protocol.t.sol":41128:41140  baseMaturity */
      dup5
        /* "test/solidity/Protocol.t.sol":41128:41166  baseMaturity + (i * FixedLib.INTERVAL) */
      tag_186
      jump	// in
    tag_3250:
        /* "test/solidity/Protocol.t.sol":41109:41166  uint256 maturity = baseMaturity + (i * FixedLib.INTERVAL) */
      swap1
      pop
        /* "test/solidity/Protocol.t.sol":41176:41195  uint256 actualRepay */
      0x00
        /* "test/solidity/Protocol.t.sol":41205:41231  FixedLib.Position memory p */
      tag_3251
      mload(0x40)
      dup1
      0x40
      add
      0x40
      mstore
      dup1
      0x00
      dup2
      mstore
      0x20
      add
      0x00
      dup2
      mstore
      pop
      swap1
      jump
    tag_3251:
        /* "test/solidity/Protocol.t.sol":41264:41310  market.fixedBorrowPositions(maturity, account) */
      mload(0x40)
      shl(0xe0, 0xd2681a0b)
      dup2
      mstore
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":41264:41291  market.fixedBorrowPositions */
      dup15
      and
      swap1
      0xd2681a0b
      swap1
        /* "test/solidity/Protocol.t.sol":41264:41310  market.fixedBorrowPositions(maturity, account) */
      tag_3252
      swap1
        /* "test/solidity/Protocol.t.sol":41292:41300  maturity */
      dup7
      swap1
        /* "test/solidity/Protocol.t.sol":41302:41309  account */
      dup16
      swap1
        /* "test/solidity/Protocol.t.sol":41264:41310  market.fixedBorrowPositions(maturity, account) */
      0x04
      add
      tag_555
      jump	// in
    tag_3252:
      0x40
      dup1
      mload
      dup1
      dup4
      sub
      dup2
      dup7
      gas
      staticcall
      iszero
      dup1
      iszero
      tag_3254
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_3254:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      dup2
      add
      swap1
      tag_3255
      swap2
      swap1
      tag_203
      jump	// in
    tag_3255:
        /* "test/solidity/Protocol.t.sol":41255:41260  p.fee */
      0x20
      dup4
      add
        /* "test/solidity/Protocol.t.sol":41241:41310  (p.principal, p.fee) = market.fixedBorrowPositions(maturity, account) */
      mstore
      dup2
      mstore
        /* "test/solidity/Protocol.t.sol":41324:41339  block.timestamp */
      timestamp
        /* "test/solidity/Protocol.t.sol":41324:41350  block.timestamp < maturity */
      dup4
      gt
        /* "test/solidity/Protocol.t.sol":41320:42389  if (block.timestamp < maturity) {... */
      iszero
      tag_3256
      jumpi
        /* "test/solidity/Protocol.t.sol":41378:41418  Math.min(maxAssets, p.principal + p.fee) */
      tag_3257
        /* "test/solidity/Protocol.t.sol":41387:41396  maxAssets */
      dup8
        /* "test/solidity/Protocol.t.sol":41412:41413  p */
      dup3
        /* "test/solidity/Protocol.t.sol":41412:41417  p.fee */
      0x20
      add
      mload
        /* "test/solidity/Protocol.t.sol":41398:41399  p */
      dup4
        /* "test/solidity/Protocol.t.sol":41398:41409  p.principal */
      0x00
      add
      mload
        /* "test/solidity/Protocol.t.sol":41398:41417  p.principal + p.fee */
      tag_3258
      swap2
      swap1
      tag_186
      jump	// in
    tag_3258:
        /* "test/solidity/Protocol.t.sol":41378:41386  Math.min */
      tag_791
        /* "test/solidity/Protocol.t.sol":41378:41418  Math.min(maxAssets, p.principal + p.fee) */
      jump	// in
    tag_3257:
        /* "test/solidity/Protocol.t.sol":41364:41418  actualRepay = Math.min(maxAssets, p.principal + p.fee) */
      swap2
      pop
        /* "test/solidity/Protocol.t.sol":41430:41454  maxAssets -= actualRepay */
      tag_3259
        /* "test/solidity/Protocol.t.sol":41364:41418  actualRepay = Math.min(maxAssets, p.principal + p.fee) */
      dup3
        /* "test/solidity/Protocol.t.sol":41430:41454  maxAssets -= actualRepay */
      dup9
      tag_158
      jump	// in
    tag_3259:
      swap7
      pop
        /* "test/solidity/Protocol.t.sol":41486:41552  previewBackupDebtReduction(market, account, maturity, actualRepay) */
      tag_3260
        /* "test/solidity/Protocol.t.sol":41513:41519  market */
      dup14
        /* "test/solidity/Protocol.t.sol":41521:41528  account */
      dup13
        /* "test/solidity/Protocol.t.sol":41530:41538  maturity */
      dup6
        /* "test/solidity/Protocol.t.sol":41540:41551  actualRepay */
      dup6
        /* "test/solidity/Protocol.t.sol":41486:41512  previewBackupDebtReduction */
      tag_3261
        /* "test/solidity/Protocol.t.sol":41486:41552  previewBackupDebtReduction(market, account, maturity, actualRepay) */
      jump	// in
    tag_3260:
        /* "test/solidity/Protocol.t.sol":41466:41468  lv */
      dup11
        /* "test/solidity/Protocol.t.sol":41466:41482  lv.debtReduction */
      0xa0
      add
        /* "test/solidity/Protocol.t.sol":41466:41552  lv.debtReduction += previewBackupDebtReduction(market, account, maturity, actualRepay) */
      dup2
      dup2
      mload
      tag_3262
      swap2
      swap1
      tag_186
      jump	// in
    tag_3262:
      swap1
      mstore
      pop
        /* "test/solidity/Protocol.t.sol":41320:42389  if (block.timestamp < maturity) {... */
      jump(tag_3263)
    tag_3256:
        /* "test/solidity/Protocol.t.sol":41614:41619  p.fee */
      0x20
      dup2
      add
      mload
        /* "test/solidity/Protocol.t.sol":41600:41611  p.principal */
      dup2
      mload
        /* "test/solidity/Protocol.t.sol":41581:41597  uint256 position */
      0x00
      swap2
        /* "test/solidity/Protocol.t.sol":41600:41619  p.principal + p.fee */
      tag_3264
      swap2
      tag_186
      jump	// in
    tag_3264:
        /* "test/solidity/Protocol.t.sol":41581:41619  uint256 position = p.principal + p.fee */
      swap1
      pop
        /* "test/solidity/Protocol.t.sol":41631:41643  uint256 debt */
      0x00
        /* "test/solidity/Protocol.t.sol":41657:41729  position.mulWadDown((block.timestamp - maturity) * market.penaltyRate()) */
      tag_3265
        /* "test/solidity/Protocol.t.sol":41708:41714  market */
      dup16
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":41708:41726  market.penaltyRate */
      and
      0xd6b7494f
        /* "test/solidity/Protocol.t.sol":41708:41728  market.penaltyRate() */
      mload(0x40)
      dup2
      0xffffffff
      and
      0xe0
      shl
      dup2
      mstore
      0x04
      add
      0x20
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      dup7
      gas
      staticcall
      iszero
      dup1
      iszero
      tag_3267
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_3267:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      dup2
      add
      swap1
      tag_3268
      swap2
      swap1
      tag_212
      jump	// in
    tag_3268:
        /* "test/solidity/Protocol.t.sol":41678:41704  block.timestamp - maturity */
      tag_3269
        /* "test/solidity/Protocol.t.sol":41696:41704  maturity */
      dup8
        /* "test/solidity/Protocol.t.sol":41678:41693  block.timestamp */
      timestamp
        /* "test/solidity/Protocol.t.sol":41678:41704  block.timestamp - maturity */
      tag_158
      jump	// in
    tag_3269:
        /* "test/solidity/Protocol.t.sol":41677:41728  (block.timestamp - maturity) * market.penaltyRate() */
      tag_3270
      swap2
      swap1
      tag_278
      jump	// in
    tag_3270:
        /* "test/solidity/Protocol.t.sol":41657:41665  position */
      dup4
      swap1
        /* "test/solidity/Protocol.t.sol":41657:41676  position.mulWadDown */
      tag_1375
        /* "test/solidity/Protocol.t.sol":41657:41729  position.mulWadDown((block.timestamp - maturity) * market.penaltyRate()) */
      jump	// in
    tag_3265:
        /* "test/solidity/Protocol.t.sol":41646:41729  position + position.mulWadDown((block.timestamp - maturity) * market.penaltyRate()) */
      tag_3271
      swap1
        /* "test/solidity/Protocol.t.sol":41646:41654  position */
      dup4
        /* "test/solidity/Protocol.t.sol":41646:41729  position + position.mulWadDown((block.timestamp - maturity) * market.penaltyRate()) */
      tag_186
      jump	// in
    tag_3271:
        /* "test/solidity/Protocol.t.sol":41631:41729  uint256 debt = position + position.mulWadDown((block.timestamp - maturity) * market.penaltyRate()) */
      swap1
      pop
        /* "test/solidity/Protocol.t.sol":41762:41771  maxAssets */
      dup9
        /* "test/solidity/Protocol.t.sol":41755:41759  debt */
      dup2
        /* "test/solidity/Protocol.t.sol":41755:41771  debt > maxAssets */
      gt
        /* "test/solidity/Protocol.t.sol":41755:41822  debt > maxAssets ? maxAssets.mulDivDown(position, debt) : maxAssets */
      tag_3272
      jumpi
        /* "test/solidity/Protocol.t.sol":41813:41822  maxAssets */
      dup9
        /* "test/solidity/Protocol.t.sol":41755:41822  debt > maxAssets ? maxAssets.mulDivDown(position, debt) : maxAssets */
      jump(tag_3274)
    tag_3272:
        /* "test/solidity/Protocol.t.sol":41774:41810  maxAssets.mulDivDown(position, debt) */
      tag_3274
        /* "test/solidity/Protocol.t.sol":41774:41783  maxAssets */
      dup10
        /* "test/solidity/Protocol.t.sol":41795:41803  position */
      dup4
        /* "test/solidity/Protocol.t.sol":41805:41809  debt */
      dup4
        /* "test/solidity/Protocol.t.sol":41774:41794  maxAssets.mulDivDown */
      tag_2085
        /* "test/solidity/Protocol.t.sol":41774:41810  maxAssets.mulDivDown(position, debt) */
      jump	// in
    tag_3274:
        /* "test/solidity/Protocol.t.sol":41741:41822  actualRepay = debt > maxAssets ? maxAssets.mulDivDown(position, debt) : maxAssets */
      swap4
      pop
        /* "test/solidity/Protocol.t.sol":41838:41849  actualRepay */
      dup4
        /* "test/solidity/Protocol.t.sol":41853:41854  0 */
      0x00
        /* "test/solidity/Protocol.t.sol":41838:41854  actualRepay == 0 */
      sub
        /* "test/solidity/Protocol.t.sol":41834:42379  if (actualRepay == 0) maxAssets = 0;... */
      tag_3275
      jumpi
        /* "test/solidity/Protocol.t.sol":41868:41869  0 */
      0x00
        /* "test/solidity/Protocol.t.sol":41856:41869  maxAssets = 0 */
      swap9
      pop
        /* "test/solidity/Protocol.t.sol":41834:42379  if (actualRepay == 0) maxAssets = 0;... */
      jump(tag_3276)
    tag_3275:
        /* "test/solidity/Protocol.t.sol":41920:42143  previewBackupDebtReduction(... */
      tag_3277
        /* "test/solidity/Protocol.t.sol":41962:41968  market */
      dup16
        /* "test/solidity/Protocol.t.sol":41984:41991  account */
      dup15
        /* "test/solidity/Protocol.t.sol":42007:42015  maturity */
      dup8
        /* "test/solidity/Protocol.t.sol":42038:42047  maxAssets */
      dup13
        /* "test/solidity/Protocol.t.sol":42031:42035  debt */
      dup6
        /* "test/solidity/Protocol.t.sol":42031:42047  debt > maxAssets */
      gt
        /* "test/solidity/Protocol.t.sol":42031:42129  debt > maxAssets ? maxAssets.mulDivDown(position, debt) : Math.min(maxAssets, p.principal + p.fee) */
      tag_3278
      jumpi
        /* "test/solidity/Protocol.t.sol":42089:42129  Math.min(maxAssets, p.principal + p.fee) */
      tag_3279
        /* "test/solidity/Protocol.t.sol":42098:42107  maxAssets */
      dup14
        /* "test/solidity/Protocol.t.sol":42123:42124  p */
      dup9
        /* "test/solidity/Protocol.t.sol":42123:42128  p.fee */
      0x20
      add
      mload
        /* "test/solidity/Protocol.t.sol":42109:42110  p */
      dup10
        /* "test/solidity/Protocol.t.sol":42109:42120  p.principal */
      0x00
      add
      mload
        /* "test/solidity/Protocol.t.sol":42109:42128  p.principal + p.fee */
      tag_3258
      swap2
      swap1
      tag_186
      jump	// in
        /* "test/solidity/Protocol.t.sol":42089:42129  Math.min(maxAssets, p.principal + p.fee) */
    tag_3279:
        /* "test/solidity/Protocol.t.sol":41920:41946  previewBackupDebtReduction */
      tag_3261
        /* "test/solidity/Protocol.t.sol":41920:42143  previewBackupDebtReduction(... */
      jump	// in
        /* "test/solidity/Protocol.t.sol":42031:42129  debt > maxAssets ? maxAssets.mulDivDown(position, debt) : Math.min(maxAssets, p.principal + p.fee) */
    tag_3278:
        /* "test/solidity/Protocol.t.sol":42050:42086  maxAssets.mulDivDown(position, debt) */
      tag_3279
        /* "test/solidity/Protocol.t.sol":42050:42059  maxAssets */
      dup14
        /* "test/solidity/Protocol.t.sol":42071:42079  position */
      dup8
        /* "test/solidity/Protocol.t.sol":42081:42085  debt */
      dup8
        /* "test/solidity/Protocol.t.sol":42050:42070  maxAssets.mulDivDown */
      tag_2085
        /* "test/solidity/Protocol.t.sol":42050:42086  maxAssets.mulDivDown(position, debt) */
      jump	// in
        /* "test/solidity/Protocol.t.sol":41920:42143  previewBackupDebtReduction(... */
    tag_3277:
        /* "test/solidity/Protocol.t.sol":41900:41902  lv */
      dup13
        /* "test/solidity/Protocol.t.sol":41900:41916  lv.debtReduction */
      0xa0
      add
        /* "test/solidity/Protocol.t.sol":41900:42143  lv.debtReduction += previewBackupDebtReduction(... */
      dup2
      dup2
      mload
      tag_3283
      swap2
      swap1
      tag_186
      jump	// in
    tag_3283:
      swap2
      pop
      dup2
      dup2
      mstore
      pop
      pop
        /* "test/solidity/Protocol.t.sol":42233:42328  Math.min(actualRepay, position).mulWadDown((block.timestamp - maturity) * market.penaltyRate()) */
      tag_3284
        /* "test/solidity/Protocol.t.sol":42307:42313  market */
      dup16
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":42307:42325  market.penaltyRate */
      and
      0xd6b7494f
        /* "test/solidity/Protocol.t.sol":42307:42327  market.penaltyRate() */
      mload(0x40)
      dup2
      0xffffffff
      and
      0xe0
      shl
      dup2
      mstore
      0x04
      add
      0x20
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      dup7
      gas
      staticcall
      iszero
      dup1
      iszero
      tag_3286
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_3286:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      dup2
      add
      swap1
      tag_3287
      swap2
      swap1
      tag_212
      jump	// in
    tag_3287:
        /* "test/solidity/Protocol.t.sol":42277:42303  block.timestamp - maturity */
      tag_3288
        /* "test/solidity/Protocol.t.sol":42295:42303  maturity */
      dup8
        /* "test/solidity/Protocol.t.sol":42277:42292  block.timestamp */
      timestamp
        /* "test/solidity/Protocol.t.sol":42277:42303  block.timestamp - maturity */
      tag_158
      jump	// in
    tag_3288:
        /* "test/solidity/Protocol.t.sol":42276:42327  (block.timestamp - maturity) * market.penaltyRate() */
      tag_3289
      swap2
      swap1
      tag_278
      jump	// in
    tag_3289:
        /* "test/solidity/Protocol.t.sol":42233:42264  Math.min(actualRepay, position) */
      tag_1374
        /* "test/solidity/Protocol.t.sol":42242:42253  actualRepay */
      dup7
        /* "test/solidity/Protocol.t.sol":42255:42263  position */
      dup6
        /* "test/solidity/Protocol.t.sol":42233:42241  Math.min */
      tag_791
        /* "test/solidity/Protocol.t.sol":42233:42264  Math.min(actualRepay, position) */
      jump	// in
        /* "test/solidity/Protocol.t.sol":42233:42328  Math.min(actualRepay, position).mulWadDown((block.timestamp - maturity) * market.penaltyRate()) */
    tag_3284:
        /* "test/solidity/Protocol.t.sol":42185:42216  Math.min(actualRepay, position) */
      tag_3291
        /* "test/solidity/Protocol.t.sol":42194:42205  actualRepay */
      dup6
        /* "test/solidity/Protocol.t.sol":42207:42215  position */
      dup5
        /* "test/solidity/Protocol.t.sol":42185:42193  Math.min */
      tag_791
        /* "test/solidity/Protocol.t.sol":42185:42216  Math.min(actualRepay, position) */
      jump	// in
    tag_3291:
        /* "test/solidity/Protocol.t.sol":42185:42328  Math.min(actualRepay, position) +... */
      tag_3292
      swap2
      swap1
      tag_186
      jump	// in
    tag_3292:
        /* "test/solidity/Protocol.t.sol":42157:42328  actualRepay =... */
      swap4
      pop
        /* "test/solidity/Protocol.t.sol":42342:42366  maxAssets -= actualRepay */
      tag_3293
        /* "test/solidity/Protocol.t.sol":42157:42328  actualRepay =... */
      dup5
        /* "test/solidity/Protocol.t.sol":42342:42366  maxAssets -= actualRepay */
      dup11
      tag_158
      jump	// in
    tag_3293:
      swap9
      pop
        /* "test/solidity/Protocol.t.sol":41834:42379  if (actualRepay == 0) maxAssets = 0;... */
    tag_3276:
        /* "test/solidity/Protocol.t.sol":41569:42389  {... */
      pop
      pop
        /* "test/solidity/Protocol.t.sol":41320:42389  if (block.timestamp < maturity) {... */
    tag_3263:
        /* "test/solidity/Protocol.t.sol":42398:42424  fixedAssets += actualRepay */
      tag_3294
        /* "test/solidity/Protocol.t.sol":42413:42424  actualRepay */
      dup3
        /* "test/solidity/Protocol.t.sol":42398:42424  fixedAssets += actualRepay */
      dup10
      tag_186
      jump	// in
    tag_3294:
      swap8
      pop
        /* "test/solidity/Protocol.t.sol":41099:42433  {... */
      pop
      pop
      pop
        /* "test/solidity/Protocol.t.sol":41059:42433  if ((packedMaturities & (1 << i)) != 0) {... */
    tag_3248:
        /* "test/solidity/Protocol.t.sol":42455:42471  packedMaturities */
      dup3
        /* "test/solidity/Protocol.t.sol":42450:42451  i */
      dup2
        /* "test/solidity/Protocol.t.sol":42445:42446  1 */
      0x01
        /* "test/solidity/Protocol.t.sol":42445:42451  1 << i */
      swap1
      shl
        /* "test/solidity/Protocol.t.sol":42444:42471  (1 << i) > packedMaturities */
      gt
        /* "test/solidity/Protocol.t.sol":42444:42489  (1 << i) > packedMaturities || maxAssets == 0 */
      dup1
      tag_3295
      jumpi
      pop
        /* "test/solidity/Protocol.t.sol":42475:42489  maxAssets == 0 */
      dup4
      iszero
        /* "test/solidity/Protocol.t.sol":42444:42489  (1 << i) > packedMaturities || maxAssets == 0 */
    tag_3295:
        /* "test/solidity/Protocol.t.sol":42491:42496  break */
      tag_3246
        /* "test/solidity/Protocol.t.sol":42440:42496  if ((1 << i) > packedMaturities || maxAssets == 0) break */
      jumpi
        /* "test/solidity/Protocol.t.sol":41046:41049  ++i */
      tag_3297
      dup2
      tag_293
      jump	// in
    tag_3297:
      swap1
      pop
        /* "test/solidity/Protocol.t.sol":41017:42503  for (uint256 i = 0; i < 224; ++i) {... */
      jump(tag_3245)
    tag_3246:
      pop
        /* "test/solidity/Protocol.t.sol":42531:42555  market.accounts(account) */
      mload(0x40)
      shl(0xe1, 0x2f2e0371)
      dup2
      mstore
      sub(shl(0xa0, 0x01), 0x01)
        /* "#utility.yul":7578:7610   */
      dup9
      dup2
      and
        /* "test/solidity/Protocol.t.sol":42531:42555  market.accounts(account) */
      0x04
      dup4
      add
        /* "#utility.yul":7560:7611   */
      mstore
        /* "test/solidity/Protocol.t.sol":42513:42527  uint256 shares */
      0x00
      swap2
        /* "test/solidity/Protocol.t.sol":42531:42546  market.accounts */
      swap1
      dup12
      and
      swap1
      0x5e5c06e2
      swap1
        /* "#utility.yul":7533:7551   */
      0x24
      add
        /* "test/solidity/Protocol.t.sol":42531:42555  market.accounts(account) */
      0x60
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      dup7
      gas
      staticcall
      iszero
      dup1
      iszero
      tag_3300
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_3300:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      dup2
      add
      swap1
      tag_3301
      swap2
      swap1
      tag_1034
      jump	// in
    tag_3301:
        /* "test/solidity/Protocol.t.sol":42508:42555  (, , uint256 shares) = market.accounts(account) */
      swap3
      pop
      pop
      pop
        /* "test/solidity/Protocol.t.sol":42577:42578  0 */
      0x00
        /* "test/solidity/Protocol.t.sol":42565:42574  maxAssets */
      dup5
        /* "test/solidity/Protocol.t.sol":42565:42578  maxAssets > 0 */
      gt
        /* "test/solidity/Protocol.t.sol":42565:42592  maxAssets > 0 && shares > 0 */
      dup1
      iszero
      tag_3302
      jumpi
      pop
        /* "test/solidity/Protocol.t.sol":42591:42592  0 */
      0x00
        /* "test/solidity/Protocol.t.sol":42582:42588  shares */
      dup2
        /* "test/solidity/Protocol.t.sol":42582:42592  shares > 0 */
      gt
        /* "test/solidity/Protocol.t.sol":42565:42592  maxAssets > 0 && shares > 0 */
    tag_3302:
        /* "test/solidity/Protocol.t.sol":42561:42817  if (maxAssets > 0 && shares > 0) {... */
      iszero
      tag_3303
      jumpi
        /* "test/solidity/Protocol.t.sol":42625:42655  market.previewRepay(maxAssets) */
      mload(0x40)
      shl(0xe1, 0x5fb91651)
      dup2
      mstore
      0x04
      dup2
      add
        /* "#utility.yul":10439:10464   */
      dup6
      swap1
      mstore
        /* "test/solidity/Protocol.t.sol":42602:42622  uint256 borrowShares */
      0x00
      swap1
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":42625:42644  market.previewRepay */
      dup13
      and
      swap1
      0xbf722ca2
      swap1
        /* "#utility.yul":10412:10430   */
      0x24
      add
        /* "test/solidity/Protocol.t.sol":42625:42655  market.previewRepay(maxAssets) */
      0x20
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      dup7
      gas
      staticcall
      iszero
      dup1
      iszero
      tag_3306
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_3306:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      dup2
      add
      swap1
      tag_3307
      swap2
      swap1
      tag_212
      jump	// in
    tag_3307:
        /* "test/solidity/Protocol.t.sol":42602:42655  uint256 borrowShares = market.previewRepay(maxAssets) */
      swap1
      pop
        /* "test/solidity/Protocol.t.sol":42667:42683  borrowShares > 0 */
      dup1
      iszero
        /* "test/solidity/Protocol.t.sol":42663:42811  if (borrowShares > 0) {... */
      tag_3308
      jumpi
        /* "test/solidity/Protocol.t.sol":42710:42740  Math.min(borrowShares, shares) */
      tag_3309
        /* "test/solidity/Protocol.t.sol":42719:42731  borrowShares */
      dup2
        /* "test/solidity/Protocol.t.sol":42733:42739  shares */
      dup4
        /* "test/solidity/Protocol.t.sol":42710:42718  Math.min */
      tag_791
        /* "test/solidity/Protocol.t.sol":42710:42740  Math.min(borrowShares, shares) */
      jump	// in
    tag_3309:
        /* "test/solidity/Protocol.t.sol":42768:42802  market.previewRefund(borrowShares) */
      mload(0x40)
      shl(0xe5, 0x023effef)
      dup2
      mstore
      0x04
      dup2
      add
        /* "#utility.yul":10439:10464   */
      dup3
      swap1
      mstore
        /* "test/solidity/Protocol.t.sol":42695:42740  borrowShares = Math.min(borrowShares, shares) */
      swap1
      swap2
      pop
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":42768:42788  market.previewRefund */
      dup13
      and
      swap1
      0x47dffde0
      swap1
        /* "#utility.yul":10412:10430   */
      0x24
      add
        /* "test/solidity/Protocol.t.sol":42768:42802  market.previewRefund(borrowShares) */
      0x20
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      dup7
      gas
      staticcall
      iszero
      dup1
      iszero
      tag_3312
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_3312:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      dup2
      add
      swap1
      tag_3313
      swap2
      swap1
      tag_212
      jump	// in
    tag_3313:
        /* "test/solidity/Protocol.t.sol":42750:42802  floatingAssets += market.previewRefund(borrowShares) */
      tag_3314
      swap1
      dup9
      tag_186
      jump	// in
    tag_3314:
      swap7
      pop
        /* "test/solidity/Protocol.t.sol":42663:42811  if (borrowShares > 0) {... */
    tag_3308:
        /* "test/solidity/Protocol.t.sol":42594:42817  {... */
      pop
        /* "test/solidity/Protocol.t.sol":42561:42817  if (maxAssets > 0 && shares > 0) {... */
    tag_3303:
        /* "test/solidity/Protocol.t.sol":42859:42866  auditor */
      and(sub(shl(0xa0, 0x01), 0x01), sload(0x1b))
        /* "test/solidity/Protocol.t.sol":42859:42881  auditor.calculateSeize */
      0x6e1b0031
        /* "test/solidity/Protocol.t.sol":42889:42895  market */
      dup12
        /* "test/solidity/Protocol.t.sol":42903:42919  collateralMarket */
      dup12
        /* "test/solidity/Protocol.t.sol":42927:42934  account */
      dup12
        /* "test/solidity/Protocol.t.sol":42942:42970  fixedAssets + floatingAssets */
      tag_3315
        /* "test/solidity/Protocol.t.sol":42956:42970  floatingAssets */
      dup12
        /* "test/solidity/Protocol.t.sol":42942:42953  fixedAssets */
      dup12
        /* "test/solidity/Protocol.t.sol":42942:42970  fixedAssets + floatingAssets */
      tag_186
      jump	// in
    tag_3315:
        /* "test/solidity/Protocol.t.sol":42859:42976  auditor.calculateSeize(... */
      mload(0x40)
      not(sub(shl(0xe0, 0x01), 0x01))
      0xe0
      dup8
      swap1
      shl
      and
      dup2
      mstore
      sub(shl(0xa0, 0x01), 0x01)
        /* "#utility.yul":45761:45776   */
      swap5
      dup6
      and
        /* "test/solidity/Protocol.t.sol":42859:42976  auditor.calculateSeize(... */
      0x04
      dup3
      add
        /* "#utility.yul":45743:45777   */
      mstore
        /* "#utility.yul":45813:45828   */
      swap3
      dup5
      and
        /* "#utility.yul":45793:45811   */
      0x24
      dup5
      add
        /* "#utility.yul":45786:45829   */
      mstore
        /* "#utility.yul":45865:45880   */
      swap3
      and
        /* "#utility.yul":45845:45863   */
      0x44
      dup3
      add
        /* "#utility.yul":45838:45881   */
      mstore
        /* "#utility.yul":45897:45915   */
      0x64
      dup2
      add
        /* "#utility.yul":45890:45924   */
      swap2
      swap1
      swap2
      mstore
        /* "#utility.yul":45677:45696   */
      0x84
      add
        /* "test/solidity/Protocol.t.sol":42859:42976  auditor.calculateSeize(... */
      0x40
      dup1
      mload
      dup1
      dup4
      sub
      dup2
      dup7
      gas
      staticcall
      iszero
      dup1
      iszero
      tag_3318
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_3318:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      dup2
      add
      swap1
      tag_3319
      swap2
      swap1
      tag_203
      jump	// in
    tag_3319:
        /* "test/solidity/Protocol.t.sol":42841:42855  lv.seizeAssets */
      0x60
      dup10
      add
        /* "test/solidity/Protocol.t.sol":42822:42976  (lv.lendersAssets, lv.seizeAssets) = auditor.calculateSeize(... */
      mstore
        /* "test/solidity/Protocol.t.sol":42823:42839  lv.lendersAssets */
      0x80
      dup9
      add
        /* "test/solidity/Protocol.t.sol":42822:42976  (lv.lendersAssets, lv.seizeAssets) = auditor.calculateSeize(... */
      mstore
        /* "test/solidity/Protocol.t.sol":42999:43027  fixedAssets + floatingAssets */
      tag_3320
        /* "test/solidity/Protocol.t.sol":43013:43027  floatingAssets */
      dup7
        /* "test/solidity/Protocol.t.sol":42999:43010  fixedAssets */
      dup7
        /* "test/solidity/Protocol.t.sol":42999:43027  fixedAssets + floatingAssets */
      tag_186
      jump	// in
    tag_3320:
        /* "test/solidity/Protocol.t.sol":42982:42996  lv.repayAssets */
      0x40
      dup9
      add
        /* "test/solidity/Protocol.t.sol":42982:43027  lv.repayAssets = fixedAssets + floatingAssets */
      mstore
        /* "test/solidity/Protocol.t.sol":43033:43049  lv.debtReduction */
      0xa0
      dup8
      add
        /* "test/solidity/Protocol.t.sol":43033:43067  lv.debtReduction += floatingAssets */
      dup1
      mload
        /* "test/solidity/Protocol.t.sol":43053:43067  floatingAssets */
      dup8
      swap2
        /* "test/solidity/Protocol.t.sol":43033:43049  lv.debtReduction */
      swap1
        /* "test/solidity/Protocol.t.sol":43033:43067  lv.debtReduction += floatingAssets */
      tag_3321
      swap1
        /* "test/solidity/Protocol.t.sol":43053:43067  floatingAssets */
      dup4
      swap1
        /* "test/solidity/Protocol.t.sol":43033:43067  lv.debtReduction += floatingAssets */
      tag_186
      jump	// in
    tag_3321:
      swap1
      mstore
      pop
        /* "test/solidity/Protocol.t.sol":40536:43072  function previewLiquidation(... */
      swap6
      swap10
      swap9
      pop
      pop
      pop
      pop
      pop
      pop
      pop
      pop
      pop
      jump	// out
        /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":7741:8276  function mulDivDown(... */
    tag_2085:
        /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":7947:7956  mul(x, y) */
      dup3
      dup3
      mul
        /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":8078:8097  iszero(denominator) */
      dup2
      iszero
        /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":8071:8098  iszero(iszero(denominator)) */
      iszero
        /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":8103:8112  iszero(x) */
      dup5
      iszero
        /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":8117:8126  div(z, x) */
      dup6
      dup4
      div
        /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":8114:8130  eq(div(z, x), y) */
      dup6
      eq
        /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":8100:8131  or(iszero(x), eq(div(z, x), y)) */
      or
        /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":8067:8132  and(iszero(iszero(denominator)), or(iszero(x), eq(div(z, x), y))) */
      and
        /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":8057:8178  if iszero(and(iszero(iszero(denominator)), or(iszero(x), eq(div(z, x), y)))) {... */
      tag_3323
      jumpi
        /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":8162:8163  0 */
      0x00
        /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":8159:8160  0 */
      dup1
        /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":8152:8164  revert(0, 0) */
      revert
        /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":8057:8178  if iszero(and(iszero(iszero(denominator)), or(iszero(x), eq(div(z, x), y)))) {... */
    tag_3323:
        /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":8241:8260  div(z, denominator) */
      div
      swap3
        /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":7741:8276  function mulDivDown(... */
      swap2
      pop
      pop
      jump	// out
        /* "lib/forge-std/lib/ds-test/src/test.sol":5476:5654  function assertEq(uint a, uint b, string memory err) internal {... */
    tag_2107:
        /* "lib/forge-std/lib/ds-test/src/test.sol":5557:5558  b */
      dup2
        /* "lib/forge-std/lib/ds-test/src/test.sol":5552:5553  a */
      dup4
        /* "lib/forge-std/lib/ds-test/src/test.sol":5552:5558  a != b */
      eq
        /* "lib/forge-std/lib/ds-test/src/test.sol":5548:5648  if (a != b) {... */
      tag_456
      jumpi
        /* "lib/forge-std/lib/ds-test/src/test.sol":5579:5609  log_named_string("Error", err) */
      0x280f4446b28a1372417dda658d30b95b2992b12ac9c7f378535f29a97acf3583
        /* "lib/forge-std/lib/ds-test/src/test.sol":5605:5608  err */
      dup2
        /* "lib/forge-std/lib/ds-test/src/test.sol":5579:5609  log_named_string("Error", err) */
      mload(0x40)
      tag_3326
      swap2
      swap1
      tag_3327
      jump	// in
    tag_3326:
      mload(0x40)
      dup1
      swap2
      sub
      swap1
      log1
        /* "lib/forge-std/lib/ds-test/src/test.sol":5623:5637  assertEq(a, b) */
      tag_456
        /* "lib/forge-std/lib/ds-test/src/test.sol":5632:5633  a */
      dup4
        /* "lib/forge-std/lib/ds-test/src/test.sol":5635:5636  b */
      dup4
        /* "lib/forge-std/lib/ds-test/src/test.sol":5623:5631  assertEq */
      tag_242
        /* "lib/forge-std/lib/ds-test/src/test.sol":5623:5637  assertEq(a, b) */
      jump	// in
        /* "test/solidity/Protocol.t.sol":51158:51822  function previewDepositYield(Market market, uint256 maturity, uint256 amount) internal view returns (uint256 yield) {... */
    tag_2315:
        /* "test/solidity/Protocol.t.sol":51259:51272  uint256 yield */
      0x00
        /* "test/solidity/Protocol.t.sol":51281:51297  uint256 borrowed */
      dup1
        /* "test/solidity/Protocol.t.sol":51299:51315  uint256 supplied */
      0x00
        /* "test/solidity/Protocol.t.sol":51317:51343  uint256 unassignedEarnings */
      dup1
        /* "test/solidity/Protocol.t.sol":51345:51364  uint256 lastAccrual */
      0x00
        /* "test/solidity/Protocol.t.sol":51368:51374  market */
      dup8
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":51368:51385  market.fixedPools */
      and
      0x4e7c5059
        /* "test/solidity/Protocol.t.sol":51386:51394  maturity */
      dup9
        /* "test/solidity/Protocol.t.sol":51368:51395  market.fixedPools(maturity) */
      mload(0x40)
      dup3
      0xffffffff
      and
      0xe0
      shl
      dup2
      mstore
      0x04
      add
      tag_3331
      swap2
        /* "#utility.yul":10439:10464   */
      dup2
      mstore
        /* "#utility.yul":10427:10429   */
      0x20
        /* "#utility.yul":10412:10430   */
      add
      swap1
        /* "#utility.yul":10284:10470   */
      jump
        /* "test/solidity/Protocol.t.sol":51368:51395  market.fixedPools(maturity) */
    tag_3331:
      0x80
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      dup7
      gas
      staticcall
      iszero
      dup1
      iszero
      tag_3333
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_3333:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      dup2
      add
      swap1
      tag_3334
      swap2
      swap1
      tag_730
      jump	// in
    tag_3334:
        /* "test/solidity/Protocol.t.sol":51280:51395  (uint256 borrowed, uint256 supplied, uint256 unassignedEarnings, uint256 lastAccrual) = market.fixedPools(maturity) */
      swap4
      pop
      swap4
      pop
      swap4
      pop
      swap4
      pop
        /* "test/solidity/Protocol.t.sol":51401:51426  uint256 memBackupSupplied */
      0x00
        /* "test/solidity/Protocol.t.sol":51440:51468  Math.min(borrowed, supplied) */
      tag_3335
        /* "test/solidity/Protocol.t.sol":51449:51457  borrowed */
      dup6
        /* "test/solidity/Protocol.t.sol":51459:51467  supplied */
      dup6
        /* "test/solidity/Protocol.t.sol":51440:51448  Math.min */
      tag_791
        /* "test/solidity/Protocol.t.sol":51440:51468  Math.min(borrowed, supplied) */
      jump	// in
    tag_3335:
        /* "test/solidity/Protocol.t.sol":51429:51468  borrowed - Math.min(borrowed, supplied) */
      tag_3336
      swap1
        /* "test/solidity/Protocol.t.sol":51429:51437  borrowed */
      dup7
        /* "test/solidity/Protocol.t.sol":51429:51468  borrowed - Math.min(borrowed, supplied) */
      tag_158
      jump	// in
    tag_3336:
        /* "test/solidity/Protocol.t.sol":51401:51468  uint256 memBackupSupplied = borrowed - Math.min(borrowed, supplied) */
      swap1
      pop
        /* "test/solidity/Protocol.t.sol":51478:51500  memBackupSupplied != 0 */
      dup1
      iszero
        /* "test/solidity/Protocol.t.sol":51474:51818  if (memBackupSupplied != 0) {... */
      tag_3337
      jumpi
        /* "test/solidity/Protocol.t.sol":51532:51616  unassignedEarnings.mulDivDown(block.timestamp - lastAccrual, maturity - lastAccrual) */
      tag_3338
        /* "test/solidity/Protocol.t.sol":51562:51591  block.timestamp - lastAccrual */
      tag_3339
        /* "test/solidity/Protocol.t.sol":51580:51591  lastAccrual */
      dup4
        /* "test/solidity/Protocol.t.sol":51562:51577  block.timestamp */
      timestamp
        /* "test/solidity/Protocol.t.sol":51562:51591  block.timestamp - lastAccrual */
      tag_158
      jump	// in
    tag_3339:
        /* "test/solidity/Protocol.t.sol":51593:51615  maturity - lastAccrual */
      tag_3100
        /* "test/solidity/Protocol.t.sol":51604:51615  lastAccrual */
      dup5
        /* "test/solidity/Protocol.t.sol":51593:51601  maturity */
      dup12
        /* "test/solidity/Protocol.t.sol":51593:51615  maturity - lastAccrual */
      tag_158
      jump	// in
        /* "test/solidity/Protocol.t.sol":51532:51616  unassignedEarnings.mulDivDown(block.timestamp - lastAccrual, maturity - lastAccrual) */
    tag_3338:
        /* "test/solidity/Protocol.t.sol":51510:51616  unassignedEarnings -= unassignedEarnings.mulDivDown(block.timestamp - lastAccrual, maturity - lastAccrual) */
      tag_3341
      swap1
      dup5
      tag_158
      jump	// in
    tag_3341:
      swap3
      pop
        /* "test/solidity/Protocol.t.sol":51632:51717  unassignedEarnings.mulDivDown(Math.min(amount, memBackupSupplied), memBackupSupplied) */
      tag_3342
        /* "test/solidity/Protocol.t.sol":51662:51697  Math.min(amount, memBackupSupplied) */
      tag_3343
        /* "test/solidity/Protocol.t.sol":51671:51677  amount */
      dup9
        /* "test/solidity/Protocol.t.sol":51679:51696  memBackupSupplied */
      dup4
        /* "test/solidity/Protocol.t.sol":51662:51670  Math.min */
      tag_791
        /* "test/solidity/Protocol.t.sol":51662:51697  Math.min(amount, memBackupSupplied) */
      jump	// in
    tag_3343:
        /* "test/solidity/Protocol.t.sol":51632:51650  unassignedEarnings */
      dup5
      swap1
        /* "test/solidity/Protocol.t.sol":51699:51716  memBackupSupplied */
      dup4
        /* "test/solidity/Protocol.t.sol":51632:51661  unassignedEarnings.mulDivDown */
      tag_2085
        /* "test/solidity/Protocol.t.sol":51632:51717  unassignedEarnings.mulDivDown(Math.min(amount, memBackupSupplied), memBackupSupplied) */
      jump	// in
    tag_3342:
        /* "test/solidity/Protocol.t.sol":51624:51717  yield = unassignedEarnings.mulDivDown(Math.min(amount, memBackupSupplied), memBackupSupplied) */
      swap6
      pop
        /* "test/solidity/Protocol.t.sol":51725:51742  uint256 backupFee */
      0x00
        /* "test/solidity/Protocol.t.sol":51745:51785  yield.mulWadDown(market.backupFeeRate()) */
      tag_3344
        /* "test/solidity/Protocol.t.sol":51762:51768  market */
      dup11
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":51762:51782  market.backupFeeRate */
      and
      0xa1e8f02b
        /* "test/solidity/Protocol.t.sol":51762:51784  market.backupFeeRate() */
      mload(0x40)
      dup2
      0xffffffff
      and
      0xe0
      shl
      dup2
      mstore
      0x04
      add
      0x20
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      dup7
      gas
      staticcall
      iszero
      dup1
      iszero
      tag_3346
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_3346:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      dup2
      add
      swap1
      tag_3347
      swap2
      swap1
      tag_212
      jump	// in
    tag_3347:
        /* "test/solidity/Protocol.t.sol":51745:51750  yield */
      dup9
      swap1
        /* "test/solidity/Protocol.t.sol":51745:51761  yield.mulWadDown */
      tag_1375
        /* "test/solidity/Protocol.t.sol":51745:51785  yield.mulWadDown(market.backupFeeRate()) */
      jump	// in
    tag_3344:
        /* "test/solidity/Protocol.t.sol":51725:51785  uint256 backupFee = yield.mulWadDown(market.backupFeeRate()) */
      swap1
      pop
        /* "test/solidity/Protocol.t.sol":51793:51811  yield -= backupFee */
      tag_3348
        /* "test/solidity/Protocol.t.sol":51725:51785  uint256 backupFee = yield.mulWadDown(market.backupFeeRate()) */
      dup2
        /* "test/solidity/Protocol.t.sol":51793:51811  yield -= backupFee */
      dup9
      tag_158
      jump	// in
    tag_3348:
      swap7
      pop
        /* "test/solidity/Protocol.t.sol":51502:51818  {... */
      pop
        /* "test/solidity/Protocol.t.sol":51474:51818  if (memBackupSupplied != 0) {... */
    tag_3337:
        /* "test/solidity/Protocol.t.sol":51274:51822  {... */
      pop
      pop
      pop
      pop
      pop
        /* "test/solidity/Protocol.t.sol":51158:51822  function previewDepositYield(Market market, uint256 maturity, uint256 amount) internal view returns (uint256 yield) {... */
      swap4
      swap3
      pop
      pop
      pop
      jump	// out
        /* "lib/forge-std/lib/ds-test/src/test.sol":15921:16180  function assertLe(uint a, uint b) internal {... */
    tag_2369:
        /* "lib/forge-std/lib/ds-test/src/test.sol":15982:15983  b */
      dup1
        /* "lib/forge-std/lib/ds-test/src/test.sol":15978:15979  a */
      dup3
        /* "lib/forge-std/lib/ds-test/src/test.sol":15978:15983  a > b */
      gt
        /* "lib/forge-std/lib/ds-test/src/test.sol":15974:16174  if (a > b) {... */
      iszero
      tag_2997
      jumpi
      0x00
      dup1
      mload
      0x20
      data_0ce61cd341b8163eeea68ffa812723a7ddba7801eab724a90491dada6fa91900
      dup4
      codecopy
      dup2
      mload
      swap2
      mstore
        /* "lib/forge-std/lib/ds-test/src/test.sol":16004:16045  log("Error: a <= b not satisfied [uint]") */
      mload(0x40)
      tag_3351
      swap1
        /* "#utility.yul":46588:46590   */
      0x20
        /* "#utility.yul":46570:46591   */
      dup1
      dup3
      mstore
        /* "#utility.yul":46627:46629   */
      0x22
        /* "#utility.yul":46607:46625   */
      swap1
      dup3
      add
        /* "#utility.yul":46600:46630   */
      mstore
        /* "#utility.yul":46666:46700   */
      0x4572726f723a2061203c3d2062206e6f7420736174697366696564205b75696e
        /* "#utility.yul":46661:46663   */
      0x40
        /* "#utility.yul":46646:46664   */
      dup3
      add
        /* "#utility.yul":46639:46701   */
      mstore
      shl(0xf0, 0x745d)
        /* "#utility.yul":46732:46734   */
      0x60
        /* "#utility.yul":46717:46735   */
      dup3
      add
        /* "#utility.yul":46710:46742   */
      mstore
        /* "#utility.yul":46774:46777   */
      0x80
        /* "#utility.yul":46759:46778   */
      add
      swap1
        /* "#utility.yul":46386:46784   */
      jump
        /* "lib/forge-std/lib/ds-test/src/test.sol":16004:16045  log("Error: a <= b not satisfied [uint]") */
    tag_3351:
      mload(0x40)
      dup1
      swap2
      sub
      swap1
      log1
        /* "lib/forge-std/lib/ds-test/src/test.sol":16064:16094  log_named_uint("  Value a", a) */
      0x40
      dup1
      mload
        /* "#utility.yul":47001:47022   */
      dup2
      dup2
      mstore
        /* "#utility.yul":47058:47059   */
      0x09
        /* "#utility.yul":47038:47056   */
      dup2
      dup4
      add
        /* "#utility.yul":47031:47060   */
      mstore
      shl(0xb8, 0x202056616c75652061)
        /* "#utility.yul":47091:47093   */
      0x60
        /* "#utility.yul":47076:47094   */
      dup3
      add
        /* "#utility.yul":47069:47108   */
      mstore
        /* "#utility.yul":47175:47179   */
      0x20
        /* "#utility.yul":47160:47180   */
      dup2
      add
        /* "#utility.yul":47153:47189   */
      dup5
      swap1
      mstore
        /* "lib/forge-std/lib/ds-test/src/test.sol":16064:16094  log_named_uint("  Value a", a) */
      swap1
      mload
      0x00
      dup1
      mload
      0x20
      data_e1160fc331ef5f8b3c86b8372ca727c40590de90473ca17e0048eeb4bc27f848
      dup4
      codecopy
      dup2
      mload
      swap2
      mstore
      swap2
      dup2
      swap1
      sub
        /* "#utility.yul":47140:47143   */
      0x80
        /* "lib/forge-std/lib/ds-test/src/test.sol":16064:16094  log_named_uint("  Value a", a) */
      add
      swap1
      log1
        /* "lib/forge-std/lib/ds-test/src/test.sol":16113:16143  log_named_uint("  Value b", b) */
      0x40
      dup1
      mload
        /* "#utility.yul":47412:47433   */
      dup2
      dup2
      mstore
        /* "#utility.yul":47469:47470   */
      0x09
        /* "#utility.yul":47449:47467   */
      swap2
      dup2
      add
        /* "#utility.yul":47442:47471   */
      swap2
      swap1
      swap2
      mstore
      shl(0xb9, 0x10102b30b63ab29031)
        /* "#utility.yul":47502:47504   */
      0x60
        /* "#utility.yul":47487:47505   */
      dup3
      add
        /* "#utility.yul":47480:47519   */
      mstore
        /* "#utility.yul":47586:47590   */
      0x20
        /* "#utility.yul":47571:47591   */
      dup2
      add
        /* "#utility.yul":47564:47600   */
      dup3
      swap1
      mstore
      0x00
      dup1
      mload
      0x20
      data_e1160fc331ef5f8b3c86b8372ca727c40590de90473ca17e0048eeb4bc27f848
      dup4
      codecopy
      dup2
      mload
      swap2
      mstore
        /* "lib/forge-std/lib/ds-test/src/test.sol":16113:16143  log_named_uint("  Value b", b) */
      swap1
        /* "#utility.yul":47551:47554   */
      0x80
        /* "#utility.yul":47536:47555   */
      add
        /* "lib/forge-std/lib/ds-test/src/test.sol":16113:16143  log_named_uint("  Value b", b) */
      tag_2995
        /* "#utility.yul":47200:47606   */
      jump
        /* "lib/forge-std/lib/ds-test/src/test.sol":11955:12214  function assertGe(uint a, uint b) internal {... */
    tag_2440:
        /* "lib/forge-std/lib/ds-test/src/test.sol":12016:12017  b */
      dup1
        /* "lib/forge-std/lib/ds-test/src/test.sol":12012:12013  a */
      dup3
        /* "lib/forge-std/lib/ds-test/src/test.sol":12012:12017  a < b */
      lt
        /* "lib/forge-std/lib/ds-test/src/test.sol":12008:12208  if (a < b) {... */
      iszero
      tag_2997
      jumpi
      0x00
      dup1
      mload
      0x20
      data_0ce61cd341b8163eeea68ffa812723a7ddba7801eab724a90491dada6fa91900
      dup4
      codecopy
      dup2
      mload
      swap2
      mstore
        /* "lib/forge-std/lib/ds-test/src/test.sol":12038:12079  log("Error: a >= b not satisfied [uint]") */
      mload(0x40)
      tag_3351
      swap1
        /* "#utility.yul":47813:47815   */
      0x20
        /* "#utility.yul":47795:47816   */
      dup1
      dup3
      mstore
        /* "#utility.yul":47852:47854   */
      0x22
        /* "#utility.yul":47832:47850   */
      swap1
      dup3
      add
        /* "#utility.yul":47825:47855   */
      mstore
        /* "#utility.yul":47891:47925   */
      0x4572726f723a2061203e3d2062206e6f7420736174697366696564205b75696e
        /* "#utility.yul":47886:47888   */
      0x40
        /* "#utility.yul":47871:47889   */
      dup3
      add
        /* "#utility.yul":47864:47926   */
      mstore
      shl(0xf0, 0x745d)
        /* "#utility.yul":47957:47959   */
      0x60
        /* "#utility.yul":47942:47960   */
      dup3
      add
        /* "#utility.yul":47935:47967   */
      mstore
        /* "#utility.yul":47999:48002   */
      0x80
        /* "#utility.yul":47984:48003   */
      add
      swap1
        /* "#utility.yul":47611:48009   */
      jump
        /* "node_modules/@openzeppelin/contracts/utils/math/Math.sol":413:517  function max(uint256 a, uint256 b) internal pure returns (uint256) {... */
    tag_2557:
        /* "node_modules/@openzeppelin/contracts/utils/math/Math.sol":471:478  uint256 */
      0x00
        /* "node_modules/@openzeppelin/contracts/utils/math/Math.sol":501:502  b */
      dup2
        /* "node_modules/@openzeppelin/contracts/utils/math/Math.sol":497:498  a */
      dup4
        /* "node_modules/@openzeppelin/contracts/utils/math/Math.sol":497:502  a > b */
      gt
        /* "node_modules/@openzeppelin/contracts/utils/math/Math.sol":497:510  a > b ? a : b */
      tag_3103
      jumpi
        /* "node_modules/@openzeppelin/contracts/utils/math/Math.sol":509:510  b */
      dup2
        /* "node_modules/@openzeppelin/contracts/utils/math/Math.sol":497:510  a > b ? a : b */
      jump(tag_3096)
        /* "lib/forge-std/lib/ds-test/src/test.sol":10234:10412  function assertGt(uint a, uint b, string memory err) internal {... */
    tag_2693:
        /* "lib/forge-std/lib/ds-test/src/test.sol":10315:10316  b */
      dup2
        /* "lib/forge-std/lib/ds-test/src/test.sol":10310:10311  a */
      dup4
        /* "lib/forge-std/lib/ds-test/src/test.sol":10310:10316  a <= b */
      gt
        /* "lib/forge-std/lib/ds-test/src/test.sol":10306:10406  if (a <= b) {... */
      tag_456
      jumpi
        /* "lib/forge-std/lib/ds-test/src/test.sol":10337:10367  log_named_string("Error", err) */
      0x280f4446b28a1372417dda658d30b95b2992b12ac9c7f378535f29a97acf3583
        /* "lib/forge-std/lib/ds-test/src/test.sol":10363:10366  err */
      dup2
        /* "lib/forge-std/lib/ds-test/src/test.sol":10337:10367  log_named_string("Error", err) */
      mload(0x40)
      tag_3370
      swap2
      swap1
      tag_3327
      jump	// in
    tag_3370:
      mload(0x40)
      dup1
      swap2
      sub
      swap1
      log1
        /* "lib/forge-std/lib/ds-test/src/test.sol":10381:10395  assertGt(a, b) */
      tag_456
        /* "lib/forge-std/lib/ds-test/src/test.sol":10390:10391  a */
      dup4
        /* "lib/forge-std/lib/ds-test/src/test.sol":10393:10394  b */
      dup4
        /* "lib/forge-std/lib/ds-test/src/test.sol":10381:10389  assertGt */
      tag_3372
        /* "lib/forge-std/lib/ds-test/src/test.sol":10381:10395  assertGt(a, b) */
      jump	// in
        /* "lib/forge-std/src/StdAssertions.sol":3504:3974  function assertApproxEqAbs(uint256 a, uint256 b, uint256 maxDelta) internal virtual {... */
    tag_2877:
        /* "lib/forge-std/src/StdAssertions.sol":3598:3611  uint256 delta */
      0x00
        /* "lib/forge-std/src/StdAssertions.sol":3614:3633  stdMath.delta(a, b) */
      tag_3374
        /* "lib/forge-std/src/StdAssertions.sol":3628:3629  a */
      dup5
        /* "lib/forge-std/src/StdAssertions.sol":3631:3632  b */
      dup5
        /* "lib/forge-std/src/StdAssertions.sol":3614:3627  stdMath.delta */
      tag_3375
        /* "lib/forge-std/src/StdAssertions.sol":3614:3633  stdMath.delta(a, b) */
      jump	// in
    tag_3374:
        /* "lib/forge-std/src/StdAssertions.sol":3598:3633  uint256 delta = stdMath.delta(a, b) */
      swap1
      pop
        /* "lib/forge-std/src/StdAssertions.sol":3656:3664  maxDelta */
      dup2
        /* "lib/forge-std/src/StdAssertions.sol":3648:3653  delta */
      dup2
        /* "lib/forge-std/src/StdAssertions.sol":3648:3664  delta > maxDelta */
      gt
        /* "lib/forge-std/src/StdAssertions.sol":3644:3968  if (delta > maxDelta) {... */
      iszero
      tag_3010
      jumpi
      0x00
      dup1
      mload
      0x20
      data_0ce61cd341b8163eeea68ffa812723a7ddba7801eab724a90491dada6fa91900
      dup4
      codecopy
      dup2
      mload
      swap2
      mstore
        /* "lib/forge-std/src/StdAssertions.sol":3685:3726  log("Error: a ~= b not satisfied [uint]") */
      mload(0x40)
      tag_3377
      swap1
        /* "#utility.yul":48216:48218   */
      0x20
        /* "#utility.yul":48198:48219   */
      dup1
      dup3
      mstore
        /* "#utility.yul":48255:48257   */
      0x22
        /* "#utility.yul":48235:48253   */
      swap1
      dup3
      add
        /* "#utility.yul":48228:48258   */
      mstore
        /* "#utility.yul":48294:48328   */
      0x4572726f723a2061207e3d2062206e6f7420736174697366696564205b75696e
        /* "#utility.yul":48289:48291   */
      0x40
        /* "#utility.yul":48274:48292   */
      dup3
      add
        /* "#utility.yul":48267:48329   */
      mstore
      shl(0xf0, 0x745d)
        /* "#utility.yul":48360:48362   */
      0x60
        /* "#utility.yul":48345:48363   */
      dup3
      add
        /* "#utility.yul":48338:48370   */
      mstore
        /* "#utility.yul":48402:48405   */
      0x80
        /* "#utility.yul":48387:48406   */
      add
      swap1
        /* "#utility.yul":48014:48412   */
      jump
        /* "lib/forge-std/src/StdAssertions.sol":3685:3726  log("Error: a ~= b not satisfied [uint]") */
    tag_3377:
      mload(0x40)
      dup1
      swap2
      sub
      swap1
      log1
        /* "lib/forge-std/src/StdAssertions.sol":3745:3776  log_named_uint("      Left", a) */
      0x40
      dup1
      mload
        /* "#utility.yul":44230:44251   */
      dup2
      dup2
      mstore
        /* "#utility.yul":44287:44289   */
      0x0a
        /* "#utility.yul":44267:44285   */
      dup2
      dup4
      add
        /* "#utility.yul":44260:44290   */
      mstore
      shl(0xb2, 0x0808080808081319599d)
        /* "#utility.yul":44321:44323   */
      0x60
        /* "#utility.yul":44306:44324   */
      dup3
      add
        /* "#utility.yul":44299:44339   */
      mstore
        /* "#utility.yul":44406:44410   */
      0x20
        /* "#utility.yul":44391:44411   */
      dup2
      add
        /* "#utility.yul":44384:44420   */
      dup7
      swap1
      mstore
        /* "lib/forge-std/src/StdAssertions.sol":3745:3776  log_named_uint("      Left", a) */
      swap1
      mload
      0x00
      dup1
      mload
      0x20
      data_e1160fc331ef5f8b3c86b8372ca727c40590de90473ca17e0048eeb4bc27f848
      dup4
      codecopy
      dup2
      mload
      swap2
      mstore
      swap2
      dup2
      swap1
      sub
        /* "#utility.yul":44371:44374   */
      0x80
        /* "lib/forge-std/src/StdAssertions.sol":3745:3776  log_named_uint("      Left", a) */
      add
      swap1
      log1
        /* "lib/forge-std/src/StdAssertions.sol":3795:3826  log_named_uint("     Right", b) */
      0x40
      dup1
      mload
        /* "#utility.yul":44643:44664   */
      dup2
      dup2
      mstore
        /* "#utility.yul":44700:44702   */
      0x0a
        /* "#utility.yul":44680:44698   */
      dup2
      dup4
      add
        /* "#utility.yul":44673:44703   */
      mstore
      shl(0xb2, 0x0808080808149a59da1d)
        /* "#utility.yul":44734:44736   */
      0x60
        /* "#utility.yul":44719:44737   */
      dup3
      add
        /* "#utility.yul":44712:44752   */
      mstore
        /* "#utility.yul":44819:44823   */
      0x20
        /* "#utility.yul":44804:44824   */
      dup2
      add
        /* "#utility.yul":44797:44833   */
      dup6
      swap1
      mstore
        /* "lib/forge-std/src/StdAssertions.sol":3795:3826  log_named_uint("     Right", b) */
      swap1
      mload
      0x00
      dup1
      mload
      0x20
      data_e1160fc331ef5f8b3c86b8372ca727c40590de90473ca17e0048eeb4bc27f848
      dup4
      codecopy
      dup2
      mload
      swap2
      mstore
      swap2
      dup2
      swap1
      sub
        /* "#utility.yul":44784:44787   */
      0x80
        /* "lib/forge-std/src/StdAssertions.sol":3795:3826  log_named_uint("     Right", b) */
      add
      swap1
      log1
        /* "lib/forge-std/src/StdAssertions.sol":3845:3883  log_named_uint(" Max Delta", maxDelta) */
      0x40
      dup1
      mload
        /* "#utility.yul":48629:48650   */
      dup2
      dup2
      mstore
        /* "#utility.yul":48686:48688   */
      0x0a
        /* "#utility.yul":48666:48684   */
      dup2
      dup4
      add
        /* "#utility.yul":48659:48689   */
      mstore
      shl(0xb0, 0x204d61782044656c7461)
        /* "#utility.yul":48720:48722   */
      0x60
        /* "#utility.yul":48705:48723   */
      dup3
      add
        /* "#utility.yul":48698:48738   */
      mstore
        /* "#utility.yul":48805:48809   */
      0x20
        /* "#utility.yul":48790:48810   */
      dup2
      add
        /* "#utility.yul":48783:48819   */
      dup5
      swap1
      mstore
        /* "lib/forge-std/src/StdAssertions.sol":3845:3883  log_named_uint(" Max Delta", maxDelta) */
      swap1
      mload
      0x00
      dup1
      mload
      0x20
      data_e1160fc331ef5f8b3c86b8372ca727c40590de90473ca17e0048eeb4bc27f848
      dup4
      codecopy
      dup2
      mload
      swap2
      mstore
      swap2
      dup2
      swap1
      sub
        /* "#utility.yul":48770:48773   */
      0x80
        /* "lib/forge-std/src/StdAssertions.sol":3845:3883  log_named_uint(" Max Delta", maxDelta) */
      add
      swap1
      log1
        /* "lib/forge-std/src/StdAssertions.sol":3902:3937  log_named_uint("     Delta", delta) */
      0x40
      dup1
      mload
        /* "#utility.yul":49042:49063   */
      dup2
      dup2
      mstore
        /* "#utility.yul":49099:49101   */
      0x0a
        /* "#utility.yul":49079:49097   */
      dup2
      dup4
      add
        /* "#utility.yul":49072:49102   */
      mstore
      shl(0xb0, 0x202020202044656c7461)
        /* "#utility.yul":49133:49135   */
      0x60
        /* "#utility.yul":49118:49136   */
      dup3
      add
        /* "#utility.yul":49111:49151   */
      mstore
        /* "#utility.yul":49218:49222   */
      0x20
        /* "#utility.yul":49203:49223   */
      dup2
      add
        /* "#utility.yul":49196:49232   */
      dup4
      swap1
      mstore
        /* "lib/forge-std/src/StdAssertions.sol":3902:3937  log_named_uint("     Delta", delta) */
      swap1
      mload
      0x00
      dup1
      mload
      0x20
      data_e1160fc331ef5f8b3c86b8372ca727c40590de90473ca17e0048eeb4bc27f848
      dup4
      codecopy
      dup2
      mload
      swap2
      mstore
      swap2
      dup2
      swap1
      sub
        /* "#utility.yul":49183:49186   */
      0x80
        /* "lib/forge-std/src/StdAssertions.sol":3902:3937  log_named_uint("     Delta", delta) */
      add
      swap1
      log1
        /* "lib/forge-std/src/StdAssertions.sol":3951:3957  fail() */
      tag_3010
        /* "lib/forge-std/lib/ds-test/src/test.sol":2409:2841  function fail() internal virtual {... */
    tag_2998:
      0x00
      dup1
      mload
      0x20
      data_1a390d6c2ee89e11d2dffeb86f753e43f966d02cbb0b3bd3e6e1cdf50245ef50
      dup4
      codecopy
      dup2
      mload
      swap2
      mstore
        /* "lib/forge-std/lib/ds-test/src/test.sol":2985:3040  extcodesize(0x7109709ECfa91a80626fF3989D68f67F5b1DD12D) */
      extcodesize
        /* "lib/forge-std/lib/ds-test/src/test.sol":3066:3082  hevmCodeSize > 0 */
      iszero
        /* "lib/forge-std/lib/ds-test/src/test.sol":2452:2811  if (hasHEVMContext()) {... */
      tag_3388
      jumpi
        /* "lib/forge-std/lib/ds-test/src/test.sol":2652:2719  abi.encode(HEVM_ADDRESS, bytes32("failed"), bytes32(uint256(0x01))) */
      0x40
      dup1
      mload
      0x00
      dup1
      mload
      0x20
      data_1a390d6c2ee89e11d2dffeb86f753e43f966d02cbb0b3bd3e6e1cdf50245ef50
      dup4
      codecopy
      dup2
      mload
      swap2
      mstore
      0x20
      dup3
      add
        /* "#utility.yul":27299:27350   */
      dup2
      swap1
      mstore
      shl(0xd2, 0x19985a5b1959)
        /* "#utility.yul":27366:27384   */
      swap3
      dup3
      add
        /* "#utility.yul":27359:27393   */
      swap3
      swap1
      swap3
      mstore
        /* "lib/forge-std/lib/ds-test/src/test.sol":2712:2716  0x01 */
      0x01
        /* "#utility.yul":27409:27427   */
      0x60
      dup3
      add
        /* "#utility.yul":27402:27436   */
      mstore
        /* "lib/forge-std/lib/ds-test/src/test.sol":2489:2500  bool status */
      0x00
      swap2
        /* "lib/forge-std/lib/ds-test/src/test.sol":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */
      swap1
        /* "lib/forge-std/lib/ds-test/src/test.sol":2586:2629  keccak256("store(address,bytes32,bytes32)") */
      0x70ca10bbd0dbfd9020a9f4b13402c16cb120705e0d1c0aeab10fa353ae586fc4
      swap1
        /* "#utility.yul":27272:27290   */
      0x80
      add
        /* "lib/forge-std/lib/ds-test/src/test.sol":2652:2719  abi.encode(HEVM_ADDRESS, bytes32("failed"), bytes32(uint256(0x01))) */
      0x40
      dup1
      mload
      not(0x1f)
      dup2
      dup5
      sub
      add
      dup2
      mstore
      swap1
      dup3
      swap1
      mstore
        /* "lib/forge-std/lib/ds-test/src/test.sol":2541:2737  abi.encodePacked(... */
      tag_3391
      swap3
      swap2
        /* "lib/forge-std/lib/ds-test/src/test.sol":2652:2719  abi.encode(HEVM_ADDRESS, bytes32("failed"), bytes32(uint256(0x01))) */
      0x20
        /* "lib/forge-std/lib/ds-test/src/test.sol":2541:2737  abi.encodePacked(... */
      add
      tag_2258
      jump	// in
    tag_3391:
      0x40
      dup1
      mload
      not(0x1f)
      dup2
      dup5
      sub
      add
      dup2
      mstore
      swap1
      dup3
      swap1
      mstore
        /* "lib/forge-std/lib/ds-test/src/test.sol":2506:2751  HEVM_ADDRESS.call(... */
      tag_3392
      swap2
      tag_2260
      jump	// in
    tag_3392:
      0x00
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      0x00
      dup7
      gas
      call
      swap2
      pop
      pop
      returndatasize
      dup1
      0x00
      dup2
      eq
      tag_3395
      jumpi
      mload(0x40)
      swap2
      pop
      and(add(returndatasize, 0x3f), not(0x1f))
      dup3
      add
      0x40
      mstore
      returndatasize
      dup3
      mstore
      returndatasize
      0x00
      0x20
      dup5
      add
      returndatacopy
      jump(tag_3394)
    tag_3395:
      0x60
      swap2
      pop
    tag_3394:
      pop
      pop
      pop
      pop
        /* "lib/forge-std/lib/ds-test/src/test.sol":2452:2811  if (hasHEVMContext()) {... */
    tag_3388:
        /* "lib/forge-std/lib/ds-test/src/test.sol":2820:2827  _failed */
      0x00
        /* "lib/forge-std/lib/ds-test/src/test.sol":2820:2834  _failed = true */
      dup1
      sload
      not(0xff00)
      and
      0x0100
      or
      swap1
      sstore
        /* "lib/forge-std/lib/ds-test/src/test.sol":2409:2841  function fail() internal virtual {... */
      jump	// out
        /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":1487:4590  function expWad(int256 x) internal pure returns (int256 r) {... */
    tag_3088:
        /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":1536:1544  int256 r */
      0x00
      not(0x0248ce36a70cb26b3e)
        /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":1713:1714  x */
      dup3
        /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":1713:1739  x <= -42139678854452767551 */
      sgt
        /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":1709:1749  if (x <= -42139678854452767551) return 0 */
      tag_3397
      jumpi
      pop
        /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":1748:1749  0 */
      0x00
      swap2
        /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":1487:4590  function expWad(int256 x) internal pure returns (int256 r) {... */
      swap1
      pop
      jump	// out
        /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":1709:1749  if (x <= -42139678854452767551) return 0 */
    tag_3397:
        /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":1948:1969  135305999368893231589 */
      0x0755bf798b4a1bf1e5
        /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":1943:1944  x */
      dup3
        /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":1943:1969  x >= 135305999368893231589 */
      slt
        /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":1939:1993  if (x >= 135305999368893231589) revert("EXP_OVERFLOW") */
      tag_3398
      jumpi
        /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":1971:1993  revert("EXP_OVERFLOW") */
      0x00
      dup1
      revert
        /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":1939:1993  if (x >= 135305999368893231589) revert("EXP_OVERFLOW") */
    tag_3398:
        /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":2266:2271  5**18 */
      0x03782dace9d9
        /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":2260:2262  78 */
      0x4e
        /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":2255:2262  x << 78 */
      dup4
      swap1
      shl
        /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":2254:2271  (x << 78) / 5**18 */
      sdiv
      swap2
      pop
        /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":2535:2543  int256 k */
      0x00
        /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":2601:2603  96 */
      0x60
        /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":2559:2588  54916777467707473351141471128 */
      0xb17217f7d1cf79abc9e3b398
        /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":2548:2555  x << 96 */
      dup5
      dup3
      shl
        /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":2547:2588  (x << 96) / 54916777467707473351141471128 */
      sdiv
      shl(0x5f, 0x01)
        /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":2547:2596  (x << 96) / 54916777467707473351141471128 + 2**95 */
      add
        /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":2546:2603  ((x << 96) / 54916777467707473351141471128 + 2**95) >> 96 */
      swap1
      sar
        /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":2629:2658  54916777467707473351141471128 */
      0xb17217f7d1cf79abc9e3b398
        /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":2625:2658  k * 54916777467707473351141471128 */
      dup2
      mul
        /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":2621:2658  x - k * 54916777467707473351141471128 */
      swap1
      swap4
      sub
      not(0x240c330e9fb2d9cbaf0fd5aafb)
        /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":3300:3335  x - 2855989394907223263936484059900 */
      dup2
      add
        /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":3355:3360  q * x */
      dup2
      mul
        /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":2935:2937  96 */
      0x60
        /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":3354:3367  (q * x) >> 96 */
      swap1
      dup2
      sar
        /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":3371:3403  50020603652535783019961831881945 */
      0x0277594991cfc85f6e2461837cd9
        /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":3353:3403  ((q * x) >> 96) + 50020603652535783019961831881945 */
      add
        /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":3423:3428  q * x */
      dup3
      mul
        /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":3422:3435  (q * x) >> 96 */
      dup2
      sar
      not(0x1a521255e34f6a5061b25ef1c9c3)
        /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":3421:3472  ((q * x) >> 96) - 533845033583426703283633433725380 */
      add
        /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":3492:3497  q * x */
      dup3
      mul
        /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":3491:3504  (q * x) >> 96 */
      dup2
      sar
        /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":3508:3542  3604857256930695427073651918091429 */
      0xb1bbb201f443cf962f1a1d3db4a5
        /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":3490:3542  ((q * x) >> 96) + 3604857256930695427073651918091429 */
      add
        /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":3562:3567  q * x */
      dup3
      mul
        /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":3561:3574  (q * x) >> 96 */
      dup2
      sar
      not(0x02c72388d9f74f51a9331fed693f14)
        /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":3560:3613  ((q * x) >> 96) - 14423608567350463180887372962807573 */
      add
        /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":3633:3638  q * x */
      dup3
      mul
        /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":3632:3645  (q * x) >> 96 */
      dup2
      sar
        /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":3649:3684  26449188498355588339934803723976023 */
      0x05180bb14799ab47a8a8cb2a527d57
        /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":3631:3684  ((q * x) >> 96) + 26449188498355588339934803723976023 */
      add
        /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":2941:2973  57155421227552351082224309758442 */
      0x02d16720577bd19bf614176fe9ea
        /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":2874:2905  1346386616545796478920950773328 */
      0x10fe68e7fd37d0007b713f7650
        /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":2870:2905  x + 1346386616545796478920950773328 */
      dup5
      add
        /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":2925:2930  y * x */
      dup5
      mul
        /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":2924:2937  (y * x) >> 96 */
      dup4
      sar
        /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":2923:2973  ((y * x) >> 96) + 57155421227552351082224309758442 */
      swap1
      dup2
      add
        /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":2998:3003  y + x */
      swap1
      dup5
      add
      not(0x01d3967ed30fc4f89c02bab57081)
        /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":2998:3038  y + x - 94201549194550492254356042504812 */
      add
        /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":3058:3063  p * y */
      mul
        /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":3057:3070  (p * y) >> 96 */
      swap1
      swap2
      sar
        /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":3074:3109  28719021644029726153956944680412240 */
      0x0587f503bb6ea29d25fcb740196450
        /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":3056:3109  ((p * y) >> 96) + 28719021644029726153956944680412240 */
      add
        /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":3127:3132  p * x */
      swap1
      swap2
      mul
      shl(0x62, 0x360d7aeea093263ecc6e0ecb2917)
        /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":3127:3177  p * x + (4385272521454847904659076985693276 << 96) */
      add
        /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":4002:4012  sdiv(p, q) */
      sdiv
        /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":4502:4551  3822833074963236453042738258902158003155416615667 */
      0x029d9dc38563c32e5c2f6dc192ee70ef65f9978af3
        /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":4489:4551  uint256(r) * 3822833074963236453042738258902158003155416615667 */
      mul
        /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":4564:4567  195 */
      0xc3
        /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":4564:4571  195 - k */
      swap4
      swap1
      swap4
      sub
        /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":4488:4572  (uint256(r) * 3822833074963236453042738258902158003155416615667) >> uint256(195 - k) */
      swap3
      swap1
      swap3
      shr
      swap3
      swap2
      pop
      pop
        /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":1487:4590  function expWad(int256 x) internal pure returns (int256 r) {... */
      jump	// out
        /* "test/solidity/Protocol.t.sol":47583:47869  function previewAccountSnapshot(... */
    tag_3134:
        /* "test/solidity/Protocol.t.sol":47734:47741  uint256 */
      0x00
        /* "test/solidity/Protocol.t.sol":47743:47750  uint256 */
      dup1
        /* "test/solidity/Protocol.t.sol":47766:47805  previewConvertToAssets(market, account) */
      tag_3404
        /* "test/solidity/Protocol.t.sol":47789:47795  market */
      dup7
        /* "test/solidity/Protocol.t.sol":47797:47804  account */
      dup7
        /* "test/solidity/Protocol.t.sol":47766:47788  previewConvertToAssets */
      tag_3405
        /* "test/solidity/Protocol.t.sol":47766:47805  previewConvertToAssets(market, account) */
      jump	// in
    tag_3404:
        /* "test/solidity/Protocol.t.sol":47807:47863  previewDebt(market, account, borrowAssets, borrowShares) */
      tag_3406
        /* "test/solidity/Protocol.t.sol":47819:47825  market */
      dup8
        /* "test/solidity/Protocol.t.sol":47827:47834  account */
      dup8
        /* "test/solidity/Protocol.t.sol":47836:47848  borrowAssets */
      dup8
        /* "test/solidity/Protocol.t.sol":47850:47862  borrowShares */
      dup8
        /* "test/solidity/Protocol.t.sol":47807:47818  previewDebt */
      tag_3407
        /* "test/solidity/Protocol.t.sol":47807:47863  previewDebt(market, account, borrowAssets, borrowShares) */
      jump	// in
    tag_3406:
        /* "test/solidity/Protocol.t.sol":47758:47864  return (previewConvertToAssets(market, account), previewDebt(market, account, borrowAssets, borrowShares)) */
      swap2
      pop
      swap2
      pop
        /* "test/solidity/Protocol.t.sol":47583:47869  function previewAccountSnapshot(... */
      swap5
      pop
      swap5
      swap3
      pop
      pop
      pop
      jump	// out
        /* "test/solidity/Protocol.t.sol":43076:43729  function previewBackupDebtReduction(... */
    tag_3261:
        /* "test/solidity/Protocol.t.sol":43226:43233  uint256 */
      0x00
        /* "test/solidity/Protocol.t.sol":43241:43274  FixedLib.Position memory position */
      tag_3409
      mload(0x40)
      dup1
      0x40
      add
      0x40
      mstore
      dup1
      0x00
      dup2
      mstore
      0x20
      add
      0x00
      dup2
      mstore
      pop
      swap1
      jump
    tag_3409:
        /* "test/solidity/Protocol.t.sol":43280:43305  FixedLib.Pool memory pool */
      tag_3410
      mload(0x40)
      dup1
      0x80
      add
      0x40
      mstore
      dup1
      0x00
      dup2
      mstore
      0x20
      add
      0x00
      dup2
      mstore
      0x20
      add
      0x00
      dup2
      mstore
      0x20
      add
      0x00
      dup2
      mstore
      pop
      swap1
      jump
    tag_3410:
        /* "test/solidity/Protocol.t.sol":43349:43376  market.fixedPools(maturity) */
      mload(0x40)
      shl(0xe0, 0x4e7c5059)
      dup2
      mstore
      0x04
      dup2
      add
        /* "#utility.yul":10439:10464   */
      dup7
      swap1
      mstore
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":43349:43366  market.fixedPools */
      dup9
      and
      swap1
      0x4e7c5059
      swap1
        /* "#utility.yul":10412:10430   */
      0x24
      add
        /* "test/solidity/Protocol.t.sol":43349:43376  market.fixedPools(maturity) */
      0x80
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      dup7
      gas
      staticcall
      iszero
      dup1
      iszero
      tag_3413
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_3413:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      dup2
      add
      swap1
      tag_3414
      swap2
      swap1
      tag_730
      jump	// in
    tag_3414:
      pop
      pop
        /* "test/solidity/Protocol.t.sol":43328:43341  pool.supplied */
      0x20
      dup4
      add
        /* "test/solidity/Protocol.t.sol":43312:43376  (pool.borrowed, pool.supplied, , ) = market.fixedPools(maturity) */
      mstore
      dup2
      mstore
        /* "test/solidity/Protocol.t.sol":43419:43465  market.fixedBorrowPositions(maturity, account) */
      mload(0x40)
      shl(0xe0, 0xd2681a0b)
      dup2
      mstore
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":43419:43446  market.fixedBorrowPositions */
      dup9
      and
      swap1
      0xd2681a0b
      swap1
        /* "test/solidity/Protocol.t.sol":43419:43465  market.fixedBorrowPositions(maturity, account) */
      tag_3415
      swap1
        /* "test/solidity/Protocol.t.sol":43447:43455  maturity */
      dup9
      swap1
        /* "test/solidity/Protocol.t.sol":43457:43464  account */
      dup11
      swap1
        /* "test/solidity/Protocol.t.sol":43419:43465  market.fixedBorrowPositions(maturity, account) */
      0x04
      add
      tag_555
      jump	// in
    tag_3415:
      0x40
      dup1
      mload
      dup1
      dup4
      sub
      dup2
      dup7
      gas
      staticcall
      iszero
      dup1
      iszero
      tag_3417
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_3417:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      dup2
      add
      swap1
      tag_3418
      swap2
      swap1
      tag_203
      jump	// in
    tag_3418:
        /* "test/solidity/Protocol.t.sol":43403:43415  position.fee */
      0x20
      dup5
      add
        /* "test/solidity/Protocol.t.sol":43382:43465  (position.principal, position.fee) = market.fixedBorrowPositions(maturity, account) */
      dup2
      swap1
      mstore
      dup2
      dup5
      mstore
        /* "test/solidity/Protocol.t.sol":43383:43401  position.principal */
      0x00
      swap2
        /* "test/solidity/Protocol.t.sol":43498:43575  debtCovered.mulDivDown(position.principal, position.principal + position.fee) */
      tag_3419
      swap2
        /* "test/solidity/Protocol.t.sol":43541:43574  position.principal + position.fee */
      tag_3420
      swap1
        /* "test/solidity/Protocol.t.sol":43382:43465  (position.principal, position.fee) = market.fixedBorrowPositions(maturity, account) */
      dup3
        /* "test/solidity/Protocol.t.sol":43541:43574  position.principal + position.fee */
      tag_186
      jump	// in
    tag_3420:
        /* "test/solidity/Protocol.t.sol":43498:43509  debtCovered */
      dup8
      swap2
        /* "test/solidity/Protocol.t.sol":43498:43575  debtCovered.mulDivDown(position.principal, position.principal + position.fee) */
      swap1
        /* "test/solidity/Protocol.t.sol":43498:43520  debtCovered.mulDivDown */
      tag_2085
        /* "test/solidity/Protocol.t.sol":43498:43575  debtCovered.mulDivDown(position.principal, position.principal + position.fee) */
      jump	// in
    tag_3419:
        /* "test/solidity/Protocol.t.sol":43597:43610  pool.borrowed */
      dup3
      mload
        /* "test/solidity/Protocol.t.sol":43471:43575  uint256 principalCovered = debtCovered.mulDivDown(position.principal, position.principal + position.fee) */
      swap1
      swap2
      pop
        /* "test/solidity/Protocol.t.sol":43597:43629  pool.borrowed - principalCovered */
      tag_3421
      swap1
        /* "test/solidity/Protocol.t.sol":43471:43575  uint256 principalCovered = debtCovered.mulDivDown(position.principal, position.principal + position.fee) */
      dup3
      swap1
        /* "test/solidity/Protocol.t.sol":43597:43629  pool.borrowed - principalCovered */
      tag_158
      jump	// in
    tag_3421:
        /* "test/solidity/Protocol.t.sol":43581:43629  pool.borrowed = pool.borrowed - principalCovered */
      dup1
      dup4
      mstore
        /* "test/solidity/Protocol.t.sol":43691:43704  pool.supplied */
      0x20
      dup4
      add
      mload
        /* "test/solidity/Protocol.t.sol":43642:43724  Math.min(pool.borrowed - Math.min(pool.borrowed, pool.supplied), principalCovered) */
      tag_3422
      swap2
        /* "test/solidity/Protocol.t.sol":43667:43705  Math.min(pool.borrowed, pool.supplied) */
      tag_3423
      swap2
        /* "test/solidity/Protocol.t.sol":43667:43675  Math.min */
      tag_791
        /* "test/solidity/Protocol.t.sol":43667:43705  Math.min(pool.borrowed, pool.supplied) */
      jump	// in
    tag_3423:
        /* "test/solidity/Protocol.t.sol":43651:43664  pool.borrowed */
      dup4
      mload
        /* "test/solidity/Protocol.t.sol":43651:43705  pool.borrowed - Math.min(pool.borrowed, pool.supplied) */
      tag_2556
      swap2
      swap1
      tag_158
      jump	// in
        /* "test/solidity/Protocol.t.sol":43642:43724  Math.min(pool.borrowed - Math.min(pool.borrowed, pool.supplied), principalCovered) */
    tag_3422:
        /* "test/solidity/Protocol.t.sol":43635:43724  return Math.min(pool.borrowed - Math.min(pool.borrowed, pool.supplied), principalCovered) */
      swap9
        /* "test/solidity/Protocol.t.sol":43076:43729  function previewBackupDebtReduction(... */
      swap8
      pop
      pop
      pop
      pop
      pop
      pop
      pop
      pop
      jump	// out
        /* "lib/forge-std/lib/ds-test/src/test.sol":9970:10229  function assertGt(uint a, uint b) internal {... */
    tag_3372:
        /* "lib/forge-std/lib/ds-test/src/test.sol":10032:10033  b */
      dup1
        /* "lib/forge-std/lib/ds-test/src/test.sol":10027:10028  a */
      dup3
        /* "lib/forge-std/lib/ds-test/src/test.sol":10027:10033  a <= b */
      gt
        /* "lib/forge-std/lib/ds-test/src/test.sol":10023:10223  if (a <= b) {... */
      tag_2997
      jumpi
      0x00
      dup1
      mload
      0x20
      data_0ce61cd341b8163eeea68ffa812723a7ddba7801eab724a90491dada6fa91900
      dup4
      codecopy
      dup2
      mload
      swap2
      mstore
        /* "lib/forge-std/lib/ds-test/src/test.sol":10054:10094  log("Error: a > b not satisfied [uint]") */
      mload(0x40)
      tag_3351
      swap1
        /* "#utility.yul":49795:49797   */
      0x20
        /* "#utility.yul":49777:49798   */
      dup1
      dup3
      mstore
        /* "#utility.yul":49834:49836   */
      0x21
        /* "#utility.yul":49814:49832   */
      swap1
      dup3
      add
        /* "#utility.yul":49807:49837   */
      mstore
        /* "#utility.yul":49873:49907   */
      0x4572726f723a2061203e2062206e6f7420736174697366696564205b75696e74
        /* "#utility.yul":49868:49870   */
      0x40
        /* "#utility.yul":49853:49871   */
      dup3
      add
        /* "#utility.yul":49846:49908   */
      mstore
      shl(0xf8, 0x5d)
        /* "#utility.yul":49939:49941   */
      0x60
        /* "#utility.yul":49924:49942   */
      dup3
      add
        /* "#utility.yul":49917:49948   */
      mstore
        /* "#utility.yul":49980:49983   */
      0x80
        /* "#utility.yul":49965:49984   */
      add
      swap1
        /* "#utility.yul":49593:49990   */
      jump
        /* "lib/forge-std/src/StdMath.sol":521:635  function delta(uint256 a, uint256 b) internal pure returns (uint256) {... */
    tag_3375:
        /* "lib/forge-std/src/StdMath.sol":581:588  uint256 */
      0x00
        /* "lib/forge-std/src/StdMath.sol":611:612  b */
      dup2
        /* "lib/forge-std/src/StdMath.sol":607:608  a */
      dup4
        /* "lib/forge-std/src/StdMath.sol":607:612  a > b */
      gt
        /* "lib/forge-std/src/StdMath.sol":607:628  a > b ? a - b : b - a */
      tag_3433
      jumpi
        /* "lib/forge-std/src/StdMath.sol":623:628  b - a */
      tag_3434
        /* "lib/forge-std/src/StdMath.sol":627:628  a */
      dup4
        /* "lib/forge-std/src/StdMath.sol":623:624  b */
      dup4
        /* "lib/forge-std/src/StdMath.sol":623:628  b - a */
      tag_158
      jump	// in
    tag_3434:
        /* "lib/forge-std/src/StdMath.sol":607:628  a > b ? a - b : b - a */
      jump(tag_3096)
    tag_3433:
        /* "lib/forge-std/src/StdMath.sol":615:620  a - b */
      tag_3096
        /* "lib/forge-std/src/StdMath.sol":619:620  b */
      dup3
        /* "lib/forge-std/src/StdMath.sol":615:616  a */
      dup5
        /* "lib/forge-std/src/StdMath.sol":615:620  a - b */
      tag_158
      jump	// in
        /* "test/solidity/Protocol.t.sol":47873:48154  function previewConvertToAssets(Market market, address account) internal view returns (uint256) {... */
    tag_3405:
        /* "test/solidity/Protocol.t.sol":47960:47967  uint256 */
      0x00
        /* "test/solidity/Protocol.t.sol":47975:47989  uint256 supply */
      dup1
        /* "test/solidity/Protocol.t.sol":47992:47998  market */
      dup4
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":47992:48010  market.totalSupply */
      and
      0x18160ddd
        /* "test/solidity/Protocol.t.sol":47992:48012  market.totalSupply() */
      mload(0x40)
      dup2
      0xffffffff
      and
      0xe0
      shl
      dup2
      mstore
      0x04
      add
      0x20
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      dup7
      gas
      staticcall
      iszero
      dup1
      iszero
      tag_3439
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_3439:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      dup2
      add
      swap1
      tag_3440
      swap2
      swap1
      tag_212
      jump	// in
    tag_3440:
        /* "test/solidity/Protocol.t.sol":48035:48060  market.balanceOf(account) */
      mload(0x40)
      shl(0xe0, 0x70a08231)
      dup2
      mstore
      sub(shl(0xa0, 0x01), 0x01)
        /* "#utility.yul":7578:7610   */
      dup6
      dup2
      and
        /* "test/solidity/Protocol.t.sol":48035:48060  market.balanceOf(account) */
      0x04
      dup4
      add
        /* "#utility.yul":7560:7611   */
      mstore
        /* "test/solidity/Protocol.t.sol":47975:48012  uint256 supply = market.totalSupply() */
      swap2
      swap3
      pop
        /* "test/solidity/Protocol.t.sol":48018:48032  uint256 shares */
      0x00
      swap2
        /* "test/solidity/Protocol.t.sol":48035:48051  market.balanceOf */
      dup7
      and
      swap1
      0x70a08231
      swap1
        /* "#utility.yul":7533:7551   */
      0x24
      add
        /* "test/solidity/Protocol.t.sol":48035:48060  market.balanceOf(account) */
      0x20
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      dup7
      gas
      staticcall
      iszero
      dup1
      iszero
      tag_3443
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_3443:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      dup2
      add
      swap1
      tag_3444
      swap2
      swap1
      tag_212
      jump	// in
    tag_3444:
        /* "test/solidity/Protocol.t.sol":48018:48060  uint256 shares = market.balanceOf(account) */
      swap1
      pop
        /* "test/solidity/Protocol.t.sol":48073:48084  supply == 0 */
      dup2
      iszero
        /* "test/solidity/Protocol.t.sol":48073:48149  supply == 0 ? shares : shares.mulDivDown(previewTotalAssets(market), supply) */
      tag_3445
      jumpi
        /* "test/solidity/Protocol.t.sol":48096:48149  shares.mulDivDown(previewTotalAssets(market), supply) */
      tag_3446
        /* "test/solidity/Protocol.t.sol":48114:48140  previewTotalAssets(market) */
      tag_3447
        /* "test/solidity/Protocol.t.sol":48133:48139  market */
      dup7
        /* "test/solidity/Protocol.t.sol":48114:48132  previewTotalAssets */
      tag_3448
        /* "test/solidity/Protocol.t.sol":48114:48140  previewTotalAssets(market) */
      jump	// in
    tag_3447:
        /* "test/solidity/Protocol.t.sol":48096:48102  shares */
      dup3
      swap1
        /* "test/solidity/Protocol.t.sol":48142:48148  supply */
      dup5
        /* "test/solidity/Protocol.t.sol":48096:48113  shares.mulDivDown */
      tag_2085
        /* "test/solidity/Protocol.t.sol":48096:48149  shares.mulDivDown(previewTotalAssets(market), supply) */
      jump	// in
    tag_3446:
        /* "test/solidity/Protocol.t.sol":48073:48149  supply == 0 ? shares : shares.mulDivDown(previewTotalAssets(market), supply) */
      jump(tag_3449)
    tag_3445:
        /* "test/solidity/Protocol.t.sol":48087:48093  shares */
      dup1
        /* "test/solidity/Protocol.t.sol":48073:48149  supply == 0 ? shares : shares.mulDivDown(previewTotalAssets(market), supply) */
    tag_3449:
        /* "test/solidity/Protocol.t.sol":48066:48149  return supply == 0 ? shares : shares.mulDivDown(previewTotalAssets(market), supply) */
      swap6
        /* "test/solidity/Protocol.t.sol":47873:48154  function previewConvertToAssets(Market market, address account) internal view returns (uint256) {... */
      swap5
      pop
      pop
      pop
      pop
      pop
      jump	// out
        /* "test/solidity/Protocol.t.sol":49112:50178  function previewDebt(... */
    tag_3407:
        /* "test/solidity/Protocol.t.sol":49252:49264  uint256 debt */
      0x00
        /* "test/solidity/Protocol.t.sol":49272:49294  uint256 memPenaltyRate */
      dup1
        /* "test/solidity/Protocol.t.sol":49297:49303  market */
      dup6
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":49297:49315  market.penaltyRate */
      and
      0xd6b7494f
        /* "test/solidity/Protocol.t.sol":49297:49317  market.penaltyRate() */
      mload(0x40)
      dup2
      0xffffffff
      and
      0xe0
      shl
      dup2
      mstore
      0x04
      add
      0x20
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      dup7
      gas
      staticcall
      iszero
      dup1
      iszero
      tag_3452
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_3452:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      dup2
      add
      swap1
      tag_3453
      swap2
      swap1
      tag_212
      jump	// in
    tag_3453:
        /* "test/solidity/Protocol.t.sol":49356:49380  market.accounts(account) */
      mload(0x40)
      shl(0xe1, 0x2f2e0371)
      dup2
      mstore
      sub(shl(0xa0, 0x01), 0x01)
        /* "#utility.yul":7578:7610   */
      dup8
      dup2
      and
        /* "test/solidity/Protocol.t.sol":49356:49380  market.accounts(account) */
      0x04
      dup4
      add
        /* "#utility.yul":7560:7611   */
      mstore
        /* "test/solidity/Protocol.t.sol":49272:49317  uint256 memPenaltyRate = market.penaltyRate() */
      swap2
      swap3
      pop
        /* "test/solidity/Protocol.t.sol":49326:49350  uint256 packedMaturities */
      0x00
      swap2
        /* "test/solidity/Protocol.t.sol":49356:49371  market.accounts */
      dup9
      and
      swap1
      0x5e5c06e2
      swap1
        /* "#utility.yul":7533:7551   */
      0x24
      add
        /* "test/solidity/Protocol.t.sol":49356:49380  market.accounts(account) */
      0x60
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      dup7
      gas
      staticcall
      iszero
      dup1
      iszero
      tag_3456
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_3456:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      dup2
      add
      swap1
      tag_3457
      swap2
      swap1
      tag_1034
      jump	// in
    tag_3457:
      pop
        /* "test/solidity/Protocol.t.sol":49323:49380  (, uint256 packedMaturities, ) = market.accounts(account) */
      swap2
      pop
        /* "test/solidity/Protocol.t.sol":49386:49406  uint256 baseMaturity */
      0x00
      swap1
      pop
        /* "test/solidity/Protocol.t.sol":49409:49437  packedMaturities % (1 << 32) */
      tag_3458
        /* "test/solidity/Protocol.t.sol":49429:49436  1 << 32 */
      0x0100000000
        /* "test/solidity/Protocol.t.sol":49323:49380  (, uint256 packedMaturities, ) = market.accounts(account) */
      dup4
        /* "test/solidity/Protocol.t.sol":49409:49437  packedMaturities % (1 << 32) */
      tag_183
      jump	// in
    tag_3458:
        /* "test/solidity/Protocol.t.sol":49386:49437  uint256 baseMaturity = packedMaturities % (1 << 32) */
      swap1
      pop
        /* "test/solidity/Protocol.t.sol":49482:49484  32 */
      0x20
        /* "test/solidity/Protocol.t.sol":49462:49478  packedMaturities */
      dup3
        /* "test/solidity/Protocol.t.sol":49462:49484  packedMaturities >> 32 */
      swap1
      shr
        /* "test/solidity/Protocol.t.sol":49443:49484  packedMaturities = packedMaturities >> 32 */
      swap2
      pop
        /* "test/solidity/Protocol.t.sol":49495:49504  uint256 i */
      0x00
        /* "test/solidity/Protocol.t.sol":49490:50019  for (uint256 i = 0; i < 224; ++i) {... */
    tag_3459:
        /* "test/solidity/Protocol.t.sol":49514:49517  224 */
      0xe0
        /* "test/solidity/Protocol.t.sol":49510:49511  i */
      dup2
        /* "test/solidity/Protocol.t.sol":49510:49517  i < 224 */
      lt
        /* "test/solidity/Protocol.t.sol":49490:50019  for (uint256 i = 0; i < 224; ++i) {... */
      iszero
      tag_3460
      jumpi
        /* "test/solidity/Protocol.t.sol":49557:49558  1 */
      0x01
        /* "test/solidity/Protocol.t.sol":49557:49563  1 << i */
      dup2
      shl
        /* "test/solidity/Protocol.t.sol":49537:49564  packedMaturities & (1 << i) */
      dup4
      and
        /* "test/solidity/Protocol.t.sol":49536:49570  (packedMaturities & (1 << i)) != 0 */
      iszero
        /* "test/solidity/Protocol.t.sol":49532:49967  if ((packedMaturities & (1 << i)) != 0) {... */
      tag_3462
      jumpi
        /* "test/solidity/Protocol.t.sol":49582:49598  uint256 maturity */
      0x00
        /* "test/solidity/Protocol.t.sol":49617:49638  i * FixedLib.INTERVAL */
      tag_3463
        /* "contracts/utils/FixedLib.sol":306:313  4 weeks */
      0x24ea00
        /* "test/solidity/Protocol.t.sol":49617:49618  i */
      dup4
        /* "test/solidity/Protocol.t.sol":49617:49638  i * FixedLib.INTERVAL */
      tag_278
      jump	// in
    tag_3463:
        /* "test/solidity/Protocol.t.sol":49601:49639  baseMaturity + (i * FixedLib.INTERVAL) */
      tag_3464
      swap1
        /* "test/solidity/Protocol.t.sol":49601:49613  baseMaturity */
      dup5
        /* "test/solidity/Protocol.t.sol":49601:49639  baseMaturity + (i * FixedLib.INTERVAL) */
      tag_186
      jump	// in
    tag_3464:
        /* "test/solidity/Protocol.t.sol":49582:49639  uint256 maturity = baseMaturity + (i * FixedLib.INTERVAL) */
      swap1
      pop
        /* "test/solidity/Protocol.t.sol":49650:49667  uint256 principal */
      0x00
        /* "test/solidity/Protocol.t.sol":49669:49680  uint256 fee */
      dup1
        /* "test/solidity/Protocol.t.sol":49684:49690  market */
      dup12
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":49684:49711  market.fixedBorrowPositions */
      and
      0xd2681a0b
        /* "test/solidity/Protocol.t.sol":49712:49720  maturity */
      dup5
        /* "test/solidity/Protocol.t.sol":49722:49729  account */
      dup14
        /* "test/solidity/Protocol.t.sol":49684:49730  market.fixedBorrowPositions(maturity, account) */
      mload(0x40)
      dup4
      0xffffffff
      and
      0xe0
      shl
      dup2
      mstore
      0x04
      add
      tag_3465
      swap3
      swap2
      swap1
      tag_555
      jump	// in
    tag_3465:
      0x40
      dup1
      mload
      dup1
      dup4
      sub
      dup2
      dup7
      gas
      staticcall
      iszero
      dup1
      iszero
      tag_3467
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_3467:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      dup2
      add
      swap1
      tag_3468
      swap2
      swap1
      tag_203
      jump	// in
    tag_3468:
        /* "test/solidity/Protocol.t.sol":49649:49730  (uint256 principal, uint256 fee) = market.fixedBorrowPositions(maturity, account) */
      swap1
      swap3
      pop
      swap1
      pop
        /* "test/solidity/Protocol.t.sol":49740:49762  uint256 positionAssets */
      0x00
        /* "test/solidity/Protocol.t.sol":49765:49780  principal + fee */
      tag_3469
        /* "test/solidity/Protocol.t.sol":49649:49730  (uint256 principal, uint256 fee) = market.fixedBorrowPositions(maturity, account) */
      dup3
      dup5
        /* "test/solidity/Protocol.t.sol":49765:49780  principal + fee */
      tag_186
      jump	// in
    tag_3469:
        /* "test/solidity/Protocol.t.sol":49740:49780  uint256 positionAssets = principal + fee */
      swap1
      pop
        /* "test/solidity/Protocol.t.sol":49791:49813  debt += positionAssets */
      tag_3470
        /* "test/solidity/Protocol.t.sol":49740:49780  uint256 positionAssets = principal + fee */
      dup2
        /* "test/solidity/Protocol.t.sol":49791:49813  debt += positionAssets */
      dup11
      tag_186
      jump	// in
    tag_3470:
      swap9
      pop
        /* "test/solidity/Protocol.t.sol":49846:49854  maturity */
      dup4
        /* "test/solidity/Protocol.t.sol":49828:49843  block.timestamp */
      timestamp
        /* "test/solidity/Protocol.t.sol":49828:49854  block.timestamp > maturity */
      gt
        /* "test/solidity/Protocol.t.sol":49824:49959  if (block.timestamp > maturity) {... */
      iszero
      tag_3471
      jumpi
        /* "test/solidity/Protocol.t.sol":49876:49948  positionAssets.mulWadDown((block.timestamp - maturity) * memPenaltyRate) */
      tag_3472
        /* "test/solidity/Protocol.t.sol":49933:49947  memPenaltyRate */
      dup9
        /* "test/solidity/Protocol.t.sol":49903:49929  block.timestamp - maturity */
      tag_3473
        /* "test/solidity/Protocol.t.sol":49921:49929  maturity */
      dup7
        /* "test/solidity/Protocol.t.sol":49903:49918  block.timestamp */
      timestamp
        /* "test/solidity/Protocol.t.sol":49903:49929  block.timestamp - maturity */
      tag_158
      jump	// in
    tag_3473:
        /* "test/solidity/Protocol.t.sol":49902:49947  (block.timestamp - maturity) * memPenaltyRate */
      tag_3474
      swap2
      swap1
      tag_278
      jump	// in
    tag_3474:
        /* "test/solidity/Protocol.t.sol":49876:49890  positionAssets */
      dup3
      swap1
        /* "test/solidity/Protocol.t.sol":49876:49901  positionAssets.mulWadDown */
      tag_1375
        /* "test/solidity/Protocol.t.sol":49876:49948  positionAssets.mulWadDown((block.timestamp - maturity) * memPenaltyRate) */
      jump	// in
    tag_3472:
        /* "test/solidity/Protocol.t.sol":49868:49948  debt += positionAssets.mulWadDown((block.timestamp - maturity) * memPenaltyRate) */
      tag_3475
      swap1
      dup11
      tag_186
      jump	// in
    tag_3475:
      swap9
      pop
        /* "test/solidity/Protocol.t.sol":49824:49959  if (block.timestamp > maturity) {... */
    tag_3471:
        /* "test/solidity/Protocol.t.sol":49572:49967  {... */
      pop
      pop
      pop
      pop
        /* "test/solidity/Protocol.t.sol":49532:49967  if ((packedMaturities & (1 << i)) != 0) {... */
    tag_3462:
        /* "test/solidity/Protocol.t.sol":49989:50005  packedMaturities */
      dup3
        /* "test/solidity/Protocol.t.sol":49984:49985  i */
      dup2
        /* "test/solidity/Protocol.t.sol":49979:49980  1 */
      0x01
        /* "test/solidity/Protocol.t.sol":49979:49985  1 << i */
      swap1
      shl
        /* "test/solidity/Protocol.t.sol":49978:50005  (1 << i) > packedMaturities */
      gt
        /* "test/solidity/Protocol.t.sol":50007:50012  break */
      tag_3460
        /* "test/solidity/Protocol.t.sol":49974:50012  if ((1 << i) > packedMaturities) break */
      jumpi
        /* "test/solidity/Protocol.t.sol":49519:49522  ++i */
      tag_3477
      dup2
      tag_293
      jump	// in
    tag_3477:
      swap1
      pop
        /* "test/solidity/Protocol.t.sol":49490:50019  for (uint256 i = 0; i < 224; ++i) {... */
      jump(tag_3459)
    tag_3460:
      pop
        /* "test/solidity/Protocol.t.sol":50047:50071  market.accounts(account) */
      mload(0x40)
      shl(0xe1, 0x2f2e0371)
      dup2
      mstore
      sub(shl(0xa0, 0x01), 0x01)
        /* "#utility.yul":7578:7610   */
      dup9
      dup2
      and
        /* "test/solidity/Protocol.t.sol":50047:50071  market.accounts(account) */
      0x04
      dup4
      add
        /* "#utility.yul":7560:7611   */
      mstore
        /* "test/solidity/Protocol.t.sol":50029:50043  uint256 shares */
      0x00
      swap2
        /* "test/solidity/Protocol.t.sol":50047:50062  market.accounts */
      swap1
      dup11
      and
      swap1
      0x5e5c06e2
      swap1
        /* "#utility.yul":7533:7551   */
      0x24
      add
        /* "test/solidity/Protocol.t.sol":50047:50071  market.accounts(account) */
      0x60
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      dup7
      gas
      staticcall
      iszero
      dup1
      iszero
      tag_3480
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_3480:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      dup2
      add
      swap1
      tag_3481
      swap2
      swap1
      tag_1034
      jump	// in
    tag_3481:
        /* "test/solidity/Protocol.t.sol":50024:50071  (, , uint256 shares) = market.accounts(account) */
      swap3
      pop
      pop
      pop
        /* "test/solidity/Protocol.t.sol":50105:50106  0 */
      0x00
        /* "test/solidity/Protocol.t.sol":50090:50102  borrowShares */
      dup7
        /* "test/solidity/Protocol.t.sol":50081:50087  shares */
      dup3
        /* "test/solidity/Protocol.t.sol":50081:50102  shares + borrowShares */
      tag_3482
      swap2
      swap1
      tag_186
      jump	// in
    tag_3482:
        /* "test/solidity/Protocol.t.sol":50081:50106  shares + borrowShares > 0 */
      gt
        /* "test/solidity/Protocol.t.sol":50077:50173  if (shares + borrowShares > 0) debt += previewRefund(market, shares, borrowAssets, borrowShares) */
      iszero
      tag_3483
      jumpi
        /* "test/solidity/Protocol.t.sol":50116:50173  previewRefund(market, shares, borrowAssets, borrowShares) */
      tag_3484
        /* "test/solidity/Protocol.t.sol":50130:50136  market */
      dup10
        /* "test/solidity/Protocol.t.sol":50138:50144  shares */
      dup3
        /* "test/solidity/Protocol.t.sol":50146:50158  borrowAssets */
      dup10
        /* "test/solidity/Protocol.t.sol":50160:50172  borrowShares */
      dup10
        /* "test/solidity/Protocol.t.sol":50116:50129  previewRefund */
      tag_3485
        /* "test/solidity/Protocol.t.sol":50116:50173  previewRefund(market, shares, borrowAssets, borrowShares) */
      jump	// in
    tag_3484:
        /* "test/solidity/Protocol.t.sol":50108:50173  debt += previewRefund(market, shares, borrowAssets, borrowShares) */
      tag_3486
      swap1
      dup7
      tag_186
      jump	// in
    tag_3486:
      swap5
      pop
        /* "test/solidity/Protocol.t.sol":50077:50173  if (shares + borrowShares > 0) debt += previewRefund(market, shares, borrowAssets, borrowShares) */
    tag_3483:
        /* "test/solidity/Protocol.t.sol":49266:50178  {... */
      pop
      pop
      pop
      pop
        /* "test/solidity/Protocol.t.sol":49112:50178  function previewDebt(... */
      swap5
      swap4
      pop
      pop
      pop
      pop
      jump	// out
        /* "test/solidity/Protocol.t.sol":48158:49108  function previewTotalAssets(Market market) internal view returns (uint256) {... */
    tag_3448:
        /* "test/solidity/Protocol.t.sol":48224:48231  uint256 */
      0x00
        /* "test/solidity/Protocol.t.sol":48239:48264  uint256 memMaxFuturePools */
      dup1
        /* "test/solidity/Protocol.t.sol":48267:48273  market */
      dup3
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":48267:48288  market.maxFuturePools */
      and
      0x0e52dbec
        /* "test/solidity/Protocol.t.sol":48267:48290  market.maxFuturePools() */
      mload(0x40)
      dup2
      0xffffffff
      and
      0xe0
      shl
      dup2
      mstore
      0x04
      add
      0x20
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      dup7
      gas
      staticcall
      iszero
      dup1
      iszero
      tag_3489
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_3489:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      dup2
      add
      swap1
      tag_3490
      swap2
      swap1
      tag_2776
      jump	// in
    tag_3490:
        /* "test/solidity/Protocol.t.sol":48239:48290  uint256 memMaxFuturePools = market.maxFuturePools() */
      0xff
      and
      swap1
      pop
        /* "test/solidity/Protocol.t.sol":48296:48318  uint256 backupEarnings */
      0x00
      dup1
        /* "test/solidity/Protocol.t.sol":48372:48407  block.timestamp % FixedLib.INTERVAL */
      tag_3491
        /* "contracts/utils/FixedLib.sol":306:313  4 weeks */
      0x24ea00
        /* "test/solidity/Protocol.t.sol":48372:48387  block.timestamp */
      timestamp
        /* "test/solidity/Protocol.t.sol":48372:48407  block.timestamp % FixedLib.INTERVAL */
      tag_183
      jump	// in
    tag_3491:
        /* "test/solidity/Protocol.t.sol":48353:48408  block.timestamp - (block.timestamp % FixedLib.INTERVAL) */
      tag_3492
      swap1
        /* "test/solidity/Protocol.t.sol":48353:48368  block.timestamp */
      timestamp
        /* "test/solidity/Protocol.t.sol":48353:48408  block.timestamp - (block.timestamp % FixedLib.INTERVAL) */
      tag_158
      jump	// in
    tag_3492:
        /* "test/solidity/Protocol.t.sol":48328:48408  uint256 latestMaturity = block.timestamp - (block.timestamp % FixedLib.INTERVAL) */
      swap1
      pop
        /* "test/solidity/Protocol.t.sol":48414:48433  uint256 maxMaturity */
      0x00
        /* "test/solidity/Protocol.t.sol":48453:48490  memMaxFuturePools * FixedLib.INTERVAL */
      tag_3493
        /* "contracts/utils/FixedLib.sol":306:313  4 weeks */
      0x24ea00
        /* "test/solidity/Protocol.t.sol":48453:48470  memMaxFuturePools */
      dup6
        /* "test/solidity/Protocol.t.sol":48453:48490  memMaxFuturePools * FixedLib.INTERVAL */
      tag_278
      jump	// in
    tag_3493:
        /* "test/solidity/Protocol.t.sol":48436:48490  latestMaturity + memMaxFuturePools * FixedLib.INTERVAL */
      tag_3494
      swap1
        /* "test/solidity/Protocol.t.sol":48436:48450  latestMaturity */
      dup4
        /* "test/solidity/Protocol.t.sol":48436:48490  latestMaturity + memMaxFuturePools * FixedLib.INTERVAL */
      tag_186
      jump	// in
    tag_3494:
        /* "test/solidity/Protocol.t.sol":48414:48490  uint256 maxMaturity = latestMaturity + memMaxFuturePools * FixedLib.INTERVAL */
      swap1
      pop
        /* "test/solidity/Protocol.t.sol":48520:48534  latestMaturity */
      dup2
        /* "test/solidity/Protocol.t.sol":48496:48917  for (uint256 maturity = latestMaturity; maturity <= maxMaturity; maturity += FixedLib.INTERVAL) {... */
    tag_3495:
        /* "test/solidity/Protocol.t.sol":48548:48559  maxMaturity */
      dup2
        /* "test/solidity/Protocol.t.sol":48536:48544  maturity */
      dup2
        /* "test/solidity/Protocol.t.sol":48536:48559  maturity <= maxMaturity */
      gt
        /* "test/solidity/Protocol.t.sol":48496:48917  for (uint256 maturity = latestMaturity; maturity <= maxMaturity; maturity += FixedLib.INTERVAL) {... */
      tag_3496
      jumpi
        /* "test/solidity/Protocol.t.sol":48656:48683  market.fixedPools(maturity) */
      mload(0x40)
      shl(0xe0, 0x4e7c5059)
      dup2
      mstore
      0x04
      dup2
      add
        /* "#utility.yul":10439:10464   */
      dup3
      swap1
      mstore
        /* "test/solidity/Protocol.t.sol":48605:48631  uint256 unassignedEarnings */
      0x00
      swap1
      dup2
      swap1
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":48656:48673  market.fixedPools */
      dup11
      and
      swap1
      0x4e7c5059
      swap1
        /* "#utility.yul":10412:10430   */
      0x24
      add
        /* "test/solidity/Protocol.t.sol":48656:48683  market.fixedPools(maturity) */
      0x80
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      dup7
      gas
      staticcall
      iszero
      dup1
      iszero
      tag_3500
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_3500:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      dup2
      add
      swap1
      tag_3501
      swap2
      swap1
      tag_730
      jump	// in
    tag_3501:
        /* "test/solidity/Protocol.t.sol":48600:48683  (, , uint256 unassignedEarnings, uint256 lastAccrual) = market.fixedPools(maturity) */
      swap4
      pop
      swap4
      pop
      pop
      pop
        /* "test/solidity/Protocol.t.sol":48707:48718  lastAccrual */
      dup1
        /* "test/solidity/Protocol.t.sol":48696:48704  maturity */
      dup4
        /* "test/solidity/Protocol.t.sol":48696:48718  maturity > lastAccrual */
      gt
        /* "test/solidity/Protocol.t.sol":48692:48911  if (maturity > lastAccrual) {... */
      iszero
      tag_3502
      jumpi
        /* "test/solidity/Protocol.t.sol":48766:48774  maturity */
      dup3
        /* "test/solidity/Protocol.t.sol":48748:48763  block.timestamp */
      timestamp
        /* "test/solidity/Protocol.t.sol":48748:48774  block.timestamp < maturity */
      lt
        /* "test/solidity/Protocol.t.sol":48748:48902  block.timestamp < maturity... */
      tag_3503
      jumpi
        /* "test/solidity/Protocol.t.sol":48884:48902  unassignedEarnings */
      dup2
        /* "test/solidity/Protocol.t.sol":48748:48902  block.timestamp < maturity... */
      jump(tag_3505)
    tag_3503:
        /* "test/solidity/Protocol.t.sol":48787:48871  unassignedEarnings.mulDivDown(block.timestamp - lastAccrual, maturity - lastAccrual) */
      tag_3505
        /* "test/solidity/Protocol.t.sol":48817:48846  block.timestamp - lastAccrual */
      tag_3506
        /* "test/solidity/Protocol.t.sol":48835:48846  lastAccrual */
      dup3
        /* "test/solidity/Protocol.t.sol":48817:48832  block.timestamp */
      timestamp
        /* "test/solidity/Protocol.t.sol":48817:48846  block.timestamp - lastAccrual */
      tag_158
      jump	// in
    tag_3506:
        /* "test/solidity/Protocol.t.sol":48848:48870  maturity - lastAccrual */
      tag_2797
        /* "test/solidity/Protocol.t.sol":48859:48870  lastAccrual */
      dup4
        /* "test/solidity/Protocol.t.sol":48848:48856  maturity */
      dup7
        /* "test/solidity/Protocol.t.sol":48848:48870  maturity - lastAccrual */
      tag_158
      jump	// in
        /* "test/solidity/Protocol.t.sol":48787:48871  unassignedEarnings.mulDivDown(block.timestamp - lastAccrual, maturity - lastAccrual) */
    tag_3505:
        /* "test/solidity/Protocol.t.sol":48730:48902  backupEarnings += block.timestamp < maturity... */
      tag_3508
      swap1
      dup8
      tag_186
      jump	// in
    tag_3508:
      swap6
      pop
        /* "test/solidity/Protocol.t.sol":48692:48911  if (maturity > lastAccrual) {... */
    tag_3502:
      pop
        /* "test/solidity/Protocol.t.sol":48561:48590  maturity += FixedLib.INTERVAL */
      tag_3509
      swap1
      pop
        /* "contracts/utils/FixedLib.sol":306:313  4 weeks */
      0x24ea00
        /* "test/solidity/Protocol.t.sol":48561:48590  maturity += FixedLib.INTERVAL */
      dup3
      tag_186
      jump	// in
    tag_3509:
      swap1
      pop
        /* "test/solidity/Protocol.t.sol":48496:48917  for (uint256 maturity = latestMaturity; maturity <= maxMaturity; maturity += FixedLib.INTERVAL) {... */
      jump(tag_3495)
    tag_3496:
      pop
        /* "test/solidity/Protocol.t.sol":49082:49088  market */
      dup6
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":49082:49101  market.floatingDebt */
      and
      0x1a90f186
        /* "test/solidity/Protocol.t.sol":49082:49103  market.floatingDebt() */
      mload(0x40)
      dup2
      0xffffffff
      and
      0xe0
      shl
      dup2
      mstore
      0x04
      add
      0x20
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      dup7
      gas
      staticcall
      iszero
      dup1
      iszero
      tag_3511
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_3511:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      dup2
      add
      swap1
      tag_3512
      swap2
      swap1
      tag_212
      jump	// in
    tag_3512:
        /* "test/solidity/Protocol.t.sol":49033:49073  previewTotalFloatingBorrowAssets(market) */
      tag_3513
        /* "test/solidity/Protocol.t.sol":49066:49072  market */
      dup8
        /* "test/solidity/Protocol.t.sol":49033:49065  previewTotalFloatingBorrowAssets */
      tag_3514
        /* "test/solidity/Protocol.t.sol":49033:49073  previewTotalFloatingBorrowAssets(market) */
      jump	// in
    tag_3513:
        /* "test/solidity/Protocol.t.sol":48990:49024  previewAccumulatedEarnings(market) */
      tag_3515
        /* "test/solidity/Protocol.t.sol":49017:49023  market */
      dup9
        /* "test/solidity/Protocol.t.sol":48990:49016  previewAccumulatedEarnings */
      tag_578
        /* "test/solidity/Protocol.t.sol":48990:49024  previewAccumulatedEarnings(market) */
      jump	// in
    tag_3515:
        /* "test/solidity/Protocol.t.sol":48967:48981  backupEarnings */
      dup6
        /* "test/solidity/Protocol.t.sol":48935:48941  market */
      dup10
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":48935:48956  market.floatingAssets */
      and
      0x2e0af008
        /* "test/solidity/Protocol.t.sol":48935:48958  market.floatingAssets() */
      mload(0x40)
      dup2
      0xffffffff
      and
      0xe0
      shl
      dup2
      mstore
      0x04
      add
      0x20
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      dup7
      gas
      staticcall
      iszero
      dup1
      iszero
      tag_3517
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_3517:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      dup2
      add
      swap1
      tag_3518
      swap2
      swap1
      tag_212
      jump	// in
    tag_3518:
        /* "test/solidity/Protocol.t.sol":48935:48981  market.floatingAssets() +... */
      tag_3519
      swap2
      swap1
      tag_186
      jump	// in
    tag_3519:
        /* "test/solidity/Protocol.t.sol":48935:49024  market.floatingAssets() +... */
      tag_3520
      swap2
      swap1
      tag_186
      jump	// in
    tag_3520:
        /* "test/solidity/Protocol.t.sol":48935:49073  market.floatingAssets() +... */
      tag_3521
      swap2
      swap1
      tag_186
      jump	// in
    tag_3521:
        /* "test/solidity/Protocol.t.sol":48935:49103  market.floatingAssets() +... */
      tag_3055
      swap2
      swap1
      tag_158
      jump	// in
        /* "test/solidity/Protocol.t.sol":50182:50553  function previewRefund(... */
    tag_3485:
        /* "test/solidity/Protocol.t.sol":50323:50330  uint256 */
      0x00
        /* "test/solidity/Protocol.t.sol":50338:50352  uint256 supply */
      dup1
        /* "test/solidity/Protocol.t.sol":50392:50404  borrowShares */
      dup3
        /* "test/solidity/Protocol.t.sol":50355:50361  market */
      dup7
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":50355:50387  market.totalFloatingBorrowShares */
      and
      0x8d0e5f02
        /* "test/solidity/Protocol.t.sol":50355:50389  market.totalFloatingBorrowShares() */
      mload(0x40)
      dup2
      0xffffffff
      and
      0xe0
      shl
      dup2
      mstore
      0x04
      add
      0x20
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      dup7
      gas
      staticcall
      iszero
      dup1
      iszero
      tag_3525
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_3525:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      dup2
      add
      swap1
      tag_3526
      swap2
      swap1
      tag_212
      jump	// in
    tag_3526:
        /* "test/solidity/Protocol.t.sol":50355:50404  market.totalFloatingBorrowShares() + borrowShares */
      tag_3527
      swap2
      swap1
      tag_186
      jump	// in
    tag_3527:
        /* "test/solidity/Protocol.t.sol":50338:50404  uint256 supply = market.totalFloatingBorrowShares() + borrowShares */
      swap1
      pop
        /* "test/solidity/Protocol.t.sol":50410:50432  shares += borrowShares */
      tag_3528
        /* "test/solidity/Protocol.t.sol":50420:50432  borrowShares */
      dup4
        /* "test/solidity/Protocol.t.sol":50410:50432  shares += borrowShares */
      dup7
      tag_186
      jump	// in
    tag_3528:
      swap5
      pop
        /* "test/solidity/Protocol.t.sol":50445:50456  supply == 0 */
      dup1
      iszero
        /* "test/solidity/Protocol.t.sol":50445:50548  supply == 0 ? shares : shares.mulDivUp(previewTotalFloatingBorrowAssets(market) + borrowAssets, supply) */
      tag_3529
      jumpi
        /* "test/solidity/Protocol.t.sol":50468:50548  shares.mulDivUp(previewTotalFloatingBorrowAssets(market) + borrowAssets, supply) */
      tag_3530
        /* "test/solidity/Protocol.t.sol":50527:50539  borrowAssets */
      dup5
        /* "test/solidity/Protocol.t.sol":50484:50524  previewTotalFloatingBorrowAssets(market) */
      tag_3531
        /* "test/solidity/Protocol.t.sol":50517:50523  market */
      dup9
        /* "test/solidity/Protocol.t.sol":50484:50516  previewTotalFloatingBorrowAssets */
      tag_3514
        /* "test/solidity/Protocol.t.sol":50484:50524  previewTotalFloatingBorrowAssets(market) */
      jump	// in
    tag_3531:
        /* "test/solidity/Protocol.t.sol":50484:50539  previewTotalFloatingBorrowAssets(market) + borrowAssets */
      tag_3532
      swap2
      swap1
      tag_186
      jump	// in
    tag_3532:
        /* "test/solidity/Protocol.t.sol":50468:50474  shares */
      dup7
      swap1
        /* "test/solidity/Protocol.t.sol":50541:50547  supply */
      dup4
        /* "test/solidity/Protocol.t.sol":50468:50483  shares.mulDivUp */
      tag_988
        /* "test/solidity/Protocol.t.sol":50468:50548  shares.mulDivUp(previewTotalFloatingBorrowAssets(market) + borrowAssets, supply) */
      jump	// in
    tag_3530:
        /* "test/solidity/Protocol.t.sol":50445:50548  supply == 0 ? shares : shares.mulDivUp(previewTotalFloatingBorrowAssets(market) + borrowAssets, supply) */
      jump(tag_3055)
    tag_3529:
      pop
        /* "test/solidity/Protocol.t.sol":50459:50465  shares */
      swap3
      swap5
        /* "test/solidity/Protocol.t.sol":50438:50548  return supply == 0 ? shares : shares.mulDivUp(previewTotalFloatingBorrowAssets(market) + borrowAssets, supply) */
      swap4
      pop
      pop
      pop
      pop
        /* "test/solidity/Protocol.t.sol":50182:50553  function previewRefund(... */
      jump	// out
        /* "test/solidity/Protocol.t.sol":50557:51154  function previewTotalFloatingBorrowAssets(Market market) internal view returns (uint256) {... */
    tag_3514:
        /* "test/solidity/Protocol.t.sol":50637:50644  uint256 */
      0x00
        /* "test/solidity/Protocol.t.sol":50652:50677  uint256 memFloatingAssets */
      dup1
        /* "test/solidity/Protocol.t.sol":50680:50686  market */
      dup3
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":50680:50701  market.floatingAssets */
      and
      0x2e0af008
        /* "test/solidity/Protocol.t.sol":50680:50703  market.floatingAssets() */
      mload(0x40)
      dup2
      0xffffffff
      and
      0xe0
      shl
      dup2
      mstore
      0x04
      add
      0x20
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      dup7
      gas
      staticcall
      iszero
      dup1
      iszero
      tag_3536
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_3536:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      dup2
      add
      swap1
      tag_3537
      swap2
      swap1
      tag_212
      jump	// in
    tag_3537:
        /* "test/solidity/Protocol.t.sol":50652:50703  uint256 memFloatingAssets = market.floatingAssets() */
      swap1
      pop
        /* "test/solidity/Protocol.t.sol":50709:50732  uint256 memFloatingDebt */
      0x00
        /* "test/solidity/Protocol.t.sol":50735:50741  market */
      dup4
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":50735:50754  market.floatingDebt */
      and
      0x1a90f186
        /* "test/solidity/Protocol.t.sol":50735:50756  market.floatingDebt() */
      mload(0x40)
      dup2
      0xffffffff
      and
      0xe0
      shl
      dup2
      mstore
      0x04
      add
      0x20
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      dup7
      gas
      staticcall
      iszero
      dup1
      iszero
      tag_3539
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_3539:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      dup2
      add
      swap1
      tag_3540
      swap2
      swap1
      tag_212
      jump	// in
    tag_3540:
        /* "test/solidity/Protocol.t.sol":50709:50756  uint256 memFloatingDebt = market.floatingDebt() */
      swap1
      pop
        /* "test/solidity/Protocol.t.sol":50762:50789  uint256 floatingUtilization */
      0x00
        /* "test/solidity/Protocol.t.sol":50812:50813  0 */
      dup1
        /* "test/solidity/Protocol.t.sol":50792:50809  memFloatingAssets */
      dup4
        /* "test/solidity/Protocol.t.sol":50792:50813  memFloatingAssets > 0 */
      gt
        /* "test/solidity/Protocol.t.sol":50792:50891  memFloatingAssets > 0... */
      tag_3541
      jumpi
        /* "test/solidity/Protocol.t.sol":50890:50891  0 */
      0x00
        /* "test/solidity/Protocol.t.sol":50792:50891  memFloatingAssets > 0... */
      jump(tag_3543)
    tag_3541:
        /* "test/solidity/Protocol.t.sol":50822:50881  Math.min(memFloatingDebt.divWadUp(memFloatingAssets), 1e18) */
      tag_3543
        /* "test/solidity/Protocol.t.sol":50831:50874  memFloatingDebt.divWadUp(memFloatingAssets) */
      tag_3054
        /* "test/solidity/Protocol.t.sol":50831:50846  memFloatingDebt */
      dup4
        /* "test/solidity/Protocol.t.sol":50856:50873  memFloatingAssets */
      dup6
        /* "test/solidity/Protocol.t.sol":50831:50855  memFloatingDebt.divWadUp */
      tag_761
        /* "test/solidity/Protocol.t.sol":50831:50874  memFloatingDebt.divWadUp(memFloatingAssets) */
      jump	// in
        /* "test/solidity/Protocol.t.sol":50822:50881  Math.min(memFloatingDebt.divWadUp(memFloatingAssets), 1e18) */
    tag_3543:
        /* "test/solidity/Protocol.t.sol":50762:50891  uint256 floatingUtilization = memFloatingAssets > 0... */
      swap1
      pop
        /* "test/solidity/Protocol.t.sol":50897:50912  uint256 newDebt */
      0x00
        /* "test/solidity/Protocol.t.sol":50915:51111  memFloatingDebt.mulWadDown(... */
      tag_3545
        /* "test/solidity/Protocol.t.sol":50949:51105  market.interestRateModel().floatingRate(floatingUtilization).mulDivDown(... */
      tag_2329
        /* "test/solidity/Protocol.t.sol":51048:51054  market */
      dup8
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":51048:51077  market.lastFloatingDebtUpdate */
      and
      0x6eb9ffeb
        /* "test/solidity/Protocol.t.sol":51048:51079  market.lastFloatingDebtUpdate() */
      mload(0x40)
      dup2
      0xffffffff
      and
      0xe0
      shl
      dup2
      mstore
      0x04
      add
      0x20
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      dup7
      gas
      staticcall
      iszero
      dup1
      iszero
      tag_3548
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_3548:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      dup2
      add
      swap1
      tag_3549
      swap2
      swap1
      tag_3024
      jump	// in
    tag_3549:
        /* "test/solidity/Protocol.t.sol":51030:51079  block.timestamp - market.lastFloatingDebtUpdate() */
      tag_3550
      swap1
      0xffffffff
      and
        /* "test/solidity/Protocol.t.sol":51030:51045  block.timestamp */
      timestamp
        /* "test/solidity/Protocol.t.sol":51030:51079  block.timestamp - market.lastFloatingDebtUpdate() */
      tag_158
      jump	// in
    tag_3550:
        /* "test/solidity/Protocol.t.sol":51089:51097  365 days */
      0x01e13380
        /* "test/solidity/Protocol.t.sol":50949:50955  market */
      dup10
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":50949:50973  market.interestRateModel */
      and
      0xf3fdb15a
        /* "test/solidity/Protocol.t.sol":50949:50975  market.interestRateModel() */
      mload(0x40)
      dup2
      0xffffffff
      and
      0xe0
      shl
      dup2
      mstore
      0x04
      add
      0x20
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      dup7
      gas
      staticcall
      iszero
      dup1
      iszero
      tag_3552
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_3552:
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      not(0x1f)
      0x1f
      dup3
      add
      and
      dup3
      add
      dup1
      0x40
      mstore
      pop
      dup2
      add
      swap1
      tag_3553
      swap2
      swap1
      tag_167
      jump	// in
    tag_3553:
      sub(shl(0xa0, 0x01), 0x01)
        /* "test/solidity/Protocol.t.sol":50949:50988  market.interestRateModel().floatingRate */
      and
      0x84a87466
        /* "test/solidity/Protocol.t.sol":50989:51008  floatingUtilization */
      dup8
        /* "test/solidity/Protocol.t.sol":50949:51009  market.interestRateModel().floatingRate(floatingUtilization) */
      mload(0x40)
      dup3
      0xffffffff
      and
      0xe0
      shl
      dup2
      mstore
      0x04
      add
      tag_3061
      swap2
        /* "#utility.yul":10439:10464   */
      dup2
      mstore
        /* "#utility.yul":10427:10429   */
      0x20
        /* "#utility.yul":10412:10430   */
      add
      swap1
        /* "#utility.yul":10284:10470   */
      jump
        /* "test/solidity/Protocol.t.sol":50915:51111  memFloatingDebt.mulWadDown(... */
    tag_3545:
        /* "test/solidity/Protocol.t.sol":50897:51111  uint256 newDebt = memFloatingDebt.mulWadDown(... */
      swap1
      pop
        /* "test/solidity/Protocol.t.sol":51124:51149  memFloatingDebt + newDebt */
      tag_3055
        /* "test/solidity/Protocol.t.sol":50897:51111  uint256 newDebt = memFloatingDebt.mulWadDown(... */
      dup2
        /* "test/solidity/Protocol.t.sol":51124:51139  memFloatingDebt */
      dup5
        /* "test/solidity/Protocol.t.sol":51124:51149  memFloatingDebt + newDebt */
      tag_186
      jump	// in
    tag_248:
      dataSize(sub_0)
      dup1
      dataOffset(sub_0)
      dup4
      codecopy
      add
      swap1
      jump	// out
    tag_253:
      dataSize(sub_1)
      dup1
      dataOffset(sub_1)
      dup4
      codecopy
      add
      swap1
      jump	// out
    tag_268:
      dataSize(sub_2)
      dup1
      dataOffset(sub_2)
      dup4
      codecopy
      add
      swap1
      jump	// out
    tag_303:
      dataSize(sub_3)
      dup1
      dataOffset(sub_3)
      dup4
      codecopy
      add
      swap1
      jump	// out
    tag_312:
      dataSize(sub_4)
      dup1
      dataOffset(sub_4)
      dup4
      codecopy
      add
      swap1
      jump	// out
    tag_335:
      dataSize(sub_5)
      dup1
      dataOffset(sub_5)
      dup4
      codecopy
      add
      swap1
      jump	// out
    tag_368:
      dataSize(sub_6)
      dup1
      dataOffset(sub_6)
      dup4
      codecopy
      add
      swap1
      jump	// out
    tag_974:
      0x40
      dup1
      mload
      0xa0
      dup2
      add
      dup3
      mstore
      0x00
      dup1
      dup3
      mstore
      0x20
      dup3
      add
      dup2
      swap1
      mstore
      swap2
      dup2
      add
      dup3
      swap1
      mstore
      0x60
      dup2
      add
      dup3
      swap1
      mstore
      0x80
      dup2
      add
      swap2
      swap1
      swap2
      mstore
      swap1
      jump	// out
    tag_3011:
      dup3
      dup1
      sload
      dup3
      dup3
      sstore
      swap1
      0x00
      mstore
      keccak256(0x00, 0x20)
      swap1
      0x07
      add
      0x08
      swap1
      div
      dup2
      add
      swap3
      dup3
      iszero
      tag_3559
      jumpi
      swap2
      0x20
      mul
      dup3
      add
      0x00
    tag_3560:
      dup4
      dup3
      gt
      iszero
      tag_3561
      jumpi
      dup4
      mload
      dup4
      dup3
      0x0100
      exp
      dup2
      sload
      dup2
      0xffffffff
      mul
      not
      and
      swap1
      dup4
      0xe0
      shr
      mul
      or
      swap1
      sstore
      pop
      swap3
      0x20
      add
      swap3
      0x04
      add
      0x20
      dup2
      0x03
      add
      div
      swap3
      dup4
      add
      swap3
      0x01
      sub
      mul
      jump(tag_3560)
    tag_3561:
      dup1
      iszero
      tag_3562
      jumpi
      dup3
      dup2
      0x0100
      exp
      dup2
      sload
      swap1
      0xffffffff
      mul
      not
      and
      swap1
      sstore
      0x04
      add
      0x20
      dup2
      0x03
      add
      div
      swap3
      dup4
      add
      swap3
      0x01
      sub
      mul
      jump(tag_3561)
    tag_3562:
      pop
    tag_3559:
      pop
      tag_3563
      swap3
      swap2
      pop
      tag_3564
      jump	// in
    tag_3563:
      pop
      swap1
      jump	// out
    tag_3564:
    tag_3565:
      dup1
      dup3
      gt
      iszero
      tag_3563
      jumpi
      0x00
      dup2
      sstore
      0x01
      add
      jump(tag_3565)
        /* "#utility.yul":14:194   */
    tag_47:
        /* "#utility.yul":73:79   */
      0x00
        /* "#utility.yul":126:128   */
      0x20
        /* "#utility.yul":114:123   */
      dup3
        /* "#utility.yul":105:112   */
      dup5
        /* "#utility.yul":101:124   */
      sub
        /* "#utility.yul":97:129   */
      slt
        /* "#utility.yul":94:146   */
      iszero
      tag_3592
      jumpi
        /* "#utility.yul":142:143   */
      0x00
        /* "#utility.yul":139:140   */
      dup1
        /* "#utility.yul":132:144   */
      revert
        /* "#utility.yul":94:146   */
    tag_3592:
      pop
        /* "#utility.yul":165:188   */
      calldataload
      swap2
        /* "#utility.yul":14:194   */
      swap1
      pop
      jump	// out
        /* "#utility.yul":199:549   */
    tag_53:
        /* "#utility.yul":266:272   */
      0x00
        /* "#utility.yul":274:280   */
      dup1
        /* "#utility.yul":327:329   */
      0x40
        /* "#utility.yul":315:324   */
      dup4
        /* "#utility.yul":306:313   */
      dup6
        /* "#utility.yul":302:325   */
      sub
        /* "#utility.yul":298:330   */
      slt
        /* "#utility.yul":295:347   */
      iszero
      tag_3594
      jumpi
        /* "#utility.yul":343:344   */
      0x00
        /* "#utility.yul":340:341   */
      dup1
        /* "#utility.yul":333:345   */
      revert
        /* "#utility.yul":295:347   */
    tag_3594:
        /* "#utility.yul":382:391   */
      dup3
        /* "#utility.yul":369:392   */
      calldataload
        /* "#utility.yul":432:448   */
      0xffffffffffffff
        /* "#utility.yul":425:430   */
      dup2
        /* "#utility.yul":421:449   */
      and
        /* "#utility.yul":414:419   */
      dup2
        /* "#utility.yul":411:450   */
      eq
        /* "#utility.yul":401:468   */
      tag_3595
      jumpi
        /* "#utility.yul":464:465   */
      0x00
        /* "#utility.yul":461:462   */
      dup1
        /* "#utility.yul":454:466   */
      revert
        /* "#utility.yul":401:468   */
    tag_3595:
        /* "#utility.yul":487:492   */
      swap5
        /* "#utility.yul":539:541   */
      0x20
        /* "#utility.yul":524:542   */
      swap4
      swap1
      swap4
      add
        /* "#utility.yul":511:543   */
      calldataload
      swap4
      pop
      pop
      pop
        /* "#utility.yul":199:549   */
      jump	// out
        /* "#utility.yul":554:1212   */
    tag_64:
        /* "#utility.yul":725:727   */
      0x20
        /* "#utility.yul":777:798   */
      dup1
      dup3
      mstore
        /* "#utility.yul":847:860   */
      dup3
      mload
        /* "#utility.yul":750:768   */
      dup3
      dup3
      add
        /* "#utility.yul":869:891   */
      dup2
      swap1
      mstore
        /* "#utility.yul":696:700   */
      0x00
      swap2
        /* "#utility.yul":725:727   */
      swap1
        /* "#utility.yul":948:963   */
      dup5
      dup3
      add
      swap1
        /* "#utility.yul":922:924   */
      0x40
        /* "#utility.yul":907:925   */
      dup6
      add
      swap1
        /* "#utility.yul":696:700   */
      dup5
        /* "#utility.yul":991:1186   */
    tag_3597:
        /* "#utility.yul":1005:1011   */
      dup2
        /* "#utility.yul":1002:1003   */
      dup2
        /* "#utility.yul":999:1012   */
      lt
        /* "#utility.yul":991:1186   */
      iszero
      tag_3599
      jumpi
        /* "#utility.yul":1070:1083   */
      dup4
      mload
      sub(shl(0xa0, 0x01), 0x01)
        /* "#utility.yul":1066:1105   */
      and
        /* "#utility.yul":1054:1106   */
      dup4
      mstore
        /* "#utility.yul":1161:1176   */
      swap3
      dup5
      add
      swap3
        /* "#utility.yul":1126:1138   */
      swap2
      dup5
      add
      swap2
        /* "#utility.yul":1102:1103   */
      0x01
        /* "#utility.yul":1020:1029   */
      add
        /* "#utility.yul":991:1186   */
      jump(tag_3597)
    tag_3599:
      pop
        /* "#utility.yul":1203:1206   */
      swap1
      swap7
        /* "#utility.yul":554:1212   */
      swap6
      pop
      pop
      pop
      pop
      pop
      pop
      jump	// out
        /* "#utility.yul":1217:1338   */
    tag_3567:
        /* "#utility.yul":1302:1312   */
      0xffffffff
        /* "#utility.yul":1295:1300   */
      dup2
        /* "#utility.yul":1291:1313   */
      and
        /* "#utility.yul":1284:1289   */
      dup2
        /* "#utility.yul":1281:1314   */
      eq
        /* "#utility.yul":1271:1332   */
      tag_1069
      jumpi
        /* "#utility.yul":1328:1329   */
      0x00
        /* "#utility.yul":1325:1326   */
      dup1
        /* "#utility.yul":1318:1330   */
      revert
        /* "#utility.yul":1343:1588   */
    tag_67:
        /* "#utility.yul":1401:1407   */
      0x00
        /* "#utility.yul":1454:1456   */
      0x20
        /* "#utility.yul":1442:1451   */
      dup3
        /* "#utility.yul":1433:1440   */
      dup5
        /* "#utility.yul":1429:1452   */
      sub
        /* "#utility.yul":1425:1457   */
      slt
        /* "#utility.yul":1422:1474   */
      iszero
      tag_3603
      jumpi
        /* "#utility.yul":1470:1471   */
      0x00
        /* "#utility.yul":1467:1468   */
      dup1
        /* "#utility.yul":1460:1472   */
      revert
        /* "#utility.yul":1422:1474   */
    tag_3603:
        /* "#utility.yul":1509:1518   */
      dup2
        /* "#utility.yul":1496:1519   */
      calldataload
        /* "#utility.yul":1528:1558   */
      tag_2909
        /* "#utility.yul":1552:1557   */
      dup2
        /* "#utility.yul":1528:1558   */
      tag_3567
      jump	// in
        /* "#utility.yul":1593:3162   */
    tag_95:
        /* "#utility.yul":1797:1801   */
      0x00
        /* "#utility.yul":1826:1828   */
      0x20
        /* "#utility.yul":1866:1868   */
      dup1
        /* "#utility.yul":1855:1864   */
      dup4
        /* "#utility.yul":1851:1869   */
      add
        /* "#utility.yul":1896:1898   */
      dup2
        /* "#utility.yul":1885:1894   */
      dup5
        /* "#utility.yul":1878:1899   */
      mstore
        /* "#utility.yul":1919:1925   */
      dup1
        /* "#utility.yul":1954:1960   */
      dup6
        /* "#utility.yul":1948:1961   */
      mload
        /* "#utility.yul":1985:1991   */
      dup1
        /* "#utility.yul":1977:1983   */
      dup4
        /* "#utility.yul":1970:1992   */
      mstore
        /* "#utility.yul":2011:2013   */
      0x40
        /* "#utility.yul":2001:2013   */
      swap3
      pop
        /* "#utility.yul":2044:2046   */
      dup3
        /* "#utility.yul":2033:2042   */
      dup7
        /* "#utility.yul":2029:2047   */
      add
        /* "#utility.yul":2022:2047   */
      swap2
      pop
        /* "#utility.yul":2106:2108   */
      dup3
        /* "#utility.yul":2096:2102   */
      dup2
        /* "#utility.yul":2093:2094   */
      0x05
        /* "#utility.yul":2089:2103   */
      shl
        /* "#utility.yul":2078:2087   */
      dup8
        /* "#utility.yul":2074:2104   */
      add
        /* "#utility.yul":2070:2109   */
      add
        /* "#utility.yul":2144:2146   */
      dup5
        /* "#utility.yul":2136:2142   */
      dup9
        /* "#utility.yul":2132:2147   */
      add
        /* "#utility.yul":2165:2166   */
      0x00
        /* "#utility.yul":2186:2187   */
      dup1
        /* "#utility.yul":2196:3133   */
    tag_3606:
        /* "#utility.yul":2212:2218   */
      dup5
        /* "#utility.yul":2207:2210   */
      dup2
        /* "#utility.yul":2204:2219   */
      lt
        /* "#utility.yul":2196:3133   */
      iszero
      tag_3608
      jumpi
        /* "#utility.yul":2281:2303   */
      dup10
      dup5
      sub
      not(0x3f)
        /* "#utility.yul":2277:2313   */
      add
        /* "#utility.yul":2265:2314   */
      dup7
      mstore
        /* "#utility.yul":2337:2350   */
      dup3
      mload
        /* "#utility.yul":2424:2433   */
      dup1
      mload
      sub(shl(0xa0, 0x01), 0x01)
        /* "#utility.yul":2420:2455   */
      and
        /* "#utility.yul":2405:2456   */
      dup6
      mstore
        /* "#utility.yul":2495:2506   */
      dup9
      add
        /* "#utility.yul":2489:2507   */
      mload
        /* "#utility.yul":2527:2542   */
      dup9
      dup6
      add
        /* "#utility.yul":2520:2547   */
      dup9
      swap1
      mstore
        /* "#utility.yul":2608:2627   */
      dup1
      mload
        /* "#utility.yul":2377:2392   */
      dup9
      dup7
      add
        /* "#utility.yul":2640:2664   */
      dup2
      swap1
      mstore
        /* "#utility.yul":2730:2751   */
      swap1
      dup10
      add
      swap1
        /* "#utility.yul":2775:2776   */
      dup4
      swap1
        /* "#utility.yul":2698:2700   */
      0x60
        /* "#utility.yul":2686:2701   */
      dup8
      add
      swap1
        /* "#utility.yul":2789:3025   */
    tag_3609:
        /* "#utility.yul":2805:2813   */
      dup1
        /* "#utility.yul":2800:2803   */
      dup4
        /* "#utility.yul":2797:2814   */
      lt
        /* "#utility.yul":2789:3025   */
      iszero
      tag_3611
      jumpi
        /* "#utility.yul":2886:2901   */
      dup4
      mload
      not(sub(shl(0xe0, 0x01), 0x01))
        /* "#utility.yul":2882:2924   */
      and
        /* "#utility.yul":2868:2925   */
      dup3
      mstore
        /* "#utility.yul":2994:3011   */
      swap3
      dup12
      add
      swap3
        /* "#utility.yul":2833:2834   */
      0x01
        /* "#utility.yul":2824:2835   */
      swap3
      swap1
      swap3
      add
      swap2
        /* "#utility.yul":2951:2965   */
      swap1
      dup12
      add
      swap1
        /* "#utility.yul":2789:3025   */
      jump(tag_3609)
    tag_3611:
      pop
        /* "#utility.yul":3111:3123   */
      swap8
      dup11
      add
      swap8
        /* "#utility.yul":3048:3053   */
      swap6
      pop
      pop
      pop
        /* "#utility.yul":3076:3091   */
      swap2
      dup8
      add
      swap2
        /* "#utility.yul":2238:2239   */
      0x01
        /* "#utility.yul":2229:2240   */
      add
        /* "#utility.yul":2196:3133   */
      jump(tag_3606)
    tag_3608:
      pop
        /* "#utility.yul":3150:3156   */
      swap2
      swap10
        /* "#utility.yul":1593:3162   */
      swap9
      pop
      pop
      pop
      pop
      pop
      pop
      pop
      pop
      pop
      jump	// out
        /* "#utility.yul":3167:3417   */
    tag_3568:
        /* "#utility.yul":3252:3253   */
      0x00
        /* "#utility.yul":3262:3375   */
    tag_3613:
        /* "#utility.yul":3276:3282   */
      dup4
        /* "#utility.yul":3273:3274   */
      dup2
        /* "#utility.yul":3270:3283   */
      lt
        /* "#utility.yul":3262:3375   */
      iszero
      tag_3615
      jumpi
        /* "#utility.yul":3352:3363   */
      dup2
      dup2
      add
        /* "#utility.yul":3346:3364   */
      mload
        /* "#utility.yul":3333:3344   */
      dup4
      dup3
      add
        /* "#utility.yul":3326:3365   */
      mstore
        /* "#utility.yul":3298:3300   */
      0x20
        /* "#utility.yul":3291:3301   */
      add
        /* "#utility.yul":3262:3375   */
      jump(tag_3613)
    tag_3615:
      pop
      pop
        /* "#utility.yul":3409:3410   */
      0x00
        /* "#utility.yul":3391:3407   */
      swap2
      add
        /* "#utility.yul":3384:3411   */
      mstore
        /* "#utility.yul":3167:3417   */
      jump	// out
        /* "#utility.yul":3422:3693   */
    tag_3569:
        /* "#utility.yul":3464:3467   */
      0x00
        /* "#utility.yul":3502:3507   */
      dup2
        /* "#utility.yul":3496:3508   */
      mload
        /* "#utility.yul":3529:3535   */
      dup1
        /* "#utility.yul":3524:3527   */
      dup5
        /* "#utility.yul":3517:3536   */
      mstore
        /* "#utility.yul":3545:3621   */
      tag_3617
        /* "#utility.yul":3614:3620   */
      dup2
        /* "#utility.yul":3607:3611   */
      0x20
        /* "#utility.yul":3602:3605   */
      dup7
        /* "#utility.yul":3598:3612   */
      add
        /* "#utility.yul":3591:3595   */
      0x20
        /* "#utility.yul":3584:3589   */
      dup7
        /* "#utility.yul":3580:3596   */
      add
        /* "#utility.yul":3545:3621   */
      tag_3568
      jump	// in
    tag_3617:
        /* "#utility.yul":3675:3677   */
      0x1f
        /* "#utility.yul":3654:3669   */
      add
      not(0x1f)
        /* "#utility.yul":3650:3679   */
      and
        /* "#utility.yul":3641:3680   */
      swap3
      swap1
      swap3
      add
        /* "#utility.yul":3682:3686   */
      0x20
        /* "#utility.yul":3637:3687   */
      add
      swap3
        /* "#utility.yul":3422:3693   */
      swap2
      pop
      pop
      jump	// out
        /* "#utility.yul":3698:4501   */
    tag_105:
        /* "#utility.yul":3860:3864   */
      0x00
        /* "#utility.yul":3889:3891   */
      0x20
        /* "#utility.yul":3929:3931   */
      dup1
        /* "#utility.yul":3918:3927   */
      dup4
        /* "#utility.yul":3914:3932   */
      add
        /* "#utility.yul":3959:3961   */
      dup2
        /* "#utility.yul":3948:3957   */
      dup5
        /* "#utility.yul":3941:3962   */
      mstore
        /* "#utility.yul":3982:3988   */
      dup1
        /* "#utility.yul":4017:4023   */
      dup6
        /* "#utility.yul":4011:4024   */
      mload
        /* "#utility.yul":4048:4054   */
      dup1
        /* "#utility.yul":4040:4046   */
      dup4
        /* "#utility.yul":4033:4055   */
      mstore
        /* "#utility.yul":4086:4088   */
      0x40
        /* "#utility.yul":4075:4084   */
      dup7
        /* "#utility.yul":4071:4089   */
      add
        /* "#utility.yul":4064:4089   */
      swap2
      pop
        /* "#utility.yul":4148:4150   */
      0x40
        /* "#utility.yul":4138:4144   */
      dup2
        /* "#utility.yul":4135:4136   */
      0x05
        /* "#utility.yul":4131:4145   */
      shl
        /* "#utility.yul":4120:4129   */
      dup8
        /* "#utility.yul":4116:4146   */
      add
        /* "#utility.yul":4112:4151   */
      add
        /* "#utility.yul":4098:4151   */
      swap3
      pop
        /* "#utility.yul":4186:4188   */
      dup4
        /* "#utility.yul":4178:4184   */
      dup8
        /* "#utility.yul":4174:4189   */
      add
        /* "#utility.yul":4207:4208   */
      0x00
        /* "#utility.yul":4217:4472   */
    tag_3619:
        /* "#utility.yul":4231:4237   */
      dup3
        /* "#utility.yul":4228:4229   */
      dup2
        /* "#utility.yul":4225:4238   */
      lt
        /* "#utility.yul":4217:4472   */
      iszero
      tag_3621
      jumpi
        /* "#utility.yul":4324:4326   */
      0x3f
        /* "#utility.yul":4320:4327   */
      not
        /* "#utility.yul":4308:4317   */
      dup9
        /* "#utility.yul":4300:4306   */
      dup7
        /* "#utility.yul":4296:4318   */
      sub
        /* "#utility.yul":4292:4328   */
      add
        /* "#utility.yul":4287:4290   */
      dup5
        /* "#utility.yul":4280:4329   */
      mstore
        /* "#utility.yul":4352:4392   */
      tag_3622
        /* "#utility.yul":4385:4391   */
      dup6
        /* "#utility.yul":4376:4382   */
      dup4
        /* "#utility.yul":4370:4383   */
      mload
        /* "#utility.yul":4352:4392   */
      tag_3569
      jump	// in
    tag_3622:
        /* "#utility.yul":4342:4392   */
      swap5
      pop
        /* "#utility.yul":4450:4462   */
      swap3
      dup6
      add
      swap3
        /* "#utility.yul":4415:4430   */
      swap1
      dup6
      add
      swap1
        /* "#utility.yul":4253:4254   */
      0x01
        /* "#utility.yul":4246:4255   */
      add
        /* "#utility.yul":4217:4472   */
      jump(tag_3619)
    tag_3621:
      pop
        /* "#utility.yul":4489:4495   */
      swap3
      swap8
        /* "#utility.yul":3698:4501   */
      swap7
      pop
      pop
      pop
      pop
      pop
      pop
      pop
      jump	// out
        /* "#utility.yul":4698:4825   */
    tag_153:
        /* "#utility.yul":4759:4769   */
      0x4e487b71
        /* "#utility.yul":4754:4757   */
      0xe0
        /* "#utility.yul":4750:4770   */
      shl
        /* "#utility.yul":4747:4748   */
      0x00
        /* "#utility.yul":4740:4771   */
      mstore
        /* "#utility.yul":4790:4794   */
      0x01
        /* "#utility.yul":4787:4788   */
      0x04
        /* "#utility.yul":4780:4795   */
      mstore
        /* "#utility.yul":4814:4818   */
      0x24
        /* "#utility.yul":4811:4812   */
      0x00
        /* "#utility.yul":4804:4819   */
      revert
        /* "#utility.yul":4830:5231   */
    tag_156:
        /* "#utility.yul":5042:5067   */
      swap1
      dup2
      mstore
        /* "#utility.yul":5103:5105   */
      0x40
        /* "#utility.yul":5098:5100   */
      0x20
        /* "#utility.yul":5083:5101   */
      dup3
      add
        /* "#utility.yul":5076:5106   */
      dup2
      swap1
      mstore
        /* "#utility.yul":5142:5143   */
      0x06
        /* "#utility.yul":5122:5140   */
      swap1
      dup3
      add
        /* "#utility.yul":5115:5144   */
      mstore
      shl(0xd2, 0x1b585c9ad95d)
        /* "#utility.yul":5175:5177   */
      0x60
        /* "#utility.yul":5160:5178   */
      dup3
      add
        /* "#utility.yul":5153:5189   */
      mstore
        /* "#utility.yul":5221:5224   */
      0x80
        /* "#utility.yul":5206:5225   */
      add
      swap1
        /* "#utility.yul":4830:5231   */
      jump	// out
        /* "#utility.yul":5236:5363   */
    tag_3570:
        /* "#utility.yul":5297:5307   */
      0x4e487b71
        /* "#utility.yul":5292:5295   */
      0xe0
        /* "#utility.yul":5288:5308   */
      shl
        /* "#utility.yul":5285:5286   */
      0x00
        /* "#utility.yul":5278:5309   */
      mstore
        /* "#utility.yul":5328:5332   */
      0x11
        /* "#utility.yul":5325:5326   */
      0x04
        /* "#utility.yul":5318:5333   */
      mstore
        /* "#utility.yul":5352:5356   */
      0x24
        /* "#utility.yul":5349:5350   */
      0x00
        /* "#utility.yul":5342:5357   */
      revert
        /* "#utility.yul":5368:5496   */
    tag_158:
        /* "#utility.yul":5435:5444   */
      dup2
      dup2
      sub
        /* "#utility.yul":5456:5467   */
      dup2
      dup2
      gt
        /* "#utility.yul":5453:5490   */
      iszero
      tag_3095
      jumpi
        /* "#utility.yul":5470:5488   */
      tag_3095
      tag_3570
      jump	// in
        /* "#utility.yul":5501:5628   */
    tag_162:
        /* "#utility.yul":5562:5572   */
      0x4e487b71
        /* "#utility.yul":5557:5560   */
      0xe0
        /* "#utility.yul":5553:5573   */
      shl
        /* "#utility.yul":5550:5551   */
      0x00
        /* "#utility.yul":5543:5574   */
      mstore
        /* "#utility.yul":5593:5597   */
      0x32
        /* "#utility.yul":5590:5591   */
      0x04
        /* "#utility.yul":5583:5598   */
      mstore
        /* "#utility.yul":5617:5621   */
      0x24
        /* "#utility.yul":5614:5615   */
      0x00
        /* "#utility.yul":5607:5622   */
      revert
        /* "#utility.yul":5633:5771   */
    tag_3571:
      sub(shl(0xa0, 0x01), 0x01)
        /* "#utility.yul":5715:5746   */
      dup2
      and
        /* "#utility.yul":5705:5747   */
      dup2
      eq
        /* "#utility.yul":5695:5765   */
      tag_1069
      jumpi
        /* "#utility.yul":5761:5762   */
      0x00
        /* "#utility.yul":5758:5759   */
      dup1
        /* "#utility.yul":5751:5763   */
      revert
        /* "#utility.yul":5776:5928   */
    tag_3572:
        /* "#utility.yul":5862:5875   */
      dup1
      mload
        /* "#utility.yul":5884:5922   */
      tag_2254
        /* "#utility.yul":5862:5875   */
      dup2
        /* "#utility.yul":5884:5922   */
      tag_3571
      jump	// in
        /* "#utility.yul":5933:6206   */
    tag_167:
        /* "#utility.yul":6018:6024   */
      0x00
        /* "#utility.yul":6071:6073   */
      0x20
        /* "#utility.yul":6059:6068   */
      dup3
        /* "#utility.yul":6050:6057   */
      dup5
        /* "#utility.yul":6046:6069   */
      sub
        /* "#utility.yul":6042:6074   */
      slt
        /* "#utility.yul":6039:6091   */
      iszero
      tag_3636
      jumpi
        /* "#utility.yul":6087:6088   */
      0x00
        /* "#utility.yul":6084:6085   */
      dup1
        /* "#utility.yul":6077:6089   */
      revert
        /* "#utility.yul":6039:6091   */
    tag_3636:
        /* "#utility.yul":6119:6128   */
      dup2
        /* "#utility.yul":6113:6129   */
      mload
        /* "#utility.yul":6138:6176   */
      tag_2909
        /* "#utility.yul":6170:6175   */
      dup2
        /* "#utility.yul":6138:6176   */
      tag_3571
      jump	// in
        /* "#utility.yul":6211:6619   */
    tag_170:
        /* "#utility.yul":6423:6448   */
      swap1
      dup2
      mstore
        /* "#utility.yul":6484:6486   */
      0x40
        /* "#utility.yul":6479:6481   */
      0x20
        /* "#utility.yul":6464:6482   */
      dup3
      add
        /* "#utility.yul":6457:6487   */
      dup2
      swap1
      mstore
        /* "#utility.yul":6523:6525   */
      0x0c
        /* "#utility.yul":6503:6521   */
      swap1
      dup3
      add
        /* "#utility.yul":6496:6526   */
      mstore
      shl(0xa0, 0x636f756e7465727061727479)
        /* "#utility.yul":6557:6559   */
      0x60
        /* "#utility.yul":6542:6560   */
      dup3
      add
        /* "#utility.yul":6535:6577   */
      mstore
        /* "#utility.yul":6609:6612   */
      0x80
        /* "#utility.yul":6594:6613   */
      add
      swap1
        /* "#utility.yul":6211:6619   */
      jump	// out
        /* "#utility.yul":6624:7030   */
    tag_177:
        /* "#utility.yul":6836:6861   */
      swap1
      dup2
      mstore
        /* "#utility.yul":6897:6899   */
      0x40
        /* "#utility.yul":6892:6894   */
      0x20
        /* "#utility.yul":6877:6895   */
      dup3
      add
        /* "#utility.yul":6870:6900   */
      dup2
      swap1
      mstore
        /* "#utility.yul":6936:6938   */
      0x0a
        /* "#utility.yul":6916:6934   */
      swap1
      dup3
      add
        /* "#utility.yul":6909:6939   */
      mstore
      shl(0xb2, 0x18dbdb1b185d195c985b)
        /* "#utility.yul":6970:6972   */
      0x60
        /* "#utility.yul":6955:6973   */
      dup3
      add
        /* "#utility.yul":6948:6988   */
      mstore
        /* "#utility.yul":7020:7023   */
      0x80
        /* "#utility.yul":7005:7024   */
      add
      swap1
        /* "#utility.yul":6624:7030   */
      jump	// out
        /* "#utility.yul":7035:7162   */
    tag_1973:
        /* "#utility.yul":7096:7106   */
      0x4e487b71
        /* "#utility.yul":7091:7094   */
      0xe0
        /* "#utility.yul":7087:7107   */
      shl
        /* "#utility.yul":7084:7085   */
      0x00
        /* "#utility.yul":7077:7108   */
      mstore
        /* "#utility.yul":7127:7131   */
      0x12
        /* "#utility.yul":7124:7125   */
      0x04
        /* "#utility.yul":7117:7132   */
      mstore
        /* "#utility.yul":7151:7155   */
      0x24
        /* "#utility.yul":7148:7149   */
      0x00
        /* "#utility.yul":7141:7156   */
      revert
        /* "#utility.yul":7167:7279   */
    tag_183:
        /* "#utility.yul":7199:7200   */
      0x00
        /* "#utility.yul":7225:7226   */
      dup3
        /* "#utility.yul":7215:7250   */
      tag_3643
      jumpi
        /* "#utility.yul":7230:7248   */
      tag_3643
      tag_1973
      jump	// in
    tag_3643:
      pop
        /* "#utility.yul":7264:7273   */
      mod
      swap1
        /* "#utility.yul":7167:7279   */
      jump	// out
        /* "#utility.yul":7284:7409   */
    tag_186:
        /* "#utility.yul":7349:7358   */
      dup1
      dup3
      add
        /* "#utility.yul":7370:7380   */
      dup1
      dup3
      gt
        /* "#utility.yul":7367:7403   */
      iszero
      tag_3095
      jumpi
        /* "#utility.yul":7383:7401   */
      tag_3095
      tag_3570
      jump	// in
        /* "#utility.yul":7962:8154   */
    tag_3574:
        /* "#utility.yul":8041:8054   */
      dup1
      mload
      sub(shl(0x80, 0x01), 0x01)
        /* "#utility.yul":8083:8129   */
      dup2
      and
        /* "#utility.yul":8073:8130   */
      dup2
      eq
        /* "#utility.yul":8063:8148   */
      tag_2254
      jumpi
        /* "#utility.yul":8144:8145   */
      0x00
        /* "#utility.yul":8141:8142   */
      dup1
        /* "#utility.yul":8134:8146   */
      revert
        /* "#utility.yul":8159:8319   */
    tag_3575:
        /* "#utility.yul":8236:8249   */
      dup1
      mload
        /* "#utility.yul":8289:8293   */
      0xff
        /* "#utility.yul":8278:8294   */
      dup2
      and
        /* "#utility.yul":8268:8295   */
      dup2
      eq
        /* "#utility.yul":8258:8313   */
      tag_2254
      jumpi
        /* "#utility.yul":8309:8310   */
      0x00
        /* "#utility.yul":8306:8307   */
      dup1
        /* "#utility.yul":8299:8311   */
      revert
        /* "#utility.yul":8324:8488   */
    tag_3576:
        /* "#utility.yul":8400:8413   */
      dup1
      mload
        /* "#utility.yul":8449:8462   */
      dup1
      iszero
        /* "#utility.yul":8442:8463   */
      iszero
        /* "#utility.yul":8432:8464   */
      dup2
      eq
        /* "#utility.yul":8422:8482   */
      tag_2254
      jumpi
        /* "#utility.yul":8478:8479   */
      0x00
        /* "#utility.yul":8475:8476   */
      dup1
        /* "#utility.yul":8468:8480   */
      revert
        /* "#utility.yul":8493:9099   */
    tag_198:
        /* "#utility.yul":8612:8618   */
      0x00
        /* "#utility.yul":8620:8626   */
      dup1
        /* "#utility.yul":8628:8634   */
      0x00
        /* "#utility.yul":8636:8642   */
      dup1
        /* "#utility.yul":8644:8650   */
      0x00
        /* "#utility.yul":8697:8700   */
      0xa0
        /* "#utility.yul":8685:8694   */
      dup7
        /* "#utility.yul":8676:8683   */
      dup9
        /* "#utility.yul":8672:8695   */
      sub
        /* "#utility.yul":8668:8701   */
      slt
        /* "#utility.yul":8665:8718   */
      iszero
      tag_3657
      jumpi
        /* "#utility.yul":8714:8715   */
      0x00
        /* "#utility.yul":8711:8712   */
      dup1
        /* "#utility.yul":8704:8716   */
      revert
        /* "#utility.yul":8665:8718   */
    tag_3657:
        /* "#utility.yul":8737:8777   */
      tag_3658
        /* "#utility.yul":8767:8776   */
      dup7
        /* "#utility.yul":8737:8777   */
      tag_3574
      jump	// in
    tag_3658:
        /* "#utility.yul":8727:8777   */
      swap5
      pop
        /* "#utility.yul":8796:8843   */
      tag_3659
        /* "#utility.yul":8839:8841   */
      0x20
        /* "#utility.yul":8828:8837   */
      dup8
        /* "#utility.yul":8824:8842   */
      add
        /* "#utility.yul":8796:8843   */
      tag_3575
      jump	// in
    tag_3659:
        /* "#utility.yul":8786:8843   */
      swap4
      pop
        /* "#utility.yul":8862:8909   */
      tag_3660
        /* "#utility.yul":8905:8907   */
      0x40
        /* "#utility.yul":8894:8903   */
      dup8
        /* "#utility.yul":8890:8908   */
      add
        /* "#utility.yul":8862:8909   */
      tag_3575
      jump	// in
    tag_3660:
        /* "#utility.yul":8852:8909   */
      swap3
      pop
        /* "#utility.yul":8928:8974   */
      tag_3661
        /* "#utility.yul":8970:8972   */
      0x60
        /* "#utility.yul":8959:8968   */
      dup8
        /* "#utility.yul":8955:8973   */
      add
        /* "#utility.yul":8928:8974   */
      tag_3576
      jump	// in
    tag_3661:
        /* "#utility.yul":8918:8974   */
      swap2
      pop
        /* "#utility.yul":9017:9020   */
      0x80
        /* "#utility.yul":9006:9015   */
      dup7
        /* "#utility.yul":9002:9021   */
      add
        /* "#utility.yul":8996:9022   */
      mload
        /* "#utility.yul":9031:9069   */
      tag_3662
        /* "#utility.yul":9063:9068   */
      dup2
        /* "#utility.yul":9031:9069   */
      tag_3571
      jump	// in
    tag_3662:
        /* "#utility.yul":9088:9093   */
      dup1
        /* "#utility.yul":9078:9093   */
      swap2
      pop
      pop
        /* "#utility.yul":8493:9099   */
      swap3
      swap6
      pop
      swap3
      swap6
      swap1
      swap4
      pop
      jump	// out
        /* "#utility.yul":9104:9349   */
    tag_203:
        /* "#utility.yul":9183:9189   */
      0x00
        /* "#utility.yul":9191:9197   */
      dup1
        /* "#utility.yul":9244:9246   */
      0x40
        /* "#utility.yul":9232:9241   */
      dup4
        /* "#utility.yul":9223:9230   */
      dup6
        /* "#utility.yul":9219:9242   */
      sub
        /* "#utility.yul":9215:9247   */
      slt
        /* "#utility.yul":9212:9264   */
      iszero
      tag_3664
      jumpi
        /* "#utility.yul":9260:9261   */
      0x00
        /* "#utility.yul":9257:9258   */
      dup1
        /* "#utility.yul":9250:9262   */
      revert
        /* "#utility.yul":9212:9264   */
    tag_3664:
      pop
      pop
        /* "#utility.yul":9283:9299   */
      dup1
      mload
        /* "#utility.yul":9339:9341   */
      0x20
        /* "#utility.yul":9324:9342   */
      swap1
      swap2
      add
        /* "#utility.yul":9318:9343   */
      mload
        /* "#utility.yul":9283:9299   */
      swap1
      swap3
        /* "#utility.yul":9318:9343   */
      swap1
      swap2
      pop
        /* "#utility.yul":9104:9349   */
      jump	// out
        /* "#utility.yul":9354:9538   */
    tag_212:
        /* "#utility.yul":9424:9430   */
      0x00
        /* "#utility.yul":9477:9479   */
      0x20
        /* "#utility.yul":9465:9474   */
      dup3
        /* "#utility.yul":9456:9463   */
      dup5
        /* "#utility.yul":9452:9475   */
      sub
        /* "#utility.yul":9448:9480   */
      slt
        /* "#utility.yul":9445:9497   */
      iszero
      tag_3666
      jumpi
        /* "#utility.yul":9493:9494   */
      0x00
        /* "#utility.yul":9490:9491   */
      dup1
        /* "#utility.yul":9483:9495   */
      revert
        /* "#utility.yul":9445:9497   */
    tag_3666:
      pop
        /* "#utility.yul":9516:9532   */
      mload
      swap2
        /* "#utility.yul":9354:9538   */
      swap1
      pop
      jump	// out
        /* "#utility.yul":9543:9745   */
    tag_216:
      not(sub(shl(0xe0, 0x01), 0x01))
        /* "#utility.yul":9705:9738   */
      swap2
      swap1
      swap2
      and
        /* "#utility.yul":9687:9739   */
      dup2
      mstore
        /* "#utility.yul":9675:9677   */
      0x20
        /* "#utility.yul":9660:9678   */
      add
      swap1
        /* "#utility.yul":9543:9745   */
      jump	// out
        /* "#utility.yul":9750:10279   */
    tag_228:
        /* "#utility.yul":10010:10024   */
      swap5
      iszero
        /* "#utility.yul":10003:10025   */
      iszero
        /* "#utility.yul":9985:10026   */
      dup6
      mstore
        /* "#utility.yul":10069:10083   */
      swap3
      iszero
        /* "#utility.yul":10062:10084   */
      iszero
        /* "#utility.yul":10057:10059   */
      0x20
        /* "#utility.yul":10042:10060   */
      dup6
      add
        /* "#utility.yul":10035:10085   */
      mstore
        /* "#utility.yul":10128:10142   */
      swap1
      iszero
        /* "#utility.yul":10121:10143   */
      iszero
        /* "#utility.yul":10116:10118   */
      0x40
        /* "#utility.yul":10101:10119   */
      dup5
      add
        /* "#utility.yul":10094:10144   */
      mstore
        /* "#utility.yul":10187:10201   */
      iszero
        /* "#utility.yul":10180:10202   */
      iszero
        /* "#utility.yul":10175:10177   */
      0x60
        /* "#utility.yul":10160:10178   */
      dup4
      add
        /* "#utility.yul":10153:10203   */
      mstore
      sub(shl(0xa0, 0x01), 0x01)
        /* "#utility.yul":10240:10272   */
      and
        /* "#utility.yul":10234:10237   */
      0x80
        /* "#utility.yul":10219:10238   */
      dup3
      add
        /* "#utility.yul":10212:10273   */
      mstore
        /* "#utility.yul":9972:9975   */
      0xa0
        /* "#utility.yul":9957:9976   */
      add
      swap1
        /* "#utility.yul":9750:10279   */
      jump	// out
        /* "#utility.yul":12388:12556   */
    tag_278:
        /* "#utility.yul":12461:12470   */
      dup1
      dup3
      mul
        /* "#utility.yul":12492:12501   */
      dup2
      iszero
        /* "#utility.yul":12509:12524   */
      dup3
      dup3
      div
        /* "#utility.yul":12503:12525   */
      dup5
      eq
        /* "#utility.yul":12489:12526   */
      or
        /* "#utility.yul":12479:12550   */
      tag_3095
      jumpi
        /* "#utility.yul":12530:12548   */
      tag_3095
      tag_3570
      jump	// in
        /* "#utility.yul":12561:12987   */
    tag_283:
      shl(0xca, 0x1858d8dbdd5b9d)
        /* "#utility.yul":12807:12810   */
      dup2
        /* "#utility.yul":12800:12822   */
      mstore
        /* "#utility.yul":12782:12785   */
      0x00
        /* "#utility.yul":12851:12857   */
      dup3
        /* "#utility.yul":12845:12858   */
      mload
        /* "#utility.yul":12867:12941   */
      tag_3678
        /* "#utility.yul":12934:12940   */
      dup2
        /* "#utility.yul":12930:12931   */
      0x07
        /* "#utility.yul":12925:12928   */
      dup6
        /* "#utility.yul":12921:12932   */
      add
        /* "#utility.yul":12914:12918   */
      0x20
        /* "#utility.yul":12906:12912   */
      dup8
        /* "#utility.yul":12902:12919   */
      add
        /* "#utility.yul":12867:12941   */
      tag_3568
      jump	// in
    tag_3678:
        /* "#utility.yul":12961:12977   */
      swap2
      swap1
      swap2
      add
        /* "#utility.yul":12979:12980   */
      0x07
        /* "#utility.yul":12957:12981   */
      add
      swap3
        /* "#utility.yul":12561:12987   */
      swap2
      pop
      pop
      jump	// out
        /* "#utility.yul":12992:13309   */
    tag_285:
      sub(shl(0xa0, 0x01), 0x01)
        /* "#utility.yul":13169:13201   */
      dup4
      and
        /* "#utility.yul":13151:13202   */
      dup2
      mstore
        /* "#utility.yul":13238:13240   */
      0x40
        /* "#utility.yul":13233:13235   */
      0x20
        /* "#utility.yul":13218:13236   */
      dup3
      add
        /* "#utility.yul":13211:13241   */
      dup2
      swap1
      mstore
      0x00
      swap1
        /* "#utility.yul":13258:13303   */
      tag_3680
      swap1
        /* "#utility.yul":13284:13302   */
      dup4
      add
        /* "#utility.yul":13276:13282   */
      dup5
        /* "#utility.yul":13258:13303   */
      tag_3569
      jump	// in
    tag_3680:
        /* "#utility.yul":13250:13303   */
      swap5
        /* "#utility.yul":12992:13309   */
      swap4
      pop
      pop
      pop
      pop
      jump	// out
        /* "#utility.yul":13314:13449   */
    tag_293:
        /* "#utility.yul":13353:13356   */
      0x00
        /* "#utility.yul":13374:13391   */
      0x01
      dup3
      add
        /* "#utility.yul":13371:13414   */
      tag_3683
      jumpi
        /* "#utility.yul":13394:13412   */
      tag_3683
      tag_3570
      jump	// in
    tag_3683:
      pop
        /* "#utility.yul":13441:13442   */
      0x01
        /* "#utility.yul":13430:13443   */
      add
      swap1
        /* "#utility.yul":13314:13449   */
      jump	// out
        /* "#utility.yul":13454:13602   */
    tag_299:
        /* "#utility.yul":13542:13546   */
      0xff
        /* "#utility.yul":13521:13533   */
      dup2
      dup2
      and
        /* "#utility.yul":13535:13547   */
      dup4
      dup3
      and
        /* "#utility.yul":13517:13548   */
      add
      swap1
        /* "#utility.yul":13560:13573   */
      dup2
      gt
        /* "#utility.yul":13557:13596   */
      iszero
      tag_3095
      jumpi
        /* "#utility.yul":13576:13594   */
      tag_3095
      tag_3570
      jump	// in
        /* "#utility.yul":13819:14291   */
    tag_305:
        /* "#utility.yul":14051:14053   */
      0x60
        /* "#utility.yul":14040:14049   */
      dup2
        /* "#utility.yul":14033:14054   */
      mstore
        /* "#utility.yul":14014:14018   */
      0x00
        /* "#utility.yul":14077:14122   */
      tag_3689
        /* "#utility.yul":14118:14120   */
      0x60
        /* "#utility.yul":14107:14116   */
      dup4
        /* "#utility.yul":14103:14121   */
      add
        /* "#utility.yul":14095:14101   */
      dup7
        /* "#utility.yul":14077:14122   */
      tag_3569
      jump	// in
    tag_3689:
        /* "#utility.yul":14170:14179   */
      dup3
        /* "#utility.yul":14162:14168   */
      dup2
        /* "#utility.yul":14158:14180   */
      sub
        /* "#utility.yul":14153:14155   */
      0x20
        /* "#utility.yul":14142:14151   */
      dup5
        /* "#utility.yul":14138:14156   */
      add
        /* "#utility.yul":14131:14181   */
      mstore
        /* "#utility.yul":14198:14231   */
      tag_3690
        /* "#utility.yul":14224:14230   */
      dup2
        /* "#utility.yul":14216:14222   */
      dup7
        /* "#utility.yul":14198:14231   */
      tag_3569
      jump	// in
    tag_3690:
        /* "#utility.yul":14190:14231   */
      swap2
      pop
      pop
        /* "#utility.yul":14279:14283   */
      0xff
        /* "#utility.yul":14271:14277   */
      dup4
        /* "#utility.yul":14267:14284   */
      and
        /* "#utility.yul":14262:14264   */
      0x40
        /* "#utility.yul":14251:14260   */
      dup4
        /* "#utility.yul":14247:14265   */
      add
        /* "#utility.yul":14240:14285   */
      mstore
        /* "#utility.yul":13819:14291   */
      swap5
      swap4
      pop
      pop
      pop
      pop
      jump	// out
        /* "#utility.yul":14640:14760   */
    tag_320:
        /* "#utility.yul":14680:14681   */
      0x00
        /* "#utility.yul":14706:14707   */
      dup3
        /* "#utility.yul":14696:14731   */
      tag_3694
      jumpi
        /* "#utility.yul":14711:14729   */
      tag_3694
      tag_1973
      jump	// in
    tag_3694:
      pop
        /* "#utility.yul":14745:14754   */
      div
      swap1
        /* "#utility.yul":14640:14760   */
      jump	// out
        /* "#utility.yul":15713:15840   */
    tag_392:
        /* "#utility.yul":15774:15784   */
      0x4e487b71
        /* "#utility.yul":15769:15772   */
      0xe0
        /* "#utility.yul":15765:15785   */
      shl
        /* "#utility.yul":15762:15763   */
      0x00
        /* "#utility.yul":15755:15786   */
      mstore
        /* "#utility.yul":15805:15809   */
      0x41
        /* "#utility.yul":15802:15803   */
      0x04
        /* "#utility.yul":15795:15810   */
      mstore
        /* "#utility.yul":15829:15833   */
      0x24
        /* "#utility.yul":15826:15827   */
      0x00
        /* "#utility.yul":15819:15834   */
      revert
        /* "#utility.yul":15845:16097   */
    tag_3577:
        /* "#utility.yul":15917:15919   */
      0x40
        /* "#utility.yul":15911:15920   */
      mload
        /* "#utility.yul":15959:15962   */
      0x01c0
        /* "#utility.yul":15947:15963   */
      dup2
      add
        /* "#utility.yul":15993:16011   */
      0xffffffffffffffff
        /* "#utility.yul":15978:16012   */
      dup2
      gt
        /* "#utility.yul":16014:16036   */
      dup3
      dup3
      lt
        /* "#utility.yul":15975:16037   */
      or
        /* "#utility.yul":15972:16060   */
      iszero
      tag_3699
      jumpi
        /* "#utility.yul":16040:16058   */
      tag_3699
      tag_392
      jump	// in
    tag_3699:
        /* "#utility.yul":16076:16078   */
      0x40
        /* "#utility.yul":16069:16091   */
      mstore
        /* "#utility.yul":15845:16097   */
      swap1
      jump	// out
        /* "#utility.yul":16102:16377   */
    tag_3578:
        /* "#utility.yul":16173:16175   */
      0x40
        /* "#utility.yul":16167:16176   */
      mload
        /* "#utility.yul":16238:16240   */
      0x1f
        /* "#utility.yul":16219:16232   */
      dup3
      add
      not(0x1f)
        /* "#utility.yul":16215:16242   */
      and
        /* "#utility.yul":16203:16243   */
      dup2
      add
        /* "#utility.yul":16273:16291   */
      0xffffffffffffffff
        /* "#utility.yul":16258:16292   */
      dup2
      gt
        /* "#utility.yul":16294:16316   */
      dup3
      dup3
      lt
        /* "#utility.yul":16255:16317   */
      or
        /* "#utility.yul":16252:16340   */
      iszero
      tag_3702
      jumpi
        /* "#utility.yul":16320:16338   */
      tag_3702
      tag_392
      jump	// in
    tag_3702:
        /* "#utility.yul":16356:16358   */
      0x40
        /* "#utility.yul":16349:16371   */
      mstore
        /* "#utility.yul":16102:16377   */
      swap2
      swap1
      pop
      jump	// out
        /* "#utility.yul":16382:17101   */
    tag_329:
        /* "#utility.yul":16462:16468   */
      0x00
        /* "#utility.yul":16515:16517   */
      0x20
        /* "#utility.yul":16503:16512   */
      dup3
        /* "#utility.yul":16494:16501   */
      dup5
        /* "#utility.yul":16490:16513   */
      sub
        /* "#utility.yul":16486:16518   */
      slt
        /* "#utility.yul":16483:16535   */
      iszero
      tag_3704
      jumpi
        /* "#utility.yul":16531:16532   */
      0x00
        /* "#utility.yul":16528:16529   */
      dup1
        /* "#utility.yul":16521:16533   */
      revert
        /* "#utility.yul":16483:16535   */
    tag_3704:
        /* "#utility.yul":16564:16573   */
      dup2
        /* "#utility.yul":16558:16574   */
      mload
        /* "#utility.yul":16593:16611   */
      0xffffffffffffffff
        /* "#utility.yul":16634:16636   */
      dup1
        /* "#utility.yul":16626:16632   */
      dup3
        /* "#utility.yul":16623:16637   */
      gt
        /* "#utility.yul":16620:16654   */
      iszero
      tag_3705
      jumpi
        /* "#utility.yul":16650:16651   */
      0x00
        /* "#utility.yul":16647:16648   */
      dup1
        /* "#utility.yul":16640:16652   */
      revert
        /* "#utility.yul":16620:16654   */
    tag_3705:
        /* "#utility.yul":16688:16694   */
      dup2
        /* "#utility.yul":16677:16686   */
      dup5
        /* "#utility.yul":16673:16695   */
      add
        /* "#utility.yul":16663:16695   */
      swap2
      pop
        /* "#utility.yul":16733:16740   */
      dup5
        /* "#utility.yul":16726:16730   */
      0x1f
        /* "#utility.yul":16722:16724   */
      dup4
        /* "#utility.yul":16718:16731   */
      add
        /* "#utility.yul":16714:16741   */
      slt
        /* "#utility.yul":16704:16759   */
      tag_3706
      jumpi
        /* "#utility.yul":16755:16756   */
      0x00
        /* "#utility.yul":16752:16753   */
      dup1
        /* "#utility.yul":16745:16757   */
      revert
        /* "#utility.yul":16704:16759   */
    tag_3706:
        /* "#utility.yul":16784:16786   */
      dup2
        /* "#utility.yul":16778:16787   */
      mload
        /* "#utility.yul":16806:16808   */
      dup2
        /* "#utility.yul":16802:16804   */
      dup2
        /* "#utility.yul":16799:16809   */
      gt
        /* "#utility.yul":16796:16832   */
      iszero
      tag_3708
      jumpi
        /* "#utility.yul":16812:16830   */
      tag_3708
      tag_392
      jump	// in
    tag_3708:
        /* "#utility.yul":16854:16907   */
      tag_3709
        /* "#utility.yul":16897:16899   */
      0x1f
        /* "#utility.yul":16878:16891   */
      dup3
      add
      not(0x1f)
        /* "#utility.yul":16874:16901   */
      and
        /* "#utility.yul":16903:16905   */
      0x20
        /* "#utility.yul":16870:16906   */
      add
        /* "#utility.yul":16854:16907   */
      tag_3578
      jump	// in
    tag_3709:
        /* "#utility.yul":16841:16907   */
      swap2
      pop
        /* "#utility.yul":16930:16932   */
      dup1
        /* "#utility.yul":16923:16928   */
      dup3
        /* "#utility.yul":16916:16933   */
      mstore
        /* "#utility.yul":16970:16977   */
      dup6
        /* "#utility.yul":16965:16967   */
      0x20
        /* "#utility.yul":16960:16962   */
      dup3
        /* "#utility.yul":16956:16958   */
      dup6
        /* "#utility.yul":16952:16963   */
      add
        /* "#utility.yul":16948:16968   */
      add
        /* "#utility.yul":16945:16978   */
      gt
        /* "#utility.yul":16942:16995   */
      iszero
      tag_3710
      jumpi
        /* "#utility.yul":16991:16992   */
      0x00
        /* "#utility.yul":16988:16989   */
      dup1
        /* "#utility.yul":16981:16993   */
      revert
        /* "#utility.yul":16942:16995   */
    tag_3710:
        /* "#utility.yul":17004:17071   */
      tag_3711
        /* "#utility.yul":17068:17070   */
      dup2
        /* "#utility.yul":17063:17065   */
      0x20
        /* "#utility.yul":17056:17061   */
      dup5
        /* "#utility.yul":17052:17066   */
      add
        /* "#utility.yul":17047:17049   */
      0x20
        /* "#utility.yul":17043:17045   */
      dup7
        /* "#utility.yul":17039:17050   */
      add
        /* "#utility.yul":17004:17071   */
      tag_3568
      jump	// in
    tag_3711:
      pop
        /* "#utility.yul":17090:17095   */
      swap5
        /* "#utility.yul":16382:17101   */
      swap4
      pop
      pop
      pop
      pop
      jump	// out
        /* "#utility.yul":17885:18159   */
    tag_345:
      sub(shl(0xa0, 0x01), 0x01)
        /* "#utility.yul":18077:18109   */
      swap3
      swap1
      swap3
      and
        /* "#utility.yul":18059:18110   */
      dup3
      mstore
        /* "#utility.yul":18141:18143   */
      0x20
        /* "#utility.yul":18126:18144   */
      dup3
      add
        /* "#utility.yul":18119:18153   */
      mstore
        /* "#utility.yul":18047:18049   */
      0x40
        /* "#utility.yul":18032:18050   */
      add
      swap1
        /* "#utility.yul":17885:18159   */
      jump	// out
        /* "#utility.yul":18164:18366   */
    tag_349:
        /* "#utility.yul":18231:18237   */
      0x00
        /* "#utility.yul":18284:18286   */
      0x20
        /* "#utility.yul":18272:18281   */
      dup3
        /* "#utility.yul":18263:18270   */
      dup5
        /* "#utility.yul":18259:18282   */
      sub
        /* "#utility.yul":18255:18287   */
      slt
        /* "#utility.yul":18252:18304   */
      iszero
      tag_3716
      jumpi
        /* "#utility.yul":18300:18301   */
      0x00
        /* "#utility.yul":18297:18298   */
      dup1
        /* "#utility.yul":18290:18302   */
      revert
        /* "#utility.yul":18252:18304   */
    tag_3716:
        /* "#utility.yul":18323:18360   */
      tag_3096
        /* "#utility.yul":18350:18359   */
      dup3
        /* "#utility.yul":18323:18360   */
      tag_3576
      jump	// in
        /* "#utility.yul":18970:19556   */
    tag_383:
        /* "#utility.yul":19308:19310   */
      0x60
        /* "#utility.yul":19297:19306   */
      dup2
        /* "#utility.yul":19290:19311   */
      mstore
        /* "#utility.yul":19271:19275   */
      0x00
        /* "#utility.yul":19334:19383   */
      tag_3721
        /* "#utility.yul":19379:19381   */
      0x60
        /* "#utility.yul":19368:19377   */
      dup4
        /* "#utility.yul":19364:19382   */
      add
        /* "#utility.yul":18892:18893   */
      0x02
        /* "#utility.yul":18880:18894   */
      dup2
      mstore
      shl(0xf4, 0x04f5)
        /* "#utility.yul":18919:18923   */
      0x20
        /* "#utility.yul":18910:18924   */
      dup3
      add
        /* "#utility.yul":18903:18931   */
      mstore
        /* "#utility.yul":18956:18958   */
      0x40
        /* "#utility.yul":18947:18959   */
      add
      swap1
        /* "#utility.yul":18815:18965   */
      jump
        /* "#utility.yul":19334:19383   */
    tag_3721:
        /* "#utility.yul":19431:19440   */
      dup3
        /* "#utility.yul":19423:19429   */
      dup2
        /* "#utility.yul":19419:19441   */
      sub
        /* "#utility.yul":19414:19416   */
      0x20
        /* "#utility.yul":19403:19412   */
      dup5
        /* "#utility.yul":19399:19417   */
      add
        /* "#utility.yul":19392:19442   */
      mstore
        /* "#utility.yul":19459:19496   */
      tag_3722
        /* "#utility.yul":19489:19495   */
      dup2
        /* "#utility.yul":18892:18893   */
      0x02
        /* "#utility.yul":18880:18894   */
      dup2
      mstore
      shl(0xf4, 0x04f5)
        /* "#utility.yul":18919:18923   */
      0x20
        /* "#utility.yul":18910:18924   */
      dup3
      add
        /* "#utility.yul":18903:18931   */
      mstore
        /* "#utility.yul":18956:18958   */
      0x40
        /* "#utility.yul":18947:18959   */
      add
      swap1
        /* "#utility.yul":18815:18965   */
      jump
        /* "#utility.yul":19459:19496   */
    tag_3722:
        /* "#utility.yul":19451:19496   */
      swap2
      pop
      pop
        /* "#utility.yul":19544:19548   */
      0xff
        /* "#utility.yul":19536:19542   */
      dup4
        /* "#utility.yul":19532:19549   */
      and
        /* "#utility.yul":19527:19529   */
      0x40
        /* "#utility.yul":19516:19525   */
      dup4
        /* "#utility.yul":19512:19530   */
      add
        /* "#utility.yul":19505:19550   */
      mstore
        /* "#utility.yul":18970:19556   */
      swap3
      swap2
      pop
      pop
      jump	// out
        /* "#utility.yul":20173:22497   */
    tag_403:
        /* "#utility.yul":20392:20394   */
      0x20
        /* "#utility.yul":20444:20465   */
      dup1
      dup3
      mstore
        /* "#utility.yul":20514:20527   */
      dup3
      mload
        /* "#utility.yul":20417:20435   */
      dup3
      dup3
      add
        /* "#utility.yul":20536:20558   */
      dup2
      swap1
      mstore
        /* "#utility.yul":20363:20367   */
      0x00
      swap2
        /* "#utility.yul":20392:20394   */
      swap1
        /* "#utility.yul":20577:20579   */
      0x40
      swap1
        /* "#utility.yul":20595:20613   */
      dup2
      dup6
      add
      swap1
        /* "#utility.yul":20636:20651   */
      dup7
      dup5
      add
        /* "#utility.yul":20363:20367   */
      dup6
        /* "#utility.yul":20679:22471   */
    tag_3728:
        /* "#utility.yul":20693:20699   */
      dup3
        /* "#utility.yul":20690:20691   */
      dup2
        /* "#utility.yul":20687:20700   */
      lt
        /* "#utility.yul":20679:22471   */
      iszero
      tag_3730
      jumpi
        /* "#utility.yul":20752:20765   */
      dup2
      mload
        /* "#utility.yul":20805:20814   */
      dup1
      mload
      sub(shl(0xa0, 0x01), 0x01)
        /* "#utility.yul":7696:7727   */
      swap1
      dup2
      and
        /* "#utility.yul":7684:7728   */
      dup7
      mstore
        /* "#utility.yul":20859:20870   */
      dup8
      dup3
      add
        /* "#utility.yul":20853:20871   */
      mload
        /* "#utility.yul":7696:7727   */
      dup2
      and
        /* "#utility.yul":20925:20937   */
      dup9
      dup8
      add
        /* "#utility.yul":7684:7728   */
      mstore
        /* "#utility.yul":20979:20990   */
      dup7
      dup3
      add
        /* "#utility.yul":20973:20991   */
      mload
        /* "#utility.yul":7696:7727   */
      and
        /* "#utility.yul":21047:21059   */
      dup7
      dup7
      add
        /* "#utility.yul":7684:7728   */
      mstore
        /* "#utility.yul":21083:21087   */
      0x60
        /* "#utility.yul":21128:21139   */
      dup1
      dup3
      add
        /* "#utility.yul":21122:21140   */
      mload
        /* "#utility.yul":19945:19955   */
      0xffffffff
        /* "#utility.yul":19934:19956   */
      and
        /* "#utility.yul":21187:21199   */
      swap1
      dup7
      add
        /* "#utility.yul":19922:19957   */
      mstore
        /* "#utility.yul":21223:21227   */
      0x80
        /* "#utility.yul":21267:21278   */
      dup1
      dup3
      add
        /* "#utility.yul":21261:21279   */
      mload
        /* "#utility.yul":21247:21259   */
      swap1
      dup7
      add
        /* "#utility.yul":21240:21280   */
      mstore
        /* "#utility.yul":21303:21307   */
      0xa0
        /* "#utility.yul":21347:21358   */
      dup1
      dup3
      add
        /* "#utility.yul":21341:21359   */
      mload
        /* "#utility.yul":21327:21339   */
      swap1
      dup7
      add
        /* "#utility.yul":21320:21360   */
      mstore
        /* "#utility.yul":21383:21387   */
      0xc0
        /* "#utility.yul":21427:21438   */
      dup1
      dup3
      add
        /* "#utility.yul":21421:21439   */
      mload
        /* "#utility.yul":21407:21419   */
      swap1
      dup7
      add
        /* "#utility.yul":21400:21440   */
      mstore
        /* "#utility.yul":21463:21467   */
      0xe0
        /* "#utility.yul":21507:21518   */
      dup1
      dup3
      add
        /* "#utility.yul":21501:21519   */
      mload
        /* "#utility.yul":21487:21499   */
      swap1
      dup7
      add
        /* "#utility.yul":21480:21520   */
      mstore
        /* "#utility.yul":21543:21549   */
      0x0100
        /* "#utility.yul":21590:21601   */
      dup1
      dup3
      add
        /* "#utility.yul":21584:21602   */
      mload
        /* "#utility.yul":20044:20046   */
      0x0f
        /* "#utility.yul":20033:20054   */
      signextend
        /* "#utility.yul":21649:21661   */
      swap1
      dup7
      add
        /* "#utility.yul":20021:20055   */
      mstore
        /* "#utility.yul":21686:21692   */
      0x0120
        /* "#utility.yul":21733:21745   */
      dup1
      dup3
      add
        /* "#utility.yul":21727:21746   */
      mload
        /* "#utility.yul":20142:20160   */
      0xffffffffffffffff
        /* "#utility.yul":20131:20161   */
      swap1
      dup2
      and
        /* "#utility.yul":21793:21806   */
      swap2
      dup8
      add
        /* "#utility.yul":20119:20162   */
      swap2
      swap1
      swap2
      mstore
        /* "#utility.yul":21831:21837   */
      0x0140
        /* "#utility.yul":21878:21890   */
      dup1
      dup4
      add
        /* "#utility.yul":21872:21891   */
      mload
        /* "#utility.yul":20131:20161   */
      dup3
      and
        /* "#utility.yul":21938:21951   */
      swap1
      dup8
      add
        /* "#utility.yul":20119:20162   */
      mstore
        /* "#utility.yul":21976:21982   */
      0x0160
        /* "#utility.yul":22023:22035   */
      dup1
      dup4
      add
        /* "#utility.yul":22017:22036   */
      mload
        /* "#utility.yul":20131:20161   */
      dup3
      and
        /* "#utility.yul":22083:22096   */
      swap1
      dup8
      add
        /* "#utility.yul":20119:20162   */
      mstore
        /* "#utility.yul":22121:22127   */
      0x0180
        /* "#utility.yul":22168:22180   */
      dup1
      dup4
      add
        /* "#utility.yul":22162:22181   */
      mload
        /* "#utility.yul":20131:20161   */
      dup3
      and
        /* "#utility.yul":22228:22241   */
      swap1
      dup8
      add
        /* "#utility.yul":20119:20162   */
      mstore
        /* "#utility.yul":22266:22272   */
      0x01a0
        /* "#utility.yul":22313:22325   */
      swap2
      dup3
      add
        /* "#utility.yul":22307:22326   */
      mload
        /* "#utility.yul":20131:20161   */
      and
        /* "#utility.yul":22373:22386   */
      swap1
      dup6
      add
        /* "#utility.yul":20119:20162   */
      mstore
        /* "#utility.yul":22416:22422   */
      0x01c0
        /* "#utility.yul":22407:22423   */
      swap1
      swap4
      add
      swap3
        /* "#utility.yul":22446:22461   */
      swap1
      dup6
      add
      swap1
        /* "#utility.yul":20715:20716   */
      0x01
        /* "#utility.yul":20708:20717   */
      add
        /* "#utility.yul":20679:22471   */
      jump(tag_3728)
    tag_3730:
      pop
        /* "#utility.yul":22488:22491   */
      swap2
      swap8
        /* "#utility.yul":20173:22497   */
      swap7
      pop
      pop
      pop
      pop
      pop
      pop
      pop
      jump	// out
        /* "#utility.yul":22736:23032   */
    tag_497:
      sub(shl(0xa0, 0x01), 0x01)
        /* "#utility.yul":22927:22959   */
      swap3
      swap1
      swap3
      and
        /* "#utility.yul":22909:22960   */
      dup3
      mstore
        /* "#utility.yul":23008:23024   */
      0xffffffffffffff
        /* "#utility.yul":22996:23025   */
      and
        /* "#utility.yul":22991:22993   */
      0x20
        /* "#utility.yul":22976:22994   */
      dup3
      add
        /* "#utility.yul":22969:23026   */
      mstore
        /* "#utility.yul":22897:22899   */
      0x40
        /* "#utility.yul":22882:22900   */
      add
      swap1
        /* "#utility.yul":22736:23032   */
      jump	// out
        /* "#utility.yul":23772:24046   */
    tag_555:
        /* "#utility.yul":23946:23971   */
      swap2
      dup3
      mstore
      sub(shl(0xa0, 0x01), 0x01)
        /* "#utility.yul":24007:24039   */
      and
        /* "#utility.yul":24002:24004   */
      0x20
        /* "#utility.yul":23987:24005   */
      dup3
      add
        /* "#utility.yul":23980:24040   */
      mstore
        /* "#utility.yul":23934:23936   */
      0x40
        /* "#utility.yul":23919:23937   */
      add
      swap1
        /* "#utility.yul":23772:24046   */
      jump	// out
        /* "#utility.yul":24255:24473   */
    tag_599:
        /* "#utility.yul":24402:24404   */
      0x20
        /* "#utility.yul":24391:24400   */
      dup2
        /* "#utility.yul":24384:24405   */
      mstore
        /* "#utility.yul":24365:24369   */
      0x00
        /* "#utility.yul":24422:24467   */
      tag_3096
        /* "#utility.yul":24463:24465   */
      0x20
        /* "#utility.yul":24452:24461   */
      dup4
        /* "#utility.yul":24448:24466   */
      add
        /* "#utility.yul":24440:24446   */
      dup5
        /* "#utility.yul":24422:24467   */
      tag_3569
      jump	// in
        /* "#utility.yul":24953:25350   */
    tag_667:
        /* "#utility.yul":25184:25200   */
      0xffffffffffffff
        /* "#utility.yul":25172:25201   */
      swap4
      swap1
      swap4
      and
        /* "#utility.yul":25154:25202   */
      dup4
      mstore
      sub(shl(0xa0, 0x01), 0x01)
        /* "#utility.yul":25276:25291   */
      swap2
      dup3
      and
        /* "#utility.yul":25271:25273   */
      0x20
        /* "#utility.yul":25256:25274   */
      dup5
      add
        /* "#utility.yul":25249:25292   */
      mstore
        /* "#utility.yul":25328:25343   */
      and
        /* "#utility.yul":25323:25325   */
      0x40
        /* "#utility.yul":25308:25326   */
      dup3
      add
        /* "#utility.yul":25301:25344   */
      mstore
        /* "#utility.yul":25142:25144   */
      0x60
        /* "#utility.yul":25127:25145   */
      add
      swap1
        /* "#utility.yul":24953:25350   */
      jump	// out
        /* "#utility.yul":25967:26335   */
    tag_730:
        /* "#utility.yul":26064:26070   */
      0x00
        /* "#utility.yul":26072:26078   */
      dup1
        /* "#utility.yul":26080:26086   */
      0x00
        /* "#utility.yul":26088:26094   */
      dup1
        /* "#utility.yul":26141:26144   */
      0x80
        /* "#utility.yul":26129:26138   */
      dup6
        /* "#utility.yul":26120:26127   */
      dup8
        /* "#utility.yul":26116:26139   */
      sub
        /* "#utility.yul":26112:26145   */
      slt
        /* "#utility.yul":26109:26162   */
      iszero
      tag_3755
      jumpi
        /* "#utility.yul":26158:26159   */
      0x00
        /* "#utility.yul":26155:26156   */
      dup1
        /* "#utility.yul":26148:26160   */
      revert
        /* "#utility.yul":26109:26162   */
    tag_3755:
      pop
      pop
        /* "#utility.yul":26181:26197   */
      dup3
      mload
        /* "#utility.yul":26237:26239   */
      0x20
        /* "#utility.yul":26222:26240   */
      dup5
      add
        /* "#utility.yul":26216:26241   */
      mload
        /* "#utility.yul":26281:26283   */
      0x40
        /* "#utility.yul":26266:26284   */
      dup6
      add
        /* "#utility.yul":26260:26285   */
      mload
        /* "#utility.yul":26325:26327   */
      0x60
        /* "#utility.yul":26310:26328   */
      swap1
      swap6
      add
        /* "#utility.yul":26304:26329   */
      mload
        /* "#utility.yul":26181:26197   */
      swap2
      swap7
        /* "#utility.yul":26216:26241   */
      swap1
      swap6
      pop
        /* "#utility.yul":26304:26329   */
      swap1
      swap3
      pop
        /* "#utility.yul":25967:26335   */
      swap1
      pop
      jump	// out
        /* "#utility.yul":27447:27996   */
    tag_836:
        /* "#utility.yul":27713:27738   */
      swap5
      dup6
      mstore
        /* "#utility.yul":27786:27802   */
      0xffffffffffffff
        /* "#utility.yul":27774:27803   */
      swap4
      swap1
      swap4
      and
        /* "#utility.yul":27769:27771   */
      0x20
        /* "#utility.yul":27754:27772   */
      dup6
      add
        /* "#utility.yul":27747:27804   */
      mstore
        /* "#utility.yul":27835:27837   */
      0x40
        /* "#utility.yul":27820:27838   */
      dup5
      add
        /* "#utility.yul":27813:27847   */
      swap2
      swap1
      swap2
      mstore
      sub(shl(0xa0, 0x01), 0x01)
        /* "#utility.yul":27921:27936   */
      swap1
      dup2
      and
        /* "#utility.yul":27916:27918   */
      0x60
        /* "#utility.yul":27901:27919   */
      dup5
      add
        /* "#utility.yul":27894:27937   */
      mstore
        /* "#utility.yul":27974:27989   */
      and
        /* "#utility.yul":27968:27971   */
      0x80
        /* "#utility.yul":27953:27972   */
      dup3
      add
        /* "#utility.yul":27946:27990   */
      mstore
        /* "#utility.yul":27700:27703   */
      0xa0
        /* "#utility.yul":27685:27704   */
      add
      swap1
        /* "#utility.yul":27447:27996   */
      jump	// out
        /* "#utility.yul":28001:28297   */
    tag_910:
        /* "#utility.yul":28204:28220   */
      0xffffffffffffff
        /* "#utility.yul":28192:28221   */
      swap3
      swap1
      swap3
      and
        /* "#utility.yul":28174:28222   */
      dup3
      mstore
      sub(shl(0xa0, 0x01), 0x01)
        /* "#utility.yul":28258:28290   */
      and
        /* "#utility.yul":28253:28255   */
      0x20
        /* "#utility.yul":28238:28256   */
      dup3
      add
        /* "#utility.yul":28231:28291   */
      mstore
        /* "#utility.yul":28162:28164   */
      0x40
        /* "#utility.yul":28147:28165   */
      add
      swap1
        /* "#utility.yul":28001:28297   */
      jump	// out
        /* "#utility.yul":28302:28510   */
    tag_955:
        /* "#utility.yul":28372:28378   */
      0x00
        /* "#utility.yul":28425:28427   */
      0x20
        /* "#utility.yul":28413:28422   */
      dup3
        /* "#utility.yul":28404:28411   */
      dup5
        /* "#utility.yul":28400:28423   */
      sub
        /* "#utility.yul":28396:28428   */
      slt
        /* "#utility.yul":28393:28445   */
      iszero
      tag_3764
      jumpi
        /* "#utility.yul":28441:28442   */
      0x00
        /* "#utility.yul":28438:28439   */
      dup1
        /* "#utility.yul":28431:28443   */
      revert
        /* "#utility.yul":28393:28445   */
    tag_3764:
        /* "#utility.yul":28464:28504   */
      tag_3096
        /* "#utility.yul":28494:28503   */
      dup3
        /* "#utility.yul":28464:28504   */
      tag_3574
      jump	// in
        /* "#utility.yul":28515:28715   */
    tag_957:
      sub(shl(0x80, 0x01), 0x01)
        /* "#utility.yul":28651:28661   */
      dup3
      dup2
      and
        /* "#utility.yul":28639:28649   */
      dup3
      dup3
      and
        /* "#utility.yul":28635:28662   */
      sub
      swap1
        /* "#utility.yul":28674:28686   */
      dup1
      dup3
      gt
        /* "#utility.yul":28671:28709   */
      iszero
      tag_3768
      jumpi
        /* "#utility.yul":28689:28707   */
      tag_3768
      tag_3570
      jump	// in
    tag_3768:
        /* "#utility.yul":28671:28709   */
      pop
        /* "#utility.yul":28515:28715   */
      swap3
      swap2
      pop
      pop
      jump	// out
        /* "#utility.yul":29351:29773   */
    tag_3583:
        /* "#utility.yul":29440:29441   */
      0x01
        /* "#utility.yul":29483:29488   */
      dup2
        /* "#utility.yul":29440:29441   */
      dup2
        /* "#utility.yul":29497:29767   */
    tag_3772:
        /* "#utility.yul":29518:29525   */
      dup1
        /* "#utility.yul":29508:29516   */
      dup6
        /* "#utility.yul":29505:29526   */
      gt
        /* "#utility.yul":29497:29767   */
      iszero
      tag_3774
      jumpi
        /* "#utility.yul":29577:29581   */
      dup2
        /* "#utility.yul":29573:29574   */
      0x00
        /* "#utility.yul":29569:29575   */
      not
        /* "#utility.yul":29565:29582   */
      div
        /* "#utility.yul":29559:29563   */
      dup3
        /* "#utility.yul":29556:29583   */
      gt
        /* "#utility.yul":29553:29606   */
      iszero
      tag_3776
      jumpi
        /* "#utility.yul":29586:29604   */
      tag_3776
      tag_3570
      jump	// in
    tag_3776:
        /* "#utility.yul":29636:29643   */
      dup1
        /* "#utility.yul":29626:29634   */
      dup6
        /* "#utility.yul":29622:29644   */
      and
        /* "#utility.yul":29619:29674   */
      iszero
      tag_3777
      jumpi
        /* "#utility.yul":29656:29672   */
      swap2
      dup2
      mul
      swap2
        /* "#utility.yul":29619:29674   */
    tag_3777:
        /* "#utility.yul":29735:29757   */
      swap4
      dup5
      shr
      swap4
        /* "#utility.yul":29695:29710   */
      swap1
      dup1
      mul
      swap1
        /* "#utility.yul":29497:29767   */
      jump(tag_3772)
    tag_3774:
        /* "#utility.yul":29501:29504   */
      pop
        /* "#utility.yul":29351:29773   */
      swap3
      pop
      swap3
      swap1
      pop
      jump	// out
        /* "#utility.yul":29778:30584   */
    tag_3584:
        /* "#utility.yul":29827:29832   */
      0x00
        /* "#utility.yul":29857:29865   */
      dup3
        /* "#utility.yul":29847:29927   */
      tag_3779
      jumpi
      pop
        /* "#utility.yul":29898:29899   */
      0x01
        /* "#utility.yul":29912:29917   */
      jump(tag_3095)
        /* "#utility.yul":29847:29927   */
    tag_3779:
        /* "#utility.yul":29946:29950   */
      dup2
        /* "#utility.yul":29936:30012   */
      tag_3780
      jumpi
      pop
        /* "#utility.yul":29983:29984   */
      0x00
        /* "#utility.yul":29997:30002   */
      jump(tag_3095)
        /* "#utility.yul":29936:30012   */
    tag_3780:
        /* "#utility.yul":30028:30032   */
      dup2
        /* "#utility.yul":30046:30047   */
      0x01
        /* "#utility.yul":30041:30100   */
      dup2
      eq
      tag_3782
      jumpi
        /* "#utility.yul":30114:30115   */
      0x02
        /* "#utility.yul":30109:30239   */
      dup2
      eq
      tag_3783
      jumpi
        /* "#utility.yul":30021:30239   */
      jump(tag_3781)
        /* "#utility.yul":30041:30100   */
    tag_3782:
        /* "#utility.yul":30071:30072   */
      0x01
        /* "#utility.yul":30062:30072   */
      swap2
      pop
        /* "#utility.yul":30085:30090   */
      pop
      jump(tag_3095)
        /* "#utility.yul":30109:30239   */
    tag_3783:
        /* "#utility.yul":30146:30149   */
      0xff
        /* "#utility.yul":30136:30144   */
      dup5
        /* "#utility.yul":30133:30150   */
      gt
        /* "#utility.yul":30130:30173   */
      iszero
      tag_3785
      jumpi
        /* "#utility.yul":30153:30171   */
      tag_3785
      tag_3570
      jump	// in
    tag_3785:
      pop
      pop
        /* "#utility.yul":30209:30210   */
      0x01
        /* "#utility.yul":30195:30211   */
      dup3
      shl
        /* "#utility.yul":30224:30229   */
      jump(tag_3095)
        /* "#utility.yul":30021:30239   */
    tag_3781:
      pop
        /* "#utility.yul":30323:30325   */
      0x20
        /* "#utility.yul":30313:30321   */
      dup4
        /* "#utility.yul":30310:30326   */
      lt
        /* "#utility.yul":30304:30307   */
      0x0133
        /* "#utility.yul":30298:30302   */
      dup4
        /* "#utility.yul":30295:30308   */
      lt
        /* "#utility.yul":30291:30327   */
      and
        /* "#utility.yul":30285:30287   */
      0x4e
        /* "#utility.yul":30275:30283   */
      dup5
        /* "#utility.yul":30272:30288   */
      lt
        /* "#utility.yul":30267:30269   */
      0x0b
        /* "#utility.yul":30261:30265   */
      dup5
        /* "#utility.yul":30258:30270   */
      lt
        /* "#utility.yul":30254:30289   */
      and
        /* "#utility.yul":30251:30328   */
      or
        /* "#utility.yul":30248:30407   */
      iszero
      tag_3786
      jumpi
      pop
        /* "#utility.yul":30360:30379   */
      dup2
      dup2
      exp
        /* "#utility.yul":30392:30397   */
      jump(tag_3095)
        /* "#utility.yul":30248:30407   */
    tag_3786:
        /* "#utility.yul":30439:30473   */
      tag_3787
        /* "#utility.yul":30464:30472   */
      dup4
        /* "#utility.yul":30458:30462   */
      dup4
        /* "#utility.yul":30439:30473   */
      tag_3583
      jump	// in
    tag_3787:
        /* "#utility.yul":30509:30515   */
      dup1
        /* "#utility.yul":30505:30506   */
      0x00
        /* "#utility.yul":30501:30507   */
      not
        /* "#utility.yul":30497:30516   */
      div
        /* "#utility.yul":30488:30495   */
      dup3
        /* "#utility.yul":30485:30517   */
      gt
        /* "#utility.yul":30482:30540   */
      iszero
      tag_3789
      jumpi
        /* "#utility.yul":30520:30538   */
      tag_3789
      tag_3570
      jump	// in
    tag_3789:
        /* "#utility.yul":30558:30578   */
      mul
      swap4
        /* "#utility.yul":29778:30584   */
      swap3
      pop
      pop
      pop
      jump	// out
        /* "#utility.yul":30589:30729   */
    tag_987:
        /* "#utility.yul":30647:30652   */
      0x00
        /* "#utility.yul":30676:30723   */
      tag_3096
        /* "#utility.yul":30717:30721   */
      0xff
        /* "#utility.yul":30707:30715   */
      dup5
        /* "#utility.yul":30703:30722   */
      and
        /* "#utility.yul":30697:30701   */
      dup4
        /* "#utility.yul":30676:30723   */
      tag_3584
      jump	// in
        /* "#utility.yul":31114:31420   */
    tag_1034:
        /* "#utility.yul":31202:31208   */
      0x00
        /* "#utility.yul":31210:31216   */
      dup1
        /* "#utility.yul":31218:31224   */
      0x00
        /* "#utility.yul":31271:31273   */
      0x60
        /* "#utility.yul":31259:31268   */
      dup5
        /* "#utility.yul":31250:31257   */
      dup7
        /* "#utility.yul":31246:31269   */
      sub
        /* "#utility.yul":31242:31274   */
      slt
        /* "#utility.yul":31239:31291   */
      iszero
      tag_3794
      jumpi
        /* "#utility.yul":31287:31288   */
      0x00
        /* "#utility.yul":31284:31285   */
      dup1
        /* "#utility.yul":31277:31289   */
      revert
        /* "#utility.yul":31239:31291   */
    tag_3794:
        /* "#utility.yul":31316:31325   */
      dup4
        /* "#utility.yul":31310:31326   */
      mload
        /* "#utility.yul":31300:31326   */
      swap3
      pop
        /* "#utility.yul":31366:31368   */
      0x20
        /* "#utility.yul":31355:31364   */
      dup5
        /* "#utility.yul":31351:31369   */
      add
        /* "#utility.yul":31345:31370   */
      mload
        /* "#utility.yul":31335:31370   */
      swap2
      pop
        /* "#utility.yul":31410:31412   */
      0x40
        /* "#utility.yul":31399:31408   */
      dup5
        /* "#utility.yul":31395:31413   */
      add
        /* "#utility.yul":31389:31414   */
      mload
        /* "#utility.yul":31379:31414   */
      swap1
      pop
        /* "#utility.yul":31114:31420   */
      swap3
      pop
      swap3
      pop
      swap3
      jump	// out
        /* "#utility.yul":32281:32471   */
    tag_3585:
        /* "#utility.yul":32348:32352   */
      0x00
        /* "#utility.yul":32381:32399   */
      0xffffffffffffffff
        /* "#utility.yul":32373:32379   */
      dup3
        /* "#utility.yul":32370:32400   */
      gt
        /* "#utility.yul":32367:32423   */
      iszero
      tag_3800
      jumpi
        /* "#utility.yul":32403:32421   */
      tag_3800
      tag_392
      jump	// in
    tag_3800:
      pop
        /* "#utility.yul":32448:32449   */
      0x05
        /* "#utility.yul":32444:32458   */
      shl
        /* "#utility.yul":32460:32464   */
      0x20
        /* "#utility.yul":32440:32465   */
      add
      swap1
        /* "#utility.yul":32281:32471   */
      jump	// out
        /* "#utility.yul":32476:33142   */
    tag_3586:
        /* "#utility.yul":32541:32546   */
      0x00
        /* "#utility.yul":32594:32597   */
      dup3
        /* "#utility.yul":32587:32591   */
      0x1f
        /* "#utility.yul":32579:32585   */
      dup4
        /* "#utility.yul":32575:32592   */
      add
        /* "#utility.yul":32571:32598   */
      slt
        /* "#utility.yul":32561:32616   */
      tag_3802
      jumpi
        /* "#utility.yul":32612:32613   */
      0x00
        /* "#utility.yul":32609:32610   */
      dup1
        /* "#utility.yul":32602:32614   */
      revert
        /* "#utility.yul":32561:32616   */
    tag_3802:
        /* "#utility.yul":32641:32647   */
      dup2
        /* "#utility.yul":32635:32648   */
      mload
        /* "#utility.yul":32667:32671   */
      0x20
        /* "#utility.yul":32691:32758   */
      tag_3803
        /* "#utility.yul":32707:32757   */
      tag_3804
        /* "#utility.yul":32754:32756   */
      dup4
        /* "#utility.yul":32707:32757   */
      tag_3585
      jump	// in
    tag_3804:
        /* "#utility.yul":32691:32758   */
      tag_3578
      jump	// in
    tag_3803:
        /* "#utility.yul":32792:32807   */
      dup3
      dup2
      mstore
        /* "#utility.yul":32878:32879   */
      0x05
        /* "#utility.yul":32874:32884   */
      swap3
      swap1
      swap3
      shl
        /* "#utility.yul":32862:32885   */
      dup5
      add
        /* "#utility.yul":32858:32890   */
      dup2
      add
      swap2
        /* "#utility.yul":32823:32835   */
      dup2
      dup2
      add
      swap1
        /* "#utility.yul":32902:32917   */
      dup7
      dup5
      gt
        /* "#utility.yul":32899:32934   */
      iszero
      tag_3805
      jumpi
        /* "#utility.yul":32930:32931   */
      0x00
        /* "#utility.yul":32927:32928   */
      dup1
        /* "#utility.yul":32920:32932   */
      revert
        /* "#utility.yul":32899:32934   */
    tag_3805:
        /* "#utility.yul":32966:32968   */
      dup3
        /* "#utility.yul":32958:32964   */
      dup7
        /* "#utility.yul":32954:32969   */
      add
        /* "#utility.yul":32978:33113   */
    tag_3806:
        /* "#utility.yul":32994:33000   */
      dup5
        /* "#utility.yul":32989:32992   */
      dup2
        /* "#utility.yul":32986:33001   */
      lt
        /* "#utility.yul":32978:33113   */
      iszero
      tag_3808
      jumpi
        /* "#utility.yul":33060:33070   */
      dup1
      mload
        /* "#utility.yul":33048:33071   */
      dup4
      mstore
        /* "#utility.yul":33091:33103   */
      swap2
      dup4
      add
      swap2
        /* "#utility.yul":33011:33023   */
      dup4
      add
        /* "#utility.yul":32978:33113   */
      jump(tag_3806)
    tag_3808:
      pop
        /* "#utility.yul":33131:33136   */
      swap7
        /* "#utility.yul":32476:33142   */
      swap6
      pop
      pop
      pop
      pop
      pop
      pop
      jump	// out
        /* "#utility.yul":33147:34385   */
    tag_1695:
        /* "#utility.yul":33291:33297   */
      0x00
        /* "#utility.yul":33299:33305   */
      dup1
        /* "#utility.yul":33352:33354   */
      0x40
        /* "#utility.yul":33340:33349   */
      dup4
        /* "#utility.yul":33331:33338   */
      dup6
        /* "#utility.yul":33327:33350   */
      sub
        /* "#utility.yul":33323:33355   */
      slt
        /* "#utility.yul":33320:33372   */
      iszero
      tag_3810
      jumpi
        /* "#utility.yul":33368:33369   */
      0x00
        /* "#utility.yul":33365:33366   */
      dup1
        /* "#utility.yul":33358:33370   */
      revert
        /* "#utility.yul":33320:33372   */
    tag_3810:
        /* "#utility.yul":33401:33410   */
      dup3
        /* "#utility.yul":33395:33411   */
      mload
        /* "#utility.yul":33430:33448   */
      0xffffffffffffffff
        /* "#utility.yul":33471:33473   */
      dup1
        /* "#utility.yul":33463:33469   */
      dup3
        /* "#utility.yul":33460:33474   */
      gt
        /* "#utility.yul":33457:33491   */
      iszero
      tag_3811
      jumpi
        /* "#utility.yul":33487:33488   */
      0x00
        /* "#utility.yul":33484:33485   */
      dup1
        /* "#utility.yul":33477:33489   */
      revert
        /* "#utility.yul":33457:33491   */
    tag_3811:
        /* "#utility.yul":33525:33531   */
      dup2
        /* "#utility.yul":33514:33523   */
      dup6
        /* "#utility.yul":33510:33532   */
      add
        /* "#utility.yul":33500:33532   */
      swap2
      pop
        /* "#utility.yul":33570:33577   */
      dup6
        /* "#utility.yul":33563:33567   */
      0x1f
        /* "#utility.yul":33559:33561   */
      dup4
        /* "#utility.yul":33555:33568   */
      add
        /* "#utility.yul":33551:33578   */
      slt
        /* "#utility.yul":33541:33596   */
      tag_3812
      jumpi
        /* "#utility.yul":33592:33593   */
      0x00
        /* "#utility.yul":33589:33590   */
      dup1
        /* "#utility.yul":33582:33594   */
      revert
        /* "#utility.yul":33541:33596   */
    tag_3812:
        /* "#utility.yul":33621:33623   */
      dup2
        /* "#utility.yul":33615:33624   */
      mload
        /* "#utility.yul":33643:33647   */
      0x20
        /* "#utility.yul":33667:33734   */
      tag_3813
        /* "#utility.yul":33683:33733   */
      tag_3804
        /* "#utility.yul":33730:33732   */
      dup4
        /* "#utility.yul":33683:33733   */
      tag_3585
      jump	// in
        /* "#utility.yul":33667:33734   */
    tag_3813:
        /* "#utility.yul":33768:33783   */
      dup3
      dup2
      mstore
        /* "#utility.yul":33850:33851   */
      0x05
        /* "#utility.yul":33846:33856   */
      swap3
      swap1
      swap3
      shl
        /* "#utility.yul":33838:33857   */
      dup5
      add
        /* "#utility.yul":33834:33862   */
      dup2
      add
      swap2
        /* "#utility.yul":33799:33811   */
      dup2
      dup2
      add
      swap1
        /* "#utility.yul":33874:33893   */
      dup10
      dup5
      gt
        /* "#utility.yul":33871:33910   */
      iszero
      tag_3815
      jumpi
        /* "#utility.yul":33906:33907   */
      0x00
        /* "#utility.yul":33903:33904   */
      dup1
        /* "#utility.yul":33896:33908   */
      revert
        /* "#utility.yul":33871:33910   */
    tag_3815:
        /* "#utility.yul":33930:33941   */
      swap5
      dup3
      add
      swap5
        /* "#utility.yul":33950:34167   */
    tag_3816:
        /* "#utility.yul":33966:33972   */
      dup4
        /* "#utility.yul":33961:33964   */
      dup7
        /* "#utility.yul":33958:33973   */
      lt
        /* "#utility.yul":33950:34167   */
      iszero
      tag_3818
      jumpi
        /* "#utility.yul":34039:34042   */
      dup6
        /* "#utility.yul":34033:34043   */
      mload
        /* "#utility.yul":34056:34094   */
      tag_3819
        /* "#utility.yul":34088:34093   */
      dup2
        /* "#utility.yul":34056:34094   */
      tag_3571
      jump	// in
    tag_3819:
        /* "#utility.yul":34107:34125   */
      dup3
      mstore
        /* "#utility.yul":33983:33995   */
      swap5
      dup3
      add
      swap5
        /* "#utility.yul":34145:34157   */
      swap1
      dup3
      add
      swap1
        /* "#utility.yul":33950:34167   */
      jump(tag_3816)
    tag_3818:
        /* "#utility.yul":34222:34240   */
      swap2
      dup9
      add
        /* "#utility.yul":34216:34241   */
      mload
        /* "#utility.yul":34186:34191   */
      swap2
      swap7
      pop
        /* "#utility.yul":34216:34241   */
      swap1
      swap4
      pop
      pop
      pop
        /* "#utility.yul":34253:34269   */
      dup1
      dup3
      gt
        /* "#utility.yul":34250:34286   */
      iszero
      tag_3820
      jumpi
        /* "#utility.yul":34282:34283   */
      0x00
        /* "#utility.yul":34279:34280   */
      dup1
        /* "#utility.yul":34272:34284   */
      revert
        /* "#utility.yul":34250:34286   */
    tag_3820:
      pop
        /* "#utility.yul":34305:34379   */
      tag_3821
        /* "#utility.yul":34371:34378   */
      dup6
        /* "#utility.yul":34360:34368   */
      dup3
        /* "#utility.yul":34349:34358   */
      dup7
        /* "#utility.yul":34345:34369   */
      add
        /* "#utility.yul":34305:34379   */
      tag_3586
      jump	// in
    tag_3821:
        /* "#utility.yul":34295:34379   */
      swap2
      pop
      pop
        /* "#utility.yul":33147:34385   */
      swap3
      pop
      swap3
      swap1
      pop
      jump	// out
        /* "#utility.yul":34390:34770   */
    tag_1711:
        /* "#utility.yul":34469:34470   */
      0x01
        /* "#utility.yul":34465:34477   */
      dup2
      dup2
      shr
      swap1
        /* "#utility.yul":34512:34524   */
      dup3
      and
      dup1
        /* "#utility.yul":34533:34594   */
      tag_3823
      jumpi
        /* "#utility.yul":34587:34591   */
      0x7f
        /* "#utility.yul":34579:34585   */
      dup3
        /* "#utility.yul":34575:34592   */
      and
        /* "#utility.yul":34565:34592   */
      swap2
      pop
        /* "#utility.yul":34533:34594   */
    tag_3823:
        /* "#utility.yul":34640:34642   */
      0x20
        /* "#utility.yul":34632:34638   */
      dup3
        /* "#utility.yul":34629:34643   */
      lt
        /* "#utility.yul":34609:34627   */
      dup2
        /* "#utility.yul":34606:34644   */
      sub
        /* "#utility.yul":34603:34764   */
      tag_3824
      jumpi
        /* "#utility.yul":34686:34696   */
      0x4e487b71
        /* "#utility.yul":34681:34684   */
      0xe0
        /* "#utility.yul":34677:34697   */
      shl
        /* "#utility.yul":34674:34675   */
      0x00
        /* "#utility.yul":34667:34698   */
      mstore
        /* "#utility.yul":34721:34725   */
      0x22
        /* "#utility.yul":34718:34719   */
      0x04
        /* "#utility.yul":34711:34726   */
      mstore
        /* "#utility.yul":34749:34753   */
      0x24
        /* "#utility.yul":34746:34747   */
      0x00
        /* "#utility.yul":34739:34754   */
      revert
        /* "#utility.yul":34603:34764   */
    tag_3824:
      pop
        /* "#utility.yul":34390:34770   */
      swap2
      swap1
      pop
      jump	// out
        /* "#utility.yul":37621:38005   */
    tag_2258:
      not(sub(shl(0xe0, 0x01), 0x01))
        /* "#utility.yul":37806:37839   */
      dup4
      and
        /* "#utility.yul":37794:37840   */
      dup2
      mstore
        /* "#utility.yul":37863:37876   */
      dup2
      mload
        /* "#utility.yul":37776:37779   */
      0x00
      swap1
        /* "#utility.yul":37885:37959   */
      tag_3836
        /* "#utility.yul":37863:37876   */
      dup2
        /* "#utility.yul":37948:37949   */
      0x04
        /* "#utility.yul":37939:37950   */
      dup6
      add
        /* "#utility.yul":37932:37936   */
      0x20
        /* "#utility.yul":37920:37937   */
      dup8
      add
        /* "#utility.yul":37885:37959   */
      tag_3568
      jump	// in
    tag_3836:
        /* "#utility.yul":37979:37995   */
      swap2
      swap1
      swap2
      add
        /* "#utility.yul":37997:37998   */
      0x04
        /* "#utility.yul":37975:37999   */
      add
      swap4
        /* "#utility.yul":37621:38005   */
      swap3
      pop
      pop
      pop
      jump	// out
        /* "#utility.yul":38010:38297   */
    tag_2260:
        /* "#utility.yul":38139:38142   */
      0x00
        /* "#utility.yul":38177:38183   */
      dup3
        /* "#utility.yul":38171:38184   */
      mload
        /* "#utility.yul":38193:38259   */
      tag_3838
        /* "#utility.yul":38252:38258   */
      dup2
        /* "#utility.yul":38247:38250   */
      dup5
        /* "#utility.yul":38240:38244   */
      0x20
        /* "#utility.yul":38232:38238   */
      dup8
        /* "#utility.yul":38228:38245   */
      add
        /* "#utility.yul":38193:38259   */
      tag_3568
      jump	// in
    tag_3838:
        /* "#utility.yul":38275:38291   */
      swap2
      swap1
      swap2
      add
      swap3
        /* "#utility.yul":38010:38297   */
      swap2
      pop
      pop
      jump	// out
        /* "#utility.yul":40618:40822   */
    tag_2776:
        /* "#utility.yul":40686:40692   */
      0x00
        /* "#utility.yul":40739:40741   */
      0x20
        /* "#utility.yul":40727:40736   */
      dup3
        /* "#utility.yul":40718:40725   */
      dup5
        /* "#utility.yul":40714:40737   */
      sub
        /* "#utility.yul":40710:40742   */
      slt
        /* "#utility.yul":40707:40759   */
      iszero
      tag_3848
      jumpi
        /* "#utility.yul":40755:40756   */
      0x00
        /* "#utility.yul":40752:40753   */
      dup1
        /* "#utility.yul":40745:40757   */
      revert
        /* "#utility.yul":40707:40759   */
    tag_3848:
        /* "#utility.yul":40778:40816   */
      tag_3096
        /* "#utility.yul":40806:40815   */
      dup3
        /* "#utility.yul":40778:40816   */
      tag_3575
      jump	// in
        /* "#utility.yul":41170:41306   */
    tag_3587:
        /* "#utility.yul":41248:41261   */
      dup1
      mload
        /* "#utility.yul":41270:41300   */
      tag_2254
        /* "#utility.yul":41248:41261   */
      dup2
        /* "#utility.yul":41270:41300   */
      tag_3567
      jump	// in
        /* "#utility.yul":41311:41824   */
    tag_2854:
        /* "#utility.yul":41396:41402   */
      0x00
        /* "#utility.yul":41404:41410   */
      dup1
        /* "#utility.yul":41412:41418   */
      0x00
        /* "#utility.yul":41465:41467   */
      0x60
        /* "#utility.yul":41453:41462   */
      dup5
        /* "#utility.yul":41444:41451   */
      dup7
        /* "#utility.yul":41440:41463   */
      sub
        /* "#utility.yul":41436:41468   */
      slt
        /* "#utility.yul":41433:41485   */
      iszero
      tag_3854
      jumpi
        /* "#utility.yul":41481:41482   */
      0x00
        /* "#utility.yul":41478:41479   */
      dup1
        /* "#utility.yul":41471:41483   */
      revert
        /* "#utility.yul":41433:41485   */
    tag_3854:
        /* "#utility.yul":41513:41522   */
      dup4
        /* "#utility.yul":41507:41523   */
      mload
        /* "#utility.yul":41532:41562   */
      tag_3855
        /* "#utility.yul":41556:41561   */
      dup2
        /* "#utility.yul":41532:41562   */
      tag_3567
      jump	// in
    tag_3855:
        /* "#utility.yul":41631:41633   */
      0x20
        /* "#utility.yul":41616:41634   */
      dup6
      add
        /* "#utility.yul":41610:41635   */
      mload
        /* "#utility.yul":41581:41586   */
      swap1
      swap4
      pop
        /* "#utility.yul":41644:41676   */
      tag_3856
        /* "#utility.yul":41610:41635   */
      dup2
        /* "#utility.yul":41644:41676   */
      tag_3567
      jump	// in
    tag_3856:
        /* "#utility.yul":41747:41749   */
      0x40
        /* "#utility.yul":41732:41750   */
      dup6
      add
        /* "#utility.yul":41726:41751   */
      mload
        /* "#utility.yul":41695:41702   */
      swap1
      swap3
      pop
        /* "#utility.yul":41760:41792   */
      tag_3857
        /* "#utility.yul":41726:41751   */
      dup2
        /* "#utility.yul":41760:41792   */
      tag_3567
      jump	// in
    tag_3857:
        /* "#utility.yul":41811:41818   */
      dup1
        /* "#utility.yul":41801:41818   */
      swap2
      pop
      pop
        /* "#utility.yul":41311:41824   */
      swap3
      pop
      swap3
      pop
      swap3
      jump	// out
        /* "#utility.yul":41829:41995   */
    tag_3588:
        /* "#utility.yul":41907:41920   */
      dup1
      mload
        /* "#utility.yul":41960:41962   */
      0x0f
        /* "#utility.yul":41949:41970   */
      dup2
      swap1
      signextend
        /* "#utility.yul":41939:41971   */
      dup2
      eq
        /* "#utility.yul":41929:41989   */
      tag_2254
      jumpi
        /* "#utility.yul":41985:41986   */
      0x00
        /* "#utility.yul":41982:41983   */
      dup1
        /* "#utility.yul":41975:41987   */
      revert
        /* "#utility.yul":42000:42175   */
    tag_3589:
        /* "#utility.yul":42078:42091   */
      dup1
      mload
        /* "#utility.yul":42131:42149   */
      0xffffffffffffffff
        /* "#utility.yul":42120:42150   */
      dup2
      and
        /* "#utility.yul":42110:42151   */
      dup2
      eq
        /* "#utility.yul":42100:42169   */
      tag_2254
      jumpi
        /* "#utility.yul":42165:42166   */
      0x00
        /* "#utility.yul":42162:42163   */
      dup1
        /* "#utility.yul":42155:42167   */
      revert
        /* "#utility.yul":42180:43610   */
    tag_2869:
        /* "#utility.yul":42274:42280   */
      0x00
        /* "#utility.yul":42327:42330   */
      0x01c0
        /* "#utility.yul":42315:42324   */
      dup3
        /* "#utility.yul":42306:42313   */
      dup5
        /* "#utility.yul":42302:42325   */
      sub
        /* "#utility.yul":42298:42331   */
      slt
        /* "#utility.yul":42295:42348   */
      iszero
      tag_3863
      jumpi
        /* "#utility.yul":42344:42345   */
      0x00
        /* "#utility.yul":42341:42342   */
      dup1
        /* "#utility.yul":42334:42346   */
      revert
        /* "#utility.yul":42295:42348   */
    tag_3863:
        /* "#utility.yul":42370:42392   */
      tag_3864
      tag_3577
      jump	// in
    tag_3864:
        /* "#utility.yul":42415:42462   */
      tag_3865
        /* "#utility.yul":42452:42461   */
      dup4
        /* "#utility.yul":42415:42462   */
      tag_3572
      jump	// in
    tag_3865:
        /* "#utility.yul":42408:42413   */
      dup2
        /* "#utility.yul":42401:42463   */
      mstore
        /* "#utility.yul":42495:42551   */
      tag_3866
        /* "#utility.yul":42547:42549   */
      0x20
        /* "#utility.yul":42536:42545   */
      dup5
        /* "#utility.yul":42532:42550   */
      add
        /* "#utility.yul":42495:42551   */
      tag_3572
      jump	// in
    tag_3866:
        /* "#utility.yul":42490:42492   */
      0x20
        /* "#utility.yul":42483:42488   */
      dup3
        /* "#utility.yul":42479:42493   */
      add
        /* "#utility.yul":42472:42552   */
      mstore
        /* "#utility.yul":42584:42640   */
      tag_3867
        /* "#utility.yul":42636:42638   */
      0x40
        /* "#utility.yul":42625:42634   */
      dup5
        /* "#utility.yul":42621:42639   */
      add
        /* "#utility.yul":42584:42640   */
      tag_3572
      jump	// in
    tag_3867:
        /* "#utility.yul":42579:42581   */
      0x40
        /* "#utility.yul":42572:42577   */
      dup3
        /* "#utility.yul":42568:42582   */
      add
        /* "#utility.yul":42561:42641   */
      mstore
        /* "#utility.yul":42673:42721   */
      tag_3868
        /* "#utility.yul":42717:42719   */
      0x60
        /* "#utility.yul":42706:42715   */
      dup5
        /* "#utility.yul":42702:42720   */
      add
        /* "#utility.yul":42673:42721   */
      tag_3587
      jump	// in
    tag_3868:
        /* "#utility.yul":42668:42670   */
      0x60
        /* "#utility.yul":42661:42666   */
      dup3
        /* "#utility.yul":42657:42671   */
      add
        /* "#utility.yul":42650:42722   */
      mstore
        /* "#utility.yul":42776:42779   */
      0x80
        /* "#utility.yul":42765:42774   */
      dup4
        /* "#utility.yul":42761:42780   */
      add
        /* "#utility.yul":42755:42781   */
      mload
        /* "#utility.yul":42749:42752   */
      0x80
        /* "#utility.yul":42742:42747   */
      dup3
        /* "#utility.yul":42738:42753   */
      add
        /* "#utility.yul":42731:42782   */
      mstore
        /* "#utility.yul":42836:42839   */
      0xa0
        /* "#utility.yul":42825:42834   */
      dup4
        /* "#utility.yul":42821:42840   */
      add
        /* "#utility.yul":42815:42841   */
      mload
        /* "#utility.yul":42809:42812   */
      0xa0
        /* "#utility.yul":42802:42807   */
      dup3
        /* "#utility.yul":42798:42813   */
      add
        /* "#utility.yul":42791:42842   */
      mstore
        /* "#utility.yul":42896:42899   */
      0xc0
        /* "#utility.yul":42885:42894   */
      dup4
        /* "#utility.yul":42881:42900   */
      add
        /* "#utility.yul":42875:42901   */
      mload
        /* "#utility.yul":42869:42872   */
      0xc0
        /* "#utility.yul":42862:42867   */
      dup3
        /* "#utility.yul":42858:42873   */
      add
        /* "#utility.yul":42851:42902   */
      mstore
        /* "#utility.yul":42956:42959   */
      0xe0
        /* "#utility.yul":42945:42954   */
      dup4
        /* "#utility.yul":42941:42960   */
      add
        /* "#utility.yul":42935:42961   */
      mload
        /* "#utility.yul":42929:42932   */
      0xe0
        /* "#utility.yul":42922:42927   */
      dup3
        /* "#utility.yul":42918:42933   */
      add
        /* "#utility.yul":42911:42962   */
      mstore
        /* "#utility.yul":42981:42984   */
      0x0100
        /* "#utility.yul":43016:43064   */
      tag_3869
        /* "#utility.yul":43060:43062   */
      dup2
        /* "#utility.yul":43049:43058   */
      dup6
        /* "#utility.yul":43045:43063   */
      add
        /* "#utility.yul":43016:43064   */
      tag_3588
      jump	// in
    tag_3869:
        /* "#utility.yul":43000:43014   */
      swap1
      dup3
      add
        /* "#utility.yul":42993:43065   */
      mstore
        /* "#utility.yul":43084:43087   */
      0x0120
        /* "#utility.yul":43119:43167   */
      tag_3870
        /* "#utility.yul":43148:43166   */
      dup5
      dup3
      add
        /* "#utility.yul":43119:43167   */
      tag_3589
      jump	// in
    tag_3870:
        /* "#utility.yul":43103:43117   */
      swap1
      dup3
      add
        /* "#utility.yul":43096:43168   */
      mstore
        /* "#utility.yul":43187:43190   */
      0x0140
        /* "#utility.yul":43222:43270   */
      tag_3871
        /* "#utility.yul":43251:43269   */
      dup5
      dup3
      add
        /* "#utility.yul":43222:43270   */
      tag_3589
      jump	// in
    tag_3871:
        /* "#utility.yul":43206:43220   */
      swap1
      dup3
      add
        /* "#utility.yul":43199:43271   */
      mstore
        /* "#utility.yul":43290:43293   */
      0x0160
        /* "#utility.yul":43325:43373   */
      tag_3872
        /* "#utility.yul":43354:43372   */
      dup5
      dup3
      add
        /* "#utility.yul":43325:43373   */
      tag_3589
      jump	// in
    tag_3872:
        /* "#utility.yul":43309:43323   */
      swap1
      dup3
      add
        /* "#utility.yul":43302:43374   */
      mstore
        /* "#utility.yul":43393:43396   */
      0x0180
        /* "#utility.yul":43428:43476   */
      tag_3873
        /* "#utility.yul":43457:43475   */
      dup5
      dup3
      add
        /* "#utility.yul":43428:43476   */
      tag_3589
      jump	// in
    tag_3873:
        /* "#utility.yul":43412:43426   */
      swap1
      dup3
      add
        /* "#utility.yul":43405:43477   */
      mstore
        /* "#utility.yul":43496:43499   */
      0x01a0
        /* "#utility.yul":43531:43579   */
      tag_3874
        /* "#utility.yul":43560:43578   */
      dup5
      dup3
      add
        /* "#utility.yul":43531:43579   */
      tag_3589
      jump	// in
    tag_3874:
        /* "#utility.yul":43515:43529   */
      swap1
      dup3
      add
        /* "#utility.yul":43508:43580   */
      mstore
        /* "#utility.yul":43519:43524   */
      swap4
        /* "#utility.yul":42180:43610   */
      swap3
      pop
      pop
      pop
      jump	// out
        /* "#utility.yul":44844:45093   */
    tag_3024:
        /* "#utility.yul":44913:44919   */
      0x00
        /* "#utility.yul":44966:44968   */
      0x20
        /* "#utility.yul":44954:44963   */
      dup3
        /* "#utility.yul":44945:44952   */
      dup5
        /* "#utility.yul":44941:44964   */
      sub
        /* "#utility.yul":44937:44969   */
      slt
        /* "#utility.yul":44934:44986   */
      iszero
      tag_3879
      jumpi
        /* "#utility.yul":44982:44983   */
      0x00
        /* "#utility.yul":44979:44980   */
      dup1
        /* "#utility.yul":44972:44984   */
      revert
        /* "#utility.yul":44934:44986   */
    tag_3879:
        /* "#utility.yul":45014:45023   */
      dup2
        /* "#utility.yul":45008:45024   */
      mload
        /* "#utility.yul":45033:45063   */
      tag_2909
        /* "#utility.yul":45057:45062   */
      dup2
        /* "#utility.yul":45033:45063   */
      tag_3567
      jump	// in
        /* "#utility.yul":45098:45234   */
    tag_3087:
        /* "#utility.yul":45133:45136   */
      0x00
      shl(0xff, 0x01)
        /* "#utility.yul":45154:45176   */
      dup3
      add
        /* "#utility.yul":45151:45199   */
      tag_3883
      jumpi
        /* "#utility.yul":45179:45197   */
      tag_3883
      tag_3570
      jump	// in
    tag_3883:
      pop
        /* "#utility.yul":45219:45220   */
      0x00
        /* "#utility.yul":45215:45228   */
      sub
      swap1
        /* "#utility.yul":45098:45234   */
      jump	// out
        /* "#utility.yul":45239:45439   */
    tag_3090:
        /* "#utility.yul":45305:45314   */
      dup2
      dup2
      sub
        /* "#utility.yul":45278:45282   */
      0x00
        /* "#utility.yul":45333:45342   */
      dup4
      slt
        /* "#utility.yul":45361:45371   */
      dup1
      iszero
        /* "#utility.yul":45373:45385   */
      dup4
      dup4
      sgt
        /* "#utility.yul":45357:45386   */
      and
        /* "#utility.yul":45396:45408   */
      dup4
      dup4
      slt
        /* "#utility.yul":45388:45409   */
      dup3
      and
        /* "#utility.yul":45354:45410   */
      or
        /* "#utility.yul":45351:45433   */
      iszero
      tag_3768
      jumpi
        /* "#utility.yul":45413:45431   */
      tag_3768
      tag_3570
      jump	// in
        /* "#utility.yul":45935:46381   */
    tag_3327:
        /* "#utility.yul":46185:46187   */
      0x40
        /* "#utility.yul":46174:46183   */
      dup2
        /* "#utility.yul":46167:46188   */
      mstore
        /* "#utility.yul":46224:46225   */
      0x05
        /* "#utility.yul":46219:46221   */
      0x40
        /* "#utility.yul":46208:46217   */
      dup3
        /* "#utility.yul":46204:46222   */
      add
        /* "#utility.yul":46197:46226   */
      mstore
      shl(0xd9, 0x22b93937b9)
        /* "#utility.yul":46257:46259   */
      0x60
        /* "#utility.yul":46246:46255   */
      dup3
        /* "#utility.yul":46242:46260   */
      add
        /* "#utility.yul":46235:46270   */
      mstore
        /* "#utility.yul":46308:46311   */
      0x80
        /* "#utility.yul":46301:46305   */
      0x20
        /* "#utility.yul":46290:46299   */
      dup3
        /* "#utility.yul":46286:46306   */
      add
        /* "#utility.yul":46279:46312   */
      mstore
        /* "#utility.yul":46148:46152   */
      0x00
        /* "#utility.yul":46329:46375   */
      tag_3096
        /* "#utility.yul":46370:46373   */
      0x80
        /* "#utility.yul":46359:46368   */
      dup4
        /* "#utility.yul":46355:46374   */
      add
        /* "#utility.yul":46347:46353   */
      dup5
        /* "#utility.yul":46329:46375   */
      tag_3569
      jump	// in
    stop
    data_0ce61cd341b8163eeea68ffa812723a7ddba7801eab724a90491dada6fa91900 41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f50
    data_1a390d6c2ee89e11d2dffeb86f753e43f966d02cbb0b3bd3e6e1cdf50245ef50 0000000000000000000000007109709ecfa91a80626ff3989d68f67f5b1dd12d
    data_af60a355de262f5909867e4323707fb5b157eae0e494de4c75083157ea7f5669 73686f756c64206d6174636820666c6f6174696e674261636b7570426f72726f776564
    data_b627c71dec38ae7fa273aa3bb9b6210fd4a76d47f44ae646db16da401b96db40 885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d
    data_e1160fc331ef5f8b3c86b8372ca727c40590de90473ca17e0048eeb4bc27f848 b2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a8

    sub_0: assembly {
            /* "contracts/Auditor.sol":557:20480  contract Auditor is Initializable, AccessControlUpgradeable {... */
          mstore(0x40, 0xe0)
            /* "contracts/Auditor.sol":2368:2558  constructor(uint256 priceDecimals_) {... */
          callvalue
          dup1
          iszero
          tag_1
          jumpi
          0x00
          dup1
          revert
        tag_1:
          pop
          mload(0x40)
          sub(codesize, bytecodeSize)
          dup1
          bytecodeSize
          dup4
          codecopy
          dup2
          add
          0x40
          dup2
          swap1
          mstore
          tag_2
          swap2
          tag_3
          jump	// in
        tag_2:
            /* "contracts/Auditor.sol":2410:2440  priceDecimals = priceDecimals_ */
          0x80
          dup2
          swap1
          mstore
            /* "contracts/Auditor.sol":2466:2485  18 - priceDecimals_ */
          tag_6
            /* "contracts/Auditor.sol":2426:2440  priceDecimals_ */
          dup2
            /* "contracts/Auditor.sol":2466:2468  18 */
          0x12
            /* "contracts/Auditor.sol":2466:2485  18 - priceDecimals_ */
          tag_7
          jump	// in
        tag_6:
            /* "contracts/Auditor.sol":2459:2486  10 ** (18 - priceDecimals_) */
          tag_8
          swap1
            /* "contracts/Auditor.sol":2459:2461  10 */
          0x0a
            /* "contracts/Auditor.sol":2459:2486  10 ** (18 - priceDecimals_) */
          tag_9
          jump	// in
        tag_8:
            /* "contracts/Auditor.sol":2446:2486  baseFactor = 10 ** (18 - priceDecimals_) */
          0xa0
          mstore
            /* "contracts/Auditor.sol":2504:2524  10 ** priceDecimals_ */
          tag_10
            /* "contracts/Auditor.sol":2510:2524  priceDecimals_ */
          dup2
            /* "contracts/Auditor.sol":2504:2506  10 */
          0x0a
            /* "contracts/Auditor.sol":2504:2524  10 ** priceDecimals_ */
          tag_9
          jump	// in
        tag_10:
            /* "contracts/Auditor.sol":2492:2524  basePrice = 10 ** priceDecimals_ */
          0xc0
          mstore
            /* "contracts/Auditor.sol":2531:2553  _disableInitializers() */
          tag_11
            /* "contracts/Auditor.sol":2531:2551  _disableInitializers */
          tag_12
            /* "contracts/Auditor.sol":2531:2553  _disableInitializers() */
          jump	// in
        tag_11:
            /* "contracts/Auditor.sol":2368:2558  constructor(uint256 priceDecimals_) {... */
          pop
            /* "contracts/Auditor.sol":557:20480  contract Auditor is Initializable, AccessControlUpgradeable {... */
          jump(tag_22)
            /* "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":5928:6207  function _disableInitializers() internal virtual {... */
        tag_12:
            /* "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":5996:6009  _initializing */
          sload(0x00)
          0x0100
          swap1
          div
          0xff
          and
            /* "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":5995:6009  !_initializing */
          iszero
            /* "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":5987:6053  require(!_initializing, "Initializable: contract is initializing") */
          tag_15
          jumpi
          0x00
          dup1
          revert
        tag_15:
            /* "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":6067:6079  _initialized */
          sload(0x00)
            /* "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":6082:6097  type(uint8).max */
          0xff
            /* "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":6067:6079  _initialized */
          swap1
          dup2
          and
            /* "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":6067:6097  _initialized < type(uint8).max */
          lt
            /* "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":6063:6201  if (_initialized < type(uint8).max) {... */
          iszero
          tag_16
          jumpi
            /* "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":6113:6125  _initialized */
          0x00
            /* "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":6113:6143  _initialized = type(uint8).max */
          dup1
          sload
          not(0xff)
          and
            /* "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":6128:6143  type(uint8).max */
          0xff
            /* "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":6113:6143  _initialized = type(uint8).max */
          swap1
          dup2
          or
          swap1
          swap2
          sstore
            /* "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":6162:6190  Initialized(type(uint8).max) */
          mload(0x40)
            /* "#utility.yul":1984:2020   */
          swap1
          dup2
          mstore
            /* "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":6162:6190  Initialized(type(uint8).max) */
          0x7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498
          swap1
            /* "#utility.yul":1972:1974   */
          0x20
            /* "#utility.yul":1957:1975   */
          add
            /* "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":6162:6190  Initialized(type(uint8).max) */
          mload(0x40)
          dup1
          swap2
          sub
          swap1
          log1
            /* "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":6063:6201  if (_initialized < type(uint8).max) {... */
        tag_16:
            /* "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":5928:6207  function _disableInitializers() internal virtual {... */
          jump	// out
            /* "#utility.yul":14:198   */
        tag_3:
            /* "#utility.yul":84:90   */
          0x00
            /* "#utility.yul":137:139   */
          0x20
            /* "#utility.yul":125:134   */
          dup3
            /* "#utility.yul":116:123   */
          dup5
            /* "#utility.yul":112:135   */
          sub
            /* "#utility.yul":108:140   */
          slt
            /* "#utility.yul":105:157   */
          iszero
          tag_24
          jumpi
            /* "#utility.yul":153:154   */
          0x00
            /* "#utility.yul":150:151   */
          dup1
            /* "#utility.yul":143:155   */
          revert
            /* "#utility.yul":105:157   */
        tag_24:
          pop
            /* "#utility.yul":176:192   */
          mload
          swap2
            /* "#utility.yul":14:198   */
          swap1
          pop
          jump	// out
            /* "#utility.yul":203:330   */
        tag_19:
            /* "#utility.yul":264:274   */
          0x4e487b71
            /* "#utility.yul":259:262   */
          0xe0
            /* "#utility.yul":255:275   */
          shl
            /* "#utility.yul":252:253   */
          0x00
            /* "#utility.yul":245:276   */
          mstore
            /* "#utility.yul":295:299   */
          0x11
            /* "#utility.yul":292:293   */
          0x04
            /* "#utility.yul":285:300   */
          mstore
            /* "#utility.yul":319:323   */
          0x24
            /* "#utility.yul":316:317   */
          0x00
            /* "#utility.yul":309:324   */
          revert
            /* "#utility.yul":335:463   */
        tag_7:
            /* "#utility.yul":402:411   */
          dup2
          dup2
          sub
            /* "#utility.yul":423:434   */
          dup2
          dup2
          gt
            /* "#utility.yul":420:457   */
          iszero
          tag_28
          jumpi
            /* "#utility.yul":437:455   */
          tag_28
          tag_19
          jump	// in
        tag_28:
            /* "#utility.yul":335:463   */
          swap3
          swap2
          pop
          pop
          jump	// out
            /* "#utility.yul":468:890   */
        tag_20:
            /* "#utility.yul":557:558   */
          0x01
            /* "#utility.yul":600:605   */
          dup2
            /* "#utility.yul":557:558   */
          dup2
            /* "#utility.yul":614:884   */
        tag_30:
            /* "#utility.yul":635:642   */
          dup1
            /* "#utility.yul":625:633   */
          dup6
            /* "#utility.yul":622:643   */
          gt
            /* "#utility.yul":614:884   */
          iszero
          tag_32
          jumpi
            /* "#utility.yul":694:698   */
          dup2
            /* "#utility.yul":690:691   */
          0x00
            /* "#utility.yul":686:692   */
          not
            /* "#utility.yul":682:699   */
          div
            /* "#utility.yul":676:680   */
          dup3
            /* "#utility.yul":673:700   */
          gt
            /* "#utility.yul":670:723   */
          iszero
          tag_34
          jumpi
            /* "#utility.yul":703:721   */
          tag_34
          tag_19
          jump	// in
        tag_34:
            /* "#utility.yul":753:760   */
          dup1
            /* "#utility.yul":743:751   */
          dup6
            /* "#utility.yul":739:761   */
          and
            /* "#utility.yul":736:791   */
          iszero
          tag_35
          jumpi
            /* "#utility.yul":773:789   */
          swap2
          dup2
          mul
          swap2
            /* "#utility.yul":736:791   */
        tag_35:
            /* "#utility.yul":852:874   */
          swap4
          dup5
          shr
          swap4
            /* "#utility.yul":812:827   */
          swap1
          dup1
          mul
          swap1
            /* "#utility.yul":614:884   */
          jump(tag_30)
        tag_32:
            /* "#utility.yul":618:621   */
          pop
            /* "#utility.yul":468:890   */
          swap3
          pop
          swap3
          swap1
          pop
          jump	// out
            /* "#utility.yul":895:1701   */
        tag_21:
            /* "#utility.yul":944:949   */
          0x00
            /* "#utility.yul":974:982   */
          dup3
            /* "#utility.yul":964:1044   */
          tag_37
          jumpi
          pop
            /* "#utility.yul":1015:1016   */
          0x01
            /* "#utility.yul":1029:1034   */
          jump(tag_28)
            /* "#utility.yul":964:1044   */
        tag_37:
            /* "#utility.yul":1063:1067   */
          dup2
            /* "#utility.yul":1053:1129   */
          tag_38
          jumpi
          pop
            /* "#utility.yul":1100:1101   */
          0x00
            /* "#utility.yul":1114:1119   */
          jump(tag_28)
            /* "#utility.yul":1053:1129   */
        tag_38:
            /* "#utility.yul":1145:1149   */
          dup2
            /* "#utility.yul":1163:1164   */
          0x01
            /* "#utility.yul":1158:1217   */
          dup2
          eq
          tag_40
          jumpi
            /* "#utility.yul":1231:1232   */
          0x02
            /* "#utility.yul":1226:1356   */
          dup2
          eq
          tag_41
          jumpi
            /* "#utility.yul":1138:1356   */
          jump(tag_39)
            /* "#utility.yul":1158:1217   */
        tag_40:
            /* "#utility.yul":1188:1189   */
          0x01
            /* "#utility.yul":1179:1189   */
          swap2
          pop
            /* "#utility.yul":1202:1207   */
          pop
          jump(tag_28)
            /* "#utility.yul":1226:1356   */
        tag_41:
            /* "#utility.yul":1263:1266   */
          0xff
            /* "#utility.yul":1253:1261   */
          dup5
            /* "#utility.yul":1250:1267   */
          gt
            /* "#utility.yul":1247:1290   */
          iszero
          tag_43
          jumpi
            /* "#utility.yul":1270:1288   */
          tag_43
          tag_19
          jump	// in
        tag_43:
          pop
          pop
            /* "#utility.yul":1326:1327   */
          0x01
            /* "#utility.yul":1312:1328   */
          dup3
          shl
            /* "#utility.yul":1341:1346   */
          jump(tag_28)
            /* "#utility.yul":1138:1356   */
        tag_39:
          pop
            /* "#utility.yul":1440:1442   */
          0x20
            /* "#utility.yul":1430:1438   */
          dup4
            /* "#utility.yul":1427:1443   */
          lt
            /* "#utility.yul":1421:1424   */
          0x0133
            /* "#utility.yul":1415:1419   */
          dup4
            /* "#utility.yul":1412:1425   */
          lt
            /* "#utility.yul":1408:1444   */
          and
            /* "#utility.yul":1402:1404   */
          0x4e
            /* "#utility.yul":1392:1400   */
          dup5
            /* "#utility.yul":1389:1405   */
          lt
            /* "#utility.yul":1384:1386   */
          0x0b
            /* "#utility.yul":1378:1382   */
          dup5
            /* "#utility.yul":1375:1387   */
          lt
            /* "#utility.yul":1371:1406   */
          and
            /* "#utility.yul":1368:1445   */
          or
            /* "#utility.yul":1365:1524   */
          iszero
          tag_44
          jumpi
          pop
            /* "#utility.yul":1477:1496   */
          dup2
          dup2
          exp
            /* "#utility.yul":1509:1514   */
          jump(tag_28)
            /* "#utility.yul":1365:1524   */
        tag_44:
            /* "#utility.yul":1556:1590   */
          tag_45
            /* "#utility.yul":1581:1589   */
          dup4
            /* "#utility.yul":1575:1579   */
          dup4
            /* "#utility.yul":1556:1590   */
          tag_20
          jump	// in
        tag_45:
            /* "#utility.yul":1626:1632   */
          dup1
            /* "#utility.yul":1622:1623   */
          0x00
            /* "#utility.yul":1618:1624   */
          not
            /* "#utility.yul":1614:1633   */
          div
            /* "#utility.yul":1605:1612   */
          dup3
            /* "#utility.yul":1602:1634   */
          gt
            /* "#utility.yul":1599:1657   */
          iszero
          tag_47
          jumpi
            /* "#utility.yul":1637:1655   */
          tag_47
          tag_19
          jump	// in
        tag_47:
            /* "#utility.yul":1675:1695   */
          mul
          swap4
            /* "#utility.yul":895:1701   */
          swap3
          pop
          pop
          pop
          jump	// out
            /* "#utility.yul":1706:1837   */
        tag_9:
            /* "#utility.yul":1766:1771   */
          0x00
            /* "#utility.yul":1795:1831   */
          tag_49
            /* "#utility.yul":1822:1830   */
          dup4
            /* "#utility.yul":1816:1820   */
          dup4
            /* "#utility.yul":1795:1831   */
          tag_21
          jump	// in
        tag_49:
            /* "#utility.yul":1786:1831   */
          swap4
            /* "#utility.yul":1706:1837   */
          swap3
          pop
          pop
          pop
          jump	// out
            /* "#utility.yul":1842:2026   */
        tag_22:
            /* "contracts/Auditor.sol":557:20480  contract Auditor is Initializable, AccessControlUpgradeable {... */
          mload(0x80)
          mload(0xa0)
          mload(0xc0)
          codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))
          0x00
          assignImmutable("0xeb09910a03c892999c305d4a86a46fa82693119d981eef22c8d043b31f9e8a31")
          0x00
          assignImmutable("0x2e9b7c94e032d8b3b8b30bd825717a5ac74958b53e7c37a892a4fd7dc56e4975")
          0x00
          assignImmutable("0x6bcaf047ba4c8ac400fca43393035242dd1aabda2d6068a0c51242b97224de8d")
          return(0x00, dataSize(sub_0))
        stop

        sub_0: assembly {
                /* "contracts/Auditor.sol":557:20480  contract Auditor is Initializable, AccessControlUpgradeable {... */
              mstore(0x40, 0x80)
              callvalue
              dup1
              iszero
              tag_1
              jumpi
              0x00
              dup1
              revert
            tag_1:
              pop
              jumpi(tag_2, lt(calldatasize, 0x04))
              shr(0xe0, calldataload(0x00))
              dup1
              0x891f4b08
              gt
              tag_34
              jumpi
              dup1
              0xae539533
              gt
              tag_35
              jumpi
              dup1
              0xe16ee720
              gt
              tag_36
              jumpi
              dup1
              0xe16ee720
              eq
              tag_30
              jumpi
              dup1
              0xe7bf4b02
              eq
              tag_31
              jumpi
              dup1
              0xede4edd0
              eq
              tag_32
              jumpi
              dup1
              0xff383ae6
              eq
              tag_33
              jumpi
              0x00
              dup1
              revert
            tag_36:
              dup1
              0xae539533
              eq
              tag_26
              jumpi
              dup1
              0xb883b058
              eq
              tag_27
              jumpi
              dup1
              0xd547741f
              eq
              tag_28
              jumpi
              dup1
              0xe037945b
              eq
              tag_29
              jumpi
              0x00
              dup1
              revert
            tag_35:
              dup1
              0x91d14854
              gt
              tag_37
              jumpi
              dup1
              0x91d14854
              eq
              tag_22
              jumpi
              dup1
              0x9e9d7967
              eq
              tag_23
              jumpi
              dup1
              0xa217fddf
              eq
              tag_24
              jumpi
              dup1
              0xa3883db5
              eq
              tag_25
              jumpi
              0x00
              dup1
              revert
            tag_37:
              dup1
              0x891f4b08
              eq
              tag_18
              jumpi
              dup1
              0x8b9e8113
              eq
              tag_19
              jumpi
              dup1
              0x8c765e94
              eq
              tag_20
              jumpi
              dup1
              0x8e8f294b
              eq
              tag_21
              jumpi
              0x00
              dup1
              revert
            tag_34:
              dup1
              0x2f2ff15d
              gt
              tag_38
              jumpi
              dup1
              0x51e1498b
              gt
              tag_39
              jumpi
              dup1
              0x51e1498b
              eq
              tag_14
              jumpi
              dup1
              0x6e1b0031
              eq
              tag_15
              jumpi
              dup1
              0x76e11286
              eq
              tag_16
              jumpi
              dup1
              0x7b9d8931
              eq
              tag_17
              jumpi
              0x00
              dup1
              revert
            tag_39:
              dup1
              0x2f2ff15d
              eq
              tag_10
              jumpi
              dup1
              0x36568abe
              eq
              tag_11
              jumpi
              dup1
              0x375a7cba
              eq
              tag_12
              jumpi
              dup1
              0x3fe5d425
              eq
              tag_13
              jumpi
              0x00
              dup1
              revert
            tag_38:
              dup1
              0x11fd52e1
              gt
              tag_40
              jumpi
              dup1
              0x11fd52e1
              eq
              tag_6
              jumpi
              dup1
              0x216e7b58
              eq
              tag_7
              jumpi
              dup1
              0x232b956c
              eq
              tag_8
              jumpi
              dup1
              0x248a9ca3
              eq
              tag_9
              jumpi
              0x00
              dup1
              revert
            tag_40:
              dup1
              0x01ffc9a7
              eq
              tag_3
              jumpi
              dup1
              0x03f2a1ea
              eq
              tag_4
              jumpi
              dup1
              0x05300b28
              eq
              tag_5
              jumpi
            tag_2:
              0x00
              dup1
              revert
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":2903:3116  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */
            tag_3:
              tag_41
              tag_42
              calldatasize
              0x04
              tag_43
              jump	// in
            tag_42:
              tag_44
              jump	// in
            tag_41:
              mload(0x40)
                /* "#utility.yul":470:484   */
              swap1
              iszero
                /* "#utility.yul":463:485   */
              iszero
                /* "#utility.yul":445:486   */
              dup2
              mstore
                /* "#utility.yul":433:435   */
              0x20
                /* "#utility.yul":418:436   */
              add
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":2903:3116  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */
            tag_45:
              mload(0x40)
              dup1
              swap2
              sub
              swap1
              return
                /* "contracts/Auditor.sol":2638:2865  function initialize(LiquidationIncentive memory liquidationIncentive_) external initializer {... */
            tag_4:
              tag_47
              tag_48
              calldatasize
              0x04
              tag_49
              jump	// in
            tag_48:
              tag_50
              jump	// in
            tag_47:
              stop
                /* "contracts/Auditor.sol":1404:1442  uint256 public immutable priceDecimals */
            tag_5:
              tag_51
              immutable("0x6bcaf047ba4c8ac400fca43393035242dd1aabda2d6068a0c51242b97224de8d")
              dup2
              jump
            tag_51:
              mload(0x40)
                /* "#utility.yul":1599:1624   */
              swap1
              dup2
              mstore
                /* "#utility.yul":1587:1589   */
              0x20
                /* "#utility.yul":1572:1590   */
              add
                /* "contracts/Auditor.sol":1404:1442  uint256 public immutable priceDecimals */
              tag_45
                /* "#utility.yul":1453:1630   */
              jump
                /* "contracts/Auditor.sol":13459:14203  function handleBadDebt(address account) external {... */
            tag_6:
              tag_47
              tag_56
              calldatasize
              0x04
              tag_57
              jump	// in
            tag_56:
              tag_58
              jump	// in
                /* "contracts/Auditor.sol":8836:11190  function checkLiquidation(... */
            tag_7:
              tag_51
              tag_60
              calldatasize
              0x04
              tag_61
              jump	// in
            tag_60:
              tag_62
              jump	// in
                /* "contracts/Auditor.sol":2114:2140  Market[] public marketList */
            tag_8:
              tag_64
              tag_65
              calldatasize
              0x04
              tag_66
              jump	// in
            tag_65:
              tag_67
              jump	// in
            tag_64:
              mload(0x40)
              sub(shl(0xa0, 0x01), 0x01)
                /* "#utility.yul":3020:3052   */
              swap1
              swap2
              and
                /* "#utility.yul":3002:3053   */
              dup2
              mstore
                /* "#utility.yul":2990:2992   */
              0x20
                /* "#utility.yul":2975:2993   */
              add
                /* "contracts/Auditor.sol":2114:2140  Market[] public marketList */
              tag_45
                /* "#utility.yul":2841:3059   */
              jump
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":4708:4837  function getRoleAdmin(bytes32 role) public view virtual override returns (bytes32) {... */
            tag_9:
              tag_51
              tag_71
              calldatasize
              0x04
              tag_66
              jump	// in
            tag_71:
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":4782:4789  bytes32 */
              0x00
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":4808:4820  _roles[role] */
              swap1
              dup2
              mstore
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":4808:4814  _roles */
              0x65
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":4808:4820  _roles[role] */
              0x20
              mstore
              0x40
              swap1
              keccak256
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":4808:4830  _roles[role].adminRole */
              0x01
              add
              sload
              swap1
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":4708:4837  function getRoleAdmin(bytes32 role) public view virtual override returns (bytes32) {... */
              jump
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":5133:5278  function grantRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {... */
            tag_10:
              tag_47
              tag_77
              calldatasize
              0x04
              tag_78
              jump	// in
            tag_77:
              tag_79
              jump	// in
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":6242:6456  function renounceRole(bytes32 role, address account) public virtual override {... */
            tag_11:
              tag_47
              tag_81
              calldatasize
              0x04
              tag_78
              jump	// in
            tag_81:
              tag_82
              jump	// in
                /* "contracts/Auditor.sol":14798:14888  function allMarkets() external view returns (Market[] memory) {... */
            tag_12:
              tag_83
              tag_84
              jump	// in
            tag_83:
              mload(0x40)
              tag_45
              swap2
              swap1
              tag_86
              jump	// in
                /* "contracts/Auditor.sol":3023:3406  function enterMarket(Market market) external {... */
            tag_13:
              tag_47
              tag_88
              calldatasize
              0x04
              tag_57
              jump	// in
            tag_88:
              tag_90
              jump	// in
                /* "contracts/Auditor.sol":780:858  address public constant BASE_FEED = 0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE */
            tag_14:
              tag_64
                /* "contracts/Auditor.sol":816:858  0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE */
              0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee
                /* "contracts/Auditor.sol":780:858  address public constant BASE_FEED = 0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE */
              dup2
              jump
                /* "contracts/Auditor.sol":12278:13164  function calculateSeize(... */
            tag_15:
              tag_95
              tag_96
              calldatasize
              0x04
              tag_61
              jump	// in
            tag_96:
              tag_97
              jump	// in
            tag_95:
              0x40
              dup1
              mload
                /* "#utility.yul":5078:5103   */
              swap3
              dup4
              mstore
                /* "#utility.yul":5134:5136   */
              0x20
                /* "#utility.yul":5119:5137   */
              dup4
              add
                /* "#utility.yul":5112:5146   */
              swap2
              swap1
              swap2
              mstore
                /* "#utility.yul":5051:5069   */
              add
                /* "contracts/Auditor.sol":12278:13164  function calculateSeize(... */
              tag_45
                /* "#utility.yul":4904:5152   */
              jump
                /* "contracts/Auditor.sol":16731:17027  function setPriceFeed(Market market, IPriceFeed priceFeed) external onlyRole(DEFAULT_ADMIN_ROLE) {... */
            tag_16:
              tag_47
              tag_101
              calldatasize
              0x04
              tag_102
              jump	// in
            tag_101:
              tag_103
              jump	// in
                /* "contracts/Auditor.sol":6743:7510  function checkBorrow(Market market, address borrower) external {... */
            tag_17:
              tag_47
              tag_105
              calldatasize
              0x04
              tag_102
              jump	// in
            tag_105:
              tag_107
              jump	// in
                /* "contracts/Auditor.sol":17184:17424  function setLiquidationIncentive(... */
            tag_18:
              tag_47
              tag_109
              calldatasize
              0x04
              tag_49
              jump	// in
            tag_109:
              tag_110
              jump	// in
                /* "contracts/Auditor.sol":1197:1264  uint256 public constant ASSETS_THRESHOLD = type(uint256).max / 1e18 */
            tag_19:
              tag_51
              tag_112
              jump	// in
                /* "contracts/Auditor.sol":2264:2312  LiquidationIncentive public liquidationIncentive */
            tag_20:
              sload(0x9a)
              tag_114
              swap1
              sub(shl(0x80, 0x01), 0x01)
              dup1
              dup3
              and
              swap2
              shl(0x80, 0x01)
              swap1
              div
              and
              dup3
              jump
            tag_114:
              0x40
              dup1
              mload
              sub(shl(0x80, 0x01), 0x01)
                /* "#utility.yul":6238:6253   */
              swap4
              dup5
              and
                /* "#utility.yul":6220:6254   */
              dup2
              mstore
                /* "#utility.yul":6290:6305   */
              swap3
              swap1
              swap2
              and
                /* "#utility.yul":6285:6287   */
              0x20
                /* "#utility.yul":6270:6288   */
              dup4
              add
                /* "#utility.yul":6263:6306   */
              mstore
                /* "#utility.yul":6140:6158   */
              add
                /* "contracts/Auditor.sol":2264:2312  LiquidationIncentive public liquidationIncentive */
              tag_45
                /* "#utility.yul":5993:6312   */
              jump
                /* "contracts/Auditor.sol":2022:2066  mapping(Market => MarketData) public markets */
            tag_21:
              tag_118
              tag_119
              calldatasize
              0x04
              tag_57
              jump	// in
            tag_119:
              mstore(0x20, 0x98)
              0x00
              swap1
              dup2
              mstore
              0x40
              swap1
              keccak256
              dup1
              sload
              0x01
              swap1
              swap2
              add
              sload
              sub(shl(0x80, 0x01), 0x01)
              dup3
              and
              swap2
              0xff
              shl(0x80, 0x01)
              dup3
              div
              dup2
              and
              swap3
              shl(0x88, 0x01)
              dup4
              div
              dup3
              and
              swap3
              shl(0x90, 0x01)
              swap1
              div
              swap1
              swap2
              and
              swap1
              sub(shl(0xa0, 0x01), 0x01)
              and
              dup6
              jump
            tag_118:
              0x40
              dup1
              mload
              sub(shl(0x80, 0x01), 0x01)
                /* "#utility.yul":6600:6647   */
              swap1
              swap7
              and
                /* "#utility.yul":6582:6648   */
              dup7
              mstore
                /* "#utility.yul":6696:6700   */
              0xff
                /* "#utility.yul":6684:6701   */
              swap5
              dup6
              and
                /* "#utility.yul":6679:6681   */
              0x20
                /* "#utility.yul":6664:6682   */
              dup8
              add
                /* "#utility.yul":6657:6702   */
              mstore
                /* "#utility.yul":6738:6755   */
              swap4
              swap1
              swap3
              and
                /* "#utility.yul":6718:6736   */
              swap3
              dup5
              add
                /* "#utility.yul":6711:6756   */
              swap3
              swap1
              swap3
              mstore
                /* "#utility.yul":6799:6813   */
              swap1
              iszero
                /* "#utility.yul":6792:6814   */
              iszero
                /* "#utility.yul":6787:6789   */
              0x60
                /* "#utility.yul":6772:6790   */
              dup4
              add
                /* "#utility.yul":6765:6815   */
              mstore
              sub(shl(0xa0, 0x01), 0x01)
                /* "#utility.yul":6852:6884   */
              and
                /* "#utility.yul":6846:6849   */
              0x80
                /* "#utility.yul":6831:6850   */
              dup3
              add
                /* "#utility.yul":6824:6885   */
              mstore
                /* "#utility.yul":6569:6572   */
              0xa0
                /* "#utility.yul":6554:6573   */
              add
                /* "contracts/Auditor.sol":2022:2066  mapping(Market => MarketData) public markets */
              tag_45
                /* "#utility.yul":6317:6891   */
              jump
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":3203:3348  function hasRole(bytes32 role, address account) public view virtual override returns (bool) {... */
            tag_22:
              tag_41
              tag_124
              calldatasize
              0x04
              tag_78
              jump	// in
            tag_124:
              tag_125
              jump	// in
                /* "contracts/Auditor.sol":4860:6435  function accountLiquidity(... */
            tag_23:
              tag_95
              tag_128
              calldatasize
              0x04
              tag_129
              jump	// in
            tag_128:
              tag_130
              jump	// in
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":2324:2373  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */
            tag_24:
              tag_51
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":2369:2373  0x00 */
              0x00
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":2324:2373  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */
              dup2
              jump
                /* "contracts/Auditor.sol":7802:8278  function checkShortfall(Market market, address account, uint256 amount) public view {... */
            tag_25:
              tag_47
              tag_136
              calldatasize
              0x04
              tag_129
              jump	// in
            tag_136:
              tag_138
              jump	// in
                /* "contracts/Auditor.sol":981:1028  uint256 public constant TARGET_HEALTH = 1.25e18 */
            tag_26:
              tag_51
                /* "contracts/Auditor.sol":1021:1028  1.25e18 */
              0x1158e460913d0000
                /* "contracts/Auditor.sol":981:1028  uint256 public constant TARGET_HEALTH = 1.25e18 */
              dup2
              jump
                /* "contracts/Auditor.sol":14492:14757  function assetPrice(IPriceFeed priceFeed) public view returns (uint256) {... */
            tag_27:
              tag_51
              tag_143
              calldatasize
              0x04
              tag_57
              jump	// in
            tag_143:
              tag_145
              jump	// in
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":5558:5705  function revokeRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {... */
            tag_28:
              tag_47
              tag_148
              calldatasize
              0x04
              tag_78
              jump	// in
            tag_148:
              tag_149
              jump	// in
                /* "contracts/Auditor.sol":15266:16033  function enableMarket(... */
            tag_29:
              tag_47
              tag_151
              calldatasize
              0x04
              tag_152
              jump	// in
            tag_151:
              tag_153
              jump	// in
                /* "contracts/Auditor.sol":11478:11723  function checkSeize(Market repayMarket, Market seizeMarket) external view {... */
            tag_30:
              tag_47
              tag_155
              calldatasize
              0x04
              tag_102
              jump	// in
            tag_155:
              tag_157
              jump	// in
                /* "contracts/Auditor.sol":16233:16495  function setAdjustFactor(Market market, uint128 adjustFactor) public onlyRole(DEFAULT_ADMIN_ROLE) {... */
            tag_31:
              tag_47
              tag_159
              calldatasize
              0x04
              tag_160
              jump	// in
            tag_159:
              tag_161
              jump	// in
                /* "contracts/Auditor.sol":3687:4356  function exitMarket(Market market) external {... */
            tag_32:
              tag_47
              tag_163
              calldatasize
              0x04
              tag_57
              jump	// in
            tag_163:
              tag_164
              jump	// in
                /* "contracts/Auditor.sol":1905:1954  mapping(address => uint256) public accountMarkets */
            tag_33:
              tag_51
              tag_166
              calldatasize
              0x04
              tag_57
              jump	// in
            tag_166:
              mstore(0x20, 0x97)
              0x00
              swap1
              dup2
              mstore
              0x40
              swap1
              keccak256
              sload
              dup2
              jump
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":2903:3116  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */
            tag_44:
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":2988:2992  bool */
              0x00
              not(sub(shl(0xe0, 0x01), 0x01))
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":3011:3069  interfaceId == type(IAccessControlUpgradeable).interfaceId */
              dup3
              and
              shl(0xe0, 0x7965db0b)
              eq
              dup1
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":3011:3109  interfaceId == type(IAccessControlUpgradeable).interfaceId || super.supportsInterface(interfaceId) */
              tag_171
              jumpi
              pop
              shl(0xe0, 0x01ffc9a7)
              not(sub(shl(0xe0, 0x01), 0x01))
                /* "node_modules/@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol":1168:1219  interfaceId == type(IERC165Upgradeable).interfaceId */
              dup4
              and
              eq
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":3073:3109  super.supportsInterface(interfaceId) */
            tag_171:
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":3004:3109  return interfaceId == type(IAccessControlUpgradeable).interfaceId || super.supportsInterface(interfaceId) */
              swap3
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":2903:3116  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */
              swap2
              pop
              pop
              jump	// out
                /* "contracts/Auditor.sol":2638:2865  function initialize(LiquidationIncentive memory liquidationIncentive_) external initializer {... */
            tag_50:
                /* "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":3268:3287  bool isTopLevelCall */
              0x00
                /* "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":3291:3304  _initializing */
              sload
              0x0100
              swap1
              div
              0xff
              and
                /* "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":3290:3304  !_initializing */
              iszero
              dup1
                /* "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":3336:3370  isTopLevelCall && _initialized < 1 */
              dup1
              iszero
              tag_174
              jumpi
              pop
                /* "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":3354:3366  _initialized */
              sload(0x00)
                /* "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":3369:3370  1 */
              0x01
                /* "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":3354:3366  _initialized */
              0xff
              swap1
              swap2
              and
                /* "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":3354:3370  _initialized < 1 */
              lt
                /* "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":3336:3370  isTopLevelCall && _initialized < 1 */
            tag_174:
                /* "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":3335:3443  (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1) */
              dup1
              tag_178
              jumpi
              pop
                /* "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":3415:3419  this */
              address
                /* "node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol":1476:1495  account.code.length */
              extcodesize
                /* "node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol":1476:1499  account.code.length > 0 */
              iszero
              dup1
              iszero
                /* "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":3376:3442  !AddressUpgradeable.isContract(address(this)) && _initialized == 1 */
              tag_178
              jumpi
              pop
                /* "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":3425:3437  _initialized */
              and(0xff, sload(0x00))
              0x01
                /* "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":3425:3442  _initialized == 1 */
              eq
                /* "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":3376:3442  !AddressUpgradeable.isContract(address(this)) && _initialized == 1 */
            tag_178:
                /* "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":3314:3515  require(... */
              tag_179
              jumpi
              0x00
              dup1
              revert
            tag_179:
                /* "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":3525:3537  _initialized */
              0x00
                /* "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":3525:3541  _initialized = 1 */
              dup1
              sload
              not(0xff)
              and
                /* "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":3540:3541  1 */
              0x01
                /* "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":3525:3541  _initialized = 1 */
              or
              swap1
              sstore
                /* "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":3551:3616  if (isTopLevelCall) {... */
              dup1
              iszero
              tag_180
              jumpi
                /* "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":3585:3598  _initializing */
              0x00
                /* "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":3585:3605  _initializing = true */
              dup1
              sload
              not(0xff00)
              and
              0x0100
              or
              swap1
              sstore
                /* "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":3551:3616  if (isTopLevelCall) {... */
            tag_180:
                /* "contracts/Auditor.sol":2736:2758  __AccessControl_init() */
              tag_182
                /* "contracts/Auditor.sol":2736:2756  __AccessControl_init */
              tag_183
                /* "contracts/Auditor.sol":2736:2758  __AccessControl_init() */
              jump	// in
            tag_182:
                /* "contracts/Auditor.sol":2765:2807  _grantRole(DEFAULT_ADMIN_ROLE, msg.sender) */
              tag_184
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":2369:2373  0x00 */
              0x00
                /* "contracts/Auditor.sol":2796:2806  msg.sender */
              caller
                /* "contracts/Auditor.sol":2765:2775  _grantRole */
              tag_185
                /* "contracts/Auditor.sol":2765:2807  _grantRole(DEFAULT_ADMIN_ROLE, msg.sender) */
              jump	// in
            tag_184:
                /* "contracts/Auditor.sol":2814:2860  setLiquidationIncentive(liquidationIncentive_) */
              tag_186
                /* "contracts/Auditor.sol":2838:2859  liquidationIncentive_ */
              dup3
                /* "contracts/Auditor.sol":2814:2837  setLiquidationIncentive */
              tag_110
                /* "contracts/Auditor.sol":2814:2860  setLiquidationIncentive(liquidationIncentive_) */
              jump	// in
            tag_186:
                /* "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":3640:3654  isTopLevelCall */
              dup1
                /* "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":3636:3735  if (isTopLevelCall) {... */
              iszero
              tag_187
              jumpi
                /* "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":3686:3691  false */
              0x00
                /* "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":3670:3691  _initializing = false */
              dup1
              sload
              not(0xff00)
              and
              swap1
              sstore
                /* "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":3710:3724  Initialized(1) */
              mload(0x40)
              0x01
                /* "#utility.yul":9538:9574   */
              dup2
              mstore
                /* "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":3710:3724  Initialized(1) */
              0x7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498
              swap1
                /* "#utility.yul":9526:9528   */
              0x20
                /* "#utility.yul":9511:9529   */
              add
                /* "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":3710:3724  Initialized(1) */
            tag_188:
              mload(0x40)
              dup1
              swap2
              sub
              swap1
              log1
                /* "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":3636:3735  if (isTopLevelCall) {... */
            tag_187:
                /* "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":3258:3741  {... */
              pop
                /* "contracts/Auditor.sol":2638:2865  function initialize(LiquidationIncentive memory liquidationIncentive_) external initializer {... */
              pop
              jump	// out
                /* "contracts/Auditor.sol":13459:14203  function handleBadDebt(address account) external {... */
            tag_58:
              sub(shl(0xa0, 0x01), 0x01)
                /* "contracts/Auditor.sol":13537:13560  accountMarkets[account] */
              dup2
              and
                /* "contracts/Auditor.sol":13514:13534  uint256 memMarketMap */
              0x00
                /* "contracts/Auditor.sol":13537:13560  accountMarkets[account] */
              swap1
              dup2
              mstore
                /* "contracts/Auditor.sol":13537:13551  accountMarkets */
              0x97
                /* "contracts/Auditor.sol":13537:13560  accountMarkets[account] */
              0x20
              mstore
              0x40
              dup2
              keccak256
              sload
              swap1
              dup2
              swap1
                /* "contracts/Auditor.sol":13604:13997  for (uint256 i = 0; marketMap != 0; marketMap >>= 1) {... */
            tag_191:
                /* "contracts/Auditor.sol":13624:13638  marketMap != 0 */
              dup2
              iszero
                /* "contracts/Auditor.sol":13604:13997  for (uint256 i = 0; marketMap != 0; marketMap >>= 1) {... */
              tag_192
              jumpi
                /* "contracts/Auditor.sol":13681:13682  1 */
              0x01
                /* "contracts/Auditor.sol":13669:13682  marketMap & 1 */
              dup3
              and
                /* "contracts/Auditor.sol":13669:13687  marketMap & 1 != 0 */
              iszero
                /* "contracts/Auditor.sol":13665:13952  if (marketMap & 1 != 0) {... */
              tag_194
              jumpi
                /* "contracts/Auditor.sol":13699:13712  Market market */
              0x00
                /* "contracts/Auditor.sol":13715:13725  marketList */
              0x99
                /* "contracts/Auditor.sol":13726:13727  i */
              dup3
                /* "contracts/Auditor.sol":13715:13728  marketList[i] */
              dup2
              sload
              dup2
              lt
              tag_196
              jumpi
              tag_196
              tag_197
              jump	// in
            tag_196:
              0x00
              swap2
              dup3
              mstore
              0x20
              dup1
              dup4
              keccak256
              swap2
              swap1
              swap2
              add
              sload
              sub(shl(0xa0, 0x01), 0x01)
              swap1
              dup2
              and
                /* "contracts/Auditor.sol":13761:13776  markets[market] */
              dup1
              dup5
              mstore
                /* "contracts/Auditor.sol":13761:13768  markets */
              0x98
                /* "contracts/Auditor.sol":13761:13776  markets[market] */
              swap1
              swap3
              mstore
              0x40
              dup1
              dup5
              keccak256
                /* "contracts/Auditor.sol":13803:13830  market.maxWithdraw(account) */
              swap1
              mload
              shl(0xe0, 0xce96cb77)
              dup2
              mstore
                /* "#utility.yul":3020:3052   */
              swap2
              dup10
              and
                /* "contracts/Auditor.sol":13803:13830  market.maxWithdraw(account) */
              0x04
              dup4
              add
                /* "#utility.yul":3002:3053   */
              mstore
                /* "contracts/Auditor.sol":13715:13728  marketList[i] */
              swap2
              swap4
              pop
                /* "contracts/Auditor.sol":13761:13776  markets[market] */
              swap1
              swap2
                /* "contracts/Auditor.sol":13715:13728  marketList[i] */
              swap1
              dup4
              swap1
                /* "contracts/Auditor.sol":13803:13821  market.maxWithdraw */
              0xce96cb77
              swap1
                /* "#utility.yul":2975:2993   */
              0x24
              add
                /* "contracts/Auditor.sol":13803:13830  market.maxWithdraw(account) */
              0x20
              mload(0x40)
              dup1
              dup4
              sub
              dup2
              dup7
              gas
              staticcall
              iszero
              dup1
              iszero
              tag_201
              jumpi
              returndatasize
              0x00
              dup1
              returndatacopy
              revert(0x00, returndatasize)
            tag_201:
              pop
              pop
              pop
              pop
              mload(0x40)
              returndatasize
              not(0x1f)
              0x1f
              dup3
              add
              and
              dup3
              add
              dup1
              0x40
              mstore
              pop
              dup2
              add
              swap1
              tag_202
              swap2
              swap1
              tag_203
              jump	// in
            tag_202:
                /* "contracts/Auditor.sol":13916:13930  m.adjustFactor */
              dup3
              sload
              0x01
                /* "contracts/Auditor.sol":13873:13884  m.priceFeed */
              dup5
              add
              sload
                /* "contracts/Auditor.sol":13786:13830  uint256 assets = market.maxWithdraw(account) */
              swap2
              swap3
              pop
                /* "contracts/Auditor.sol":13934:13935  0 */
              0x00
              swap2
                /* "contracts/Auditor.sol":13844:13931  assets.mulDivDown(assetPrice(m.priceFeed), 10 ** m.decimals).mulWadDown(m.adjustFactor) */
              tag_204
              swap2
              sub(shl(0x80, 0x01), 0x01)
                /* "contracts/Auditor.sol":13916:13930  m.adjustFactor */
              and
              swap1
                /* "contracts/Auditor.sol":13844:13904  assets.mulDivDown(assetPrice(m.priceFeed), 10 ** m.decimals) */
              tag_205
              swap1
                /* "contracts/Auditor.sol":13862:13885  assetPrice(m.priceFeed) */
              tag_206
              swap1
              sub(shl(0xa0, 0x01), 0x01)
                /* "contracts/Auditor.sol":13873:13884  m.priceFeed */
              and
                /* "contracts/Auditor.sol":13862:13872  assetPrice */
              tag_145
                /* "contracts/Auditor.sol":13862:13885  assetPrice(m.priceFeed) */
              jump	// in
            tag_206:
                /* "contracts/Auditor.sol":13893:13903  m.decimals */
              dup7
              sload
                /* "contracts/Auditor.sol":13887:13903  10 ** m.decimals */
              tag_207
              swap1
              shl(0x80, 0x01)
                /* "contracts/Auditor.sol":13893:13903  m.decimals */
              swap1
              div
              0xff
              and
                /* "contracts/Auditor.sol":13887:13889  10 */
              0x0a
                /* "contracts/Auditor.sol":13887:13903  10 ** m.decimals */
              tag_208
              jump	// in
            tag_207:
                /* "contracts/Auditor.sol":13844:13850  assets */
              dup7
              swap2
                /* "contracts/Auditor.sol":13844:13904  assets.mulDivDown(assetPrice(m.priceFeed), 10 ** m.decimals) */
              swap1
                /* "contracts/Auditor.sol":13844:13861  assets.mulDivDown */
              tag_209
                /* "contracts/Auditor.sol":13844:13904  assets.mulDivDown(assetPrice(m.priceFeed), 10 ** m.decimals) */
              jump	// in
            tag_205:
                /* "contracts/Auditor.sol":13844:13915  assets.mulDivDown(assetPrice(m.priceFeed), 10 ** m.decimals).mulWadDown */
              swap1
              tag_210
                /* "contracts/Auditor.sol":13844:13931  assets.mulDivDown(assetPrice(m.priceFeed), 10 ** m.decimals).mulWadDown(m.adjustFactor) */
              jump	// in
            tag_204:
                /* "contracts/Auditor.sol":13844:13935  assets.mulDivDown(assetPrice(m.priceFeed), 10 ** m.decimals).mulWadDown(m.adjustFactor) > 0 */
              gt
                /* "contracts/Auditor.sol":13840:13944  if (assets.mulDivDown(assetPrice(m.priceFeed), 10 ** m.decimals).mulWadDown(m.adjustFactor) > 0) return; */
              iszero
              tag_211
              jumpi
                /* "contracts/Auditor.sol":13937:13944  return; */
              pop
              pop
              pop
              pop
              pop
              pop
                /* "contracts/Auditor.sol":13459:14203  function handleBadDebt(address account) external {... */
              pop
              jump	// out
                /* "contracts/Auditor.sol":13840:13944  if (assets.mulDivDown(assetPrice(m.priceFeed), 10 ** m.decimals).mulWadDown(m.adjustFactor) > 0) return; */
            tag_211:
                /* "contracts/Auditor.sol":13689:13952  {... */
              pop
              pop
              pop
                /* "contracts/Auditor.sol":13665:13952  if (marketMap & 1 != 0) {... */
            tag_194:
                /* "contracts/Auditor.sol":13979:13982  ++i */
              0x01
                /* "contracts/Auditor.sol":13640:13655  marketMap >>= 1 */
              swap2
              dup3
              shr
              swap2
                /* "contracts/Auditor.sol":13979:13982  ++i */
              add
                /* "contracts/Auditor.sol":13604:13997  for (uint256 i = 0; marketMap != 0; marketMap >>= 1) {... */
              jump(tag_191)
            tag_192:
              pop
                /* "contracts/Auditor.sol":14015:14027  memMarketMap */
              dup2
                /* "contracts/Auditor.sol":14003:14027  marketMap = memMarketMap */
              swap1
              pop
                /* "contracts/Auditor.sol":14038:14047  uint256 i */
              0x00
                /* "contracts/Auditor.sol":14033:14199  for (uint256 i = 0; marketMap != 0; marketMap >>= 1) {... */
            tag_212:
                /* "contracts/Auditor.sol":14053:14067  marketMap != 0 */
              dup2
              iszero
                /* "contracts/Auditor.sol":14033:14199  for (uint256 i = 0; marketMap != 0; marketMap >>= 1) {... */
              tag_213
              jumpi
                /* "contracts/Auditor.sol":14110:14111  1 */
              0x01
                /* "contracts/Auditor.sol":14098:14111  marketMap & 1 */
              dup3
              and
                /* "contracts/Auditor.sol":14098:14116  marketMap & 1 != 0 */
              iszero
                /* "contracts/Auditor.sol":14094:14153  if (marketMap & 1 != 0) marketList[i].clearBadDebt(account) */
              tag_215
              jumpi
                /* "contracts/Auditor.sol":14118:14128  marketList */
              0x99
                /* "contracts/Auditor.sol":14129:14130  i */
              dup2
                /* "contracts/Auditor.sol":14118:14131  marketList[i] */
              dup2
              sload
              dup2
              lt
              tag_217
              jumpi
              tag_217
              tag_197
              jump	// in
            tag_217:
              0x00
              swap2
              dup3
              mstore
              0x20
              swap1
              swap2
              keccak256
              add
              sload
                /* "contracts/Auditor.sol":14118:14153  marketList[i].clearBadDebt(account) */
              mload(0x40)
              shl(0xe0, 0x926bb633)
              dup2
              mstore
              sub(shl(0xa0, 0x01), 0x01)
                /* "#utility.yul":3020:3052   */
              dup7
              dup2
              and
                /* "contracts/Auditor.sol":14118:14153  marketList[i].clearBadDebt(account) */
              0x04
              dup4
              add
                /* "#utility.yul":3002:3053   */
              mstore
                /* "contracts/Auditor.sol":14118:14131  marketList[i] */
              swap1
              swap2
              and
              swap1
                /* "contracts/Auditor.sol":14118:14144  marketList[i].clearBadDebt */
              0x926bb633
              swap1
                /* "#utility.yul":2975:2993   */
              0x24
              add
                /* "contracts/Auditor.sol":14118:14153  marketList[i].clearBadDebt(account) */
              0x00
              mload(0x40)
              dup1
              dup4
              sub
              dup2
              0x00
              dup8
              dup1
              extcodesize
              iszero
              dup1
              iszero
              tag_220
              jumpi
              0x00
              dup1
              revert
            tag_220:
              pop
              gas
              call
              iszero
              dup1
              iszero
              tag_222
              jumpi
              returndatasize
              0x00
              dup1
              returndatacopy
              revert(0x00, returndatasize)
            tag_222:
              pop
              pop
              pop
              pop
                /* "contracts/Auditor.sol":14094:14153  if (marketMap & 1 != 0) marketList[i].clearBadDebt(account) */
            tag_215:
                /* "contracts/Auditor.sol":14181:14184  ++i */
              0x01
                /* "contracts/Auditor.sol":14069:14084  marketMap >>= 1 */
              swap2
              dup3
              shr
              swap2
                /* "contracts/Auditor.sol":14181:14184  ++i */
              add
                /* "contracts/Auditor.sol":14033:14199  for (uint256 i = 0; marketMap != 0; marketMap >>= 1) {... */
              jump(tag_212)
            tag_213:
              pop
                /* "contracts/Auditor.sol":13508:14203  {... */
              pop
              pop
                /* "contracts/Auditor.sol":13459:14203  function handleBadDebt(address account) external {... */
              pop
              jump	// out
                /* "contracts/Auditor.sol":8836:11190  function checkLiquidation(... */
            tag_62:
              sub(shl(0xa0, 0x01), 0x01)
                /* "contracts/Auditor.sol":9084:9104  markets[repayMarket] */
              dup5
              and
                /* "contracts/Auditor.sol":8992:9014  uint256 maxRepayAssets */
              0x00
                /* "contracts/Auditor.sol":9084:9104  markets[repayMarket] */
              swap1
              dup2
              mstore
                /* "contracts/Auditor.sol":9084:9091  markets */
              0x98
                /* "contracts/Auditor.sol":9084:9104  markets[repayMarket] */
              0x20
              mstore
              0x40
              dup2
              keccak256
                /* "contracts/Auditor.sol":9084:9113  markets[repayMarket].isListed */
              sload
              shl(0x90, 0x01)
              swap1
              div
              0xff
              and
                /* "contracts/Auditor.sol":9083:9113  !markets[repayMarket].isListed */
              iszero
              dup1
                /* "contracts/Auditor.sol":9083:9147  !markets[repayMarket].isListed || !markets[seizeMarket].isListed */
              tag_224
              jumpi
              pop
              sub(shl(0xa0, 0x01), 0x01)
                /* "contracts/Auditor.sol":9118:9138  markets[seizeMarket] */
              dup5
              and
              0x00
              swap1
              dup2
              mstore
                /* "contracts/Auditor.sol":9118:9125  markets */
              0x98
                /* "contracts/Auditor.sol":9118:9138  markets[seizeMarket] */
              0x20
              mstore
              0x40
              swap1
              keccak256
                /* "contracts/Auditor.sol":9118:9147  markets[seizeMarket].isListed */
              sload
              shl(0x90, 0x01)
              swap1
              div
              0xff
              and
                /* "contracts/Auditor.sol":9117:9147  !markets[seizeMarket].isListed */
              iszero
                /* "contracts/Auditor.sol":9083:9147  !markets[repayMarket].isListed || !markets[seizeMarket].isListed */
            tag_224:
                /* "contracts/Auditor.sol":9079:9173  if (!markets[repayMarket].isListed || !markets[seizeMarket].isListed) revert MarketNotListed() */
              iszero
              tag_225
              jumpi
                /* "contracts/Auditor.sol":9156:9173  MarketNotListed() */
              mload(0x40)
              shl(0xe1, 0x34b04fe3)
              dup2
              mstore
              0x04
              add
              mload(0x40)
              dup1
              swap2
              sub
              swap1
              revert
                /* "contracts/Auditor.sol":9079:9173  if (!markets[repayMarket].isListed || !markets[seizeMarket].isListed) revert MarketNotListed() */
            tag_225:
                /* "contracts/Auditor.sol":9180:9203  MarketVars memory repay */
              tag_226
              mload(0x40)
              dup1
              0x60
              add
              0x40
              mstore
              dup1
              0x00
              dup2
              mstore
              0x20
              add
              0x00
              dup2
              mstore
              0x20
              add
              and(sub(shl(0x80, 0x01), 0x01), 0x00)
              dup2
              mstore
              pop
              swap1
              jump
            tag_226:
                /* "contracts/Auditor.sol":9209:9234  LiquidityVars memory base */
              tag_228
              mload(0x40)
              dup1
              0xa0
              add
              0x40
              mstore
              dup1
              0x00
              dup2
              mstore
              0x20
              add
              0x00
              dup2
              mstore
              0x20
              add
              0x00
              dup2
              mstore
              0x20
              add
              0x00
              dup2
              mstore
              0x20
              add
              0x00
              dup2
              mstore
              pop
              swap1
              jump
            tag_228:
              sub(shl(0xa0, 0x01), 0x01)
                /* "contracts/Auditor.sol":9260:9284  accountMarkets[borrower] */
              dup6
              and
                /* "contracts/Auditor.sol":9240:9257  uint256 marketMap */
              0x00
                /* "contracts/Auditor.sol":9260:9284  accountMarkets[borrower] */
              swap1
              dup2
              mstore
                /* "contracts/Auditor.sol":9260:9274  accountMarkets */
              0x97
                /* "contracts/Auditor.sol":9260:9284  accountMarkets[borrower] */
              0x20
              mstore
              0x40
              dup2
              keccak256
              sload
              swap1
                /* "contracts/Auditor.sol":9290:10241  for (uint256 i = 0; marketMap != 0; marketMap >>= 1) {... */
            tag_230:
                /* "contracts/Auditor.sol":9310:9324  marketMap != 0 */
              dup2
              iszero
                /* "contracts/Auditor.sol":9290:10241  for (uint256 i = 0; marketMap != 0; marketMap >>= 1) {... */
              tag_231
              jumpi
                /* "contracts/Auditor.sol":9367:9368  1 */
              0x01
                /* "contracts/Auditor.sol":9355:9368  marketMap & 1 */
              dup3
              and
                /* "contracts/Auditor.sol":9355:9373  marketMap & 1 != 0 */
              iszero
                /* "contracts/Auditor.sol":9351:10196  if (marketMap & 1 != 0) {... */
              tag_233
              jumpi
                /* "contracts/Auditor.sol":9385:9398  Market market */
              0x00
                /* "contracts/Auditor.sol":9401:9411  marketList */
              0x99
                /* "contracts/Auditor.sol":9412:9413  i */
              dup3
                /* "contracts/Auditor.sol":9401:9414  marketList[i] */
              dup2
              sload
              dup2
              lt
              tag_235
              jumpi
              tag_235
              tag_197
              jump	// in
            tag_235:
              0x00
              swap2
              dup3
              mstore
              0x20
              dup1
              dup4
              keccak256
              swap1
              swap2
              add
              sload
              sub(shl(0xa0, 0x01), 0x01)
              swap1
              dup2
              and
                /* "contracts/Auditor.sol":9456:9471  markets[market] */
              dup1
              dup5
              mstore
                /* "contracts/Auditor.sol":9456:9463  markets */
              0x98
                /* "contracts/Auditor.sol":9456:9471  markets[market] */
              swap1
              swap3
              mstore
              0x40
              dup1
              dup5
              keccak256
                /* "contracts/Auditor.sol":9503:9672  MarketVars({... */
              dup2
              mload
              0x60
              dup2
              add
              swap1
              swap3
              mstore
                /* "contracts/Auditor.sol":9401:9414  marketList[i] */
              0x01
                /* "contracts/Auditor.sol":9544:9564  marketData.priceFeed */
              dup2
              add
              sload
                /* "contracts/Auditor.sol":9401:9414  marketList[i] */
              swap4
              swap6
              pop
                /* "contracts/Auditor.sol":9456:9471  markets[market] */
              swap4
                /* "contracts/Auditor.sol":9401:9414  marketList[i] */
              swap3
                /* "contracts/Auditor.sol":9503:9672  MarketVars({... */
              swap1
              swap2
              dup3
              swap2
                /* "contracts/Auditor.sol":9533:9565  assetPrice(marketData.priceFeed) */
              tag_237
              swap2
                /* "contracts/Auditor.sol":9544:9564  marketData.priceFeed */
              and
                /* "contracts/Auditor.sol":9533:9543  assetPrice */
              tag_145
                /* "contracts/Auditor.sol":9533:9565  assetPrice(marketData.priceFeed) */
              jump	// in
            tag_237:
                /* "contracts/Auditor.sol":9503:9672  MarketVars({... */
              dup2
              mstore
                /* "contracts/Auditor.sol":9642:9661  marketData.decimals */
              dup4
              sload
                /* "contracts/Auditor.sol":9503:9672  MarketVars({... */
              0x20
              swap1
              swap2
              add
              swap1
                /* "contracts/Auditor.sol":9636:9661  10 ** marketData.decimals */
              tag_238
              swap1
              shl(0x80, 0x01)
                /* "contracts/Auditor.sol":9642:9661  marketData.decimals */
              swap1
              div
              0xff
              and
                /* "contracts/Auditor.sol":9636:9638  10 */
              0x0a
                /* "contracts/Auditor.sol":9636:9661  10 ** marketData.decimals */
              tag_208
              jump	// in
            tag_238:
                /* "contracts/Auditor.sol":9503:9672  MarketVars({... */
              dup2
              mstore
                /* "contracts/Auditor.sol":9591:9614  marketData.adjustFactor */
              dup4
              sload
              sub(shl(0x80, 0x01), 0x01)
              and
                /* "contracts/Auditor.sol":9503:9672  MarketVars({... */
              0x20
              swap1
              swap2
              add
              mstore
                /* "contracts/Auditor.sol":9481:9672  MarketVars memory m = MarketVars({... */
              swap1
              pop
              sub(shl(0xa0, 0x01), 0x01)
                /* "contracts/Auditor.sol":9687:9708  market == repayMarket */
              dup1
              dup14
              and
              swap1
              dup5
              and
              sub
                /* "contracts/Auditor.sol":9683:9719  if (market == repayMarket) repay = m */
              tag_239
              jumpi
                /* "contracts/Auditor.sol":9718:9719  m */
              dup1
                /* "contracts/Auditor.sol":9710:9719  repay = m */
              swap7
              pop
                /* "contracts/Auditor.sol":9683:9719  if (market == repayMarket) repay = m */
            tag_239:
                /* "contracts/Auditor.sol":9767:9799  market.accountSnapshot(borrower) */
              mload(0x40)
              shl(0xe0, 0x014a296f)
              dup2
              mstore
              sub(shl(0xa0, 0x01), 0x01)
                /* "#utility.yul":3020:3052   */
              dup12
              dup2
              and
                /* "contracts/Auditor.sol":9767:9799  market.accountSnapshot(borrower) */
              0x04
              dup4
              add
                /* "#utility.yul":3002:3053   */
              mstore
                /* "contracts/Auditor.sol":9731:9749  uint256 collateral */
              0x00
              swap2
              dup3
              swap2
                /* "contracts/Auditor.sol":9767:9789  market.accountSnapshot */
              dup7
              and
              swap1
              0x014a296f
              swap1
                /* "#utility.yul":2975:2993   */
              0x24
              add
                /* "contracts/Auditor.sol":9767:9799  market.accountSnapshot(borrower) */
              0x40
              dup1
              mload
              dup1
              dup4
              sub
              dup2
              dup7
              gas
              staticcall
              iszero
              dup1
              iszero
              tag_242
              jumpi
              returndatasize
              0x00
              dup1
              returndatacopy
              revert(0x00, returndatasize)
            tag_242:
              pop
              pop
              pop
              pop
              mload(0x40)
              returndatasize
              not(0x1f)
              0x1f
              dup3
              add
              and
              dup3
              add
              dup1
              0x40
              mstore
              pop
              dup2
              add
              swap1
              tag_243
              swap2
              swap1
              tag_244
              jump	// in
            tag_243:
                /* "contracts/Auditor.sol":9840:9847  m.price */
              dup5
              mload
                /* "contracts/Auditor.sol":9849:9859  m.baseUnit */
              0x20
              dup7
              add
              mload
                /* "contracts/Auditor.sol":9730:9799  (uint256 collateral, uint256 debt) = market.accountSnapshot(borrower) */
              swap3
              swap5
              pop
              swap1
              swap3
              pop
                /* "contracts/Auditor.sol":9810:9823  uint256 value */
              0x00
              swap2
                /* "contracts/Auditor.sol":9826:9860  debt.mulDivUp(m.price, m.baseUnit) */
              tag_245
              swap2
                /* "contracts/Auditor.sol":9730:9799  (uint256 collateral, uint256 debt) = market.accountSnapshot(borrower) */
              dup5
              swap2
                /* "contracts/Auditor.sol":9826:9839  debt.mulDivUp */
              tag_246
                /* "contracts/Auditor.sol":9826:9860  debt.mulDivUp(m.price, m.baseUnit) */
              jump	// in
            tag_245:
                /* "contracts/Auditor.sol":9810:9860  uint256 value = debt.mulDivUp(m.price, m.baseUnit) */
              swap1
              pop
                /* "contracts/Auditor.sol":9888:9893  value */
              dup1
                /* "contracts/Auditor.sol":9870:9874  base */
              dup10
                /* "contracts/Auditor.sol":9870:9884  base.totalDebt */
              0x00
              add
                /* "contracts/Auditor.sol":9870:9893  base.totalDebt += value */
              dup2
              dup2
              mload
              tag_247
              swap2
              swap1
              tag_248
              jump	// in
            tag_247:
              swap1
              mstore
              pop
                /* "contracts/Auditor.sol":9939:9953  m.adjustFactor */
              0x40
              dup5
              add
              mload
                /* "contracts/Auditor.sol":9924:9954  value.divWadUp(m.adjustFactor) */
              tag_249
              swap1
                /* "contracts/Auditor.sol":9924:9929  value */
              dup3
              swap1
              sub(shl(0x80, 0x01), 0x01)
                /* "contracts/Auditor.sol":9924:9954  value.divWadUp(m.adjustFactor) */
              and
                /* "contracts/Auditor.sol":9924:9938  value.divWadUp */
              tag_250
                /* "contracts/Auditor.sol":9924:9954  value.divWadUp(m.adjustFactor) */
              jump	// in
            tag_249:
                /* "contracts/Auditor.sol":9903:9907  base */
              dup10
                /* "contracts/Auditor.sol":9903:9920  base.adjustedDebt */
              0x40
              add
                /* "contracts/Auditor.sol":9903:9954  base.adjustedDebt += value.divWadUp(m.adjustFactor) */
              dup2
              dup2
              mload
              tag_251
              swap2
              swap1
              tag_248
              jump	// in
            tag_251:
              swap1
              mstore
              pop
                /* "contracts/Auditor.sol":9995:10002  m.price */
              dup4
              mload
                /* "contracts/Auditor.sol":10004:10014  m.baseUnit */
              0x20
              dup6
              add
              mload
                /* "contracts/Auditor.sol":9973:10015  collateral.mulDivDown(m.price, m.baseUnit) */
              tag_252
              swap2
                /* "contracts/Auditor.sol":9973:9983  collateral */
              dup6
              swap2
                /* "contracts/Auditor.sol":9973:9994  collateral.mulDivDown */
              tag_209
                /* "contracts/Auditor.sol":9973:10015  collateral.mulDivDown(m.price, m.baseUnit) */
              jump	// in
            tag_252:
                /* "contracts/Auditor.sol":9965:10015  value = collateral.mulDivDown(m.price, m.baseUnit) */
              swap1
              pop
                /* "contracts/Auditor.sol":10049:10054  value */
              dup1
                /* "contracts/Auditor.sol":10025:10029  base */
              dup10
                /* "contracts/Auditor.sol":10025:10045  base.totalCollateral */
              0x20
              add
                /* "contracts/Auditor.sol":10025:10054  base.totalCollateral += value */
              dup2
              dup2
              mload
              tag_253
              swap2
              swap1
              tag_248
              jump	// in
            tag_253:
              swap1
              mstore
              pop
                /* "contracts/Auditor.sol":10108:10122  m.adjustFactor */
              0x40
              dup5
              add
              mload
                /* "contracts/Auditor.sol":10091:10123  value.mulWadDown(m.adjustFactor) */
              tag_254
              swap1
                /* "contracts/Auditor.sol":10091:10096  value */
              dup3
              swap1
              sub(shl(0x80, 0x01), 0x01)
                /* "contracts/Auditor.sol":10091:10123  value.mulWadDown(m.adjustFactor) */
              and
                /* "contracts/Auditor.sol":10091:10107  value.mulWadDown */
              tag_210
                /* "contracts/Auditor.sol":10091:10123  value.mulWadDown(m.adjustFactor) */
              jump	// in
            tag_254:
                /* "contracts/Auditor.sol":10064:10068  base */
              dup10
                /* "contracts/Auditor.sol":10064:10087  base.adjustedCollateral */
              0x60
              add
                /* "contracts/Auditor.sol":10064:10123  base.adjustedCollateral += value.mulWadDown(m.adjustFactor) */
              dup2
              dup2
              mload
              tag_255
              swap2
              swap1
              tag_248
              jump	// in
            tag_255:
              swap1
              mstore
              pop
              sub(shl(0xa0, 0x01), 0x01)
                /* "contracts/Auditor.sol":10137:10158  market == seizeMarket */
              dup1
              dup16
              and
              swap1
              dup8
              and
              sub
                /* "contracts/Auditor.sol":10133:10187  if (market == seizeMarket) base.seizeAvailable = value */
              tag_256
              jumpi
                /* "contracts/Auditor.sol":10160:10179  base.seizeAvailable */
              0x80
              dup10
              add
                /* "contracts/Auditor.sol":10160:10187  base.seizeAvailable = value */
              dup2
              swap1
              mstore
                /* "contracts/Auditor.sol":10133:10187  if (market == seizeMarket) base.seizeAvailable = value */
            tag_256:
                /* "contracts/Auditor.sol":9375:10196  {... */
              pop
              pop
              pop
              pop
              pop
              pop
                /* "contracts/Auditor.sol":9351:10196  if (marketMap & 1 != 0) {... */
            tag_233:
                /* "contracts/Auditor.sol":10223:10226  ++i */
              0x01
                /* "contracts/Auditor.sol":9326:9341  marketMap >>= 1 */
              swap2
              dup3
              shr
              swap2
                /* "contracts/Auditor.sol":10223:10226  ++i */
              add
                /* "contracts/Auditor.sol":9290:10241  for (uint256 i = 0; marketMap != 0; marketMap >>= 1) {... */
              jump(tag_230)
            tag_231:
              pop
                /* "contracts/Auditor.sol":10278:10282  base */
              dup2
                /* "contracts/Auditor.sol":10278:10295  base.adjustedDebt */
              0x40
              add
              mload
                /* "contracts/Auditor.sol":10251:10255  base */
              dup3
                /* "contracts/Auditor.sol":10251:10274  base.adjustedCollateral */
              0x60
              add
              mload
                /* "contracts/Auditor.sol":10251:10295  base.adjustedCollateral >= base.adjustedDebt */
              lt
                /* "contracts/Auditor.sol":10247:10327  if (base.adjustedCollateral >= base.adjustedDebt) revert InsufficientShortfall() */
              tag_257
              jumpi
                /* "contracts/Auditor.sol":10304:10327  InsufficientShortfall() */
              mload(0x40)
              shl(0xe0, 0x095bf333)
              dup2
              mstore
              0x04
              add
              mload(0x40)
              dup1
              swap2
              sub
              swap1
              revert
                /* "contracts/Auditor.sol":10247:10327  if (base.adjustedCollateral >= base.adjustedDebt) revert InsufficientShortfall() */
            tag_257:
                /* "contracts/Auditor.sol":10334:10397  LiquidationIncentive memory memIncentive = liquidationIncentive */
              0x40
              dup1
              mload
              dup1
              dup3
              add
              dup3
              mstore
                /* "contracts/Auditor.sol":10377:10397  liquidationIncentive */
              0x9a
                /* "contracts/Auditor.sol":10334:10397  LiquidationIncentive memory memIncentive = liquidationIncentive */
              sload
              sub(shl(0x80, 0x01), 0x01)
              dup1
              dup3
              and
              dup4
              mstore
              shl(0x80, 0x01)
              swap1
              swap2
              div
              and
              0x20
              dup1
              dup4
              add
              swap2
              swap1
              swap2
              mstore
                /* "contracts/Auditor.sol":10520:10540  base.totalCollateral */
              dup5
              add
              mload
                /* "contracts/Auditor.sol":10493:10510  base.adjustedDebt */
              swap2
              dup5
              add
              mload
                /* "contracts/Auditor.sol":10334:10397  LiquidationIncentive memory memIncentive = liquidationIncentive */
              swap1
              swap2
                /* "contracts/Auditor.sol":10334:10374  LiquidationIncentive memory memIncentive */
              0x00
              swap2
                /* "contracts/Auditor.sol":10426:10547  base.adjustedCollateral.mulWadDown(base.totalDebt).divWadUp(... */
              tag_258
              swap2
                /* "contracts/Auditor.sol":10493:10541  base.adjustedDebt.mulWadUp(base.totalCollateral) */
              tag_259
              swap2
                /* "contracts/Auditor.sol":10493:10510  base.adjustedDebt */
              swap1
                /* "contracts/Auditor.sol":10493:10519  base.adjustedDebt.mulWadUp */
              tag_260
                /* "contracts/Auditor.sol":10493:10541  base.adjustedDebt.mulWadUp(base.totalCollateral) */
              jump	// in
            tag_259:
                /* "contracts/Auditor.sol":10461:10475  base.totalDebt */
              dup6
              mload
                /* "contracts/Auditor.sol":10426:10449  base.adjustedCollateral */
              0x60
              dup8
              add
              mload
                /* "contracts/Auditor.sol":10426:10476  base.adjustedCollateral.mulWadDown(base.totalDebt) */
              tag_261
              swap2
                /* "contracts/Auditor.sol":10426:10460  base.adjustedCollateral.mulWadDown */
              tag_210
                /* "contracts/Auditor.sol":10426:10476  base.adjustedCollateral.mulWadDown(base.totalDebt) */
              jump	// in
            tag_261:
                /* "contracts/Auditor.sol":10426:10485  base.adjustedCollateral.mulWadDown(base.totalDebt).divWadUp */
              swap1
              tag_250
                /* "contracts/Auditor.sol":10426:10547  base.adjustedCollateral.mulWadDown(base.totalDebt).divWadUp(... */
              jump	// in
            tag_258:
                /* "contracts/Auditor.sol":10403:10547  uint256 adjustFactor = base.adjustedCollateral.mulWadDown(base.totalDebt).divWadUp(... */
              swap1
              pop
                /* "contracts/Auditor.sol":10553:10572  uint256 closeFactor */
              0x00
                /* "contracts/Auditor.sol":10575:10761  (TARGET_HEALTH - base.adjustedCollateral.divWadUp(base.adjustedDebt)).divWadUp(... */
              tag_262
                /* "contracts/Auditor.sol":10677:10755  adjustFactor.mulWadDown(1e18 + memIncentive.liquidator + memIncentive.lenders) */
              tag_263
                /* "contracts/Auditor.sol":10734:10746  memIncentive */
              dup5
                /* "contracts/Auditor.sol":10734:10754  memIncentive.lenders */
              0x20
              add
              mload
                /* "contracts/Auditor.sol":10708:10720  memIncentive */
              dup6
                /* "contracts/Auditor.sol":10708:10731  memIncentive.liquidator */
              0x00
              add
              mload
                /* "contracts/Auditor.sol":10701:10705  1e18 */
              0x0de0b6b3a7640000
                /* "contracts/Auditor.sol":10701:10731  1e18 + memIncentive.liquidator */
              tag_264
              swap2
              swap1
              tag_265
              jump	// in
            tag_264:
                /* "contracts/Auditor.sol":10701:10754  1e18 + memIncentive.liquidator + memIncentive.lenders */
              tag_266
              swap2
              swap1
              tag_265
              jump	// in
            tag_266:
                /* "contracts/Auditor.sol":10677:10689  adjustFactor */
              dup5
              swap1
              sub(shl(0x80, 0x01), 0x01)
                /* "contracts/Auditor.sol":10677:10755  adjustFactor.mulWadDown(1e18 + memIncentive.liquidator + memIncentive.lenders) */
              and
                /* "contracts/Auditor.sol":10677:10700  adjustFactor.mulWadDown */
              tag_210
                /* "contracts/Auditor.sol":10677:10755  adjustFactor.mulWadDown(1e18 + memIncentive.liquidator + memIncentive.lenders) */
              jump	// in
            tag_263:
                /* "contracts/Auditor.sol":10661:10755  TARGET_HEALTH - adjustFactor.mulWadDown(1e18 + memIncentive.liquidator + memIncentive.lenders) */
              tag_267
              swap1
                /* "contracts/Auditor.sol":1021:1028  1.25e18 */
              0x1158e460913d0000
                /* "contracts/Auditor.sol":10661:10755  TARGET_HEALTH - adjustFactor.mulWadDown(1e18 + memIncentive.liquidator + memIncentive.lenders) */
              tag_268
              jump	// in
            tag_267:
                /* "contracts/Auditor.sol":10625:10642  base.adjustedDebt */
              0x40
              dup8
              add
              mload
                /* "contracts/Auditor.sol":10592:10615  base.adjustedCollateral */
              0x60
              dup9
              add
              mload
                /* "contracts/Auditor.sol":10592:10643  base.adjustedCollateral.divWadUp(base.adjustedDebt) */
              tag_269
              swap2
                /* "contracts/Auditor.sol":10592:10624  base.adjustedCollateral.divWadUp */
              tag_250
                /* "contracts/Auditor.sol":10592:10643  base.adjustedCollateral.divWadUp(base.adjustedDebt) */
              jump	// in
            tag_269:
                /* "contracts/Auditor.sol":10576:10643  TARGET_HEALTH - base.adjustedCollateral.divWadUp(base.adjustedDebt) */
              tag_261
              swap1
                /* "contracts/Auditor.sol":1021:1028  1.25e18 */
              0x1158e460913d0000
                /* "contracts/Auditor.sol":10576:10643  TARGET_HEALTH - base.adjustedCollateral.divWadUp(base.adjustedDebt) */
              tag_268
              jump	// in
                /* "contracts/Auditor.sol":10575:10761  (TARGET_HEALTH - base.adjustedCollateral.divWadUp(base.adjustedDebt)).divWadUp(... */
            tag_262:
                /* "contracts/Auditor.sol":10553:10761  uint256 closeFactor = (TARGET_HEALTH - base.adjustedCollateral.divWadUp(base.adjustedDebt)).divWadUp(... */
              swap1
              pop
                /* "contracts/Auditor.sol":10784:11185  Math.min(... */
              tag_271
                /* "contracts/Auditor.sol":10800:11033  Math... */
              tag_272
                /* "contracts/Auditor.sol":11005:11010  repay */
              dup8
                /* "contracts/Auditor.sol":11005:11019  repay.baseUnit */
              0x20
              add
              mload
                /* "contracts/Auditor.sol":11021:11026  repay */
              dup9
                /* "contracts/Auditor.sol":11021:11032  repay.price */
              0x00
              add
              mload
                /* "contracts/Auditor.sol":10800:10986  Math... */
              tag_273
                /* "contracts/Auditor.sol":10829:10881  base.totalDebt.mulWadUp(Math.min(1e18, closeFactor)) */
              tag_274
                /* "contracts/Auditor.sol":10853:10880  Math.min(1e18, closeFactor) */
              tag_275
                /* "contracts/Auditor.sol":10862:10866  1e18 */
              0x0de0b6b3a7640000
                /* "contracts/Auditor.sol":10868:10879  closeFactor */
              dup9
                /* "contracts/Auditor.sol":10853:10861  Math.min */
              tag_276
                /* "contracts/Auditor.sol":10853:10880  Math.min(1e18, closeFactor) */
              jump	// in
            tag_275:
                /* "contracts/Auditor.sol":10829:10843  base.totalDebt */
              dup12
              mload
              swap1
                /* "contracts/Auditor.sol":10829:10852  base.totalDebt.mulWadUp */
              tag_260
                /* "contracts/Auditor.sol":10829:10881  base.totalDebt.mulWadUp(Math.min(1e18, closeFactor)) */
              jump	// in
            tag_274:
                /* "contracts/Auditor.sol":10955:10975  memIncentive.lenders */
              0x20
              dup10
              add
              mload
                /* "contracts/Auditor.sol":10929:10952  memIncentive.liquidator */
              dup10
              mload
                /* "contracts/Auditor.sol":10893:10976  base.seizeAvailable.divWadUp(1e18 + memIncentive.liquidator + memIncentive.lenders) */
              tag_277
              swap2
                /* "contracts/Auditor.sol":10955:10975  memIncentive.lenders */
              swap1
                /* "contracts/Auditor.sol":10922:10952  1e18 + memIncentive.liquidator */
              tag_278
              swap1
                /* "contracts/Auditor.sol":10922:10926  1e18 */
              0x0de0b6b3a7640000
                /* "contracts/Auditor.sol":10922:10952  1e18 + memIncentive.liquidator */
              tag_265
              jump	// in
            tag_278:
                /* "contracts/Auditor.sol":10922:10975  1e18 + memIncentive.liquidator + memIncentive.lenders */
              tag_279
              swap2
              swap1
              tag_265
              jump	// in
            tag_279:
                /* "contracts/Auditor.sol":10893:10912  base.seizeAvailable */
              0x80
              dup14
              add
              mload
              swap1
              sub(shl(0x80, 0x01), 0x01)
                /* "contracts/Auditor.sol":10893:10976  base.seizeAvailable.divWadUp(1e18 + memIncentive.liquidator + memIncentive.lenders) */
              and
                /* "contracts/Auditor.sol":10893:10921  base.seizeAvailable.divWadUp */
              tag_250
                /* "contracts/Auditor.sol":10893:10976  base.seizeAvailable.divWadUp(1e18 + memIncentive.liquidator + memIncentive.lenders) */
              jump	// in
            tag_277:
                /* "contracts/Auditor.sol":10800:10817  Math... */
              tag_276
                /* "contracts/Auditor.sol":10800:10986  Math... */
              jump	// in
            tag_273:
                /* "contracts/Auditor.sol":10800:11004  Math... */
              swap2
                /* "contracts/Auditor.sol":10800:11033  Math... */
              swap1
                /* "contracts/Auditor.sol":10800:11004  Math... */
              tag_246
                /* "contracts/Auditor.sol":10800:11033  Math... */
              jump	// in
            tag_272:
                /* "contracts/Auditor.sol":1240:1264  type(uint256).max / 1e18 */
              tag_280
                /* "contracts/Auditor.sol":1260:1264  1e18 */
              0x0de0b6b3a7640000
              not(0x00)
                /* "contracts/Auditor.sol":1240:1264  type(uint256).max / 1e18 */
              tag_281
              jump	// in
            tag_280:
                /* "contracts/Auditor.sol":11041:11060  maxLiquidatorAssets */
              dup11
                /* "contracts/Auditor.sol":11041:11079  maxLiquidatorAssets < ASSETS_THRESHOLD */
              lt
                /* "contracts/Auditor.sol":11041:11179  maxLiquidatorAssets < ASSETS_THRESHOLD... */
              tag_282
              jumpi
                /* "contracts/Auditor.sol":11160:11179  maxLiquidatorAssets */
              dup10
                /* "contracts/Auditor.sol":10800:10817  Math... */
              tag_276
                /* "contracts/Auditor.sol":10800:10986  Math... */
              jump	// in
                /* "contracts/Auditor.sol":11041:11179  maxLiquidatorAssets < ASSETS_THRESHOLD... */
            tag_282:
                /* "contracts/Auditor.sol":11090:11149  maxLiquidatorAssets.divWadDown(1e18 + memIncentive.lenders) */
              tag_277
                /* "contracts/Auditor.sol":11128:11140  memIncentive */
              dup6
                /* "contracts/Auditor.sol":11128:11148  memIncentive.lenders */
              0x20
              add
              mload
                /* "contracts/Auditor.sol":11121:11125  1e18 */
              0x0de0b6b3a7640000
                /* "contracts/Auditor.sol":11121:11148  1e18 + memIncentive.lenders */
              tag_285
              swap2
              swap1
              tag_265
              jump	// in
            tag_285:
                /* "contracts/Auditor.sol":11090:11109  maxLiquidatorAssets */
              dup12
              swap1
              sub(shl(0x80, 0x01), 0x01)
                /* "contracts/Auditor.sol":11090:11149  maxLiquidatorAssets.divWadDown(1e18 + memIncentive.lenders) */
              and
                /* "contracts/Auditor.sol":11090:11120  maxLiquidatorAssets.divWadDown */
              tag_286
                /* "contracts/Auditor.sol":11090:11149  maxLiquidatorAssets.divWadDown(1e18 + memIncentive.lenders) */
              jump	// in
                /* "contracts/Auditor.sol":10784:11185  Math.min(... */
            tag_271:
                /* "contracts/Auditor.sol":10767:11185  maxRepayAssets = Math.min(... */
              swap12
                /* "contracts/Auditor.sol":8836:11190  function checkLiquidation(... */
              swap11
              pop
              pop
              pop
              pop
              pop
              pop
              pop
              pop
              pop
              pop
              pop
              jump	// out
                /* "contracts/Auditor.sol":2114:2140  Market[] public marketList */
            tag_67:
              0x99
              dup2
              dup2
              sload
              dup2
              lt
              tag_287
              jumpi
              0x00
              dup1
              revert
            tag_287:
              0x00
              swap2
              dup3
              mstore
              0x20
              swap1
              swap2
              keccak256
              add
              sload
              sub(shl(0xa0, 0x01), 0x01)
              and
              swap1
              pop
              dup2
              jump	// out
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":5133:5278  function grantRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {... */
            tag_79:
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":4782:4789  bytes32 */
              0x00
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":4808:4820  _roles[role] */
              dup3
              dup2
              mstore
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":4808:4814  _roles */
              0x65
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":4808:4820  _roles[role] */
              0x20
              mstore
              0x40
              swap1
              keccak256
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":4808:4830  _roles[role].adminRole */
              0x01
              add
              sload
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":2802:2818  _checkRole(role) */
              tag_292
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":2813:2817  role */
              dup2
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":2802:2812  _checkRole */
              tag_293
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":2802:2818  _checkRole(role) */
              jump	// in
            tag_292:
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":5246:5271  _grantRole(role, account) */
              tag_295
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":5257:5261  role */
              dup4
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":5263:5270  account */
              dup4
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":5246:5256  _grantRole */
              tag_185
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":5246:5271  _grantRole(role, account) */
              jump	// in
            tag_295:
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":5133:5278  function grantRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {... */
              pop
              pop
              pop
              jump	// out
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":6242:6456  function renounceRole(bytes32 role, address account) public virtual override {... */
            tag_82:
              sub(shl(0xa0, 0x01), 0x01)
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":6337:6360  account == _msgSender() */
              dup2
              and
                /* "node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":929:939  msg.sender */
              caller
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":6337:6360  account == _msgSender() */
              eq
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":6329:6412  require(account == _msgSender(), "AccessControl: can only renounce roles for self") */
              tag_299
              jumpi
              0x00
              dup1
              revert
            tag_299:
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":6423:6449  _revokeRole(role, account) */
              tag_187
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":6435:6439  role */
              dup3
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":6441:6448  account */
              dup3
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":6423:6434  _revokeRole */
              tag_301
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":6423:6449  _revokeRole(role, account) */
              jump	// in
                /* "contracts/Auditor.sol":14798:14888  function allMarkets() external view returns (Market[] memory) {... */
            tag_84:
                /* "contracts/Auditor.sol":14843:14858  Market[] memory */
              0x60
                /* "contracts/Auditor.sol":14873:14883  marketList */
              0x99
                /* "contracts/Auditor.sol":14866:14883  return marketList */
              dup1
              sload
              dup1
              0x20
              mul
              0x20
              add
              mload(0x40)
              swap1
              dup2
              add
              0x40
              mstore
              dup1
              swap3
              swap2
              swap1
              dup2
              dup2
              mstore
              0x20
              add
              dup3
              dup1
              sload
              dup1
              iszero
              tag_303
              jumpi
              0x20
              mul
              dup3
              add
              swap2
              swap1
              0x00
              mstore
              keccak256(0x00, 0x20)
              swap1
            tag_304:
              dup2
              sload
              sub(shl(0xa0, 0x01), 0x01)
              and
              dup2
              mstore
              0x01
              swap1
              swap2
              add
              swap1
              0x20
              add
              dup1
              dup4
              gt
              tag_304
              jumpi
            tag_303:
              pop
              pop
              pop
              pop
              pop
              swap1
              pop
                /* "contracts/Auditor.sol":14798:14888  function allMarkets() external view returns (Market[] memory) {... */
              swap1
              jump	// out
                /* "contracts/Auditor.sol":3023:3406  function enterMarket(Market market) external {... */
            tag_90:
              sub(shl(0xa0, 0x01), 0x01)
                /* "contracts/Auditor.sol":3097:3112  markets[market] */
              dup2
              and
                /* "contracts/Auditor.sol":3074:3094  MarketData storage m */
              0x00
                /* "contracts/Auditor.sol":3097:3112  markets[market] */
              swap1
              dup2
              mstore
                /* "contracts/Auditor.sol":3097:3104  markets */
              0x98
                /* "contracts/Auditor.sol":3097:3112  markets[market] */
              0x20
              mstore
              0x40
              swap1
              keccak256
                /* "contracts/Auditor.sol":3123:3133  m.isListed */
              dup1
              sload
              shl(0x90, 0x01)
              swap1
              div
              0xff
              and
                /* "contracts/Auditor.sol":3118:3159  if (!m.isListed) revert MarketNotListed() */
              tag_306
              jumpi
                /* "contracts/Auditor.sol":3142:3159  MarketNotListed() */
              mload(0x40)
              shl(0xe1, 0x34b04fe3)
              dup2
              mstore
              0x04
              add
              mload(0x40)
              dup1
              swap2
              sub
              swap1
              revert
                /* "contracts/Auditor.sol":3118:3159  if (!m.isListed) revert MarketNotListed() */
            tag_306:
                /* "contracts/Auditor.sol":3201:3211  msg.sender */
              caller
                /* "contracts/Auditor.sol":3166:3183  uint256 marketMap */
              0x00
                /* "contracts/Auditor.sol":3186:3212  accountMarkets[msg.sender] */
              swap1
              dup2
              mstore
                /* "contracts/Auditor.sol":3186:3200  accountMarkets */
              0x97
                /* "contracts/Auditor.sol":3186:3212  accountMarkets[msg.sender] */
              0x20
              mstore
              0x40
              swap1
              keccak256
              sload
                /* "contracts/Auditor.sol":3244:3251  m.index */
              dup2
              sload
                /* "contracts/Auditor.sol":3239:3240  1 */
              0x01
              shl(0x88, 0x01)
                /* "contracts/Auditor.sol":3244:3251  m.index */
              swap1
              swap2
              div
              0xff
              and
                /* "contracts/Auditor.sol":3239:3251  1 << m.index */
              shl
                /* "contracts/Auditor.sol":3263:3285  marketMap & marketMask */
              dup1
              dup3
              and
                /* "contracts/Auditor.sol":3262:3291  (marketMap & marketMask) != 0 */
              iszero
                /* "contracts/Auditor.sol":3258:3300  if ((marketMap & marketMask) != 0) return; */
              tag_307
              jumpi
                /* "contracts/Auditor.sol":3293:3300  return; */
              pop
              pop
              pop
                /* "contracts/Auditor.sol":3023:3406  function enterMarket(Market market) external {... */
              pop
              jump	// out
                /* "contracts/Auditor.sol":3258:3300  if ((marketMap & marketMask) != 0) return; */
            tag_307:
                /* "contracts/Auditor.sol":3320:3330  msg.sender */
              caller
                /* "contracts/Auditor.sol":3305:3331  accountMarkets[msg.sender] */
              0x00
              dup2
              dup2
              mstore
                /* "contracts/Auditor.sol":3305:3319  accountMarkets */
              0x97
                /* "contracts/Auditor.sol":3305:3331  accountMarkets[msg.sender] */
              0x20
              mstore
              0x40
              dup1
              dup3
              keccak256
                /* "contracts/Auditor.sol":3334:3356  marketMap | marketMask */
              dup6
              dup6
              or
                /* "contracts/Auditor.sol":3305:3356  accountMarkets[msg.sender] = marketMap | marketMask */
              swap1
              sstore
                /* "contracts/Auditor.sol":3368:3401  MarketEntered(market, msg.sender) */
              mload
              sub(shl(0xa0, 0x01), 0x01)
              dup8
              and
              swap2
              0x3ab23ab0d51cccc0c3085aec51f99228625aa1a922b3a8ca89a26b0f2027a1a5
              swap2
              log3
                /* "contracts/Auditor.sol":3068:3406  {... */
              pop
              pop
              pop
                /* "contracts/Auditor.sol":3023:3406  function enterMarket(Market market) external {... */
              pop
              jump	// out
                /* "contracts/Auditor.sol":12278:13164  function calculateSeize(... */
            tag_97:
                /* "contracts/Auditor.sol":12480:12543  LiquidationIncentive memory memIncentive = liquidationIncentive */
              0x40
              dup1
              mload
              dup1
              dup3
              add
              swap1
              swap2
              mstore
                /* "contracts/Auditor.sol":12523:12543  liquidationIncentive */
              0x9a
                /* "contracts/Auditor.sol":12480:12543  LiquidationIncentive memory memIncentive = liquidationIncentive */
              sload
              sub(shl(0x80, 0x01), 0x01)
              dup1
              dup3
              and
              dup4
              mstore
              shl(0x80, 0x01)
              swap1
              swap2
              div
              and
              0x20
              dup3
              add
              dup2
              swap1
              mstore
                /* "contracts/Auditor.sol":12430:12451  uint256 lendersAssets */
              0x00
              swap2
              dup3
              swap2
                /* "contracts/Auditor.sol":12565:12615  actualRepayAssets.mulWadDown(memIncentive.lenders) */
              tag_309
              swap1
                /* "contracts/Auditor.sol":12565:12582  actualRepayAssets */
              dup6
              swap1
                /* "contracts/Auditor.sol":12565:12593  actualRepayAssets.mulWadDown */
              tag_210
                /* "contracts/Auditor.sol":12565:12615  actualRepayAssets.mulWadDown(memIncentive.lenders) */
              jump	// in
            tag_309:
              sub(shl(0xa0, 0x01), 0x01)
                /* "contracts/Auditor.sol":12712:12732  markets[repayMarket] */
              dup1
              dup10
              and
                /* "contracts/Auditor.sol":12677:12698  uint256 priceBorrowed */
              0x00
                /* "contracts/Auditor.sol":12712:12732  markets[repayMarket] */
              swap1
              dup2
              mstore
                /* "contracts/Auditor.sol":12712:12719  markets */
              0x98
                /* "contracts/Auditor.sol":12712:12732  markets[repayMarket] */
              0x20
              mstore
              0x40
              dup2
              keccak256
                /* "contracts/Auditor.sol":12712:12742  markets[repayMarket].priceFeed */
              0x01
              add
              sload
                /* "contracts/Auditor.sol":12549:12615  lendersAssets = actualRepayAssets.mulWadDown(memIncentive.lenders) */
              swap3
              swap6
              pop
                /* "contracts/Auditor.sol":12677:12698  uint256 priceBorrowed */
              swap2
                /* "contracts/Auditor.sol":12701:12743  assetPrice(markets[repayMarket].priceFeed) */
              tag_310
              swap2
                /* "contracts/Auditor.sol":12712:12742  markets[repayMarket].priceFeed */
              and
                /* "contracts/Auditor.sol":12701:12711  assetPrice */
              tag_145
                /* "contracts/Auditor.sol":12701:12743  assetPrice(markets[repayMarket].priceFeed) */
              jump	// in
            tag_310:
              sub(shl(0xa0, 0x01), 0x01)
                /* "contracts/Auditor.sol":12786:12806  markets[seizeMarket] */
              dup1
              dup10
              and
                /* "contracts/Auditor.sol":12749:12772  uint256 priceCollateral */
              0x00
                /* "contracts/Auditor.sol":12786:12806  markets[seizeMarket] */
              swap1
              dup2
              mstore
                /* "contracts/Auditor.sol":12786:12793  markets */
              0x98
                /* "contracts/Auditor.sol":12786:12806  markets[seizeMarket] */
              0x20
              mstore
              0x40
              dup2
              keccak256
                /* "contracts/Auditor.sol":12786:12816  markets[seizeMarket].priceFeed */
              0x01
              add
              sload
                /* "contracts/Auditor.sol":12677:12743  uint256 priceBorrowed = assetPrice(markets[repayMarket].priceFeed) */
              swap3
              swap4
              pop
                /* "contracts/Auditor.sol":12749:12772  uint256 priceCollateral */
              swap2
                /* "contracts/Auditor.sol":12775:12817  assetPrice(markets[seizeMarket].priceFeed) */
              tag_311
              swap2
                /* "contracts/Auditor.sol":12786:12816  markets[seizeMarket].priceFeed */
              and
                /* "contracts/Auditor.sol":12775:12785  assetPrice */
              tag_145
                /* "contracts/Auditor.sol":12775:12817  assetPrice(markets[seizeMarket].priceFeed) */
              jump	// in
            tag_311:
              sub(shl(0xa0, 0x01), 0x01)
                /* "contracts/Auditor.sol":12892:12912  markets[repayMarket] */
              dup11
              and
                /* "contracts/Auditor.sol":12823:12841  uint256 baseAmount */
              0x00
                /* "contracts/Auditor.sol":12892:12912  markets[repayMarket] */
              swap1
              dup2
              mstore
                /* "contracts/Auditor.sol":12892:12899  markets */
              0x98
                /* "contracts/Auditor.sol":12892:12912  markets[repayMarket] */
              0x20
              mstore
              0x40
              dup2
              keccak256
                /* "contracts/Auditor.sol":12892:12921  markets[repayMarket].decimals */
              sload
                /* "contracts/Auditor.sol":12749:12817  uint256 priceCollateral = assetPrice(markets[seizeMarket].priceFeed) */
              swap2
              swap3
              pop
                /* "contracts/Auditor.sol":12823:12841  uint256 baseAmount */
              swap1
                /* "contracts/Auditor.sol":12844:12922  actualRepayAssets.mulDivUp(priceBorrowed, 10 ** markets[repayMarket].decimals) */
              tag_312
              swap1
                /* "contracts/Auditor.sol":12871:12884  priceBorrowed */
              dup5
              swap1
                /* "contracts/Auditor.sol":12886:12921  10 ** markets[repayMarket].decimals */
              tag_313
              swap1
              shl(0x80, 0x01)
                /* "contracts/Auditor.sol":12892:12921  markets[repayMarket].decimals */
              swap1
              div
              0xff
              and
                /* "contracts/Auditor.sol":12886:12888  10 */
              0x0a
                /* "contracts/Auditor.sol":12886:12921  10 ** markets[repayMarket].decimals */
              tag_208
              jump	// in
            tag_313:
                /* "contracts/Auditor.sol":12844:12861  actualRepayAssets */
              dup10
              swap2
                /* "contracts/Auditor.sol":12844:12922  actualRepayAssets.mulDivUp(priceBorrowed, 10 ** markets[repayMarket].decimals) */
              swap1
                /* "contracts/Auditor.sol":12844:12870  actualRepayAssets.mulDivUp */
              tag_246
                /* "contracts/Auditor.sol":12844:12922  actualRepayAssets.mulDivUp(priceBorrowed, 10 ** markets[repayMarket].decimals) */
              jump	// in
            tag_312:
                /* "contracts/Auditor.sol":12823:12922  uint256 baseAmount = actualRepayAssets.mulDivUp(priceBorrowed, 10 ** markets[repayMarket].decimals) */
              swap1
              pop
                /* "contracts/Auditor.sol":12943:13159  Math.min(... */
              tag_314
                /* "contracts/Auditor.sol":12959:13112  baseAmount.mulDivUp(10 ** markets[seizeMarket].decimals, priceCollateral).mulWadUp(... */
              tag_315
                /* "contracts/Auditor.sol":13084:13096  memIncentive */
              dup6
                /* "contracts/Auditor.sol":13084:13104  memIncentive.lenders */
              0x20
              add
              mload
                /* "contracts/Auditor.sol":13058:13070  memIncentive */
              dup7
                /* "contracts/Auditor.sol":13058:13081  memIncentive.liquidator */
              0x00
              add
              mload
                /* "contracts/Auditor.sol":13051:13055  1e18 */
              0x0de0b6b3a7640000
                /* "contracts/Auditor.sol":13051:13081  1e18 + memIncentive.liquidator */
              tag_316
              swap2
              swap1
              tag_265
              jump	// in
            tag_316:
                /* "contracts/Auditor.sol":13051:13104  1e18 + memIncentive.liquidator + memIncentive.lenders */
              tag_317
              swap2
              swap1
              tag_265
              jump	// in
            tag_317:
              sub(shl(0xa0, 0x01), 0x01)
                /* "contracts/Auditor.sol":12985:13005  markets[seizeMarket] */
              dup13
              and
              0x00
              swap1
              dup2
              mstore
                /* "contracts/Auditor.sol":12985:12992  markets */
              0x98
                /* "contracts/Auditor.sol":12985:13005  markets[seizeMarket] */
              0x20
              mstore
              0x40
              swap1
              keccak256
                /* "contracts/Auditor.sol":12985:13014  markets[seizeMarket].decimals */
              sload
              sub(shl(0x80, 0x01), 0x01)
                /* "contracts/Auditor.sol":12959:13112  baseAmount.mulDivUp(10 ** markets[seizeMarket].decimals, priceCollateral).mulWadUp(... */
              swap2
              swap1
              swap2
              and
              swap1
                /* "contracts/Auditor.sol":12959:13032  baseAmount.mulDivUp(10 ** markets[seizeMarket].decimals, priceCollateral) */
              tag_318
              swap1
                /* "contracts/Auditor.sol":12979:13014  10 ** markets[seizeMarket].decimals */
              tag_319
              swap1
              shl(0x80, 0x01)
                /* "contracts/Auditor.sol":12985:13014  markets[seizeMarket].decimals */
              swap1
              div
              0xff
              and
                /* "contracts/Auditor.sol":12979:12981  10 */
              0x0a
                /* "contracts/Auditor.sol":12979:13014  10 ** markets[seizeMarket].decimals */
              tag_208
              jump	// in
            tag_319:
                /* "contracts/Auditor.sol":12959:12969  baseAmount */
              dup6
              swap1
                /* "contracts/Auditor.sol":13016:13031  priceCollateral */
              dup8
                /* "contracts/Auditor.sol":12959:12978  baseAmount.mulDivUp */
              tag_246
                /* "contracts/Auditor.sol":12959:13032  baseAmount.mulDivUp(10 ** markets[seizeMarket].decimals, priceCollateral) */
              jump	// in
            tag_318:
                /* "contracts/Auditor.sol":12959:13041  baseAmount.mulDivUp(10 ** markets[seizeMarket].decimals, priceCollateral).mulWadUp */
              swap1
              tag_260
                /* "contracts/Auditor.sol":12959:13112  baseAmount.mulDivUp(10 ** markets[seizeMarket].decimals, priceCollateral).mulWadUp(... */
              jump	// in
            tag_315:
                /* "contracts/Auditor.sol":13120:13153  seizeMarket.maxWithdraw(borrower) */
              mload(0x40)
              shl(0xe0, 0xce96cb77)
              dup2
              mstore
              sub(shl(0xa0, 0x01), 0x01)
                /* "#utility.yul":3020:3052   */
              dup12
              dup2
              and
                /* "contracts/Auditor.sol":13120:13153  seizeMarket.maxWithdraw(borrower) */
              0x04
              dup4
              add
                /* "#utility.yul":3002:3053   */
              mstore
                /* "contracts/Auditor.sol":13120:13143  seizeMarket.maxWithdraw */
              dup13
              and
              swap1
              0xce96cb77
              swap1
                /* "#utility.yul":2975:2993   */
              0x24
              add
                /* "contracts/Auditor.sol":13120:13153  seizeMarket.maxWithdraw(borrower) */
              0x20
              mload(0x40)
              dup1
              dup4
              sub
              dup2
              dup7
              gas
              staticcall
              iszero
              dup1
              iszero
              tag_322
              jumpi
              returndatasize
              0x00
              dup1
              returndatacopy
              revert(0x00, returndatasize)
            tag_322:
              pop
              pop
              pop
              pop
              mload(0x40)
              returndatasize
              not(0x1f)
              0x1f
              dup3
              add
              and
              dup3
              add
              dup1
              0x40
              mstore
              pop
              dup2
              add
              swap1
              tag_277
              swap2
              swap1
              tag_203
              jump	// in
                /* "contracts/Auditor.sol":12943:13159  Math.min(... */
            tag_314:
                /* "contracts/Auditor.sol":12929:13159  seizeAssets = Math.min(... */
              swap5
              pop
                /* "contracts/Auditor.sol":12474:13164  {... */
              pop
              pop
              pop
              pop
                /* "contracts/Auditor.sol":12278:13164  function calculateSeize(... */
              swap5
              pop
              swap5
              swap3
              pop
              pop
              pop
              jump	// out
                /* "contracts/Auditor.sol":16731:17027  function setPriceFeed(Market market, IPriceFeed priceFeed) external onlyRole(DEFAULT_ADMIN_ROLE) {... */
            tag_103:
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":2369:2373  0x00 */
              0x00
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":2802:2818  _checkRole(role) */
              tag_325
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":2369:2373  0x00 */
              dup2
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":2802:2812  _checkRole */
              tag_293
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":2802:2818  _checkRole(role) */
              jump	// in
            tag_325:
              sub(shl(0xa0, 0x01), 0x01)
                /* "contracts/Auditor.sol":16838:16869  address(priceFeed) != BASE_FEED */
              dup3
              and
                /* "contracts/Auditor.sol":816:858  0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE */
              0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee
                /* "contracts/Auditor.sol":16838:16869  address(priceFeed) != BASE_FEED */
              eq
              dup1
              iszero
              swap1
                /* "contracts/Auditor.sol":16838:16910  address(priceFeed) != BASE_FEED && priceFeed.decimals() != priceDecimals */
              tag_327
              jumpi
              pop
                /* "contracts/Auditor.sol":16897:16910  priceDecimals */
              immutable("0x6bcaf047ba4c8ac400fca43393035242dd1aabda2d6068a0c51242b97224de8d")
                /* "contracts/Auditor.sol":16873:16882  priceFeed */
              dup3
              sub(shl(0xa0, 0x01), 0x01)
                /* "contracts/Auditor.sol":16873:16891  priceFeed.decimals */
              and
              0x313ce567
                /* "contracts/Auditor.sol":16873:16893  priceFeed.decimals() */
              mload(0x40)
              dup2
              0xffffffff
              and
              0xe0
              shl
              dup2
              mstore
              0x04
              add
              0x20
              mload(0x40)
              dup1
              dup4
              sub
              dup2
              dup7
              gas
              staticcall
              iszero
              dup1
              iszero
              tag_329
              jumpi
              returndatasize
              0x00
              dup1
              returndatacopy
              revert(0x00, returndatasize)
            tag_329:
              pop
              pop
              pop
              pop
              mload(0x40)
              returndatasize
              not(0x1f)
              0x1f
              dup3
              add
              and
              dup3
              add
              dup1
              0x40
              mstore
              pop
              dup2
              add
              swap1
              tag_330
              swap2
              swap1
              tag_331
              jump	// in
            tag_330:
                /* "contracts/Auditor.sol":16873:16910  priceFeed.decimals() != priceDecimals */
              0xff
              and
              eq
              iszero
                /* "contracts/Auditor.sol":16838:16910  address(priceFeed) != BASE_FEED && priceFeed.decimals() != priceDecimals */
            tag_327:
                /* "contracts/Auditor.sol":16834:16937  if (address(priceFeed) != BASE_FEED && priceFeed.decimals() != priceDecimals) revert InvalidPriceFeed() */
              iszero
              tag_332
              jumpi
                /* "contracts/Auditor.sol":16919:16937  InvalidPriceFeed() */
              mload(0x40)
              shl(0xe0, 0x52cc3f7d)
              dup2
              mstore
              0x04
              add
              mload(0x40)
              dup1
              swap2
              sub
              swap1
              revert
                /* "contracts/Auditor.sol":16834:16937  if (address(priceFeed) != BASE_FEED && priceFeed.decimals() != priceDecimals) revert InvalidPriceFeed() */
            tag_332:
              sub(shl(0xa0, 0x01), 0x01)
                /* "contracts/Auditor.sol":16943:16958  markets[market] */
              dup4
              dup2
              and
              0x00
              dup2
              dup2
              mstore
                /* "contracts/Auditor.sol":16943:16950  markets */
              0x98
                /* "contracts/Auditor.sol":16943:16958  markets[market] */
              0x20
              mstore
              0x40
              dup1
              dup3
              keccak256
                /* "contracts/Auditor.sol":16943:16968  markets[market].priceFeed */
              0x01
              add
                /* "contracts/Auditor.sol":16943:16980  markets[market].priceFeed = priceFeed */
              dup1
              sload
              not(sub(shl(0xa0, 0x01), 0x01))
              and
              swap5
              dup8
              and
              swap5
              dup6
              or
              swap1
              sstore
                /* "contracts/Auditor.sol":16991:17022  PriceFeedSet(market, priceFeed) */
              mload
              0xd2d8394cf7549a5ddbc2ba3dd7b2de8d53c891472d1f2907008ed6a10045fdae
              swap2
                /* "contracts/Auditor.sol":16943:16958  markets[market] */
              swap1
                /* "contracts/Auditor.sol":16991:17022  PriceFeedSet(market, priceFeed) */
              log3
                /* "contracts/Auditor.sol":16731:17027  function setPriceFeed(Market market, IPriceFeed priceFeed) external onlyRole(DEFAULT_ADMIN_ROLE) {... */
              pop
              pop
              pop
              jump	// out
                /* "contracts/Auditor.sol":6743:7510  function checkBorrow(Market market, address borrower) external {... */
            tag_107:
              sub(shl(0xa0, 0x01), 0x01)
                /* "contracts/Auditor.sol":6835:6850  markets[market] */
              dup3
              and
                /* "contracts/Auditor.sol":6812:6832  MarketData storage m */
              0x00
                /* "contracts/Auditor.sol":6835:6850  markets[market] */
              swap1
              dup2
              mstore
                /* "contracts/Auditor.sol":6835:6842  markets */
              0x98
                /* "contracts/Auditor.sol":6835:6850  markets[market] */
              0x20
              mstore
              0x40
              swap1
              keccak256
                /* "contracts/Auditor.sol":6861:6871  m.isListed */
              dup1
              sload
              shl(0x90, 0x01)
              swap1
              div
              0xff
              and
                /* "contracts/Auditor.sol":6856:6897  if (!m.isListed) revert MarketNotListed() */
              tag_334
              jumpi
                /* "contracts/Auditor.sol":6880:6897  MarketNotListed() */
              mload(0x40)
              shl(0xe1, 0x34b04fe3)
              dup2
              mstore
              0x04
              add
              mload(0x40)
              dup1
              swap2
              sub
              swap1
              revert
                /* "contracts/Auditor.sol":6856:6897  if (!m.isListed) revert MarketNotListed() */
            tag_334:
              sub(shl(0xa0, 0x01), 0x01)
                /* "contracts/Auditor.sol":6924:6948  accountMarkets[borrower] */
              dup3
              and
                /* "contracts/Auditor.sol":6904:6921  uint256 marketMap */
              0x00
                /* "contracts/Auditor.sol":6924:6948  accountMarkets[borrower] */
              swap1
              dup2
              mstore
                /* "contracts/Auditor.sol":6924:6938  accountMarkets */
              0x97
                /* "contracts/Auditor.sol":6924:6948  accountMarkets[borrower] */
              0x20
              mstore
              0x40
              dup2
              keccak256
              sload
                /* "contracts/Auditor.sol":6980:6987  m.index */
              dup3
              sload
                /* "contracts/Auditor.sol":6924:6948  accountMarkets[borrower] */
              swap1
              swap2
                /* "contracts/Auditor.sol":6975:6976  1 */
              0x01
              shl(0x88, 0x01)
                /* "contracts/Auditor.sol":6980:6987  m.index */
              swap1
              swap3
              div
              0xff
              and
                /* "contracts/Auditor.sol":6975:6987  1 << m.index */
              swap2
              swap1
              swap2
              shl
              swap1
                /* "contracts/Auditor.sol":7028:7050  marketMap & marketMask */
              dup2
              dup4
              and
                /* "contracts/Auditor.sol":7027:7056  (marketMap & marketMask) == 0 */
              swap1
              sub
                /* "contracts/Auditor.sol":7023:7297  if ((marketMap & marketMask) == 0) {... */
              tag_335
              jumpi
                /* "contracts/Auditor.sol":7139:7149  msg.sender */
              caller
              sub(shl(0xa0, 0x01), 0x01)
                /* "contracts/Auditor.sol":7139:7168  msg.sender != address(market) */
              dup7
              and
              eq
                /* "contracts/Auditor.sol":7135:7188  if (msg.sender != address(market)) revert NotMarket() */
              tag_336
              jumpi
                /* "contracts/Auditor.sol":7177:7188  NotMarket() */
              mload(0x40)
              shl(0xe0, 0xc4bbea69)
              dup2
              mstore
              0x04
              add
              mload(0x40)
              dup1
              swap2
              sub
              swap1
              revert
                /* "contracts/Auditor.sol":7135:7188  if (msg.sender != address(market)) revert NotMarket() */
            tag_336:
              sub(shl(0xa0, 0x01), 0x01)
                /* "contracts/Auditor.sol":7197:7221  accountMarkets[borrower] */
              dup1
              dup6
              and
              0x00
              dup2
              dup2
              mstore
                /* "contracts/Auditor.sol":7197:7211  accountMarkets */
              0x97
                /* "contracts/Auditor.sol":7197:7221  accountMarkets[borrower] */
              0x20
              mstore
              0x40
              dup1
              dup3
              keccak256
                /* "contracts/Auditor.sol":7224:7246  marketMap | marketMask */
              dup7
              dup7
              or
                /* "contracts/Auditor.sol":7197:7246  accountMarkets[borrower] = marketMap | marketMask */
              swap1
              sstore
                /* "contracts/Auditor.sol":7259:7290  MarketEntered(market, borrower) */
              mload
                /* "contracts/Auditor.sol":7197:7221  accountMarkets[borrower] */
              swap2
              swap3
                /* "contracts/Auditor.sol":7259:7290  MarketEntered(market, borrower) */
              dup9
              and
              swap2
              0x3ab23ab0d51cccc0c3085aec51f99228625aa1a922b3a8ca89a26b0f2027a1a5
              swap2
                /* "contracts/Auditor.sol":7197:7221  accountMarkets[borrower] */
              swap1
                /* "contracts/Auditor.sol":7259:7290  MarketEntered(market, borrower) */
              log3
                /* "contracts/Auditor.sol":7023:7297  if ((marketMap & marketMask) == 0) {... */
            tag_335:
                /* "contracts/Auditor.sol":7354:7372  uint256 collateral */
              0x00
                /* "contracts/Auditor.sol":7374:7386  uint256 debt */
              dup1
                /* "contracts/Auditor.sol":7390:7439  accountLiquidity(borrower, Market(address(0)), 0) */
              tag_337
                /* "contracts/Auditor.sol":7407:7415  borrower */
              dup7
                /* "contracts/Auditor.sol":7432:7433  0 */
              0x00
                /* "contracts/Auditor.sol":7437:7438  0 */
              dup1
                /* "contracts/Auditor.sol":7390:7406  accountLiquidity */
              tag_130
                /* "contracts/Auditor.sol":7390:7439  accountLiquidity(borrower, Market(address(0)), 0) */
              jump	// in
            tag_337:
                /* "contracts/Auditor.sol":7353:7439  (uint256 collateral, uint256 debt) = accountLiquidity(borrower, Market(address(0)), 0) */
              swap2
              pop
              swap2
              pop
                /* "contracts/Auditor.sol":7462:7466  debt */
              dup1
                /* "contracts/Auditor.sol":7449:7459  collateral */
              dup3
                /* "contracts/Auditor.sol":7449:7466  collateral < debt */
              lt
                /* "contracts/Auditor.sol":7445:7505  if (collateral < debt) revert InsufficientAccountLiquidity() */
              iszero
              tag_338
              jumpi
                /* "contracts/Auditor.sol":7475:7505  InsufficientAccountLiquidity() */
              mload(0x40)
              shl(0xe1, 0x0aeac0bb)
              dup2
              mstore
              0x04
              add
              mload(0x40)
              dup1
              swap2
              sub
              swap1
              revert
                /* "contracts/Auditor.sol":7445:7505  if (collateral < debt) revert InsufficientAccountLiquidity() */
            tag_338:
                /* "contracts/Auditor.sol":6806:7510  {... */
              pop
              pop
              pop
              pop
              pop
                /* "contracts/Auditor.sol":6743:7510  function checkBorrow(Market market, address borrower) external {... */
              pop
              pop
              jump	// out
                /* "contracts/Auditor.sol":17184:17424  function setLiquidationIncentive(... */
            tag_110:
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":2369:2373  0x00 */
              0x00
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":2802:2818  _checkRole(role) */
              tag_340
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":2369:2373  0x00 */
              dup2
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":2802:2812  _checkRole */
              tag_293
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":2802:2818  _checkRole(role) */
              jump	// in
            tag_340:
                /* "contracts/Auditor.sol":17318:17362  liquidationIncentive = liquidationIncentive_ */
              dup2
              mload
              0x20
              dup1
              dup5
              add
              dup1
              mload
              sub(shl(0x80, 0x01), 0x01)
              swap1
              dup2
              and
              shl(0x80, 0x01)
              mul
              swap4
              dup2
              and
              swap4
              dup5
              or
                /* "contracts/Auditor.sol":17318:17338  liquidationIncentive */
              0x9a
                /* "contracts/Auditor.sol":17318:17362  liquidationIncentive = liquidationIncentive_ */
              sstore
                /* "contracts/Auditor.sol":17373:17419  LiquidationIncentiveSet(liquidationIncentive_) */
              0x40
              dup1
              mload
                /* "#utility.yul":12911:12952   */
              swap5
              dup6
              mstore
                /* "#utility.yul":12994:13018   */
              swap2
              mload
                /* "#utility.yul":12990:13023   */
              and
                /* "#utility.yul":12968:12988   */
              swap2
              dup4
              add
                /* "#utility.yul":12961:13024   */
              swap2
              swap1
              swap2
              mstore
                /* "contracts/Auditor.sol":17373:17419  LiquidationIncentiveSet(liquidationIncentive_) */
              0x01681c947e6239f022bfc57fdcd1eecd249153804b38e0085d885e5aeed1b054
              swap2
                /* "#utility.yul":12831:12849   */
              add
                /* "contracts/Auditor.sol":17373:17419  LiquidationIncentiveSet(liquidationIncentive_) */
              tag_188
                /* "#utility.yul":12636:13030   */
              jump
                /* "contracts/Auditor.sol":1197:1264  uint256 public constant ASSETS_THRESHOLD = type(uint256).max / 1e18 */
            tag_112:
                /* "contracts/Auditor.sol":1240:1264  type(uint256).max / 1e18 */
              tag_344
                /* "contracts/Auditor.sol":1260:1264  1e18 */
              0x0de0b6b3a7640000
              not(0x00)
                /* "contracts/Auditor.sol":1240:1264  type(uint256).max / 1e18 */
              tag_281
              jump	// in
            tag_344:
                /* "contracts/Auditor.sol":1197:1264  uint256 public constant ASSETS_THRESHOLD = type(uint256).max / 1e18 */
              dup2
              jump	// out
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":3203:3348  function hasRole(bytes32 role, address account) public view virtual override returns (bool) {... */
            tag_125:
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":3289:3293  bool */
              0x00
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":3312:3324  _roles[role] */
              swap2
              dup3
              mstore
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":3312:3318  _roles */
              0x65
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":3312:3324  _roles[role] */
              0x20
              swap1
              dup2
              mstore
              0x40
              dup1
              dup5
              keccak256
              sub(shl(0xa0, 0x01), 0x01)
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":3312:3341  _roles[role].members[account] */
              swap4
              swap1
              swap4
              and
              dup5
              mstore
              swap2
              swap1
              mstore
              swap1
              keccak256
              sload
              0xff
              and
              swap1
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":3203:3348  function hasRole(bytes32 role, address account) public view virtual override returns (bool) {... */
              jump	// out
                /* "contracts/Auditor.sol":4860:6435  function accountLiquidity(... */
            tag_130:
                /* "contracts/Auditor.sol":4989:5010  uint256 sumCollateral */
              0x00
                /* "contracts/Auditor.sol":5012:5038  uint256 sumDebtPlusEffects */
              dup1
                /* "contracts/Auditor.sol":5046:5074  AccountLiquidity memory vars */
              tag_347
              mload(0x40)
              dup1
              0x60
              add
              0x40
              mstore
              dup1
              0x00
              dup2
              mstore
              0x20
              add
              0x00
              dup2
              mstore
              0x20
              add
              0x00
              dup2
              mstore
              pop
              swap1
              jump
            tag_347:
              sub(shl(0xa0, 0x01), 0x01)
                /* "contracts/Auditor.sol":5178:5201  accountMarkets[account] */
              dup7
              and
                /* "contracts/Auditor.sol":5158:5175  uint256 marketMap */
              0x00
                /* "contracts/Auditor.sol":5178:5201  accountMarkets[account] */
              swap1
              dup2
              mstore
                /* "contracts/Auditor.sol":5178:5192  accountMarkets */
              0x97
                /* "contracts/Auditor.sol":5178:5201  accountMarkets[account] */
              0x20
              mstore
              0x40
              dup2
              keccak256
              sload
              swap1
                /* "contracts/Auditor.sol":5207:6431  for (uint256 i = 0; marketMap != 0; marketMap >>= 1) {... */
            tag_349:
                /* "contracts/Auditor.sol":5227:5241  marketMap != 0 */
              dup2
              iszero
                /* "contracts/Auditor.sol":5207:6431  for (uint256 i = 0; marketMap != 0; marketMap >>= 1) {... */
              tag_350
              jumpi
                /* "contracts/Auditor.sol":5284:5285  1 */
              0x01
                /* "contracts/Auditor.sol":5272:5285  marketMap & 1 */
              dup3
              and
                /* "contracts/Auditor.sol":5272:5290  marketMap & 1 != 0 */
              iszero
                /* "contracts/Auditor.sol":5268:6386  if (marketMap & 1 != 0) {... */
              tag_352
              jumpi
                /* "contracts/Auditor.sol":5302:5315  Market market */
              0x00
                /* "contracts/Auditor.sol":5318:5328  marketList */
              0x99
                /* "contracts/Auditor.sol":5329:5330  i */
              dup3
                /* "contracts/Auditor.sol":5318:5331  marketList[i] */
              dup2
              sload
              dup2
              lt
              tag_354
              jumpi
              tag_354
              tag_197
              jump	// in
            tag_354:
              0x00
              swap2
              dup3
              mstore
              0x20
              dup1
              dup4
              keccak256
              swap1
              swap2
              add
              sload
              sub(shl(0xa0, 0x01), 0x01)
              and
                /* "contracts/Auditor.sol":5364:5379  markets[market] */
              dup1
              dup4
              mstore
                /* "contracts/Auditor.sol":5364:5371  markets */
              0x98
                /* "contracts/Auditor.sol":5364:5379  markets[market] */
              swap1
              swap2
              mstore
              0x40
              dup3
              keccak256
                /* "contracts/Auditor.sol":5414:5424  m.decimals */
              dup1
              sload
                /* "contracts/Auditor.sol":5318:5331  marketList[i] */
              swap2
              swap4
              pop
                /* "contracts/Auditor.sol":5364:5379  markets[market] */
              swap2
                /* "contracts/Auditor.sol":5318:5331  marketList[i] */
              swap1
                /* "contracts/Auditor.sol":5408:5424  10 ** m.decimals */
              tag_356
              swap1
                /* "contracts/Auditor.sol":5414:5424  m.decimals */
              0xff
              shl(0x80, 0x01)
              swap1
              swap2
              div
              and
                /* "contracts/Auditor.sol":5408:5410  10 */
              0x0a
                /* "contracts/Auditor.sol":5408:5424  10 ** m.decimals */
              tag_208
              jump	// in
            tag_356:
                /* "contracts/Auditor.sol":5457:5471  m.adjustFactor */
              dup3
              sload
                /* "contracts/Auditor.sol":5548:5579  market.accountSnapshot(account) */
              mload(0x40)
              shl(0xe0, 0x014a296f)
              dup2
              mstore
              sub(shl(0xa0, 0x01), 0x01)
                /* "#utility.yul":3020:3052   */
              dup15
              dup2
              and
                /* "contracts/Auditor.sol":5548:5579  market.accountSnapshot(account) */
              0x04
              dup4
              add
                /* "#utility.yul":3002:3053   */
              mstore
                /* "contracts/Auditor.sol":5389:5424  uint256 baseUnit = 10 ** m.decimals */
              swap3
              swap4
              pop
              sub(shl(0x80, 0x01), 0x01)
                /* "contracts/Auditor.sol":5457:5471  m.adjustFactor */
              swap1
              swap2
              and
              swap2
                /* "contracts/Auditor.sol":5548:5570  market.accountSnapshot */
              dup6
              and
              swap1
              0x014a296f
              swap1
                /* "#utility.yul":2975:2993   */
              0x24
              add
                /* "contracts/Auditor.sol":5548:5579  market.accountSnapshot(account) */
              0x40
              dup1
              mload
              dup1
              dup4
              sub
              dup2
              dup7
              gas
              staticcall
              iszero
              dup1
              iszero
              tag_359
              jumpi
              returndatasize
              0x00
              dup1
              returndatacopy
              revert(0x00, returndatasize)
            tag_359:
              pop
              pop
              pop
              pop
              mload(0x40)
              returndatasize
              not(0x1f)
              0x1f
              dup3
              add
              and
              dup3
              add
              dup1
              0x40
              mstore
              pop
              dup2
              add
              swap1
              tag_360
              swap2
              swap1
              tag_244
              jump	// in
            tag_360:
                /* "contracts/Auditor.sol":5526:5544  vars.borrowBalance */
              0x20
              dup10
              add
                /* "contracts/Auditor.sol":5511:5579  (vars.balance, vars.borrowBalance) = market.accountSnapshot(account) */
              mstore
              dup8
              mstore
                /* "contracts/Auditor.sol":5677:5688  m.priceFeed */
              0x01
              dup4
              add
              sload
                /* "contracts/Auditor.sol":5666:5689  assetPrice(m.priceFeed) */
              tag_361
              swap1
              sub(shl(0xa0, 0x01), 0x01)
                /* "contracts/Auditor.sol":5677:5688  m.priceFeed */
              and
                /* "contracts/Auditor.sol":5666:5676  assetPrice */
              tag_145
                /* "contracts/Auditor.sol":5666:5689  assetPrice(m.priceFeed) */
              jump	// in
            tag_361:
                /* "contracts/Auditor.sol":5653:5663  vars.price */
              0x40
              dup9
              add
                /* "contracts/Auditor.sol":5653:5689  vars.price = assetPrice(m.priceFeed) */
              dup2
              swap1
              mstore
                /* "contracts/Auditor.sol":5758:5770  vars.balance */
              dup8
              mload
                /* "contracts/Auditor.sol":5758:5828  vars.balance.mulDivDown(vars.price, baseUnit).mulWadDown(adjustFactor) */
              tag_362
              swap2
                /* "contracts/Auditor.sol":5815:5827  adjustFactor */
              dup4
              swap2
                /* "contracts/Auditor.sol":5758:5803  vars.balance.mulDivDown(vars.price, baseUnit) */
              tag_205
              swap2
                /* "contracts/Auditor.sol":5794:5802  baseUnit */
              dup7
                /* "contracts/Auditor.sol":5758:5781  vars.balance.mulDivDown */
              tag_209
                /* "contracts/Auditor.sol":5758:5803  vars.balance.mulDivDown(vars.price, baseUnit) */
              jump	// in
                /* "contracts/Auditor.sol":5758:5828  vars.balance.mulDivDown(vars.price, baseUnit).mulWadDown(adjustFactor) */
            tag_362:
                /* "contracts/Auditor.sol":5741:5828  sumCollateral += vars.balance.mulDivDown(vars.price, baseUnit).mulWadDown(adjustFactor) */
              tag_364
              swap1
              dup11
              tag_248
              jump	// in
            tag_364:
              swap9
              pop
                /* "contracts/Auditor.sol":5889:5961  vars.borrowBalance.mulDivUp(vars.price, baseUnit).divWadUp(adjustFactor) */
              tag_365
                /* "contracts/Auditor.sol":5948:5960  adjustFactor */
              dup2
                /* "contracts/Auditor.sol":5889:5938  vars.borrowBalance.mulDivUp(vars.price, baseUnit) */
              tag_261
                /* "contracts/Auditor.sol":5917:5921  vars */
              dup10
                /* "contracts/Auditor.sol":5917:5927  vars.price */
              0x40
              add
              mload
                /* "contracts/Auditor.sol":5929:5937  baseUnit */
              dup6
                /* "contracts/Auditor.sol":5889:5893  vars */
              dup12
                /* "contracts/Auditor.sol":5889:5907  vars.borrowBalance */
              0x20
              add
              mload
                /* "contracts/Auditor.sol":5889:5916  vars.borrowBalance.mulDivUp */
              tag_246
              swap1
                /* "contracts/Auditor.sol":5889:5938  vars.borrowBalance.mulDivUp(vars.price, baseUnit) */
              swap3
              swap2
              swap1
              0xffffffff
              and
              jump	// in
                /* "contracts/Auditor.sol":5889:5961  vars.borrowBalance.mulDivUp(vars.price, baseUnit).divWadUp(adjustFactor) */
            tag_365:
                /* "contracts/Auditor.sol":5867:5961  sumDebtPlusEffects += vars.borrowBalance.mulDivUp(vars.price, baseUnit).divWadUp(adjustFactor) */
              tag_367
              swap1
              dup10
              tag_248
              jump	// in
            tag_367:
              swap8
              pop
                /* "contracts/Auditor.sol":6045:6061  marketToSimulate */
              dup11
              sub(shl(0xa0, 0x01), 0x01)
                /* "contracts/Auditor.sol":6035:6061  market == marketToSimulate */
              and
                /* "contracts/Auditor.sol":6035:6041  market */
              dup5
              sub(shl(0xa0, 0x01), 0x01)
                /* "contracts/Auditor.sol":6035:6061  market == marketToSimulate */
              and
              sub
                /* "contracts/Auditor.sol":6031:6378  if (market == marketToSimulate) {... */
              tag_369
              jumpi
                /* "contracts/Auditor.sol":6226:6245  withdrawAmount != 0 */
              dup10
              iszero
                /* "contracts/Auditor.sol":6222:6368  if (withdrawAmount != 0) {... */
              tag_369
              jumpi
                /* "contracts/Auditor.sol":6283:6355  withdrawAmount.mulDivDown(vars.price, baseUnit).mulWadDown(adjustFactor) */
              tag_370
                /* "contracts/Auditor.sol":6342:6354  adjustFactor */
              dup2
                /* "contracts/Auditor.sol":6283:6330  withdrawAmount.mulDivDown(vars.price, baseUnit) */
              tag_205
                /* "contracts/Auditor.sol":6309:6313  vars */
              dup10
                /* "contracts/Auditor.sol":6309:6319  vars.price */
              0x40
              add
              mload
                /* "contracts/Auditor.sol":6321:6329  baseUnit */
              dup6
                /* "contracts/Auditor.sol":6283:6297  withdrawAmount */
              dup15
                /* "contracts/Auditor.sol":6283:6308  withdrawAmount.mulDivDown */
              tag_209
              swap1
                /* "contracts/Auditor.sol":6283:6330  withdrawAmount.mulDivDown(vars.price, baseUnit) */
              swap3
              swap2
              swap1
              0xffffffff
              and
              jump	// in
                /* "contracts/Auditor.sol":6283:6355  withdrawAmount.mulDivDown(vars.price, baseUnit).mulWadDown(adjustFactor) */
            tag_370:
                /* "contracts/Auditor.sol":6261:6355  sumDebtPlusEffects += withdrawAmount.mulDivDown(vars.price, baseUnit).mulWadDown(adjustFactor) */
              tag_372
              swap1
              dup10
              tag_248
              jump	// in
            tag_372:
              swap8
              pop
                /* "contracts/Auditor.sol":6222:6368  if (withdrawAmount != 0) {... */
            tag_369:
                /* "contracts/Auditor.sol":5292:6386  {... */
              pop
              pop
              pop
              pop
                /* "contracts/Auditor.sol":5268:6386  if (marketMap & 1 != 0) {... */
            tag_352:
                /* "contracts/Auditor.sol":6413:6416  ++i */
              0x01
                /* "contracts/Auditor.sol":5243:5258  marketMap >>= 1 */
              swap2
              dup3
              shr
              swap2
                /* "contracts/Auditor.sol":6413:6416  ++i */
              add
                /* "contracts/Auditor.sol":5207:6431  for (uint256 i = 0; marketMap != 0; marketMap >>= 1) {... */
              jump(tag_349)
            tag_350:
              pop
                /* "contracts/Auditor.sol":5040:6435  {... */
              pop
              pop
                /* "contracts/Auditor.sol":4860:6435  function accountLiquidity(... */
              swap4
              pop
              swap4
              swap2
              pop
              pop
              jump	// out
                /* "contracts/Auditor.sol":7802:8278  function checkShortfall(Market market, address account, uint256 amount) public view {... */
            tag_138:
              sub(shl(0xa0, 0x01), 0x01)
                /* "contracts/Auditor.sol":8002:8017  markets[market] */
              dup4
              dup2
              and
              0x00
              swap1
              dup2
              mstore
                /* "contracts/Auditor.sol":8002:8009  markets */
              0x98
                /* "contracts/Auditor.sol":8002:8017  markets[market] */
              0x20
              swap1
              dup2
              mstore
              0x40
              dup1
              dup4
              keccak256
                /* "contracts/Auditor.sol":8002:8023  markets[market].index */
              sload
                /* "contracts/Auditor.sol":7970:7993  accountMarkets[account] */
              swap4
              dup7
              and
              dup4
              mstore
                /* "contracts/Auditor.sol":7970:7984  accountMarkets */
              0x97
                /* "contracts/Auditor.sol":7970:7993  accountMarkets[account] */
              swap1
              swap2
              mstore
              dup2
              keccak256
              sload
                /* "contracts/Auditor.sol":7997:7998  1 */
              0x01
              shl(0x88, 0x01)
                /* "contracts/Auditor.sol":8002:8023  markets[market].index */
              swap1
              swap4
              div
              0xff
              and
                /* "contracts/Auditor.sol":7997:8023  1 << markets[market].index */
              swap3
              swap1
              swap3
              shl
                /* "contracts/Auditor.sol":7970:8024  accountMarkets[account] & (1 << markets[market].index) */
              swap1
              swap2
              and
                /* "contracts/Auditor.sol":7969:8030  (accountMarkets[account] & (1 << markets[market].index)) == 0 */
              swap1
              sub
                /* "contracts/Auditor.sol":7965:8039  if ((accountMarkets[account] & (1 << markets[market].index)) == 0) return; */
              tag_374
              jumpi
                /* "contracts/Auditor.sol":7802:8278  function checkShortfall(Market market, address account, uint256 amount) public view {... */
              pop
              pop
              pop
              jump	// out
                /* "contracts/Auditor.sol":7965:8039  if ((accountMarkets[account] & (1 << markets[market].index)) == 0) return; */
            tag_374:
                /* "contracts/Auditor.sol":8130:8148  uint256 collateral */
              0x00
                /* "contracts/Auditor.sol":8150:8162  uint256 debt */
              dup1
                /* "contracts/Auditor.sol":8166:8207  accountLiquidity(account, market, amount) */
              tag_375
                /* "contracts/Auditor.sol":8183:8190  account */
              dup5
                /* "contracts/Auditor.sol":8192:8198  market */
              dup7
                /* "contracts/Auditor.sol":8200:8206  amount */
              dup6
                /* "contracts/Auditor.sol":8166:8182  accountLiquidity */
              tag_130
                /* "contracts/Auditor.sol":8166:8207  accountLiquidity(account, market, amount) */
              jump	// in
            tag_375:
                /* "contracts/Auditor.sol":8129:8207  (uint256 collateral, uint256 debt) = accountLiquidity(account, market, amount) */
              swap2
              pop
              swap2
              pop
                /* "contracts/Auditor.sol":8230:8234  debt */
              dup1
                /* "contracts/Auditor.sol":8217:8227  collateral */
              dup3
                /* "contracts/Auditor.sol":8217:8234  collateral < debt */
              lt
                /* "contracts/Auditor.sol":8213:8273  if (collateral < debt) revert InsufficientAccountLiquidity() */
              iszero
              tag_376
              jumpi
                /* "contracts/Auditor.sol":8243:8273  InsufficientAccountLiquidity() */
              mload(0x40)
              shl(0xe1, 0x0aeac0bb)
              dup2
              mstore
              0x04
              add
              mload(0x40)
              dup1
              swap2
              sub
              swap1
              revert
                /* "contracts/Auditor.sol":8213:8273  if (collateral < debt) revert InsufficientAccountLiquidity() */
            tag_376:
                /* "contracts/Auditor.sol":7886:8278  {... */
              pop
              pop
                /* "contracts/Auditor.sol":7802:8278  function checkShortfall(Market market, address account, uint256 amount) public view {... */
              pop
              pop
              pop
              jump	// out
                /* "contracts/Auditor.sol":14492:14757  function assetPrice(IPriceFeed priceFeed) public view returns (uint256) {... */
            tag_145:
                /* "contracts/Auditor.sol":14555:14562  uint256 */
              0x00
              not(0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeed)
              sub(shl(0xa0, 0x01), 0x01)
                /* "contracts/Auditor.sol":14574:14605  address(priceFeed) == BASE_FEED */
              dup4
              and
              add
                /* "contracts/Auditor.sol":14570:14623  if (address(priceFeed) == BASE_FEED) return basePrice */
              tag_378
              jumpi
              pop
                /* "contracts/Auditor.sol":14614:14623  basePrice */
              immutable("0xeb09910a03c892999c305d4a86a46fa82693119d981eef22c8d043b31f9e8a31")
              swap2
                /* "contracts/Auditor.sol":14492:14757  function assetPrice(IPriceFeed priceFeed) public view returns (uint256) {... */
              swap1
              pop
              jump	// out
                /* "contracts/Auditor.sol":14570:14623  if (address(priceFeed) == BASE_FEED) return basePrice */
            tag_378:
                /* "contracts/Auditor.sol":14630:14642  int256 price */
              0x00
                /* "contracts/Auditor.sol":14645:14654  priceFeed */
              dup3
              sub(shl(0xa0, 0x01), 0x01)
                /* "contracts/Auditor.sol":14645:14667  priceFeed.latestAnswer */
              and
              0x50d25bcd
                /* "contracts/Auditor.sol":14645:14669  priceFeed.latestAnswer() */
              mload(0x40)
              dup2
              0xffffffff
              and
              0xe0
              shl
              dup2
              mstore
              0x04
              add
              0x20
              mload(0x40)
              dup1
              dup4
              sub
              dup2
              dup7
              gas
              staticcall
              iszero
              dup1
              iszero
              tag_380
              jumpi
              returndatasize
              0x00
              dup1
              returndatacopy
              revert(0x00, returndatasize)
            tag_380:
              pop
              pop
              pop
              pop
              mload(0x40)
              returndatasize
              not(0x1f)
              0x1f
              dup3
              add
              and
              dup3
              add
              dup1
              0x40
              mstore
              pop
              dup2
              add
              swap1
              tag_381
              swap2
              swap1
              tag_203
              jump	// in
            tag_381:
                /* "contracts/Auditor.sol":14630:14669  int256 price = priceFeed.latestAnswer() */
              swap1
              pop
                /* "contracts/Auditor.sol":14688:14689  0 */
              0x00
                /* "contracts/Auditor.sol":14679:14684  price */
              dup2
                /* "contracts/Auditor.sol":14679:14689  price <= 0 */
              sgt
                /* "contracts/Auditor.sol":14675:14712  if (price <= 0) revert InvalidPrice() */
              tag_383
              jumpi
                /* "contracts/Auditor.sol":14698:14712  InvalidPrice() */
              mload(0x40)
              shl(0xe0, 0xbfc921)
              dup2
              mstore
              0x04
              add
              mload(0x40)
              dup1
              swap2
              sub
              swap1
              revert
                /* "contracts/Auditor.sol":14675:14712  if (price <= 0) revert InvalidPrice() */
            tag_383:
                /* "contracts/Auditor.sol":14725:14752  uint256(price) * baseFactor */
              tag_384
                /* "contracts/Auditor.sol":14742:14752  baseFactor */
              immutable("0x2e9b7c94e032d8b3b8b30bd825717a5ac74958b53e7c37a892a4fd7dc56e4975")
                /* "contracts/Auditor.sol":14733:14738  price */
              dup3
                /* "contracts/Auditor.sol":14725:14752  uint256(price) * baseFactor */
              tag_385
              jump	// in
            tag_384:
                /* "contracts/Auditor.sol":14718:14752  return uint256(price) * baseFactor */
              swap4
                /* "contracts/Auditor.sol":14492:14757  function assetPrice(IPriceFeed priceFeed) public view returns (uint256) {... */
              swap3
              pop
              pop
              pop
              jump	// out
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":5558:5705  function revokeRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {... */
            tag_149:
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":4782:4789  bytes32 */
              0x00
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":4808:4820  _roles[role] */
              dup3
              dup2
              mstore
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":4808:4814  _roles */
              0x65
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":4808:4820  _roles[role] */
              0x20
              mstore
              0x40
              swap1
              keccak256
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":4808:4830  _roles[role].adminRole */
              0x01
              add
              sload
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":2802:2818  _checkRole(role) */
              tag_388
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":2813:2817  role */
              dup2
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":2802:2812  _checkRole */
              tag_293
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":2802:2818  _checkRole(role) */
              jump	// in
            tag_388:
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":5672:5698  _revokeRole(role, account) */
              tag_295
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":5684:5688  role */
              dup4
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":5690:5697  account */
              dup4
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":5672:5683  _revokeRole */
              tag_301
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":5672:5698  _revokeRole(role, account) */
              jump	// in
                /* "contracts/Auditor.sol":15266:16033  function enableMarket(... */
            tag_153:
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":2369:2373  0x00 */
              0x00
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":2802:2818  _checkRole(role) */
              tag_392
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":2369:2373  0x00 */
              dup2
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":2802:2812  _checkRole */
              tag_293
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":2802:2818  _checkRole(role) */
              jump	// in
            tag_392:
                /* "contracts/Auditor.sol":15431:15435  this */
              address
              sub(shl(0xa0, 0x01), 0x01)
                /* "contracts/Auditor.sol":15411:15435  market.auditor() != this */
              and
                /* "contracts/Auditor.sol":15411:15417  market */
              dup5
              sub(shl(0xa0, 0x01), 0x01)
                /* "contracts/Auditor.sol":15411:15425  market.auditor */
              and
              0x3ec045a6
                /* "contracts/Auditor.sol":15411:15427  market.auditor() */
              mload(0x40)
              dup2
              0xffffffff
              and
              0xe0
              shl
              dup2
              mstore
              0x04
              add
              0x20
              mload(0x40)
              dup1
              dup4
              sub
              dup2
              dup7
              gas
              staticcall
              iszero
              dup1
              iszero
              tag_395
              jumpi
              returndatasize
              0x00
              dup1
              returndatacopy
              revert(0x00, returndatasize)
            tag_395:
              pop
              pop
              pop
              pop
              mload(0x40)
              returndatasize
              not(0x1f)
              0x1f
              dup3
              add
              and
              dup3
              add
              dup1
              0x40
              mstore
              pop
              dup2
              add
              swap1
              tag_396
              swap2
              swap1
              tag_397
              jump	// in
            tag_396:
              sub(shl(0xa0, 0x01), 0x01)
                /* "contracts/Auditor.sol":15411:15435  market.auditor() != this */
              and
              eq
                /* "contracts/Auditor.sol":15407:15461  if (market.auditor() != this) revert AuditorMismatch() */
              tag_398
              jumpi
                /* "contracts/Auditor.sol":15444:15461  AuditorMismatch() */
              mload(0x40)
              shl(0xe0, 0x16b2972f)
              dup2
              mstore
              0x04
              add
              mload(0x40)
              dup1
              swap2
              sub
              swap1
              revert
                /* "contracts/Auditor.sol":15407:15461  if (market.auditor() != this) revert AuditorMismatch() */
            tag_398:
              sub(shl(0xa0, 0x01), 0x01)
                /* "contracts/Auditor.sol":15471:15486  markets[market] */
              dup5
              and
              0x00
              swap1
              dup2
              mstore
                /* "contracts/Auditor.sol":15471:15478  markets */
              0x98
                /* "contracts/Auditor.sol":15471:15486  markets[market] */
              0x20
              mstore
              0x40
              swap1
              keccak256
                /* "contracts/Auditor.sol":15471:15495  markets[market].isListed */
              sload
              shl(0x90, 0x01)
              swap1
              div
              0xff
              and
                /* "contracts/Auditor.sol":15467:15525  if (markets[market].isListed) revert MarketAlreadyListed() */
              iszero
              tag_399
              jumpi
                /* "contracts/Auditor.sol":15504:15525  MarketAlreadyListed() */
              mload(0x40)
              shl(0xe0, 0x4d5eeb49)
              dup2
              mstore
              0x04
              add
              mload(0x40)
              dup1
              swap2
              sub
              swap1
              revert
                /* "contracts/Auditor.sol":15467:15525  if (markets[market].isListed) revert MarketAlreadyListed() */
            tag_399:
              sub(shl(0xa0, 0x01), 0x01)
                /* "contracts/Auditor.sol":15535:15566  address(priceFeed) != BASE_FEED */
              dup4
              and
                /* "contracts/Auditor.sol":816:858  0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE */
              0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee
                /* "contracts/Auditor.sol":15535:15566  address(priceFeed) != BASE_FEED */
              eq
              dup1
              iszero
              swap1
                /* "contracts/Auditor.sol":15535:15607  address(priceFeed) != BASE_FEED && priceFeed.decimals() != priceDecimals */
              tag_400
              jumpi
              pop
                /* "contracts/Auditor.sol":15594:15607  priceDecimals */
              immutable("0x6bcaf047ba4c8ac400fca43393035242dd1aabda2d6068a0c51242b97224de8d")
                /* "contracts/Auditor.sol":15570:15579  priceFeed */
              dup4
              sub(shl(0xa0, 0x01), 0x01)
                /* "contracts/Auditor.sol":15570:15588  priceFeed.decimals */
              and
              0x313ce567
                /* "contracts/Auditor.sol":15570:15590  priceFeed.decimals() */
              mload(0x40)
              dup2
              0xffffffff
              and
              0xe0
              shl
              dup2
              mstore
              0x04
              add
              0x20
              mload(0x40)
              dup1
              dup4
              sub
              dup2
              dup7
              gas
              staticcall
              iszero
              dup1
              iszero
              tag_402
              jumpi
              returndatasize
              0x00
              dup1
              returndatacopy
              revert(0x00, returndatasize)
            tag_402:
              pop
              pop
              pop
              pop
              mload(0x40)
              returndatasize
              not(0x1f)
              0x1f
              dup3
              add
              and
              dup3
              add
              dup1
              0x40
              mstore
              pop
              dup2
              add
              swap1
              tag_403
              swap2
              swap1
              tag_331
              jump	// in
            tag_403:
                /* "contracts/Auditor.sol":15570:15607  priceFeed.decimals() != priceDecimals */
              0xff
              and
              eq
              iszero
                /* "contracts/Auditor.sol":15535:15607  address(priceFeed) != BASE_FEED && priceFeed.decimals() != priceDecimals */
            tag_400:
                /* "contracts/Auditor.sol":15531:15634  if (address(priceFeed) != BASE_FEED && priceFeed.decimals() != priceDecimals) revert InvalidPriceFeed() */
              iszero
              tag_404
              jumpi
                /* "contracts/Auditor.sol":15616:15634  InvalidPriceFeed() */
              mload(0x40)
              shl(0xe0, 0x52cc3f7d)
              dup2
              mstore
              0x04
              add
              mload(0x40)
              dup1
              swap2
              sub
              swap1
              revert
                /* "contracts/Auditor.sol":15531:15634  if (address(priceFeed) != BASE_FEED && priceFeed.decimals() != priceDecimals) revert InvalidPriceFeed() */
            tag_404:
                /* "contracts/Auditor.sol":15641:15655  uint8 decimals */
              0x00
                /* "contracts/Auditor.sol":15658:15664  market */
              dup5
              sub(shl(0xa0, 0x01), 0x01)
                /* "contracts/Auditor.sol":15658:15673  market.decimals */
              and
              0x313ce567
                /* "contracts/Auditor.sol":15658:15675  market.decimals() */
              mload(0x40)
              dup2
              0xffffffff
              and
              0xe0
              shl
              dup2
              mstore
              0x04
              add
              0x20
              mload(0x40)
              dup1
              dup4
              sub
              dup2
              dup7
              gas
              staticcall
              iszero
              dup1
              iszero
              tag_406
              jumpi
              returndatasize
              0x00
              dup1
              returndatacopy
              revert(0x00, returndatasize)
            tag_406:
              pop
              pop
              pop
              pop
              mload(0x40)
              returndatasize
              not(0x1f)
              0x1f
              dup3
              add
              and
              dup3
              add
              dup1
              0x40
              mstore
              pop
              dup2
              add
              swap1
              tag_407
              swap2
              swap1
              tag_331
              jump	// in
            tag_407:
                /* "contracts/Auditor.sol":15641:15675  uint8 decimals = market.decimals() */
              swap1
              pop
                /* "contracts/Auditor.sol":15699:15866  MarketData({... */
              mload(0x40)
              dup1
              0xa0
              add
              0x40
              mstore
              dup1
                /* "contracts/Auditor.sol":15754:15766  adjustFactor */
              dup5
              sub(shl(0x80, 0x01), 0x01)
                /* "contracts/Auditor.sol":15699:15866  MarketData({... */
              and
              dup2
              mstore
              0x20
              add
                /* "contracts/Auditor.sol":15784:15792  decimals */
              dup3
                /* "contracts/Auditor.sol":15699:15866  MarketData({... */
              0xff
              and
              dup2
              mstore
              0x20
              add
                /* "contracts/Auditor.sol":15813:15823  marketList */
              0x99
                /* "contracts/Auditor.sol":15813:15830  marketList.length */
              dup1
              sload
              swap1
              pop
                /* "contracts/Auditor.sol":15699:15866  MarketData({... */
              0xff
              and
              dup2
              mstore
              0x20
              add
                /* "contracts/Auditor.sol":15728:15732  true */
              0x01
                /* "contracts/Auditor.sol":15699:15866  MarketData({... */
              iszero
              iszero
              dup2
              mstore
              0x20
              add
                /* "contracts/Auditor.sol":15850:15859  priceFeed */
              dup6
              sub(shl(0xa0, 0x01), 0x01)
                /* "contracts/Auditor.sol":15699:15866  MarketData({... */
              and
              dup2
              mstore
              pop
                /* "contracts/Auditor.sol":15681:15688  markets */
              0x98
                /* "contracts/Auditor.sol":15681:15696  markets[market] */
              0x00
                /* "contracts/Auditor.sol":15689:15695  market */
              dup8
              sub(shl(0xa0, 0x01), 0x01)
                /* "contracts/Auditor.sol":15681:15696  markets[market] */
              and
              sub(shl(0xa0, 0x01), 0x01)
              and
              dup2
              mstore
              0x20
              add
              swap1
              dup2
              mstore
              0x20
              add
              0x00
              keccak256
                /* "contracts/Auditor.sol":15681:15866  markets[market] = MarketData({... */
              0x00
              dup3
              add
              mload
              dup2
              0x00
              add
              exp(0x0100, 0x00)
              dup2
              sload
              dup2
              sub(shl(0x80, 0x01), 0x01)
              mul
              not
              and
              swap1
              dup4
              sub(shl(0x80, 0x01), 0x01)
              and
              mul
              or
              swap1
              sstore
              pop
              0x20
              dup3
              add
              mload
              dup2
              0x00
              add
              exp(0x0100, 0x10)
              dup2
              sload
              dup2
              0xff
              mul
              not
              and
              swap1
              dup4
              0xff
              and
              mul
              or
              swap1
              sstore
              pop
              0x40
              dup3
              add
              mload
              dup2
              0x00
              add
              exp(0x0100, 0x11)
              dup2
              sload
              dup2
              0xff
              mul
              not
              and
              swap1
              dup4
              0xff
              and
              mul
              or
              swap1
              sstore
              pop
              0x60
              dup3
              add
              mload
              dup2
              0x00
              add
              exp(0x0100, 0x12)
              dup2
              sload
              dup2
              0xff
              mul
              not
              and
              swap1
              dup4
              iszero
              iszero
              mul
              or
              swap1
              sstore
              pop
              0x80
              dup3
              add
              mload
              dup2
              0x01
              add
              exp(0x0100, 0x00)
              dup2
              sload
              dup2
              sub(shl(0xa0, 0x01), 0x01)
              mul
              not
              and
              swap1
              dup4
              sub(shl(0xa0, 0x01), 0x01)
              and
              mul
              or
              swap1
              sstore
              pop
              swap1
              pop
              pop
                /* "contracts/Auditor.sol":15873:15883  marketList */
              0x99
                /* "contracts/Auditor.sol":15889:15895  market */
              dup6
                /* "contracts/Auditor.sol":15873:15896  marketList.push(market) */
              swap1
              dup1
              0x01
              dup2
              sload
              add
              dup1
              dup3
              sstore
              dup1
              swap2
              pop
              pop
              0x01
              swap1
              sub
              swap1
              0x00
              mstore
              keccak256(0x00, 0x20)
              add
              0x00
              swap1
              swap2
              swap1
              swap2
              swap1
              swap2
              0x0100
              exp
              dup2
              sload
              dup2
              sub(shl(0xa0, 0x01), 0x01)
              mul
              not
              and
              swap1
              dup4
              sub(shl(0xa0, 0x01), 0x01)
              and
              mul
              or
              swap1
              sstore
              pop
                /* "contracts/Auditor.sol":15921:15927  market */
              dup5
              sub(shl(0xa0, 0x01), 0x01)
                /* "contracts/Auditor.sol":15908:15938  MarketListed(market, decimals) */
              and
              0x4baa14f9cb96bf2fd4a6def4c4a6d8290bf89e48bfdd33d7586d8471674ac0e6
                /* "contracts/Auditor.sol":15929:15937  decimals */
              dup3
                /* "contracts/Auditor.sol":15908:15938  MarketListed(market, decimals) */
              mload(0x40)
              tag_409
              swap2
              swap1
                /* "#utility.yul":9568:9572   */
              0xff
                /* "#utility.yul":9556:9573   */
              swap2
              swap1
              swap2
              and
                /* "#utility.yul":9538:9574   */
              dup2
              mstore
                /* "#utility.yul":9526:9528   */
              0x20
                /* "#utility.yul":9511:9529   */
              add
              swap1
                /* "#utility.yul":9386:9580   */
              jump
                /* "contracts/Auditor.sol":15908:15938  MarketListed(market, decimals) */
            tag_409:
              mload(0x40)
              dup1
              swap2
              sub
              swap1
              log2
                /* "contracts/Auditor.sol":15970:15979  priceFeed */
              dup4
              sub(shl(0xa0, 0x01), 0x01)
                /* "contracts/Auditor.sol":15949:15980  PriceFeedSet(market, priceFeed) */
              and
                /* "contracts/Auditor.sol":15962:15968  market */
              dup6
              sub(shl(0xa0, 0x01), 0x01)
                /* "contracts/Auditor.sol":15949:15980  PriceFeedSet(market, priceFeed) */
              and
              0xd2d8394cf7549a5ddbc2ba3dd7b2de8d53c891472d1f2907008ed6a10045fdae
              mload(0x40)
              mload(0x40)
              dup1
              swap2
              sub
              swap1
              log3
                /* "contracts/Auditor.sol":15991:16028  AdjustFactorSet(market, adjustFactor) */
              mload(0x40)
              sub(shl(0x80, 0x01), 0x01)
                /* "#utility.yul":14021:14068   */
              dup5
              and
                /* "#utility.yul":14003:14069   */
              dup2
              mstore
              sub(shl(0xa0, 0x01), 0x01)
                /* "contracts/Auditor.sol":15991:16028  AdjustFactorSet(market, adjustFactor) */
              dup7
              and
              swap1
              0x2e6cff6894398a38e2957a38e34bbbcebbc7f1cd5ec3c6cc0172ea7b40bd5b82
              swap1
                /* "#utility.yul":13991:13993   */
              0x20
                /* "#utility.yul":13976:13994   */
              add
                /* "contracts/Auditor.sol":15991:16028  AdjustFactorSet(market, adjustFactor) */
              mload(0x40)
              dup1
              swap2
              sub
              swap1
              log2
                /* "contracts/Auditor.sol":15401:16033  {... */
              pop
                /* "contracts/Auditor.sol":15266:16033  function enableMarket(... */
              pop
              pop
              pop
              pop
              jump	// out
                /* "contracts/Auditor.sol":11478:11723  function checkSeize(Market repayMarket, Market seizeMarket) external view {... */
            tag_157:
              sub(shl(0xa0, 0x01), 0x01)
                /* "contracts/Auditor.sol":11629:11649  markets[seizeMarket] */
              dup2
              and
              0x00
              swap1
              dup2
              mstore
                /* "contracts/Auditor.sol":11629:11636  markets */
              0x98
                /* "contracts/Auditor.sol":11629:11649  markets[seizeMarket] */
              0x20
              mstore
              0x40
              swap1
              keccak256
                /* "contracts/Auditor.sol":11629:11658  markets[seizeMarket].isListed */
              sload
              shl(0x90, 0x01)
              swap1
              div
              0xff
              and
                /* "contracts/Auditor.sol":11628:11658  !markets[seizeMarket].isListed */
              iszero
              dup1
                /* "contracts/Auditor.sol":11628:11692  !markets[seizeMarket].isListed || !markets[repayMarket].isListed */
              tag_414
              jumpi
              pop
              sub(shl(0xa0, 0x01), 0x01)
                /* "contracts/Auditor.sol":11663:11683  markets[repayMarket] */
              dup3
              and
              0x00
              swap1
              dup2
              mstore
                /* "contracts/Auditor.sol":11663:11670  markets */
              0x98
                /* "contracts/Auditor.sol":11663:11683  markets[repayMarket] */
              0x20
              mstore
              0x40
              swap1
              keccak256
                /* "contracts/Auditor.sol":11663:11692  markets[repayMarket].isListed */
              sload
              shl(0x90, 0x01)
              swap1
              div
              0xff
              and
                /* "contracts/Auditor.sol":11662:11692  !markets[repayMarket].isListed */
              iszero
                /* "contracts/Auditor.sol":11628:11692  !markets[seizeMarket].isListed || !markets[repayMarket].isListed */
            tag_414:
                /* "contracts/Auditor.sol":11624:11718  if (!markets[seizeMarket].isListed || !markets[repayMarket].isListed) revert MarketNotListed() */
              iszero
              tag_187
              jumpi
                /* "contracts/Auditor.sol":11701:11718  MarketNotListed() */
              mload(0x40)
              shl(0xe1, 0x34b04fe3)
              dup2
              mstore
              0x04
              add
              mload(0x40)
              dup1
              swap2
              sub
              swap1
              revert
                /* "contracts/Auditor.sol":16233:16495  function setAdjustFactor(Market market, uint128 adjustFactor) public onlyRole(DEFAULT_ADMIN_ROLE) {... */
            tag_161:
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":2369:2373  0x00 */
              0x00
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":2802:2818  _checkRole(role) */
              tag_417
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":2369:2373  0x00 */
              dup2
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":2802:2812  _checkRole */
              tag_293
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":2802:2818  _checkRole(role) */
              jump	// in
            tag_417:
              sub(shl(0xa0, 0x01), 0x01)
                /* "contracts/Auditor.sol":16342:16357  markets[market] */
              dup4
              and
              0x00
              swap1
              dup2
              mstore
                /* "contracts/Auditor.sol":16342:16349  markets */
              0x98
                /* "contracts/Auditor.sol":16342:16357  markets[market] */
              0x20
              mstore
              0x40
              swap1
              keccak256
                /* "contracts/Auditor.sol":16342:16366  markets[market].isListed */
              sload
              shl(0x90, 0x01)
              swap1
              div
              0xff
              and
                /* "contracts/Auditor.sol":16337:16392  if (!markets[market].isListed) revert MarketNotListed() */
              tag_419
              jumpi
                /* "contracts/Auditor.sol":16375:16392  MarketNotListed() */
              mload(0x40)
              shl(0xe1, 0x34b04fe3)
              dup2
              mstore
              0x04
              add
              mload(0x40)
              dup1
              swap2
              sub
              swap1
              revert
                /* "contracts/Auditor.sol":16337:16392  if (!markets[market].isListed) revert MarketNotListed() */
            tag_419:
              sub(shl(0xa0, 0x01), 0x01)
                /* "contracts/Auditor.sol":16399:16414  markets[market] */
              dup4
              and
              0x00
              dup2
              dup2
              mstore
                /* "contracts/Auditor.sol":16399:16406  markets */
              0x98
                /* "contracts/Auditor.sol":16399:16414  markets[market] */
              0x20
              swap1
              dup2
              mstore
              0x40
              swap2
              dup3
              swap1
              keccak256
                /* "contracts/Auditor.sol":16399:16442  markets[market].adjustFactor = adjustFactor */
              dup1
              sload
              not(0xffffffffffffffffffffffffffffffff)
              and
              sub(shl(0x80, 0x01), 0x01)
              dup8
              and
              swap1
              dup2
              or
              swap1
              swap2
              sstore
                /* "contracts/Auditor.sol":16453:16490  AdjustFactorSet(market, adjustFactor) */
              swap2
              mload
                /* "#utility.yul":14003:14069   */
              swap2
              dup3
              mstore
                /* "contracts/Auditor.sol":16453:16490  AdjustFactorSet(market, adjustFactor) */
              0x2e6cff6894398a38e2957a38e34bbbcebbc7f1cd5ec3c6cc0172ea7b40bd5b82
              swap2
                /* "#utility.yul":13976:13994   */
              add
                /* "contracts/Auditor.sol":16453:16490  AdjustFactorSet(market, adjustFactor) */
              mload(0x40)
              dup1
              swap2
              sub
              swap1
              log2
                /* "contracts/Auditor.sol":16233:16495  function setAdjustFactor(Market market, uint128 adjustFactor) public onlyRole(DEFAULT_ADMIN_ROLE) {... */
              pop
              pop
              pop
              jump	// out
                /* "contracts/Auditor.sol":3687:4356  function exitMarket(Market market) external {... */
            tag_164:
              sub(shl(0xa0, 0x01), 0x01)
                /* "contracts/Auditor.sol":3760:3775  markets[market] */
              dup2
              and
                /* "contracts/Auditor.sol":3737:3757  MarketData storage m */
              0x00
                /* "contracts/Auditor.sol":3760:3775  markets[market] */
              swap1
              dup2
              mstore
                /* "contracts/Auditor.sol":3760:3767  markets */
              0x98
                /* "contracts/Auditor.sol":3760:3775  markets[market] */
              0x20
              mstore
              0x40
              swap1
              keccak256
                /* "contracts/Auditor.sol":3786:3796  m.isListed */
              dup1
              sload
              shl(0x90, 0x01)
              swap1
              div
              0xff
              and
                /* "contracts/Auditor.sol":3781:3822  if (!m.isListed) revert MarketNotListed() */
              tag_422
              jumpi
                /* "contracts/Auditor.sol":3805:3822  MarketNotListed() */
              mload(0x40)
              shl(0xe1, 0x34b04fe3)
              dup2
              mstore
              0x04
              add
              mload(0x40)
              dup1
              swap2
              sub
              swap1
              revert
                /* "contracts/Auditor.sol":3781:3822  if (!m.isListed) revert MarketNotListed() */
            tag_422:
                /* "contracts/Auditor.sol":3862:3896  market.accountSnapshot(msg.sender) */
              mload(0x40)
              shl(0xe0, 0x014a296f)
              dup2
              mstore
                /* "contracts/Auditor.sol":3885:3895  msg.sender */
              caller
                /* "contracts/Auditor.sol":3862:3896  market.accountSnapshot(msg.sender) */
              0x04
              dup3
              add
                /* "#utility.yul":3002:3053   */
              mstore
                /* "contracts/Auditor.sol":3830:3844  uint256 assets */
              0x00
              swap1
              dup2
              swap1
              sub(shl(0xa0, 0x01), 0x01)
                /* "contracts/Auditor.sol":3862:3884  market.accountSnapshot */
              dup6
              and
              swap1
              0x014a296f
              swap1
                /* "#utility.yul":2975:2993   */
              0x24
              add
                /* "contracts/Auditor.sol":3862:3896  market.accountSnapshot(msg.sender) */
              0x40
              dup1
              mload
              dup1
              dup4
              sub
              dup2
              dup7
              gas
              staticcall
              iszero
              dup1
              iszero
              tag_425
              jumpi
              returndatasize
              0x00
              dup1
              returndatacopy
              revert(0x00, returndatasize)
            tag_425:
              pop
              pop
              pop
              pop
              mload(0x40)
              returndatasize
              not(0x1f)
              0x1f
              dup3
              add
              and
              dup3
              add
              dup1
              0x40
              mstore
              pop
              dup2
              add
              swap1
              tag_426
              swap2
              swap1
              tag_244
              jump	// in
            tag_426:
                /* "contracts/Auditor.sol":3829:3896  (uint256 assets, uint256 debt) = market.accountSnapshot(msg.sender) */
              swap2
              pop
              swap2
              pop
                /* "contracts/Auditor.sol":3954:3958  debt */
              dup1
                /* "contracts/Auditor.sol":3962:3963  0 */
              0x00
                /* "contracts/Auditor.sol":3954:3963  debt != 0 */
              eq
                /* "contracts/Auditor.sol":3950:3987  if (debt != 0) revert RemainingDebt() */
              tag_427
              jumpi
                /* "contracts/Auditor.sol":3972:3987  RemainingDebt() */
              mload(0x40)
              shl(0xe5, 0x04fdb011)
              dup2
              mstore
              0x04
              add
              mload(0x40)
              dup1
              swap2
              sub
              swap1
              revert
                /* "contracts/Auditor.sol":3950:3987  if (debt != 0) revert RemainingDebt() */
            tag_427:
                /* "contracts/Auditor.sol":4067:4109  checkShortfall(market, msg.sender, assets) */
              tag_428
                /* "contracts/Auditor.sol":4082:4088  market */
              dup5
                /* "contracts/Auditor.sol":4090:4100  msg.sender */
              caller
                /* "contracts/Auditor.sol":4102:4108  assets */
              dup5
                /* "contracts/Auditor.sol":4067:4081  checkShortfall */
              tag_138
                /* "contracts/Auditor.sol":4067:4109  checkShortfall(market, msg.sender, assets) */
              jump	// in
            tag_428:
                /* "contracts/Auditor.sol":4151:4161  msg.sender */
              caller
                /* "contracts/Auditor.sol":4116:4133  uint256 marketMap */
              0x00
                /* "contracts/Auditor.sol":4136:4162  accountMarkets[msg.sender] */
              swap1
              dup2
              mstore
                /* "contracts/Auditor.sol":4136:4150  accountMarkets */
              0x97
                /* "contracts/Auditor.sol":4136:4162  accountMarkets[msg.sender] */
              0x20
              mstore
              0x40
              dup2
              keccak256
              sload
                /* "contracts/Auditor.sol":4194:4201  m.index */
              dup5
              sload
                /* "contracts/Auditor.sol":4136:4162  accountMarkets[msg.sender] */
              swap1
              swap2
                /* "contracts/Auditor.sol":4189:4190  1 */
              0x01
              shl(0x88, 0x01)
                /* "contracts/Auditor.sol":4194:4201  m.index */
              swap1
              swap3
              div
              0xff
              and
                /* "contracts/Auditor.sol":4189:4201  1 << m.index */
              swap2
              swap1
              swap2
              shl
              swap1
                /* "contracts/Auditor.sol":4213:4235  marketMap & marketMask */
              dup2
              dup4
              and
                /* "contracts/Auditor.sol":4212:4241  (marketMap & marketMask) == 0 */
              swap1
              sub
                /* "contracts/Auditor.sol":4208:4250  if ((marketMap & marketMask) == 0) return; */
              tag_429
              jumpi
                /* "contracts/Auditor.sol":4243:4250  return; */
              pop
              pop
              pop
              pop
              pop
                /* "contracts/Auditor.sol":3687:4356  function exitMarket(Market market) external {... */
              pop
              jump	// out
                /* "contracts/Auditor.sol":4208:4250  if ((marketMap & marketMask) == 0) return; */
            tag_429:
                /* "contracts/Auditor.sol":4270:4280  msg.sender */
              caller
                /* "contracts/Auditor.sol":4255:4281  accountMarkets[msg.sender] */
              0x00
              dup2
              dup2
              mstore
                /* "contracts/Auditor.sol":4255:4269  accountMarkets */
              0x97
                /* "contracts/Auditor.sol":4255:4281  accountMarkets[msg.sender] */
              0x20
              mstore
              0x40
              dup1
              dup3
              keccak256
                /* "contracts/Auditor.sol":4296:4307  ~marketMask */
              dup5
              not
                /* "contracts/Auditor.sol":4284:4307  marketMap & ~marketMask */
              dup7
              and
                /* "contracts/Auditor.sol":4255:4307  accountMarkets[msg.sender] = marketMap & ~marketMask */
              swap1
              sstore
                /* "contracts/Auditor.sol":4319:4351  MarketExited(market, msg.sender) */
              mload
              sub(shl(0xa0, 0x01), 0x01)
              dup10
              and
              swap2
              0xe699a64c18b07ac5b7301aa273f36a2287239eb9501d81950672794afba29a0d
              swap2
              log3
                /* "contracts/Auditor.sol":3731:4356  {... */
              pop
              pop
              pop
              pop
              pop
                /* "contracts/Auditor.sol":3687:4356  function exitMarket(Market market) external {... */
              pop
              jump	// out
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":2025:2090  function __AccessControl_init() internal onlyInitializing {... */
            tag_183:
                /* "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":5363:5376  _initializing */
              sload(0x00)
              0x0100
              swap1
              div
              0xff
              and
                /* "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":5355:5424  require(_initializing, "Initializable: contract is not initializing") */
              tag_433
              jumpi
              0x00
              dup1
              revert
            tag_433:
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":2025:2090  function __AccessControl_init() internal onlyInitializing {... */
              jump	// out
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":7791:8024  function _grantRole(bytes32 role, address account) internal virtual {... */
            tag_185:
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":7874:7896  hasRole(role, account) */
              tag_436
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":7882:7886  role */
              dup3
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":7888:7895  account */
              dup3
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":7874:7881  hasRole */
              tag_125
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":7874:7896  hasRole(role, account) */
              jump	// in
            tag_436:
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":7869:8018  if (!hasRole(role, account)) {... */
              tag_187
              jumpi
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":7912:7924  _roles[role] */
              0x00
              dup3
              dup2
              mstore
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":7912:7918  _roles */
              0x65
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":7912:7924  _roles[role] */
              0x20
              swap1
              dup2
              mstore
              0x40
              dup1
              dup4
              keccak256
              sub(shl(0xa0, 0x01), 0x01)
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":7912:7941  _roles[role].members[account] */
              dup6
              and
              dup5
              mstore
              swap1
              swap2
              mstore
              swap1
              keccak256
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":7912:7948  _roles[role].members[account] = true */
              dup1
              sload
              not(0xff)
              and
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":7944:7948  true */
              0x01
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":7912:7948  _roles[role].members[account] = true */
              or
              swap1
              sstore
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":7994:8006  _msgSender() */
              tag_438
                /* "node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":929:939  msg.sender */
              caller
              swap1
                /* "node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":850:946  function _msgSender() internal view virtual returns (address) {... */
              jump
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":7994:8006  _msgSender() */
            tag_438:
              sub(shl(0xa0, 0x01), 0x01)
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":7967:8007  RoleGranted(role, account, _msgSender()) */
              and
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":7985:7992  account */
              dup2
              sub(shl(0xa0, 0x01), 0x01)
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":7967:8007  RoleGranted(role, account, _msgSender()) */
              and
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":7979:7983  role */
              dup4
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":7967:8007  RoleGranted(role, account, _msgSender()) */
              0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d
              mload(0x40)
              mload(0x40)
              dup1
              swap2
              sub
              swap1
              log4
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":7791:8024  function _grantRole(bytes32 role, address account) internal virtual {... */
              pop
              pop
              jump	// out
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":7741:8276  function mulDivDown(... */
            tag_209:
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":7947:7956  mul(x, y) */
              dup3
              dup3
              mul
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":8078:8097  iszero(denominator) */
              dup2
              iszero
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":8071:8098  iszero(iszero(denominator)) */
              iszero
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":8103:8112  iszero(x) */
              dup5
              iszero
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":8117:8126  div(z, x) */
              dup6
              dup4
              div
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":8114:8130  eq(div(z, x), y) */
              dup6
              eq
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":8100:8131  or(iszero(x), eq(div(z, x), y)) */
              or
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":8067:8132  and(iszero(iszero(denominator)), or(iszero(x), eq(div(z, x), y))) */
              and
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":8057:8178  if iszero(and(iszero(iszero(denominator)), or(iszero(x), eq(div(z, x), y)))) {... */
              tag_440
              jumpi
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":8162:8163  0 */
              0x00
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":8159:8160  0 */
              dup1
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":8152:8164  revert(0, 0) */
              revert
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":8057:8178  if iszero(and(iszero(iszero(denominator)), or(iszero(x), eq(div(z, x), y)))) {... */
            tag_440:
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":8241:8260  div(z, denominator) */
              div
              swap3
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":7741:8276  function mulDivDown(... */
              swap2
              pop
              pop
              jump	// out
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":540:704  function mulWadDown(uint256 x, uint256 y) internal pure returns (uint256) {... */
            tag_210:
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":605:612  uint256 */
              0x00
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":631:652  mulDivDown(x, y, WAD) */
              tag_384
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":642:643  x */
              dup4
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":645:646  y */
              dup4
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":491:495  1e18 */
              0x0de0b6b3a7640000
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":631:641  mulDivDown */
              tag_209
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":631:652  mulDivDown(x, y, WAD) */
              jump	// in
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":8282:9034  function mulDivUp(... */
            tag_246:
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":8486:8495  mul(x, y) */
              dup3
              dup3
              mul
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":8617:8636  iszero(denominator) */
              dup2
              iszero
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":8610:8637  iszero(iszero(denominator)) */
              iszero
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":8642:8651  iszero(x) */
              dup5
              iszero
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":8656:8665  div(z, x) */
              dup6
              dup4
              div
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":8653:8669  eq(div(z, x), y) */
              dup6
              eq
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":8639:8670  or(iszero(x), eq(div(z, x), y)) */
              or
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":8606:8671  and(iszero(iszero(denominator)), or(iszero(x), eq(div(z, x), y))) */
              and
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":8596:8717  if iszero(and(iszero(iszero(denominator)), or(iszero(x), eq(div(z, x), y)))) {... */
              tag_444
              jumpi
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":8701:8702  0 */
              0x00
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":8698:8699  0 */
              dup1
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":8691:8703  revert(0, 0) */
              revert
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":8596:8717  if iszero(and(iszero(iszero(denominator)), or(iszero(x), eq(div(z, x), y)))) {... */
            tag_444:
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":9015:9016  1 */
              0x01
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":9001:9012  denominator */
              dup3
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":8997:8998  1 */
              0x01
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":8994:8995  z */
              dup4
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":8990:8999  sub(z, 1) */
              sub
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":8986:9013  div(sub(z, 1), denominator) */
              div
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":8982:9017  add(div(sub(z, 1), denominator), 1) */
              add
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":8977:8978  z */
              dup2
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":8970:8979  iszero(z) */
              iszero
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":8963:8980  iszero(iszero(z)) */
              iszero
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":8959:9018  mul(iszero(iszero(z)), add(div(sub(z, 1), denominator), 1)) */
              mul
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":8954:9018  z := mul(iszero(iszero(z)), add(div(sub(z, 1), denominator), 1)) */
              swap1
              pop
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":8282:9034  function mulDivUp(... */
              swap4
              swap3
              pop
              pop
              pop
              jump	// out
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":1044:1202  function divWadUp(uint256 x, uint256 y) internal pure returns (uint256) {... */
            tag_250:
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":1107:1114  uint256 */
              0x00
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":1133:1152  mulDivUp(x, WAD, y) */
              tag_384
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":1142:1143  x */
              dup4
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":491:495  1e18 */
              0x0de0b6b3a7640000
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":1150:1151  y */
              dup5
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":1133:1141  mulDivUp */
              tag_246
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":1133:1152  mulDivUp(x, WAD, y) */
              jump	// in
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":710:868  function mulWadUp(uint256 x, uint256 y) internal pure returns (uint256) {... */
            tag_260:
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":773:780  uint256 */
              0x00
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":799:818  mulDivUp(x, y, WAD) */
              tag_384
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":808:809  x */
              dup4
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":811:812  y */
              dup4
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":491:495  1e18 */
              0x0de0b6b3a7640000
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":799:807  mulDivUp */
              tag_246
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":799:818  mulDivUp(x, y, WAD) */
              jump	// in
                /* "node_modules/@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol":599:703  function min(uint256 a, uint256 b) internal pure returns (uint256) {... */
            tag_276:
                /* "node_modules/@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol":657:664  uint256 */
              0x00
                /* "node_modules/@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol":687:688  b */
              dup2
                /* "node_modules/@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol":683:684  a */
              dup4
                /* "node_modules/@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol":683:688  a < b */
              lt
                /* "node_modules/@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol":683:696  a < b ? a : b */
              tag_450
              jumpi
                /* "node_modules/@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol":695:696  b */
              dup2
                /* "node_modules/@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol":683:696  a < b ? a : b */
              jump(tag_384)
            tag_450:
              pop
                /* "node_modules/@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol":691:692  a */
              swap1
              swap2
                /* "node_modules/@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol":599:703  function min(uint256 a, uint256 b) internal pure returns (uint256) {... */
              swap1
              pop
              jump	// out
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":874:1038  function divWadDown(uint256 x, uint256 y) internal pure returns (uint256) {... */
            tag_286:
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":939:946  uint256 */
              0x00
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":965:986  mulDivDown(x, WAD, y) */
              tag_384
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":976:977  x */
              dup4
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":491:495  1e18 */
              0x0de0b6b3a7640000
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":984:985  y */
              dup5
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":965:975  mulDivDown */
              tag_209
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":965:986  mulDivDown(x, WAD, y) */
              jump	// in
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":3642:3745  function _checkRole(bytes32 role) internal view virtual {... */
            tag_293:
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":3708:3738  _checkRole(role, _msgSender()) */
              tag_455
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":3719:3723  role */
              dup2
                /* "node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":929:939  msg.sender */
              caller
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":3708:3718  _checkRole */
              tag_457
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":3708:3738  _checkRole(role, _msgSender()) */
              jump	// in
            tag_455:
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":3642:3745  function _checkRole(bytes32 role) internal view virtual {... */
              pop
              jump	// out
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":8195:8429  function _revokeRole(bytes32 role, address account) internal virtual {... */
            tag_301:
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":8278:8300  hasRole(role, account) */
              tag_460
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":8286:8290  role */
              dup3
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":8292:8299  account */
              dup3
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":8278:8285  hasRole */
              tag_125
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":8278:8300  hasRole(role, account) */
              jump	// in
            tag_460:
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":8274:8423  if (hasRole(role, account)) {... */
              iszero
              tag_187
              jumpi
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":8348:8353  false */
              0x00
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":8316:8328  _roles[role] */
              dup3
              dup2
              mstore
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":8316:8322  _roles */
              0x65
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":8316:8328  _roles[role] */
              0x20
              swap1
              dup2
              mstore
              0x40
              dup1
              dup4
              keccak256
              sub(shl(0xa0, 0x01), 0x01)
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":8316:8345  _roles[role].members[account] */
              dup6
              and
              dup1
              dup6
              mstore
              swap3
              mstore
              dup1
              dup4
              keccak256
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":8316:8353  _roles[role].members[account] = false */
              dup1
              sload
              not(0xff)
              and
              swap1
              sstore
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":8372:8412  RoleRevoked(role, account, _msgSender()) */
              mload
                /* "node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":929:939  msg.sender */
              caller
              swap3
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":8316:8328  _roles[role] */
              dup6
              swap2
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":8372:8412  RoleRevoked(role, account, _msgSender()) */
              0xf6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b
              swap2
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":8348:8353  false */
              swap1
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":8372:8412  RoleRevoked(role, account, _msgSender()) */
              log4
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":8195:8429  function _revokeRole(bytes32 role, address account) internal virtual {... */
              pop
              pop
              jump	// out
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":4026:4527  function _checkRole(bytes32 role, address account) internal view virtual {... */
            tag_457:
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":4114:4136  hasRole(role, account) */
              tag_464
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":4122:4126  role */
              dup3
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":4128:4135  account */
              dup3
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":4114:4121  hasRole */
              tag_125
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":4114:4136  hasRole(role, account) */
              jump	// in
            tag_464:
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":4109:4521  if (!hasRole(role, account)) {... */
              tag_187
              jumpi
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":4297:4336  StringsUpgradeable.toHexString(account) */
              tag_466
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":4328:4335  account */
              dup2
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":4297:4327  StringsUpgradeable.toHexString */
              tag_467
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":4297:4336  StringsUpgradeable.toHexString(account) */
              jump	// in
            tag_466:
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":4407:4456  StringsUpgradeable.toHexString(uint256(role), 32) */
              tag_468
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":4446:4450  role */
              dup4
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":4453:4455  32 */
              0x20
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":4407:4437  StringsUpgradeable.toHexString */
              tag_469
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":4407:4456  StringsUpgradeable.toHexString(uint256(role), 32) */
              jump	// in
            tag_468:
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":4204:4478  abi.encodePacked(... */
              add(0x20, mload(0x40))
              tag_470
              swap3
              swap2
              swap1
              tag_471
              jump	// in
            tag_470:
              mload(0x40)
              0x20
              dup2
              dup4
              sub
              sub
              dup2
              mstore
              swap1
              0x40
              mstore
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":4152:4510  revert(... */
              0x00
              dup1
              revert
                /* "node_modules/@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol":2146:2295  function toHexString(address addr) internal pure returns (string memory) {... */
            tag_467:
                /* "node_modules/@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol":2204:2217  string memory */
              0x60
                /* "node_modules/@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol":2236:2288  toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH) */
              tag_171
              sub(shl(0xa0, 0x01), 0x01)
                /* "node_modules/@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol":2248:2270  uint256(uint160(addr)) */
              dup4
              and
                /* "node_modules/@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol":333:335  20 */
              0x14
                /* "node_modules/@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol":1557:1994  function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {... */
            tag_469:
                /* "node_modules/@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol":1632:1645  string memory */
              0x60
                /* "node_modules/@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol":1657:1676  bytes memory buffer */
              0x00
                /* "node_modules/@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol":1689:1699  2 * length */
              tag_475
                /* "node_modules/@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol":1693:1699  length */
              dup4
                /* "node_modules/@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol":1689:1690  2 */
              0x02
                /* "node_modules/@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol":1689:1699  2 * length */
              tag_385
              jump	// in
            tag_475:
                /* "node_modules/@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol":1689:1703  2 * length + 2 */
              tag_476
              swap1
                /* "node_modules/@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol":1702:1703  2 */
              0x02
                /* "node_modules/@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol":1689:1703  2 * length + 2 */
              tag_248
              jump	// in
            tag_476:
                /* "node_modules/@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol":1679:1704  new bytes(2 * length + 2) */
              0xffffffffffffffff
              dup2
              gt
              iszero
              tag_478
              jumpi
              tag_478
              tag_479
              jump	// in
            tag_478:
              mload(0x40)
              swap1
              dup1
              dup3
              mstore
              dup1
              0x1f
              add
              not(0x1f)
              and
              0x20
              add
              dup3
              add
              0x40
              mstore
              dup1
              iszero
              tag_480
              jumpi
              0x20
              dup3
              add
              dup2
              dup1
              calldatasize
              dup4
              calldatacopy
              add
              swap1
              pop
            tag_480:
              pop
                /* "node_modules/@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol":1657:1704  bytes memory buffer = new bytes(2 * length + 2) */
              swap1
              pop
              shl(0xfc, 0x03)
                /* "node_modules/@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol":1714:1720  buffer */
              dup2
                /* "node_modules/@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol":1721:1722  0 */
              0x00
                /* "node_modules/@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol":1714:1723  buffer[0] */
              dup2
              mload
              dup2
              lt
              tag_482
              jumpi
              tag_482
              tag_197
              jump	// in
            tag_482:
              0x20
              add
              add
                /* "node_modules/@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol":1714:1729  buffer[0] = "0" */
              swap1
              not(sub(shl(0xf8, 0x01), 0x01))
              and
              swap1
              dup2
              0x00
              byte
              swap1
              mstore8
              pop
              shl(0xfb, 0x0f)
                /* "node_modules/@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol":1739:1745  buffer */
              dup2
                /* "node_modules/@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol":1746:1747  1 */
              0x01
                /* "node_modules/@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol":1739:1748  buffer[1] */
              dup2
              mload
              dup2
              lt
              tag_484
              jumpi
              tag_484
              tag_197
              jump	// in
            tag_484:
              0x20
              add
              add
                /* "node_modules/@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol":1739:1754  buffer[1] = "x" */
              swap1
              not(sub(shl(0xf8, 0x01), 0x01))
              and
              swap1
              dup2
              0x00
              byte
              swap1
              mstore8
              pop
                /* "node_modules/@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol":1769:1778  uint256 i */
              0x00
                /* "node_modules/@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol":1781:1791  2 * length */
              tag_488
                /* "node_modules/@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol":1785:1791  length */
              dup5
                /* "node_modules/@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol":1781:1782  2 */
              0x02
                /* "node_modules/@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol":1781:1791  2 * length */
              tag_385
              jump	// in
            tag_488:
                /* "node_modules/@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol":1781:1795  2 * length + 1 */
              tag_489
              swap1
                /* "node_modules/@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol":1794:1795  1 */
              0x01
                /* "node_modules/@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol":1781:1795  2 * length + 1 */
              tag_248
              jump	// in
            tag_489:
                /* "node_modules/@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol":1769:1795  uint256 i = 2 * length + 1 */
              swap1
              pop
                /* "node_modules/@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol":1764:1892  for (uint256 i = 2 * length + 1; i > 1; --i) {... */
            tag_485:
                /* "node_modules/@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol":1801:1802  1 */
              0x01
                /* "node_modules/@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol":1797:1798  i */
              dup2
                /* "node_modules/@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol":1797:1802  i > 1 */
              gt
                /* "node_modules/@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol":1764:1892  for (uint256 i = 2 * length + 1; i > 1; --i) {... */
              iszero
              tag_486
              jumpi
              shl(0x81, 0x181899199a1a9b1b9c1cb0b131b232b3)
                /* "node_modules/@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol":1844:1849  value */
              dup6
                /* "node_modules/@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol":1852:1855  0xf */
              0x0f
                /* "node_modules/@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol":1844:1855  value & 0xf */
              and
                /* "node_modules/@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol":1835:1856  _SYMBOLS[value & 0xf] */
              0x10
              dup2
              lt
              tag_491
              jumpi
              tag_491
              tag_197
              jump	// in
            tag_491:
              byte
              0xf8
              shl
                /* "node_modules/@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol":1823:1829  buffer */
              dup3
                /* "node_modules/@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol":1830:1831  i */
              dup3
                /* "node_modules/@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol":1823:1832  buffer[i] */
              dup2
              mload
              dup2
              lt
              tag_493
              jumpi
              tag_493
              tag_197
              jump	// in
            tag_493:
              0x20
              add
              add
                /* "node_modules/@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol":1823:1856  buffer[i] = _SYMBOLS[value & 0xf] */
              swap1
              not(sub(shl(0xf8, 0x01), 0x01))
              and
              swap1
              dup2
              0x00
              byte
              swap1
              mstore8
              pop
                /* "node_modules/@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol":1880:1881  4 */
              0x04
                /* "node_modules/@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol":1870:1881  value >>= 4 */
              swap5
              swap1
              swap5
              shr
              swap4
                /* "node_modules/@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol":1804:1807  --i */
              tag_494
              dup2
              tag_495
              jump	// in
            tag_494:
              swap1
              pop
                /* "node_modules/@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol":1764:1892  for (uint256 i = 2 * length + 1; i > 1; --i) {... */
              jump(tag_485)
            tag_486:
              pop
                /* "node_modules/@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol":1909:1919  value == 0 */
              dup4
              iszero
                /* "node_modules/@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol":1901:1956  require(value == 0, "Strings: hex length insufficient") */
              tag_384
              jumpi
              0x00
              dup1
              revert
                /* "#utility.yul":14:300   */
            tag_43:
                /* "#utility.yul":72:78   */
              0x00
                /* "#utility.yul":125:127   */
              0x20
                /* "#utility.yul":113:122   */
              dup3
                /* "#utility.yul":104:111   */
              dup5
                /* "#utility.yul":100:123   */
              sub
                /* "#utility.yul":96:128   */
              slt
                /* "#utility.yul":93:145   */
              iszero
              tag_505
              jumpi
                /* "#utility.yul":141:142   */
              0x00
                /* "#utility.yul":138:139   */
              dup1
                /* "#utility.yul":131:143   */
              revert
                /* "#utility.yul":93:145   */
            tag_505:
                /* "#utility.yul":167:190   */
              dup2
              calldataload
              not(sub(shl(0xe0, 0x01), 0x01))
                /* "#utility.yul":219:251   */
              dup2
              and
                /* "#utility.yul":209:252   */
              dup2
              eq
                /* "#utility.yul":199:270   */
              tag_384
              jumpi
                /* "#utility.yul":266:267   */
              0x00
                /* "#utility.yul":263:264   */
              dup1
                /* "#utility.yul":256:268   */
              revert
                /* "#utility.yul":497:624   */
            tag_479:
                /* "#utility.yul":558:568   */
              0x4e487b71
                /* "#utility.yul":553:556   */
              0xe0
                /* "#utility.yul":549:569   */
              shl
                /* "#utility.yul":546:547   */
              0x00
                /* "#utility.yul":539:570   */
              mstore
                /* "#utility.yul":589:593   */
              0x41
                /* "#utility.yul":586:587   */
              0x04
                /* "#utility.yul":579:594   */
              mstore
                /* "#utility.yul":613:617   */
              0x24
                /* "#utility.yul":610:611   */
              0x00
                /* "#utility.yul":603:618   */
              revert
                /* "#utility.yul":629:817   */
            tag_497:
                /* "#utility.yul":697:717   */
              dup1
              calldataload
              sub(shl(0x80, 0x01), 0x01)
                /* "#utility.yul":746:792   */
              dup2
              and
                /* "#utility.yul":736:793   */
              dup2
              eq
                /* "#utility.yul":726:811   */
              tag_510
              jumpi
                /* "#utility.yul":807:808   */
              0x00
                /* "#utility.yul":804:805   */
              dup1
                /* "#utility.yul":797:809   */
              revert
                /* "#utility.yul":726:811   */
            tag_510:
                /* "#utility.yul":629:817   */
              swap2
              swap1
              pop
              jump	// out
                /* "#utility.yul":822:1448   */
            tag_49:
                /* "#utility.yul":919:925   */
              0x00
                /* "#utility.yul":972:974   */
              0x40
                /* "#utility.yul":960:969   */
              dup3
                /* "#utility.yul":951:958   */
              dup5
                /* "#utility.yul":947:970   */
              sub
                /* "#utility.yul":943:975   */
              slt
                /* "#utility.yul":940:992   */
              iszero
              tag_512
              jumpi
                /* "#utility.yul":988:989   */
              0x00
                /* "#utility.yul":985:986   */
              dup1
                /* "#utility.yul":978:990   */
              revert
                /* "#utility.yul":940:992   */
            tag_512:
                /* "#utility.yul":1021:1023   */
              0x40
                /* "#utility.yul":1015:1024   */
              mload
                /* "#utility.yul":1063:1065   */
              0x40
                /* "#utility.yul":1055:1061   */
              dup2
                /* "#utility.yul":1051:1066   */
              add
                /* "#utility.yul":1132:1138   */
              dup2
                /* "#utility.yul":1120:1130   */
              dup2
                /* "#utility.yul":1117:1139   */
              lt
                /* "#utility.yul":1096:1114   */
              0xffffffffffffffff
                /* "#utility.yul":1084:1094   */
              dup3
                /* "#utility.yul":1081:1115   */
              gt
                /* "#utility.yul":1078:1140   */
              or
                /* "#utility.yul":1075:1260   */
              iszero
              tag_513
              jumpi
                /* "#utility.yul":1182:1192   */
              0x4e487b71
                /* "#utility.yul":1177:1180   */
              0xe0
                /* "#utility.yul":1173:1193   */
              shl
                /* "#utility.yul":1170:1171   */
              0x00
                /* "#utility.yul":1163:1194   */
              mstore
                /* "#utility.yul":1217:1221   */
              0x41
                /* "#utility.yul":1214:1215   */
              0x04
                /* "#utility.yul":1207:1222   */
              mstore
                /* "#utility.yul":1245:1249   */
              0x24
                /* "#utility.yul":1242:1243   */
              0x00
                /* "#utility.yul":1235:1250   */
              revert
                /* "#utility.yul":1075:1260   */
            tag_513:
                /* "#utility.yul":1276:1278   */
              0x40
                /* "#utility.yul":1269:1291   */
              mstore
                /* "#utility.yul":1315:1344   */
              tag_514
                /* "#utility.yul":1334:1343   */
              dup4
                /* "#utility.yul":1315:1344   */
              tag_497
              jump	// in
            tag_514:
                /* "#utility.yul":1307:1313   */
              dup2
                /* "#utility.yul":1300:1345   */
              mstore
                /* "#utility.yul":1378:1416   */
              tag_515
                /* "#utility.yul":1412:1414   */
              0x20
                /* "#utility.yul":1401:1410   */
              dup5
                /* "#utility.yul":1397:1415   */
              add
                /* "#utility.yul":1378:1416   */
              tag_497
              jump	// in
            tag_515:
                /* "#utility.yul":1373:1375   */
              0x20
                /* "#utility.yul":1361:1376   */
              dup3
              add
                /* "#utility.yul":1354:1417   */
              mstore
                /* "#utility.yul":1365:1371   */
              swap4
                /* "#utility.yul":822:1448   */
              swap3
              pop
              pop
              pop
              jump	// out
                /* "#utility.yul":1635:1766   */
            tag_498:
              sub(shl(0xa0, 0x01), 0x01)
                /* "#utility.yul":1710:1741   */
              dup2
              and
                /* "#utility.yul":1700:1742   */
              dup2
              eq
                /* "#utility.yul":1690:1760   */
              tag_455
              jumpi
                /* "#utility.yul":1756:1757   */
              0x00
                /* "#utility.yul":1753:1754   */
              dup1
                /* "#utility.yul":1746:1758   */
              revert
                /* "#utility.yul":1771:2018   */
            tag_57:
                /* "#utility.yul":1830:1836   */
              0x00
                /* "#utility.yul":1883:1885   */
              0x20
                /* "#utility.yul":1871:1880   */
              dup3
                /* "#utility.yul":1862:1869   */
              dup5
                /* "#utility.yul":1858:1881   */
              sub
                /* "#utility.yul":1854:1886   */
              slt
                /* "#utility.yul":1851:1903   */
              iszero
              tag_520
              jumpi
                /* "#utility.yul":1899:1900   */
              0x00
                /* "#utility.yul":1896:1897   */
              dup1
                /* "#utility.yul":1889:1901   */
              revert
                /* "#utility.yul":1851:1903   */
            tag_520:
                /* "#utility.yul":1938:1947   */
              dup2
                /* "#utility.yul":1925:1948   */
              calldataload
                /* "#utility.yul":1957:1988   */
              tag_384
                /* "#utility.yul":1982:1987   */
              dup2
                /* "#utility.yul":1957:1988   */
              tag_498
              jump	// in
                /* "#utility.yul":2023:2651   */
            tag_61:
                /* "#utility.yul":2139:2145   */
              0x00
                /* "#utility.yul":2147:2153   */
              dup1
                /* "#utility.yul":2155:2161   */
              0x00
                /* "#utility.yul":2163:2169   */
              dup1
                /* "#utility.yul":2216:2219   */
              0x80
                /* "#utility.yul":2204:2213   */
              dup6
                /* "#utility.yul":2195:2202   */
              dup8
                /* "#utility.yul":2191:2214   */
              sub
                /* "#utility.yul":2187:2220   */
              slt
                /* "#utility.yul":2184:2237   */
              iszero
              tag_523
              jumpi
                /* "#utility.yul":2233:2234   */
              0x00
                /* "#utility.yul":2230:2231   */
              dup1
                /* "#utility.yul":2223:2235   */
              revert
                /* "#utility.yul":2184:2237   */
            tag_523:
                /* "#utility.yul":2272:2281   */
              dup5
                /* "#utility.yul":2259:2282   */
              calldataload
                /* "#utility.yul":2291:2322   */
              tag_524
                /* "#utility.yul":2316:2321   */
              dup2
                /* "#utility.yul":2291:2322   */
              tag_498
              jump	// in
            tag_524:
                /* "#utility.yul":2341:2346   */
              swap4
              pop
                /* "#utility.yul":2398:2400   */
              0x20
                /* "#utility.yul":2383:2401   */
              dup6
              add
                /* "#utility.yul":2370:2402   */
              calldataload
                /* "#utility.yul":2411:2444   */
              tag_525
                /* "#utility.yul":2370:2402   */
              dup2
                /* "#utility.yul":2411:2444   */
              tag_498
              jump	// in
            tag_525:
                /* "#utility.yul":2463:2470   */
              swap3
              pop
                /* "#utility.yul":2522:2524   */
              0x40
                /* "#utility.yul":2507:2525   */
              dup6
              add
                /* "#utility.yul":2494:2526   */
              calldataload
                /* "#utility.yul":2535:2568   */
              tag_526
                /* "#utility.yul":2494:2526   */
              dup2
                /* "#utility.yul":2535:2568   */
              tag_498
              jump	// in
            tag_526:
                /* "#utility.yul":2023:2651   */
              swap4
              swap7
              swap3
              swap6
              pop
                /* "#utility.yul":2587:2594   */
              swap3
              swap4
                /* "#utility.yul":2641:2643   */
              0x60
                /* "#utility.yul":2626:2644   */
              add
                /* "#utility.yul":2613:2645   */
              calldataload
              swap3
              pop
              pop
                /* "#utility.yul":2023:2651   */
              jump	// out
                /* "#utility.yul":2656:2836   */
            tag_66:
                /* "#utility.yul":2715:2721   */
              0x00
                /* "#utility.yul":2768:2770   */
              0x20
                /* "#utility.yul":2756:2765   */
              dup3
                /* "#utility.yul":2747:2754   */
              dup5
                /* "#utility.yul":2743:2766   */
              sub
                /* "#utility.yul":2739:2771   */
              slt
                /* "#utility.yul":2736:2788   */
              iszero
              tag_528
              jumpi
                /* "#utility.yul":2784:2785   */
              0x00
                /* "#utility.yul":2781:2782   */
              dup1
                /* "#utility.yul":2774:2786   */
              revert
                /* "#utility.yul":2736:2788   */
            tag_528:
              pop
                /* "#utility.yul":2807:2830   */
              calldataload
              swap2
                /* "#utility.yul":2656:2836   */
              swap1
              pop
              jump	// out
                /* "#utility.yul":3431:3746   */
            tag_78:
                /* "#utility.yul":3499:3505   */
              0x00
                /* "#utility.yul":3507:3513   */
              dup1
                /* "#utility.yul":3560:3562   */
              0x40
                /* "#utility.yul":3548:3557   */
              dup4
                /* "#utility.yul":3539:3546   */
              dup6
                /* "#utility.yul":3535:3558   */
              sub
                /* "#utility.yul":3531:3563   */
              slt
                /* "#utility.yul":3528:3580   */
              iszero
              tag_534
              jumpi
                /* "#utility.yul":3576:3577   */
              0x00
                /* "#utility.yul":3573:3574   */
              dup1
                /* "#utility.yul":3566:3578   */
              revert
                /* "#utility.yul":3528:3580   */
            tag_534:
                /* "#utility.yul":3612:3621   */
              dup3
                /* "#utility.yul":3599:3622   */
              calldataload
                /* "#utility.yul":3589:3622   */
              swap2
              pop
                /* "#utility.yul":3672:3674   */
              0x20
                /* "#utility.yul":3661:3670   */
              dup4
                /* "#utility.yul":3657:3675   */
              add
                /* "#utility.yul":3644:3676   */
              calldataload
                /* "#utility.yul":3685:3716   */
              tag_535
                /* "#utility.yul":3710:3715   */
              dup2
                /* "#utility.yul":3685:3716   */
              tag_498
              jump	// in
            tag_535:
                /* "#utility.yul":3735:3740   */
              dup1
                /* "#utility.yul":3725:3740   */
              swap2
              pop
              pop
                /* "#utility.yul":3431:3746   */
              swap3
              pop
              swap3
              swap1
              pop
              jump	// out
                /* "#utility.yul":3751:4424   */
            tag_86:
                /* "#utility.yul":3937:3939   */
              0x20
                /* "#utility.yul":3989:4010   */
              dup1
              dup3
              mstore
                /* "#utility.yul":4059:4072   */
              dup3
              mload
                /* "#utility.yul":3962:3980   */
              dup3
              dup3
              add
                /* "#utility.yul":4081:4103   */
              dup2
              swap1
              mstore
                /* "#utility.yul":3908:3912   */
              0x00
              swap2
                /* "#utility.yul":3937:3939   */
              swap1
                /* "#utility.yul":4160:4175   */
              dup5
              dup3
              add
              swap1
                /* "#utility.yul":4134:4136   */
              0x40
                /* "#utility.yul":4119:4137   */
              dup6
              add
              swap1
                /* "#utility.yul":3908:3912   */
              dup5
                /* "#utility.yul":4203:4398   */
            tag_537:
                /* "#utility.yul":4217:4223   */
              dup2
                /* "#utility.yul":4214:4215   */
              dup2
                /* "#utility.yul":4211:4224   */
              lt
                /* "#utility.yul":4203:4398   */
              iszero
              tag_539
              jumpi
                /* "#utility.yul":4282:4295   */
              dup4
              mload
              sub(shl(0xa0, 0x01), 0x01)
                /* "#utility.yul":4278:4317   */
              and
                /* "#utility.yul":4266:4318   */
              dup4
              mstore
                /* "#utility.yul":4373:4388   */
              swap3
              dup5
              add
              swap3
                /* "#utility.yul":4338:4350   */
              swap2
              dup5
              add
              swap2
                /* "#utility.yul":4314:4315   */
              0x01
                /* "#utility.yul":4232:4241   */
              add
                /* "#utility.yul":4203:4398   */
              jump(tag_537)
            tag_539:
              pop
                /* "#utility.yul":4415:4418   */
              swap1
              swap7
                /* "#utility.yul":3751:4424   */
              swap6
              pop
              pop
              pop
              pop
              pop
              pop
              jump	// out
                /* "#utility.yul":5157:5580   */
            tag_102:
                /* "#utility.yul":5260:5266   */
              0x00
                /* "#utility.yul":5268:5274   */
              dup1
                /* "#utility.yul":5321:5323   */
              0x40
                /* "#utility.yul":5309:5318   */
              dup4
                /* "#utility.yul":5300:5307   */
              dup6
                /* "#utility.yul":5296:5319   */
              sub
                /* "#utility.yul":5292:5324   */
              slt
                /* "#utility.yul":5289:5341   */
              iszero
              tag_546
              jumpi
                /* "#utility.yul":5337:5338   */
              0x00
                /* "#utility.yul":5334:5335   */
              dup1
                /* "#utility.yul":5327:5339   */
              revert
                /* "#utility.yul":5289:5341   */
            tag_546:
                /* "#utility.yul":5376:5385   */
              dup3
                /* "#utility.yul":5363:5386   */
              calldataload
                /* "#utility.yul":5395:5426   */
              tag_547
                /* "#utility.yul":5420:5425   */
              dup2
                /* "#utility.yul":5395:5426   */
              tag_498
              jump	// in
            tag_547:
                /* "#utility.yul":5445:5450   */
              swap2
              pop
                /* "#utility.yul":5502:5504   */
              0x20
                /* "#utility.yul":5487:5505   */
              dup4
              add
                /* "#utility.yul":5474:5506   */
              calldataload
                /* "#utility.yul":5515:5548   */
              tag_535
                /* "#utility.yul":5474:5506   */
              dup2
                /* "#utility.yul":5515:5548   */
              tag_498
              jump	// in
                /* "#utility.yul":6896:7367   */
            tag_129:
                /* "#utility.yul":6988:6994   */
              0x00
                /* "#utility.yul":6996:7002   */
              dup1
                /* "#utility.yul":7004:7010   */
              0x00
                /* "#utility.yul":7057:7059   */
              0x60
                /* "#utility.yul":7045:7054   */
              dup5
                /* "#utility.yul":7036:7043   */
              dup7
                /* "#utility.yul":7032:7055   */
              sub
                /* "#utility.yul":7028:7060   */
              slt
                /* "#utility.yul":7025:7077   */
              iszero
              tag_556
              jumpi
                /* "#utility.yul":7073:7074   */
              0x00
                /* "#utility.yul":7070:7071   */
              dup1
                /* "#utility.yul":7063:7075   */
              revert
                /* "#utility.yul":7025:7077   */
            tag_556:
                /* "#utility.yul":7112:7121   */
              dup4
                /* "#utility.yul":7099:7122   */
              calldataload
                /* "#utility.yul":7131:7162   */
              tag_557
                /* "#utility.yul":7156:7161   */
              dup2
                /* "#utility.yul":7131:7162   */
              tag_498
              jump	// in
            tag_557:
                /* "#utility.yul":7181:7186   */
              swap3
              pop
                /* "#utility.yul":7238:7240   */
              0x20
                /* "#utility.yul":7223:7241   */
              dup5
              add
                /* "#utility.yul":7210:7242   */
              calldataload
                /* "#utility.yul":7251:7284   */
              tag_558
                /* "#utility.yul":7210:7242   */
              dup2
                /* "#utility.yul":7251:7284   */
              tag_498
              jump	// in
            tag_558:
                /* "#utility.yul":6896:7367   */
              swap3
              swap6
                /* "#utility.yul":7303:7310   */
              swap3
              swap5
              pop
              pop
              pop
                /* "#utility.yul":7357:7359   */
              0x40
                /* "#utility.yul":7342:7360   */
              swap2
              swap1
              swap2
              add
                /* "#utility.yul":7329:7361   */
              calldataload
              swap1
                /* "#utility.yul":6896:7367   */
              jump	// out
                /* "#utility.yul":8120:8617   */
            tag_152:
                /* "#utility.yul":8232:8238   */
              0x00
                /* "#utility.yul":8240:8246   */
              dup1
                /* "#utility.yul":8248:8254   */
              0x00
                /* "#utility.yul":8301:8303   */
              0x60
                /* "#utility.yul":8289:8298   */
              dup5
                /* "#utility.yul":8280:8287   */
              dup7
                /* "#utility.yul":8276:8299   */
              sub
                /* "#utility.yul":8272:8304   */
              slt
                /* "#utility.yul":8269:8321   */
              iszero
              tag_567
              jumpi
                /* "#utility.yul":8317:8318   */
              0x00
                /* "#utility.yul":8314:8315   */
              dup1
                /* "#utility.yul":8307:8319   */
              revert
                /* "#utility.yul":8269:8321   */
            tag_567:
                /* "#utility.yul":8356:8365   */
              dup4
                /* "#utility.yul":8343:8366   */
              calldataload
                /* "#utility.yul":8375:8406   */
              tag_568
                /* "#utility.yul":8400:8405   */
              dup2
                /* "#utility.yul":8375:8406   */
              tag_498
              jump	// in
            tag_568:
                /* "#utility.yul":8425:8430   */
              swap3
              pop
                /* "#utility.yul":8482:8484   */
              0x20
                /* "#utility.yul":8467:8485   */
              dup5
              add
                /* "#utility.yul":8454:8486   */
              calldataload
                /* "#utility.yul":8495:8528   */
              tag_569
                /* "#utility.yul":8454:8486   */
              dup2
                /* "#utility.yul":8495:8528   */
              tag_498
              jump	// in
            tag_569:
                /* "#utility.yul":8547:8554   */
              swap2
              pop
                /* "#utility.yul":8573:8611   */
              tag_570
                /* "#utility.yul":8607:8609   */
              0x40
                /* "#utility.yul":8592:8610   */
              dup6
              add
                /* "#utility.yul":8573:8611   */
              tag_497
              jump	// in
            tag_570:
                /* "#utility.yul":8563:8611   */
              swap1
              pop
                /* "#utility.yul":8120:8617   */
              swap3
              pop
              swap3
              pop
              swap3
              jump	// out
                /* "#utility.yul":9045:9381   */
            tag_160:
                /* "#utility.yul":9128:9134   */
              0x00
                /* "#utility.yul":9136:9142   */
              dup1
                /* "#utility.yul":9189:9191   */
              0x40
                /* "#utility.yul":9177:9186   */
              dup4
                /* "#utility.yul":9168:9175   */
              dup6
                /* "#utility.yul":9164:9187   */
              sub
                /* "#utility.yul":9160:9192   */
              slt
                /* "#utility.yul":9157:9209   */
              iszero
              tag_576
              jumpi
                /* "#utility.yul":9205:9206   */
              0x00
                /* "#utility.yul":9202:9203   */
              dup1
                /* "#utility.yul":9195:9207   */
              revert
                /* "#utility.yul":9157:9209   */
            tag_576:
                /* "#utility.yul":9244:9253   */
              dup3
                /* "#utility.yul":9231:9254   */
              calldataload
                /* "#utility.yul":9263:9294   */
              tag_577
                /* "#utility.yul":9288:9293   */
              dup2
                /* "#utility.yul":9263:9294   */
              tag_498
              jump	// in
            tag_577:
                /* "#utility.yul":9313:9318   */
              swap2
              pop
                /* "#utility.yul":9337:9375   */
              tag_578
                /* "#utility.yul":9371:9373   */
              0x20
                /* "#utility.yul":9356:9374   */
              dup5
              add
                /* "#utility.yul":9337:9375   */
              tag_497
              jump	// in
            tag_578:
                /* "#utility.yul":9327:9375   */
              swap1
              pop
                /* "#utility.yul":9045:9381   */
              swap3
              pop
              swap3
              swap1
              pop
              jump	// out
                /* "#utility.yul":9585:9712   */
            tag_197:
                /* "#utility.yul":9646:9656   */
              0x4e487b71
                /* "#utility.yul":9641:9644   */
              0xe0
                /* "#utility.yul":9637:9657   */
              shl
                /* "#utility.yul":9634:9635   */
              0x00
                /* "#utility.yul":9627:9658   */
              mstore
                /* "#utility.yul":9677:9681   */
              0x32
                /* "#utility.yul":9674:9675   */
              0x04
                /* "#utility.yul":9667:9682   */
              mstore
                /* "#utility.yul":9701:9705   */
              0x24
                /* "#utility.yul":9698:9699   */
              0x00
                /* "#utility.yul":9691:9706   */
              revert
                /* "#utility.yul":9717:9901   */
            tag_203:
                /* "#utility.yul":9787:9793   */
              0x00
                /* "#utility.yul":9840:9842   */
              0x20
                /* "#utility.yul":9828:9837   */
              dup3
                /* "#utility.yul":9819:9826   */
              dup5
                /* "#utility.yul":9815:9838   */
              sub
                /* "#utility.yul":9811:9843   */
              slt
                /* "#utility.yul":9808:9860   */
              iszero
              tag_582
              jumpi
                /* "#utility.yul":9856:9857   */
              0x00
                /* "#utility.yul":9853:9854   */
              dup1
                /* "#utility.yul":9846:9858   */
              revert
                /* "#utility.yul":9808:9860   */
            tag_582:
              pop
                /* "#utility.yul":9879:9895   */
              mload
              swap2
                /* "#utility.yul":9717:9901   */
              swap1
              pop
              jump	// out
                /* "#utility.yul":9906:10033   */
            tag_499:
                /* "#utility.yul":9967:9977   */
              0x4e487b71
                /* "#utility.yul":9962:9965   */
              0xe0
                /* "#utility.yul":9958:9978   */
              shl
                /* "#utility.yul":9955:9956   */
              0x00
                /* "#utility.yul":9948:9979   */
              mstore
                /* "#utility.yul":9998:10002   */
              0x11
                /* "#utility.yul":9995:9996   */
              0x04
                /* "#utility.yul":9988:10003   */
              mstore
                /* "#utility.yul":10022:10026   */
              0x24
                /* "#utility.yul":10019:10020   */
              0x00
                /* "#utility.yul":10012:10027   */
              revert
                /* "#utility.yul":10038:10460   */
            tag_500:
                /* "#utility.yul":10127:10128   */
              0x01
                /* "#utility.yul":10170:10175   */
              dup2
                /* "#utility.yul":10127:10128   */
              dup2
                /* "#utility.yul":10184:10454   */
            tag_585:
                /* "#utility.yul":10205:10212   */
              dup1
                /* "#utility.yul":10195:10203   */
              dup6
                /* "#utility.yul":10192:10213   */
              gt
                /* "#utility.yul":10184:10454   */
              iszero
              tag_587
              jumpi
                /* "#utility.yul":10264:10268   */
              dup2
                /* "#utility.yul":10260:10261   */
              0x00
                /* "#utility.yul":10256:10262   */
              not
                /* "#utility.yul":10252:10269   */
              div
                /* "#utility.yul":10246:10250   */
              dup3
                /* "#utility.yul":10243:10270   */
              gt
                /* "#utility.yul":10240:10293   */
              iszero
              tag_589
              jumpi
                /* "#utility.yul":10273:10291   */
              tag_589
              tag_499
              jump	// in
            tag_589:
                /* "#utility.yul":10323:10330   */
              dup1
                /* "#utility.yul":10313:10321   */
              dup6
                /* "#utility.yul":10309:10331   */
              and
                /* "#utility.yul":10306:10361   */
              iszero
              tag_590
              jumpi
                /* "#utility.yul":10343:10359   */
              swap2
              dup2
              mul
              swap2
                /* "#utility.yul":10306:10361   */
            tag_590:
                /* "#utility.yul":10422:10444   */
              swap4
              dup5
              shr
              swap4
                /* "#utility.yul":10382:10397   */
              swap1
              dup1
              mul
              swap1
                /* "#utility.yul":10184:10454   */
              jump(tag_585)
            tag_587:
                /* "#utility.yul":10188:10191   */
              pop
                /* "#utility.yul":10038:10460   */
              swap3
              pop
              swap3
              swap1
              pop
              jump	// out
                /* "#utility.yul":10465:11271   */
            tag_501:
                /* "#utility.yul":10514:10519   */
              0x00
                /* "#utility.yul":10544:10552   */
              dup3
                /* "#utility.yul":10534:10614   */
              tag_592
              jumpi
              pop
                /* "#utility.yul":10585:10586   */
              0x01
                /* "#utility.yul":10599:10604   */
              jump(tag_171)
                /* "#utility.yul":10534:10614   */
            tag_592:
                /* "#utility.yul":10633:10637   */
              dup2
                /* "#utility.yul":10623:10699   */
              tag_593
              jumpi
              pop
                /* "#utility.yul":10670:10671   */
              0x00
                /* "#utility.yul":10684:10689   */
              jump(tag_171)
                /* "#utility.yul":10623:10699   */
            tag_593:
                /* "#utility.yul":10715:10719   */
              dup2
                /* "#utility.yul":10733:10734   */
              0x01
                /* "#utility.yul":10728:10787   */
              dup2
              eq
              tag_595
              jumpi
                /* "#utility.yul":10801:10802   */
              0x02
                /* "#utility.yul":10796:10926   */
              dup2
              eq
              tag_596
              jumpi
                /* "#utility.yul":10708:10926   */
              jump(tag_594)
                /* "#utility.yul":10728:10787   */
            tag_595:
                /* "#utility.yul":10758:10759   */
              0x01
                /* "#utility.yul":10749:10759   */
              swap2
              pop
                /* "#utility.yul":10772:10777   */
              pop
              jump(tag_171)
                /* "#utility.yul":10796:10926   */
            tag_596:
                /* "#utility.yul":10833:10836   */
              0xff
                /* "#utility.yul":10823:10831   */
              dup5
                /* "#utility.yul":10820:10837   */
              gt
                /* "#utility.yul":10817:10860   */
              iszero
              tag_598
              jumpi
                /* "#utility.yul":10840:10858   */
              tag_598
              tag_499
              jump	// in
            tag_598:
              pop
              pop
                /* "#utility.yul":10896:10897   */
              0x01
                /* "#utility.yul":10882:10898   */
              dup3
              shl
                /* "#utility.yul":10911:10916   */
              jump(tag_171)
                /* "#utility.yul":10708:10926   */
            tag_594:
              pop
                /* "#utility.yul":11010:11012   */
              0x20
                /* "#utility.yul":11000:11008   */
              dup4
                /* "#utility.yul":10997:11013   */
              lt
                /* "#utility.yul":10991:10994   */
              0x0133
                /* "#utility.yul":10985:10989   */
              dup4
                /* "#utility.yul":10982:10995   */
              lt
                /* "#utility.yul":10978:11014   */
              and
                /* "#utility.yul":10972:10974   */
              0x4e
                /* "#utility.yul":10962:10970   */
              dup5
                /* "#utility.yul":10959:10975   */
              lt
                /* "#utility.yul":10954:10956   */
              0x0b
                /* "#utility.yul":10948:10952   */
              dup5
                /* "#utility.yul":10945:10957   */
              lt
                /* "#utility.yul":10941:10976   */
              and
                /* "#utility.yul":10938:11015   */
              or
                /* "#utility.yul":10935:11094   */
              iszero
              tag_599
              jumpi
              pop
                /* "#utility.yul":11047:11066   */
              dup2
              dup2
              exp
                /* "#utility.yul":11079:11084   */
              jump(tag_171)
                /* "#utility.yul":10935:11094   */
            tag_599:
                /* "#utility.yul":11126:11160   */
              tag_600
                /* "#utility.yul":11151:11159   */
              dup4
                /* "#utility.yul":11145:11149   */
              dup4
                /* "#utility.yul":11126:11160   */
              tag_500
              jump	// in
            tag_600:
                /* "#utility.yul":11196:11202   */
              dup1
                /* "#utility.yul":11192:11193   */
              0x00
                /* "#utility.yul":11188:11194   */
              not
                /* "#utility.yul":11184:11203   */
              div
                /* "#utility.yul":11175:11182   */
              dup3
                /* "#utility.yul":11172:11204   */
              gt
                /* "#utility.yul":11169:11227   */
              iszero
              tag_602
              jumpi
                /* "#utility.yul":11207:11225   */
              tag_602
              tag_499
              jump	// in
            tag_602:
                /* "#utility.yul":11245:11265   */
              mul
              swap4
                /* "#utility.yul":10465:11271   */
              swap3
              pop
              pop
              pop
              jump	// out
                /* "#utility.yul":11276:11416   */
            tag_208:
                /* "#utility.yul":11334:11339   */
              0x00
                /* "#utility.yul":11363:11410   */
              tag_384
                /* "#utility.yul":11404:11408   */
              0xff
                /* "#utility.yul":11394:11402   */
              dup5
                /* "#utility.yul":11390:11409   */
              and
                /* "#utility.yul":11384:11388   */
              dup4
                /* "#utility.yul":11363:11410   */
              tag_501
              jump	// in
                /* "#utility.yul":11421:11666   */
            tag_244:
                /* "#utility.yul":11500:11506   */
              0x00
                /* "#utility.yul":11508:11514   */
              dup1
                /* "#utility.yul":11561:11563   */
              0x40
                /* "#utility.yul":11549:11558   */
              dup4
                /* "#utility.yul":11540:11547   */
              dup6
                /* "#utility.yul":11536:11559   */
              sub
                /* "#utility.yul":11532:11564   */
              slt
                /* "#utility.yul":11529:11581   */
              iszero
              tag_606
              jumpi
                /* "#utility.yul":11577:11578   */
              0x00
                /* "#utility.yul":11574:11575   */
              dup1
                /* "#utility.yul":11567:11579   */
              revert
                /* "#utility.yul":11529:11581   */
            tag_606:
              pop
              pop
                /* "#utility.yul":11600:11616   */
              dup1
              mload
                /* "#utility.yul":11656:11658   */
              0x20
                /* "#utility.yul":11641:11659   */
              swap1
              swap2
              add
                /* "#utility.yul":11635:11660   */
              mload
                /* "#utility.yul":11600:11616   */
              swap1
              swap3
                /* "#utility.yul":11635:11660   */
              swap1
              swap2
              pop
                /* "#utility.yul":11421:11666   */
              jump	// out
                /* "#utility.yul":11671:11796   */
            tag_248:
                /* "#utility.yul":11736:11745   */
              dup1
              dup3
              add
                /* "#utility.yul":11757:11767   */
              dup1
              dup3
              gt
                /* "#utility.yul":11754:11790   */
              iszero
              tag_171
              jumpi
                /* "#utility.yul":11770:11788   */
              tag_171
              tag_499
              jump	// in
                /* "#utility.yul":11801:11998   */
            tag_265:
              sub(shl(0x80, 0x01), 0x01)
                /* "#utility.yul":11923:11933   */
              dup2
              dup2
              and
                /* "#utility.yul":11935:11945   */
              dup4
              dup3
              and
                /* "#utility.yul":11919:11946   */
              add
              swap1
                /* "#utility.yul":11958:11969   */
              dup1
              dup3
              gt
                /* "#utility.yul":11955:11992   */
              iszero
              tag_612
              jumpi
                /* "#utility.yul":11972:11990   */
              tag_612
              tag_499
              jump	// in
            tag_612:
                /* "#utility.yul":11955:11992   */
              pop
                /* "#utility.yul":11801:11998   */
              swap3
              swap2
              pop
              pop
              jump	// out
                /* "#utility.yul":12003:12131   */
            tag_268:
                /* "#utility.yul":12070:12079   */
              dup2
              dup2
              sub
                /* "#utility.yul":12091:12102   */
              dup2
              dup2
              gt
                /* "#utility.yul":12088:12125   */
              iszero
              tag_171
              jumpi
                /* "#utility.yul":12105:12123   */
              tag_171
              tag_499
              jump	// in
                /* "#utility.yul":12136:12353   */
            tag_281:
                /* "#utility.yul":12176:12177   */
              0x00
                /* "#utility.yul":12202:12203   */
              dup3
                /* "#utility.yul":12192:12324   */
              tag_617
              jumpi
                /* "#utility.yul":12246:12256   */
              0x4e487b71
                /* "#utility.yul":12241:12244   */
              0xe0
                /* "#utility.yul":12237:12257   */
              shl
                /* "#utility.yul":12234:12235   */
              0x00
                /* "#utility.yul":12227:12258   */
              mstore
                /* "#utility.yul":12281:12285   */
              0x12
                /* "#utility.yul":12278:12279   */
              0x04
                /* "#utility.yul":12271:12286   */
              mstore
                /* "#utility.yul":12309:12313   */
              0x24
                /* "#utility.yul":12306:12307   */
              0x00
                /* "#utility.yul":12299:12314   */
              revert
                /* "#utility.yul":12192:12324   */
            tag_617:
              pop
                /* "#utility.yul":12338:12347   */
              div
              swap1
                /* "#utility.yul":12136:12353   */
              jump	// out
                /* "#utility.yul":12358:12631   */
            tag_331:
                /* "#utility.yul":12426:12432   */
              0x00
                /* "#utility.yul":12479:12481   */
              0x20
                /* "#utility.yul":12467:12476   */
              dup3
                /* "#utility.yul":12458:12465   */
              dup5
                /* "#utility.yul":12454:12477   */
              sub
                /* "#utility.yul":12450:12482   */
              slt
                /* "#utility.yul":12447:12499   */
              iszero
              tag_619
              jumpi
                /* "#utility.yul":12495:12496   */
              0x00
                /* "#utility.yul":12492:12493   */
              dup1
                /* "#utility.yul":12485:12497   */
              revert
                /* "#utility.yul":12447:12499   */
            tag_619:
                /* "#utility.yul":12527:12536   */
              dup2
                /* "#utility.yul":12521:12537   */
              mload
                /* "#utility.yul":12577:12581   */
              0xff
                /* "#utility.yul":12570:12575   */
              dup2
                /* "#utility.yul":12566:12582   */
              and
                /* "#utility.yul":12559:12564   */
              dup2
                /* "#utility.yul":12556:12583   */
              eq
                /* "#utility.yul":12546:12601   */
              tag_384
              jumpi
                /* "#utility.yul":12597:12598   */
              0x00
                /* "#utility.yul":12594:12595   */
              dup1
                /* "#utility.yul":12587:12599   */
              revert
                /* "#utility.yul":13223:13391   */
            tag_385:
                /* "#utility.yul":13296:13305   */
              dup1
              dup3
              mul
                /* "#utility.yul":13327:13336   */
              dup2
              iszero
                /* "#utility.yul":13344:13359   */
              dup3
              dup3
              div
                /* "#utility.yul":13338:13360   */
              dup5
              eq
                /* "#utility.yul":13324:13361   */
              or
                /* "#utility.yul":13314:13385   */
              tag_171
              jumpi
                /* "#utility.yul":13365:13383   */
              tag_171
              tag_499
              jump	// in
                /* "#utility.yul":13396:13663   */
            tag_397:
                /* "#utility.yul":13482:13488   */
              0x00
                /* "#utility.yul":13535:13537   */
              0x20
                /* "#utility.yul":13523:13532   */
              dup3
                /* "#utility.yul":13514:13521   */
              dup5
                /* "#utility.yul":13510:13533   */
              sub
                /* "#utility.yul":13506:13538   */
              slt
                /* "#utility.yul":13503:13555   */
              iszero
              tag_628
              jumpi
                /* "#utility.yul":13551:13552   */
              0x00
                /* "#utility.yul":13548:13549   */
              dup1
                /* "#utility.yul":13541:13553   */
              revert
                /* "#utility.yul":13503:13555   */
            tag_628:
                /* "#utility.yul":13583:13592   */
              dup2
                /* "#utility.yul":13577:13593   */
              mload
                /* "#utility.yul":13602:13633   */
              tag_384
                /* "#utility.yul":13627:13632   */
              dup2
                /* "#utility.yul":13602:13633   */
              tag_498
              jump	// in
                /* "#utility.yul":14080:14403   */
            tag_502:
                /* "#utility.yul":14122:14125   */
              0x00
                /* "#utility.yul":14160:14165   */
              dup2
                /* "#utility.yul":14154:14166   */
              mload
                /* "#utility.yul":14184:14185   */
              0x00
                /* "#utility.yul":14194:14322   */
            tag_633:
                /* "#utility.yul":14208:14214   */
              dup2
                /* "#utility.yul":14205:14206   */
              dup2
                /* "#utility.yul":14202:14215   */
              lt
                /* "#utility.yul":14194:14322   */
              iszero
              tag_635
              jumpi
                /* "#utility.yul":14305:14309   */
              0x20
                /* "#utility.yul":14290:14303   */
              dup2
              dup6
              add
                /* "#utility.yul":14286:14310   */
              dup2
              add
                /* "#utility.yul":14280:14311   */
              mload
                /* "#utility.yul":14267:14278   */
              dup7
              dup4
              add
                /* "#utility.yul":14260:14312   */
              mstore
                /* "#utility.yul":14223:14235   */
              add
                /* "#utility.yul":14194:14322   */
              jump(tag_633)
            tag_635:
              pop
                /* "#utility.yul":14377:14378   */
              0x00
                /* "#utility.yul":14341:14357   */
              swap4
              add
                /* "#utility.yul":14366:14379   */
              swap3
              dup4
              mstore
              pop
                /* "#utility.yul":14341:14357   */
              swap1
              swap2
                /* "#utility.yul":14080:14403   */
              swap1
              pop
              jump	// out
                /* "#utility.yul":14408:15003   */
            tag_471:
                /* "#utility.yul":14819:14844   */
              0x416363657373436f6e74726f6c3a206163636f756e7420000000000000000000
                /* "#utility.yul":14814:14817   */
              dup2
                /* "#utility.yul":14807:14845   */
              mstore
                /* "#utility.yul":14789:14792   */
              0x00
                /* "#utility.yul":14864:14903   */
              tag_637
                /* "#utility.yul":14899:14901   */
              0x17
                /* "#utility.yul":14894:14897   */
              dup4
                /* "#utility.yul":14890:14902   */
              add
                /* "#utility.yul":14882:14888   */
              dup6
                /* "#utility.yul":14864:14903   */
              tag_502
              jump	// in
            tag_637:
              shl(0x7d, 0x01034b99036b4b9b9b4b733903937b6329)
                /* "#utility.yul":14919:14921   */
              dup2
                /* "#utility.yul":14912:14943   */
              mstore
                /* "#utility.yul":14959:14997   */
              tag_638
                /* "#utility.yul":14993:14995   */
              0x11
                /* "#utility.yul":14989:14991   */
              dup3
                /* "#utility.yul":14985:14996   */
              add
                /* "#utility.yul":14977:14983   */
              dup6
                /* "#utility.yul":14959:14997   */
              tag_502
              jump	// in
            tag_638:
                /* "#utility.yul":14952:14997   */
              swap6
                /* "#utility.yul":14408:15003   */
              swap5
              pop
              pop
              pop
              pop
              pop
              jump	// out
                /* "#utility.yul":15008:15144   */
            tag_495:
                /* "#utility.yul":15047:15050   */
              0x00
                /* "#utility.yul":15075:15080   */
              dup2
                /* "#utility.yul":15065:15104   */
              tag_641
              jumpi
                /* "#utility.yul":15084:15102   */
              tag_641
              tag_499
              jump	// in
            tag_641:
              pop
              not(0x00)
                /* "#utility.yul":15120:15138   */
              add
              swap1
                /* "#utility.yul":15008:15144   */
              jump	// out

            auxdata: 0xa26469706673582212208ee3c6a2a299c0d36cd1023110467a91ec6d6b911f2cfbb91fc53c853ee95f2064736f6c63430008110033
        }
    }

    sub_1: assembly {
            /* "node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol":567:1290  contract ERC1967Proxy is Proxy, ERC1967Upgrade {... */
          mstore(0x40, 0x80)
            /* "node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol":958:1070  constructor(address _logic, bytes memory _data) payable {... */
          mload(0x40)
          sub(codesize, bytecodeSize)
          dup1
          bytecodeSize
          dup4
          codecopy
          dup2
          add
          0x40
          dup2
          swap1
          mstore
          tag_1
          swap2
          tag_2
          jump	// in
        tag_1:
            /* "node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol":1024:1063  _upgradeToAndCall(_logic, _data, false) */
          tag_5
            /* "node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol":1042:1048  _logic */
          dup3
            /* "node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol":1050:1055  _data */
          dup3
            /* "node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol":1057:1062  false */
          0x00
            /* "node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol":1024:1041  _upgradeToAndCall */
          tag_6
            /* "node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol":1024:1063  _upgradeToAndCall(_logic, _data, false) */
          jump	// in
        tag_5:
            /* "node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol":958:1070  constructor(address _logic, bytes memory _data) payable {... */
          pop
          pop
            /* "node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol":567:1290  contract ERC1967Proxy is Proxy, ERC1967Upgrade {... */
          jump(tag_50)
            /* "node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol":2109:2404  function _upgradeToAndCall(... */
        tag_6:
            /* "node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol":2247:2276  _upgradeTo(newImplementation) */
          tag_9
            /* "node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol":2258:2275  newImplementation */
          dup4
            /* "node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol":2247:2257  _upgradeTo */
          tag_10
            /* "node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol":2247:2276  _upgradeTo(newImplementation) */
          jump	// in
        tag_9:
            /* "node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol":2304:2305  0 */
          0x00
            /* "node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol":2290:2294  data */
          dup3
            /* "node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol":2290:2301  data.length */
          mload
            /* "node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol":2290:2305  data.length > 0 */
          gt
            /* "node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol":2290:2318  data.length > 0 || forceCall */
          dup1
          tag_11
          jumpi
          pop
            /* "node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol":2309:2318  forceCall */
          dup1
            /* "node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol":2290:2318  data.length > 0 || forceCall */
        tag_11:
            /* "node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol":2286:2398  if (data.length > 0 || forceCall) {... */
          iszero
          tag_12
          jumpi
            /* "node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol":2334:2387  Address.functionDelegateCall(newImplementation, data) */
          tag_13
            /* "node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol":2363:2380  newImplementation */
          dup4
            /* "node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol":2382:2386  data */
          dup4
            /* "node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol":2334:2362  Address.functionDelegateCall */
          or(tag_0_10, shl(0x20, tag_14))
            /* "node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol":2334:2387  Address.functionDelegateCall(newImplementation, data) */
          0x20
          shr
          jump	// in
        tag_13:
          pop
            /* "node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol":2286:2398  if (data.length > 0 || forceCall) {... */
        tag_12:
            /* "node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol":2109:2404  function _upgradeToAndCall(... */
          pop
          pop
          pop
          jump	// out
            /* "node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol":1823:1975  function _upgradeTo(address newImplementation) internal {... */
        tag_10:
            /* "node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol":1889:1926  _setImplementation(newImplementation) */
          tag_16
            /* "node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol":1908:1925  newImplementation */
          dup2
            /* "node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol":1889:1907  _setImplementation */
          tag_17
            /* "node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol":1889:1926  _setImplementation(newImplementation) */
          jump	// in
        tag_16:
            /* "node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol":1941:1968  Upgraded(newImplementation) */
          mload(0x40)
          sub(shl(0xa0, 0x01), 0x01)
          dup3
          and
          swap1
          0xbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b
          swap1
          0x00
          swap1
          log2
            /* "node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol":1823:1975  function _upgradeTo(address newImplementation) internal {... */
          pop
          jump	// out
            /* "node_modules/@openzeppelin/contracts/utils/Address.sol":6469:6667  function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {... */
        tag_14:
            /* "node_modules/@openzeppelin/contracts/utils/Address.sol":6552:6564  bytes memory */
          0x60
            /* "node_modules/@openzeppelin/contracts/utils/Address.sol":6583:6660  functionDelegateCall(target, data, "Address: low-level delegate call failed") */
          tag_19
            /* "node_modules/@openzeppelin/contracts/utils/Address.sol":6604:6610  target */
          dup4
            /* "node_modules/@openzeppelin/contracts/utils/Address.sol":6612:6616  data */
          dup4
            /* "node_modules/@openzeppelin/contracts/utils/Address.sol":6583:6660  functionDelegateCall(target, data, "Address: low-level delegate call failed") */
          mload(0x40)
          dup1
          0x60
          add
          0x40
          mstore
          dup1
          0x27
          dup2
          mstore
          0x20
          add
          data_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398
          0x27
          swap2
          codecopy
            /* "node_modules/@openzeppelin/contracts/utils/Address.sol":6583:6603  functionDelegateCall */
          tag_20
            /* "node_modules/@openzeppelin/contracts/utils/Address.sol":6583:6660  functionDelegateCall(target, data, "Address: low-level delegate call failed") */
          jump	// in
        tag_19:
            /* "node_modules/@openzeppelin/contracts/utils/Address.sol":6576:6660  return functionDelegateCall(target, data, "Address: low-level delegate call failed") */
          swap4
            /* "node_modules/@openzeppelin/contracts/utils/Address.sol":6469:6667  function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {... */
          swap3
          pop
          pop
          pop
          jump	// out
            /* "node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol":1458:1717  function _setImplementation(address newImplementation) private {... */
        tag_17:
            /* "node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol":1539:1576  Address.isContract(newImplementation) */
          tag_22
            /* "node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol":1558:1575  newImplementation */
          dup2
            /* "node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol":1539:1557  Address.isContract */
          or(tag_0_11, shl(0x20, tag_23))
            /* "node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol":1539:1576  Address.isContract(newImplementation) */
          0x20
          shr
          jump	// in
        tag_22:
            /* "node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol":1531:1626  require(Address.isContract(newImplementation), "ERC1967: new implementation is not a contract") */
          tag_24
          jumpi
          0x00
          dup1
          revert
        tag_24:
            /* "node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol":1693:1710  newImplementation */
          dup1
            /* "node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol":1636:1684  StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT) */
          tag_25
            /* "node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol":1082:1148  0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc */
          0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
            /* "node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol":1663:1683  _IMPLEMENTATION_SLOT */
          0x00
          shl
            /* "node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol":1636:1662  StorageSlot.getAddressSlot */
          or(tag_0_12, shl(0x20, tag_26))
            /* "node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol":1636:1684  StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT) */
          0x20
          shr
          jump	// in
        tag_25:
            /* "node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol":1636:1710  StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation */
          dup1
          sload
          not(sub(shl(0xa0, 0x01), 0x01))
          and
          sub(shl(0xa0, 0x01), 0x01)
          swap3
          swap1
          swap3
          and
          swap2
          swap1
          swap2
          or
          swap1
          sstore
          pop
            /* "node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol":1458:1717  function _setImplementation(address newImplementation) private {... */
          jump	// out
            /* "node_modules/@openzeppelin/contracts/utils/Address.sol":6853:7178  function functionDelegateCall(... */
        tag_20:
            /* "node_modules/@openzeppelin/contracts/utils/Address.sol":6994:7006  bytes memory */
          0x60
            /* "node_modules/@openzeppelin/contracts/utils/Address.sol":7019:7031  bool success */
          0x00
            /* "node_modules/@openzeppelin/contracts/utils/Address.sol":7033:7056  bytes memory returndata */
          dup1
            /* "node_modules/@openzeppelin/contracts/utils/Address.sol":7060:7066  target */
          dup6
          sub(shl(0xa0, 0x01), 0x01)
            /* "node_modules/@openzeppelin/contracts/utils/Address.sol":7060:7079  target.delegatecall */
          and
            /* "node_modules/@openzeppelin/contracts/utils/Address.sol":7080:7084  data */
          dup6
            /* "node_modules/@openzeppelin/contracts/utils/Address.sol":7060:7085  target.delegatecall(data) */
          mload(0x40)
          tag_28
          swap2
          swap1
          tag_29
          jump	// in
        tag_28:
          0x00
          mload(0x40)
          dup1
          dup4
          sub
          dup2
          dup6
          gas
          delegatecall
          swap2
          pop
          pop
          returndatasize
          dup1
          0x00
          dup2
          eq
          tag_32
          jumpi
          mload(0x40)
          swap2
          pop
          and(add(returndatasize, 0x3f), not(0x1f))
          dup3
          add
          0x40
          mstore
          returndatasize
          dup3
          mstore
          returndatasize
          0x00
          0x20
          dup5
          add
          returndatacopy
          jump(tag_31)
        tag_32:
          0x60
          swap2
          pop
        tag_31:
          pop
            /* "node_modules/@openzeppelin/contracts/utils/Address.sol":7018:7085  (bool success, bytes memory returndata) = target.delegatecall(data) */
          swap1
          swap3
          pop
          swap1
          pop
            /* "node_modules/@openzeppelin/contracts/utils/Address.sol":7102:7171  verifyCallResultFromTarget(target, success, returndata, errorMessage) */
          tag_33
            /* "node_modules/@openzeppelin/contracts/utils/Address.sol":7129:7135  target */
          dup7
            /* "node_modules/@openzeppelin/contracts/utils/Address.sol":7018:7085  (bool success, bytes memory returndata) = target.delegatecall(data) */
          dup4
          dup4
            /* "node_modules/@openzeppelin/contracts/utils/Address.sol":7158:7170  errorMessage */
          dup8
            /* "node_modules/@openzeppelin/contracts/utils/Address.sol":7102:7128  verifyCallResultFromTarget */
          tag_34
            /* "node_modules/@openzeppelin/contracts/utils/Address.sol":7102:7171  verifyCallResultFromTarget(target, success, returndata, errorMessage) */
          jump	// in
        tag_33:
            /* "node_modules/@openzeppelin/contracts/utils/Address.sol":7095:7171  return verifyCallResultFromTarget(target, success, returndata, errorMessage) */
          swap7
            /* "node_modules/@openzeppelin/contracts/utils/Address.sol":6853:7178  function functionDelegateCall(... */
          swap6
          pop
          pop
          pop
          pop
          pop
          pop
          jump	// out
            /* "node_modules/@openzeppelin/contracts/utils/Address.sol":1175:1495  function isContract(address account) internal view returns (bool) {... */
        tag_23:
          sub(shl(0xa0, 0x01), 0x01)
            /* "node_modules/@openzeppelin/contracts/utils/Address.sol":1465:1484  account.code.length */
          and
          extcodesize
            /* "node_modules/@openzeppelin/contracts/utils/Address.sol":1465:1488  account.code.length > 0 */
          iszero
          iszero
          swap1
            /* "node_modules/@openzeppelin/contracts/utils/Address.sol":1175:1495  function isContract(address account) internal view returns (bool) {... */
          jump	// out
            /* "node_modules/@openzeppelin/contracts/utils/StorageSlot.sol":1614:1804  function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {... */
        tag_26:
            /* "node_modules/@openzeppelin/contracts/utils/StorageSlot.sol":1784:1788  slot */
          swap1
            /* "node_modules/@openzeppelin/contracts/utils/StorageSlot.sol":1614:1804  function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {... */
          jump	// out
            /* "node_modules/@openzeppelin/contracts/utils/Address.sol":7466:8094  function verifyCallResultFromTarget(... */
        tag_34:
            /* "node_modules/@openzeppelin/contracts/utils/Address.sol":7646:7658  bytes memory */
          0x60
            /* "node_modules/@openzeppelin/contracts/utils/Address.sol":7674:7681  success */
          dup4
            /* "node_modules/@openzeppelin/contracts/utils/Address.sol":7670:8088  if (success) {... */
          iszero
          tag_38
          jumpi
            /* "node_modules/@openzeppelin/contracts/utils/Address.sol":7701:7711  returndata */
          dup3
            /* "node_modules/@openzeppelin/contracts/utils/Address.sol":7701:7718  returndata.length */
          mload
            /* "node_modules/@openzeppelin/contracts/utils/Address.sol":7722:7723  0 */
          0x00
            /* "node_modules/@openzeppelin/contracts/utils/Address.sol":7701:7723  returndata.length == 0 */
          sub
            /* "node_modules/@openzeppelin/contracts/utils/Address.sol":7697:7983  if (returndata.length == 0) {... */
          tag_41
          jumpi
          sub(shl(0xa0, 0x01), 0x01)
            /* "node_modules/@openzeppelin/contracts/utils/Address.sol":1465:1484  account.code.length */
          dup6
          and
          extcodesize
            /* "node_modules/@openzeppelin/contracts/utils/Address.sol":7908:7968  require(isContract(target), "Address: call to non-contract") */
          tag_41
          jumpi
          0x00
          dup1
          revert
        tag_41:
          pop
            /* "node_modules/@openzeppelin/contracts/utils/Address.sol":8003:8013  returndata */
          dup2
            /* "node_modules/@openzeppelin/contracts/utils/Address.sol":7996:8013  return returndata */
          jump(tag_43)
            /* "node_modules/@openzeppelin/contracts/utils/Address.sol":7670:8088  if (success) {... */
        tag_38:
            /* "node_modules/@openzeppelin/contracts/utils/Address.sol":8044:8077  _revert(returndata, errorMessage) */
          tag_43
            /* "node_modules/@openzeppelin/contracts/utils/Address.sol":8052:8062  returndata */
          dup4
            /* "node_modules/@openzeppelin/contracts/utils/Address.sol":8064:8076  errorMessage */
          dup4
            /* "node_modules/@openzeppelin/contracts/utils/Address.sol":8044:8051  _revert */
          tag_44
            /* "node_modules/@openzeppelin/contracts/utils/Address.sol":8044:8077  _revert(returndata, errorMessage) */
          jump	// in
        tag_43:
            /* "node_modules/@openzeppelin/contracts/utils/Address.sol":7466:8094  function verifyCallResultFromTarget(... */
          swap5
          swap4
          pop
          pop
          pop
          pop
          jump	// out
            /* "node_modules/@openzeppelin/contracts/utils/Address.sol":8616:9156  function _revert(bytes memory returndata, string memory errorMessage) private pure {... */
        tag_44:
            /* "node_modules/@openzeppelin/contracts/utils/Address.sol":8775:8792  returndata.length */
          dup2
          mload
            /* "node_modules/@openzeppelin/contracts/utils/Address.sol":8775:8796  returndata.length > 0 */
          iszero
            /* "node_modules/@openzeppelin/contracts/utils/Address.sol":8771:9150  if (returndata.length > 0) {... */
          tag_46
          jumpi
            /* "node_modules/@openzeppelin/contracts/utils/Address.sol":9003:9013  returndata */
          dup2
            /* "node_modules/@openzeppelin/contracts/utils/Address.sol":8997:9014  mload(returndata) */
          mload
            /* "node_modules/@openzeppelin/contracts/utils/Address.sol":9059:9074  returndata_size */
          dup1
            /* "node_modules/@openzeppelin/contracts/utils/Address.sol":9046:9056  returndata */
          dup4
            /* "node_modules/@openzeppelin/contracts/utils/Address.sol":9042:9044  32 */
          0x20
            /* "node_modules/@openzeppelin/contracts/utils/Address.sol":9038:9057  add(32, returndata) */
          add
            /* "node_modules/@openzeppelin/contracts/utils/Address.sol":9031:9075  revert(add(32, returndata), returndata_size) */
          revert
            /* "node_modules/@openzeppelin/contracts/utils/Address.sol":8771:9150  if (returndata.length > 0) {... */
        tag_46:
            /* "node_modules/@openzeppelin/contracts/utils/Address.sol":9119:9139  revert(errorMessage) */
          0x00
          dup1
          revert
            /* "#utility.yul":14:141   */
        tag_48:
            /* "#utility.yul":75:85   */
          0x4e487b71
            /* "#utility.yul":70:73   */
          0xe0
            /* "#utility.yul":66:86   */
          shl
            /* "#utility.yul":63:64   */
          0x00
            /* "#utility.yul":56:87   */
          mstore
            /* "#utility.yul":106:110   */
          0x41
            /* "#utility.yul":103:104   */
          0x04
            /* "#utility.yul":96:111   */
          mstore
            /* "#utility.yul":130:134   */
          0x24
            /* "#utility.yul":127:128   */
          0x00
            /* "#utility.yul":120:135   */
          revert
            /* "#utility.yul":146:396   */
        tag_49:
            /* "#utility.yul":231:232   */
          0x00
            /* "#utility.yul":241:354   */
        tag_53:
            /* "#utility.yul":255:261   */
          dup4
            /* "#utility.yul":252:253   */
          dup2
            /* "#utility.yul":249:262   */
          lt
            /* "#utility.yul":241:354   */
          iszero
          tag_55
          jumpi
            /* "#utility.yul":331:342   */
          dup2
          dup2
          add
            /* "#utility.yul":325:343   */
          mload
            /* "#utility.yul":312:323   */
          dup4
          dup3
          add
            /* "#utility.yul":305:344   */
          mstore
            /* "#utility.yul":277:279   */
          0x20
            /* "#utility.yul":270:280   */
          add
            /* "#utility.yul":241:354   */
          jump(tag_53)
        tag_55:
          pop
          pop
            /* "#utility.yul":388:389   */
          0x00
            /* "#utility.yul":370:386   */
          swap2
          add
            /* "#utility.yul":363:390   */
          mstore
            /* "#utility.yul":146:396   */
          jump	// out
            /* "#utility.yul":401:1464   */
        tag_2:
            /* "#utility.yul":489:495   */
          0x00
            /* "#utility.yul":497:503   */
          dup1
            /* "#utility.yul":550:552   */
          0x40
            /* "#utility.yul":538:547   */
          dup4
            /* "#utility.yul":529:536   */
          dup6
            /* "#utility.yul":525:548   */
          sub
            /* "#utility.yul":521:553   */
          slt
            /* "#utility.yul":518:570   */
          iszero
          tag_57
          jumpi
            /* "#utility.yul":566:567   */
          0x00
            /* "#utility.yul":563:564   */
          dup1
            /* "#utility.yul":556:568   */
          revert
            /* "#utility.yul":518:570   */
        tag_57:
            /* "#utility.yul":592:608   */
          dup3
          mload
          sub(shl(0xa0, 0x01), 0x01)
            /* "#utility.yul":637:668   */
          dup2
          and
            /* "#utility.yul":627:669   */
          dup2
          eq
            /* "#utility.yul":617:687   */
          tag_58
          jumpi
            /* "#utility.yul":683:684   */
          0x00
            /* "#utility.yul":680:681   */
          dup1
            /* "#utility.yul":673:685   */
          revert
            /* "#utility.yul":617:687   */
        tag_58:
            /* "#utility.yul":755:757   */
          0x20
            /* "#utility.yul":740:758   */
          dup5
          add
            /* "#utility.yul":734:759   */
          mload
            /* "#utility.yul":706:711   */
          swap1
          swap3
          pop
          sub(shl(0x40, 0x01), 0x01)
            /* "#utility.yul":808:822   */
          dup1
          dup3
          gt
            /* "#utility.yul":805:839   */
          iszero
          tag_59
          jumpi
            /* "#utility.yul":835:836   */
          0x00
            /* "#utility.yul":832:833   */
          dup1
            /* "#utility.yul":825:837   */
          revert
            /* "#utility.yul":805:839   */
        tag_59:
            /* "#utility.yul":873:879   */
          dup2
            /* "#utility.yul":862:871   */
          dup6
            /* "#utility.yul":858:880   */
          add
            /* "#utility.yul":848:880   */
          swap2
          pop
            /* "#utility.yul":918:925   */
          dup6
            /* "#utility.yul":911:915   */
          0x1f
            /* "#utility.yul":907:909   */
          dup4
            /* "#utility.yul":903:916   */
          add
            /* "#utility.yul":899:926   */
          slt
            /* "#utility.yul":889:944   */
          tag_60
          jumpi
            /* "#utility.yul":940:941   */
          0x00
            /* "#utility.yul":937:938   */
          dup1
            /* "#utility.yul":930:942   */
          revert
            /* "#utility.yul":889:944   */
        tag_60:
            /* "#utility.yul":969:971   */
          dup2
            /* "#utility.yul":963:972   */
          mload
            /* "#utility.yul":991:993   */
          dup2
            /* "#utility.yul":987:989   */
          dup2
            /* "#utility.yul":984:994   */
          gt
            /* "#utility.yul":981:1017   */
          iszero
          tag_62
          jumpi
            /* "#utility.yul":997:1015   */
          tag_62
          tag_48
          jump	// in
        tag_62:
            /* "#utility.yul":1072:1074   */
          0x40
            /* "#utility.yul":1066:1075   */
          mload
            /* "#utility.yul":1040:1042   */
          0x1f
            /* "#utility.yul":1126:1139   */
          dup3
          add
          not(0x1f)
            /* "#utility.yul":1122:1144   */
          swap1
          dup2
          and
            /* "#utility.yul":1146:1148   */
          0x3f
            /* "#utility.yul":1118:1149   */
          add
            /* "#utility.yul":1114:1154   */
          and
            /* "#utility.yul":1102:1155   */
          dup2
          add
          swap1
            /* "#utility.yul":1170:1188   */
          dup4
          dup3
          gt
            /* "#utility.yul":1190:1212   */
          dup2
          dup4
          lt
            /* "#utility.yul":1167:1213   */
          or
            /* "#utility.yul":1164:1236   */
          iszero
          tag_64
          jumpi
            /* "#utility.yul":1216:1234   */
          tag_64
          tag_48
          jump	// in
        tag_64:
            /* "#utility.yul":1256:1266   */
          dup2
            /* "#utility.yul":1252:1254   */
          0x40
            /* "#utility.yul":1245:1267   */
          mstore
            /* "#utility.yul":1291:1293   */
          dup3
            /* "#utility.yul":1283:1289   */
          dup2
            /* "#utility.yul":1276:1294   */
          mstore
            /* "#utility.yul":1331:1338   */
          dup9
            /* "#utility.yul":1326:1328   */
          0x20
            /* "#utility.yul":1321:1323   */
          dup5
            /* "#utility.yul":1317:1319   */
          dup8
            /* "#utility.yul":1313:1324   */
          add
            /* "#utility.yul":1309:1329   */
          add
            /* "#utility.yul":1306:1339   */
          gt
            /* "#utility.yul":1303:1356   */
          iszero
          tag_65
          jumpi
            /* "#utility.yul":1352:1353   */
          0x00
            /* "#utility.yul":1349:1350   */
          dup1
            /* "#utility.yul":1342:1354   */
          revert
            /* "#utility.yul":1303:1356   */
        tag_65:
            /* "#utility.yul":1365:1433   */
          tag_66
            /* "#utility.yul":1430:1432   */
          dup4
            /* "#utility.yul":1425:1427   */
          0x20
            /* "#utility.yul":1417:1423   */
          dup4
            /* "#utility.yul":1413:1428   */
          add
            /* "#utility.yul":1408:1410   */
          0x20
            /* "#utility.yul":1404:1406   */
          dup9
            /* "#utility.yul":1400:1411   */
          add
            /* "#utility.yul":1365:1433   */
          tag_49
          jump	// in
        tag_66:
            /* "#utility.yul":1452:1458   */
          dup1
            /* "#utility.yul":1442:1458   */
          swap6
          pop
          pop
          pop
          pop
          pop
          pop
            /* "#utility.yul":401:1464   */
          swap3
          pop
          swap3
          swap1
          pop
          jump	// out
            /* "#utility.yul":1469:1756   */
        tag_29:
            /* "#utility.yul":1598:1601   */
          0x00
            /* "#utility.yul":1636:1642   */
          dup3
            /* "#utility.yul":1630:1643   */
          mload
            /* "#utility.yul":1652:1718   */
          tag_68
            /* "#utility.yul":1711:1717   */
          dup2
            /* "#utility.yul":1706:1709   */
          dup5
            /* "#utility.yul":1699:1703   */
          0x20
            /* "#utility.yul":1691:1697   */
          dup8
            /* "#utility.yul":1687:1704   */
          add
            /* "#utility.yul":1652:1718   */
          tag_49
          jump	// in
        tag_68:
            /* "#utility.yul":1734:1750   */
          swap2
          swap1
          swap2
          add
          swap3
            /* "#utility.yul":1469:1756   */
          swap2
          pop
          pop
          jump	// out
        tag_50:
            /* "node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol":567:1290  contract ERC1967Proxy is Proxy, ERC1967Upgrade {... */
          dataSize(sub_0)
          dup1
          dataOffset(sub_0)
          0x00
          codecopy
          0x00
          return
        stop
        data_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398 416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564

        sub_0: assembly {
                /* "node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol":567:1290  contract ERC1967Proxy is Proxy, ERC1967Upgrade {... */
              mstore(0x40, 0x80)
              jumpi(tag_2, calldatasize)
                /* "node_modules/@openzeppelin/contracts/proxy/Proxy.sol":2898:2909  _fallback() */
              tag_5
                /* "node_modules/@openzeppelin/contracts/proxy/Proxy.sol":2898:2907  _fallback */
              tag_6
                /* "node_modules/@openzeppelin/contracts/proxy/Proxy.sol":2898:2909  _fallback() */
              jump	// in
            tag_5:
                /* "node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol":567:1290  contract ERC1967Proxy is Proxy, ERC1967Upgrade {... */
              stop
            tag_2:
                /* "node_modules/@openzeppelin/contracts/proxy/Proxy.sol":2675:2686  _fallback() */
              tag_5
                /* "node_modules/@openzeppelin/contracts/proxy/Proxy.sol":2322:2432  function _fallback() internal virtual {... */
            tag_6:
                /* "node_modules/@openzeppelin/contracts/proxy/Proxy.sol":2397:2425  _delegate(_implementation()) */
              tag_16
                /* "node_modules/@openzeppelin/contracts/proxy/Proxy.sol":2407:2424  _implementation() */
              tag_17
                /* "node_modules/@openzeppelin/contracts/proxy/Proxy.sol":2407:2422  _implementation */
              tag_18
                /* "node_modules/@openzeppelin/contracts/proxy/Proxy.sol":2407:2424  _implementation() */
              jump	// in
            tag_17:
                /* "node_modules/@openzeppelin/contracts/proxy/Proxy.sol":2397:2406  _delegate */
              tag_19
                /* "node_modules/@openzeppelin/contracts/proxy/Proxy.sol":2397:2425  _delegate(_implementation()) */
              jump	// in
            tag_16:
                /* "node_modules/@openzeppelin/contracts/proxy/Proxy.sol":2322:2432  function _fallback() internal virtual {... */
              jump	// out
                /* "node_modules/@openzeppelin/contracts/utils/Address.sol":6469:6667  function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {... */
            tag_10:
                /* "node_modules/@openzeppelin/contracts/utils/Address.sol":6552:6564  bytes memory */
              0x60
                /* "node_modules/@openzeppelin/contracts/utils/Address.sol":6583:6660  functionDelegateCall(target, data, "Address: low-level delegate call failed") */
              tag_21
                /* "node_modules/@openzeppelin/contracts/utils/Address.sol":6604:6610  target */
              dup4
                /* "node_modules/@openzeppelin/contracts/utils/Address.sol":6612:6616  data */
              dup4
                /* "node_modules/@openzeppelin/contracts/utils/Address.sol":6583:6660  functionDelegateCall(target, data, "Address: low-level delegate call failed") */
              mload(0x40)
              dup1
              0x60
              add
              0x40
              mstore
              dup1
              0x27
              dup2
              mstore
              0x20
              add
              data_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398
              0x27
              swap2
              codecopy
                /* "node_modules/@openzeppelin/contracts/utils/Address.sol":6583:6603  functionDelegateCall */
              tag_22
                /* "node_modules/@openzeppelin/contracts/utils/Address.sol":6583:6660  functionDelegateCall(target, data, "Address: low-level delegate call failed") */
              jump	// in
            tag_21:
                /* "node_modules/@openzeppelin/contracts/utils/Address.sol":6576:6660  return functionDelegateCall(target, data, "Address: low-level delegate call failed") */
              swap4
                /* "node_modules/@openzeppelin/contracts/utils/Address.sol":6469:6667  function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {... */
              swap3
              pop
              pop
              pop
              jump	// out
                /* "node_modules/@openzeppelin/contracts/utils/Address.sol":1175:1495  function isContract(address account) internal view returns (bool) {... */
            tag_11:
              sub(shl(0xa0, 0x01), 0x01)
                /* "node_modules/@openzeppelin/contracts/utils/Address.sol":1465:1484  account.code.length */
              and
              extcodesize
                /* "node_modules/@openzeppelin/contracts/utils/Address.sol":1465:1488  account.code.length > 0 */
              iszero
              iszero
              swap1
                /* "node_modules/@openzeppelin/contracts/utils/Address.sol":1175:1495  function isContract(address account) internal view returns (bool) {... */
              jump	// out
                /* "node_modules/@openzeppelin/contracts/utils/StorageSlot.sol":1614:1804  function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {... */
            tag_12:
                /* "node_modules/@openzeppelin/contracts/utils/StorageSlot.sol":1784:1788  slot */
              swap1
                /* "node_modules/@openzeppelin/contracts/utils/StorageSlot.sol":1614:1804  function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {... */
              jump	// out
                /* "node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol":1148:1288  function _implementation() internal view virtual override returns (address impl) {... */
            tag_18:
                /* "node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol":1215:1227  address impl */
              0x00
                /* "node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol":1246:1281  ERC1967Upgrade._getImplementation() */
              tag_27
                /* "node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol":1082:1148  0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc */
              0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
                /* "node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol":1306:1360  StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value */
              sload
              sub(shl(0xa0, 0x01), 0x01)
              and
              swap1
                /* "node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol":1227:1367  function _getImplementation() internal view returns (address) {... */
              jump
                /* "node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol":1246:1281  ERC1967Upgrade._getImplementation() */
            tag_27:
                /* "node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol":1239:1281  return ERC1967Upgrade._getImplementation() */
              swap1
              pop
                /* "node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol":1148:1288  function _implementation() internal view virtual override returns (address impl) {... */
              swap1
              jump	// out
                /* "node_modules/@openzeppelin/contracts/proxy/Proxy.sol":948:1843  function _delegate(address implementation) internal virtual {... */
            tag_19:
                /* "node_modules/@openzeppelin/contracts/proxy/Proxy.sol":1286:1300  calldatasize() */
              calldatasize
                /* "node_modules/@openzeppelin/contracts/proxy/Proxy.sol":1283:1284  0 */
              0x00
                /* "node_modules/@openzeppelin/contracts/proxy/Proxy.sol":1280:1281  0 */
              dup1
                /* "node_modules/@openzeppelin/contracts/proxy/Proxy.sol":1267:1301  calldatacopy(0, 0, calldatasize()) */
              calldatacopy
                /* "node_modules/@openzeppelin/contracts/proxy/Proxy.sol":1500:1501  0 */
              0x00
                /* "node_modules/@openzeppelin/contracts/proxy/Proxy.sol":1497:1498  0 */
              dup1
                /* "node_modules/@openzeppelin/contracts/proxy/Proxy.sol":1481:1495  calldatasize() */
              calldatasize
                /* "node_modules/@openzeppelin/contracts/proxy/Proxy.sol":1478:1479  0 */
              0x00
                /* "node_modules/@openzeppelin/contracts/proxy/Proxy.sol":1462:1476  implementation */
              dup5
                /* "node_modules/@openzeppelin/contracts/proxy/Proxy.sol":1455:1460  gas() */
              gas
                /* "node_modules/@openzeppelin/contracts/proxy/Proxy.sol":1442:1502  delegatecall(gas(), implementation, 0, calldatasize(), 0, 0) */
              delegatecall
                /* "node_modules/@openzeppelin/contracts/proxy/Proxy.sol":1576:1592  returndatasize() */
              returndatasize
                /* "node_modules/@openzeppelin/contracts/proxy/Proxy.sol":1573:1574  0 */
              0x00
                /* "node_modules/@openzeppelin/contracts/proxy/Proxy.sol":1570:1571  0 */
              dup1
                /* "node_modules/@openzeppelin/contracts/proxy/Proxy.sol":1555:1593  returndatacopy(0, 0, returndatasize()) */
              returndatacopy
                /* "node_modules/@openzeppelin/contracts/proxy/Proxy.sol":1614:1620  result */
              dup1
                /* "node_modules/@openzeppelin/contracts/proxy/Proxy.sol":1681:1747  case 0 {... */
              dup1
              iszero
              tag_31
              jumpi
                /* "node_modules/@openzeppelin/contracts/proxy/Proxy.sol":1796:1812  returndatasize() */
              returndatasize
                /* "node_modules/@openzeppelin/contracts/proxy/Proxy.sol":1793:1794  0 */
              0x00
                /* "node_modules/@openzeppelin/contracts/proxy/Proxy.sol":1786:1813  return(0, returndatasize()) */
              return
                /* "node_modules/@openzeppelin/contracts/proxy/Proxy.sol":1681:1747  case 0 {... */
            tag_31:
                /* "node_modules/@openzeppelin/contracts/proxy/Proxy.sol":1716:1732  returndatasize() */
              returndatasize
                /* "node_modules/@openzeppelin/contracts/proxy/Proxy.sol":1713:1714  0 */
              0x00
                /* "node_modules/@openzeppelin/contracts/proxy/Proxy.sol":1706:1733  revert(0, returndatasize()) */
              revert
                /* "node_modules/@openzeppelin/contracts/utils/Address.sol":6853:7178  function functionDelegateCall(... */
            tag_22:
                /* "node_modules/@openzeppelin/contracts/utils/Address.sol":6994:7006  bytes memory */
              0x60
                /* "node_modules/@openzeppelin/contracts/utils/Address.sol":7019:7031  bool success */
              0x00
                /* "node_modules/@openzeppelin/contracts/utils/Address.sol":7033:7056  bytes memory returndata */
              dup1
                /* "node_modules/@openzeppelin/contracts/utils/Address.sol":7060:7066  target */
              dup6
              sub(shl(0xa0, 0x01), 0x01)
                /* "node_modules/@openzeppelin/contracts/utils/Address.sol":7060:7079  target.delegatecall */
              and
                /* "node_modules/@openzeppelin/contracts/utils/Address.sol":7080:7084  data */
              dup6
                /* "node_modules/@openzeppelin/contracts/utils/Address.sol":7060:7085  target.delegatecall(data) */
              mload(0x40)
              tag_33
              swap2
              swap1
              tag_34
              jump	// in
            tag_33:
              0x00
              mload(0x40)
              dup1
              dup4
              sub
              dup2
              dup6
              gas
              delegatecall
              swap2
              pop
              pop
              returndatasize
              dup1
              0x00
              dup2
              eq
              tag_37
              jumpi
              mload(0x40)
              swap2
              pop
              and(add(returndatasize, 0x3f), not(0x1f))
              dup3
              add
              0x40
              mstore
              returndatasize
              dup3
              mstore
              returndatasize
              0x00
              0x20
              dup5
              add
              returndatacopy
              jump(tag_36)
            tag_37:
              0x60
              swap2
              pop
            tag_36:
              pop
                /* "node_modules/@openzeppelin/contracts/utils/Address.sol":7018:7085  (bool success, bytes memory returndata) = target.delegatecall(data) */
              swap2
              pop
              swap2
              pop
                /* "node_modules/@openzeppelin/contracts/utils/Address.sol":7102:7171  verifyCallResultFromTarget(target, success, returndata, errorMessage) */
              tag_38
                /* "node_modules/@openzeppelin/contracts/utils/Address.sol":7129:7135  target */
              dup7
                /* "node_modules/@openzeppelin/contracts/utils/Address.sol":7137:7144  success */
              dup4
                /* "node_modules/@openzeppelin/contracts/utils/Address.sol":7146:7156  returndata */
              dup4
                /* "node_modules/@openzeppelin/contracts/utils/Address.sol":7158:7170  errorMessage */
              dup8
                /* "node_modules/@openzeppelin/contracts/utils/Address.sol":7102:7128  verifyCallResultFromTarget */
              tag_39
                /* "node_modules/@openzeppelin/contracts/utils/Address.sol":7102:7171  verifyCallResultFromTarget(target, success, returndata, errorMessage) */
              jump	// in
            tag_38:
                /* "node_modules/@openzeppelin/contracts/utils/Address.sol":7095:7171  return verifyCallResultFromTarget(target, success, returndata, errorMessage) */
              swap7
                /* "node_modules/@openzeppelin/contracts/utils/Address.sol":6853:7178  function functionDelegateCall(... */
              swap6
              pop
              pop
              pop
              pop
              pop
              pop
              jump	// out
                /* "node_modules/@openzeppelin/contracts/utils/Address.sol":7466:8094  function verifyCallResultFromTarget(... */
            tag_39:
                /* "node_modules/@openzeppelin/contracts/utils/Address.sol":7646:7658  bytes memory */
              0x60
                /* "node_modules/@openzeppelin/contracts/utils/Address.sol":7674:7681  success */
              dup4
                /* "node_modules/@openzeppelin/contracts/utils/Address.sol":7670:8088  if (success) {... */
              iszero
              tag_43
              jumpi
                /* "node_modules/@openzeppelin/contracts/utils/Address.sol":7701:7711  returndata */
              dup3
                /* "node_modules/@openzeppelin/contracts/utils/Address.sol":7701:7718  returndata.length */
              mload
                /* "node_modules/@openzeppelin/contracts/utils/Address.sol":7722:7723  0 */
              0x00
                /* "node_modules/@openzeppelin/contracts/utils/Address.sol":7701:7723  returndata.length == 0 */
              sub
                /* "node_modules/@openzeppelin/contracts/utils/Address.sol":7697:7983  if (returndata.length == 0) {... */
              tag_46
              jumpi
              sub(shl(0xa0, 0x01), 0x01)
                /* "node_modules/@openzeppelin/contracts/utils/Address.sol":1465:1484  account.code.length */
              dup6
              and
              extcodesize
                /* "node_modules/@openzeppelin/contracts/utils/Address.sol":7908:7968  require(isContract(target), "Address: call to non-contract") */
              tag_46
              jumpi
              0x00
              dup1
              revert
            tag_46:
              pop
                /* "node_modules/@openzeppelin/contracts/utils/Address.sol":8003:8013  returndata */
              dup2
                /* "node_modules/@openzeppelin/contracts/utils/Address.sol":7996:8013  return returndata */
              jump(tag_48)
                /* "node_modules/@openzeppelin/contracts/utils/Address.sol":7670:8088  if (success) {... */
            tag_43:
                /* "node_modules/@openzeppelin/contracts/utils/Address.sol":8044:8077  _revert(returndata, errorMessage) */
              tag_48
                /* "node_modules/@openzeppelin/contracts/utils/Address.sol":8052:8062  returndata */
              dup4
                /* "node_modules/@openzeppelin/contracts/utils/Address.sol":8064:8076  errorMessage */
              dup4
                /* "node_modules/@openzeppelin/contracts/utils/Address.sol":8044:8051  _revert */
              tag_49
                /* "node_modules/@openzeppelin/contracts/utils/Address.sol":8044:8077  _revert(returndata, errorMessage) */
              jump	// in
            tag_48:
                /* "node_modules/@openzeppelin/contracts/utils/Address.sol":7466:8094  function verifyCallResultFromTarget(... */
              swap5
              swap4
              pop
              pop
              pop
              pop
              jump	// out
                /* "node_modules/@openzeppelin/contracts/utils/Address.sol":8616:9156  function _revert(bytes memory returndata, string memory errorMessage) private pure {... */
            tag_49:
                /* "node_modules/@openzeppelin/contracts/utils/Address.sol":8775:8792  returndata.length */
              dup2
              mload
                /* "node_modules/@openzeppelin/contracts/utils/Address.sol":8775:8796  returndata.length > 0 */
              iszero
                /* "node_modules/@openzeppelin/contracts/utils/Address.sol":8771:9150  if (returndata.length > 0) {... */
              tag_51
              jumpi
                /* "node_modules/@openzeppelin/contracts/utils/Address.sol":9003:9013  returndata */
              dup2
                /* "node_modules/@openzeppelin/contracts/utils/Address.sol":8997:9014  mload(returndata) */
              mload
                /* "node_modules/@openzeppelin/contracts/utils/Address.sol":9059:9074  returndata_size */
              dup1
                /* "node_modules/@openzeppelin/contracts/utils/Address.sol":9046:9056  returndata */
              dup4
                /* "node_modules/@openzeppelin/contracts/utils/Address.sol":9042:9044  32 */
              0x20
                /* "node_modules/@openzeppelin/contracts/utils/Address.sol":9038:9057  add(32, returndata) */
              add
                /* "node_modules/@openzeppelin/contracts/utils/Address.sol":9031:9075  revert(add(32, returndata), returndata_size) */
              revert
                /* "node_modules/@openzeppelin/contracts/utils/Address.sol":8771:9150  if (returndata.length > 0) {... */
            tag_51:
                /* "node_modules/@openzeppelin/contracts/utils/Address.sol":9119:9139  revert(errorMessage) */
              0x00
              dup1
              revert
                /* "#utility.yul":14:426   */
            tag_34:
                /* "#utility.yul":143:146   */
              0x00
                /* "#utility.yul":181:187   */
              dup3
                /* "#utility.yul":175:188   */
              mload
                /* "#utility.yul":206:207   */
              0x00
                /* "#utility.yul":216:345   */
            tag_55:
                /* "#utility.yul":230:236   */
              dup2
                /* "#utility.yul":227:228   */
              dup2
                /* "#utility.yul":224:237   */
              lt
                /* "#utility.yul":216:345   */
              iszero
              tag_57
              jumpi
                /* "#utility.yul":328:332   */
              0x20
                /* "#utility.yul":312:326   */
              dup2
              dup7
              add
                /* "#utility.yul":308:333   */
              dup2
              add
                /* "#utility.yul":302:334   */
              mload
                /* "#utility.yul":289:300   */
              dup6
              dup4
              add
                /* "#utility.yul":282:335   */
              mstore
                /* "#utility.yul":245:257   */
              add
                /* "#utility.yul":216:345   */
              jump(tag_55)
            tag_57:
              pop
                /* "#utility.yul":400:401   */
              0x00
                /* "#utility.yul":364:380   */
              swap3
              add
                /* "#utility.yul":389:402   */
              swap2
              dup3
              mstore
              pop
                /* "#utility.yul":364:380   */
              swap2
                /* "#utility.yul":14:426   */
              swap1
              pop
              jump	// out
            stop
            data_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398 416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564

            auxdata: 0xa2646970667358221220bdb48cab8c19d30809d0d72eea8714532a7b352a0fc188680b4277ef1f1562ab64736f6c63430008110033
        }
    }

    sub_2: assembly {
            /* "contracts/InterestRateModel.sol":208:5464  contract InterestRateModel {... */
          mstore(0x40, 0x0140)
            /* "contracts/InterestRateModel.sol":1133:1794  constructor(... */
          callvalue
          dup1
          iszero
          tag_1
          jumpi
          0x00
          dup1
          revert
        tag_1:
          pop
          mload(0x40)
          sub(codesize, bytecodeSize)
          dup1
          bytecodeSize
          dup4
          codecopy
          dup2
          add
          0x40
          dup2
          swap1
          mstore
          tag_2
          swap2
          tag_3
          jump	// in
        tag_2:
            /* "contracts/InterestRateModel.sol":1364:1368  1e18 */
          0x0de0b6b3a7640000
            /* "contracts/InterestRateModel.sol":1341:1361  fixedMaxUtilization_ */
          dup5
            /* "contracts/InterestRateModel.sol":1341:1368  fixedMaxUtilization_ > 1e18 */
          gt
            /* "contracts/InterestRateModel.sol":1334:1369  assert(fixedMaxUtilization_ > 1e18) */
          tag_7
          jumpi
          tag_7
          tag_8
          jump	// in
        tag_7:
            /* "contracts/InterestRateModel.sol":1408:1412  1e18 */
          0x0de0b6b3a7640000
            /* "contracts/InterestRateModel.sol":1382:1405  floatingMaxUtilization_ */
          dup2
            /* "contracts/InterestRateModel.sol":1382:1412  floatingMaxUtilization_ > 1e18 */
          gt
            /* "contracts/InterestRateModel.sol":1375:1413  assert(floatingMaxUtilization_ > 1e18) */
          tag_10
          jumpi
          tag_10
          tag_8
          jump	// in
        tag_10:
            /* "contracts/InterestRateModel.sol":1420:1446  fixedCurveA = fixedCurveA_ */
          0x80
          dup7
          swap1
          mstore
            /* "contracts/InterestRateModel.sol":1452:1478  fixedCurveB = fixedCurveB_ */
          0xa0
          dup6
          swap1
          mstore
            /* "contracts/InterestRateModel.sol":1484:1526  fixedMaxUtilization = fixedMaxUtilization_ */
          0xc0
          dup5
          swap1
          mstore
            /* "contracts/InterestRateModel.sol":1533:1565  floatingCurveA = floatingCurveA_ */
          0xe0
          dup4
          swap1
          mstore
            /* "contracts/InterestRateModel.sol":1571:1603  floatingCurveB = floatingCurveB_ */
          0x0100
          dup3
          swap1
          mstore
            /* "contracts/InterestRateModel.sol":1609:1657  floatingMaxUtilization = floatingMaxUtilization_ */
          0x0120
          dup2
          swap1
          mstore
            /* "contracts/InterestRateModel.sol":1753:1768  fixedRate(0, 0) */
          tag_11
            /* "contracts/InterestRateModel.sol":1763:1764  0 */
          0x00
          dup1
            /* "contracts/InterestRateModel.sol":1753:1762  fixedRate */
          tag_12
            /* "contracts/InterestRateModel.sol":1753:1768  fixedRate(0, 0) */
          jump	// in
        tag_11:
          pop
            /* "contracts/InterestRateModel.sol":1774:1789  floatingRate(0) */
          tag_13
            /* "contracts/InterestRateModel.sol":1787:1788  0 */
          0x00
            /* "contracts/InterestRateModel.sol":1774:1786  floatingRate */
          tag_14
            /* "contracts/InterestRateModel.sol":1774:1789  floatingRate(0) */
          jump	// in
        tag_13:
          pop
            /* "contracts/InterestRateModel.sol":1133:1794  constructor(... */
          pop
          pop
          pop
          pop
          pop
          pop
            /* "contracts/InterestRateModel.sol":208:5464  contract InterestRateModel {... */
          jump(tag_63)
            /* "contracts/InterestRateModel.sol":4233:4983  function fixedRate(uint256 utilizationBefore, uint256 utilizationAfter) internal view returns (uint256) {... */
        tag_12:
            /* "contracts/InterestRateModel.sol":4328:4335  uint256 */
          0x00
            /* "contracts/InterestRateModel.sol":4343:4356  uint256 alpha */
          dup1
            /* "contracts/InterestRateModel.sol":4381:4398  utilizationBefore */
          dup4
            /* "contracts/InterestRateModel.sol":4359:4378  fixedMaxUtilization */
          mload(0xc0)
            /* "contracts/InterestRateModel.sol":4359:4398  fixedMaxUtilization - utilizationBefore */
          tag_17
          swap2
          swap1
          tag_18
          jump	// in
        tag_17:
            /* "contracts/InterestRateModel.sol":4343:4398  uint256 alpha = fixedMaxUtilization - utilizationBefore */
          swap1
          pop
            /* "contracts/InterestRateModel.sol":4404:4417  uint256 delta */
          0x00
            /* "contracts/InterestRateModel.sol":4420:4456  utilizationAfter - utilizationBefore */
          tag_19
            /* "contracts/InterestRateModel.sol":4439:4456  utilizationBefore */
          dup6
            /* "contracts/InterestRateModel.sol":4420:4436  utilizationAfter */
          dup6
            /* "contracts/InterestRateModel.sol":4420:4456  utilizationAfter - utilizationBefore */
          tag_18
          jump	// in
        tag_19:
            /* "contracts/InterestRateModel.sol":4404:4456  uint256 delta = utilizationAfter - utilizationBefore */
          swap1
          pop
            /* "contracts/InterestRateModel.sol":4462:4470  int256 r */
          0x00
            /* "contracts/InterestRateModel.sol":4924:4935  fixedCurveB */
          mload(0xa0)
            /* "contracts/InterestRateModel.sol":564:570  7.5e14 */
          0x02aa1efb94e000
            /* "contracts/InterestRateModel.sol":4487:4510  delta.divWadDown(alpha) */
          tag_20
            /* "contracts/InterestRateModel.sol":4504:4509  alpha */
          dup6
            /* "contracts/InterestRateModel.sol":4487:4492  delta */
          dup6
            /* "contracts/InterestRateModel.sol":4487:4503  delta.divWadDown */
          or(tag_0_49, shl(0x20, tag_21))
          swap1
            /* "contracts/InterestRateModel.sol":4487:4510  delta.divWadDown(alpha) */
          swap2
          swap1
          0x20
          shr
          jump	// in
        tag_20:
            /* "contracts/InterestRateModel.sol":4487:4532  delta.divWadDown(alpha) < PRECISION_THRESHOLD */
          lt
            /* "contracts/InterestRateModel.sol":4487:4915  delta.divWadDown(alpha) < PRECISION_THRESHOLD... */
          tag_22
          jumpi
            /* "contracts/InterestRateModel.sol":4773:4915  fixedCurveA.mulDivDown(... */
          tag_23
            /* "contracts/InterestRateModel.sol":4815:4887  int256(alpha.divWadDown(fixedMaxUtilization - utilizationAfter)).lnWad() */
          tag_24
            /* "contracts/InterestRateModel.sol":4822:4878  alpha.divWadDown(fixedMaxUtilization - utilizationAfter) */
          tag_25
            /* "contracts/InterestRateModel.sol":4861:4877  utilizationAfter */
          dup9
            /* "contracts/InterestRateModel.sol":4839:4858  fixedMaxUtilization */
          mload(0xc0)
            /* "contracts/InterestRateModel.sol":4839:4877  fixedMaxUtilization - utilizationAfter */
          tag_26
          swap2
          swap1
          tag_18
          jump	// in
        tag_26:
            /* "contracts/InterestRateModel.sol":4822:4827  alpha */
          dup8
            /* "contracts/InterestRateModel.sol":4822:4838  alpha.divWadDown */
          or(tag_0_49, shl(0x20, tag_21))
          swap1
            /* "contracts/InterestRateModel.sol":4822:4878  alpha.divWadDown(fixedMaxUtilization - utilizationAfter) */
          swap2
          swap1
          0x20
          shr
          jump	// in
        tag_25:
            /* "contracts/InterestRateModel.sol":4815:4885  int256(alpha.divWadDown(fixedMaxUtilization - utilizationAfter)).lnWad */
          or(tag_0_50, shl(0x20, tag_27))
            /* "contracts/InterestRateModel.sol":4815:4887  int256(alpha.divWadDown(fixedMaxUtilization - utilizationAfter)).lnWad() */
          0x20
          shr
          jump	// in
        tag_24:
            /* "contracts/InterestRateModel.sol":4900:4905  delta */
          dup5
            /* "contracts/InterestRateModel.sol":4773:4784  fixedCurveA */
          mload(0x80)
            /* "contracts/InterestRateModel.sol":4773:4795  fixedCurveA.mulDivDown */
          or(tag_0_51, shl(0x20, tag_28))
          swap1
            /* "contracts/InterestRateModel.sol":4773:4915  fixedCurveA.mulDivDown(... */
          swap3
          swap2
          swap1
          0x20
          shr
          jump	// in
        tag_23:
            /* "contracts/InterestRateModel.sol":4487:4915  delta.divWadDown(alpha) < PRECISION_THRESHOLD... */
          jump(tag_41)
        tag_22:
            /* "contracts/InterestRateModel.sol":4761:4762  6 */
          0x06
            /* "contracts/InterestRateModel.sol":4695:4757  fixedCurveA.divWadDown(fixedMaxUtilization - utilizationAfter) */
          tag_30
            /* "contracts/InterestRateModel.sol":4740:4756  utilizationAfter */
          dup8
            /* "contracts/InterestRateModel.sol":4718:4737  fixedMaxUtilization */
          mload(0xc0)
            /* "contracts/InterestRateModel.sol":4718:4756  fixedMaxUtilization - utilizationAfter */
          tag_31
          swap2
          swap1
          tag_18
          jump	// in
        tag_31:
            /* "contracts/InterestRateModel.sol":4695:4706  fixedCurveA */
          mload(0x80)
            /* "contracts/InterestRateModel.sol":4695:4717  fixedCurveA.divWadDown */
          or(tag_0_49, shl(0x20, tag_21))
          swap1
            /* "contracts/InterestRateModel.sol":4695:4757  fixedCurveA.divWadDown(fixedMaxUtilization - utilizationAfter) */
          swap2
          swap1
          0x20
          shr
          jump	// in
        tag_30:
            /* "contracts/InterestRateModel.sol":4586:4682  fixedCurveA.mulDivDown(4e18, fixedMaxUtilization - ((utilizationAfter + utilizationBefore) / 2)) */
          tag_32
            /* "contracts/InterestRateModel.sol":4609:4613  4e18 */
          0x3782dace9d900000
            /* "contracts/InterestRateModel.sol":4679:4680  2 */
          0x02
            /* "contracts/InterestRateModel.sol":4639:4675  utilizationAfter + utilizationBefore */
          tag_33
            /* "contracts/InterestRateModel.sol":4658:4675  utilizationBefore */
          dup13
            /* "contracts/InterestRateModel.sol":4639:4655  utilizationAfter */
          dup13
            /* "contracts/InterestRateModel.sol":4639:4675  utilizationAfter + utilizationBefore */
          tag_34
          jump	// in
        tag_33:
            /* "contracts/InterestRateModel.sol":4638:4680  (utilizationAfter + utilizationBefore) / 2 */
          tag_35
          swap2
          swap1
          tag_36
          jump	// in
        tag_35:
            /* "contracts/InterestRateModel.sol":4615:4634  fixedMaxUtilization */
          mload(0xc0)
            /* "contracts/InterestRateModel.sol":4615:4681  fixedMaxUtilization - ((utilizationAfter + utilizationBefore) / 2) */
          tag_37
          swap2
          swap1
          tag_18
          jump	// in
        tag_37:
            /* "contracts/InterestRateModel.sol":4586:4597  fixedCurveA */
          mload(0x80)
            /* "contracts/InterestRateModel.sol":4586:4608  fixedCurveA.mulDivDown */
          or(tag_0_51, shl(0x20, tag_28))
          swap1
            /* "contracts/InterestRateModel.sol":4586:4682  fixedCurveA.mulDivDown(4e18, fixedMaxUtilization - ((utilizationAfter + utilizationBefore) / 2)) */
          swap3
          swap2
          swap1
          0x20
          shr
          jump	// in
        tag_32:
            /* "contracts/InterestRateModel.sol":4544:4573  fixedCurveA.divWadDown(alpha) */
          tag_38
            /* "contracts/InterestRateModel.sol":4567:4572  alpha */
          dup8
            /* "contracts/InterestRateModel.sol":4544:4555  fixedCurveA */
          mload(0x80)
            /* "contracts/InterestRateModel.sol":4544:4566  fixedCurveA.divWadDown */
          or(tag_0_49, shl(0x20, tag_21))
          swap1
            /* "contracts/InterestRateModel.sol":4544:4573  fixedCurveA.divWadDown(alpha) */
          swap2
          swap1
          0x20
          shr
          jump	// in
        tag_38:
            /* "contracts/InterestRateModel.sol":4544:4682  fixedCurveA.divWadDown(alpha) +... */
          tag_39
          swap2
          swap1
          tag_34
          jump	// in
        tag_39:
            /* "contracts/InterestRateModel.sol":4544:4757  fixedCurveA.divWadDown(alpha) +... */
          tag_40
          swap2
          swap1
          tag_34
          jump	// in
        tag_40:
            /* "contracts/InterestRateModel.sol":4543:4762  (fixedCurveA.divWadDown(alpha) +... */
          tag_41
          swap2
          swap1
          tag_36
          jump	// in
        tag_41:
            /* "contracts/InterestRateModel.sol":4473:4935  int256(... */
          tag_42
          swap2
          swap1
          tag_43
          jump	// in
        tag_42:
            /* "contracts/InterestRateModel.sol":4462:4935  int256 r = int256(... */
          swap1
          pop
            /* "contracts/InterestRateModel.sol":4953:4954  0 */
          0x00
            /* "contracts/InterestRateModel.sol":4948:4949  r */
          dup2
            /* "contracts/InterestRateModel.sol":4948:4954  r >= 0 */
          slt
          iszero
            /* "contracts/InterestRateModel.sol":4941:4955  assert(r >= 0) */
          tag_45
          jumpi
          tag_45
          tag_8
          jump	// in
        tag_45:
            /* "contracts/InterestRateModel.sol":4976:4977  r */
          swap3
          pop
          pop
          pop
            /* "contracts/InterestRateModel.sol":4233:4983  function fixedRate(uint256 utilizationBefore, uint256 utilizationAfter) internal view returns (uint256) {... */
        tag_16:
          swap3
          swap2
          pop
          pop
          jump	// out
            /* "contracts/InterestRateModel.sol":5236:5462  function floatingRate(uint256 utilization) public view returns (uint256) {... */
        tag_14:
            /* "contracts/InterestRateModel.sol":5300:5307  uint256 */
          0x00
            /* "contracts/InterestRateModel.sol":5315:5323  int256 r */
          dup1
            /* "contracts/InterestRateModel.sol":5400:5414  floatingCurveB */
          mload(0x0100)
            /* "contracts/InterestRateModel.sol":5333:5396  floatingCurveA.divWadDown(floatingMaxUtilization - utilization) */
          tag_47
            /* "contracts/InterestRateModel.sol":5384:5395  utilization */
          dup5
            /* "contracts/InterestRateModel.sol":5359:5381  floatingMaxUtilization */
          mload(0x0120)
            /* "contracts/InterestRateModel.sol":5359:5395  floatingMaxUtilization - utilization */
          tag_48
          swap2
          swap1
          tag_18
          jump	// in
        tag_48:
            /* "contracts/InterestRateModel.sol":5333:5347  floatingCurveA */
          mload(0xe0)
            /* "contracts/InterestRateModel.sol":5333:5358  floatingCurveA.divWadDown */
          or(tag_0_49, shl(0x20, tag_21))
          swap1
            /* "contracts/InterestRateModel.sol":5333:5396  floatingCurveA.divWadDown(floatingMaxUtilization - utilization) */
          swap2
          swap1
          0x20
          shr
          jump	// in
        tag_47:
            /* "contracts/InterestRateModel.sol":5326:5414  int256(floatingCurveA.divWadDown(floatingMaxUtilization - utilization)) + floatingCurveB */
          tag_49
          swap2
          swap1
          tag_43
          jump	// in
        tag_49:
            /* "contracts/InterestRateModel.sol":5315:5414  int256 r = int256(floatingCurveA.divWadDown(floatingMaxUtilization - utilization)) + floatingCurveB */
          swap1
          pop
            /* "contracts/InterestRateModel.sol":5432:5433  0 */
          0x00
            /* "contracts/InterestRateModel.sol":5427:5428  r */
          dup2
            /* "contracts/InterestRateModel.sol":5427:5433  r >= 0 */
          slt
          iszero
            /* "contracts/InterestRateModel.sol":5420:5434  assert(r >= 0) */
          tag_16
          jumpi
          tag_16
          tag_8
          jump	// in
            /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":874:1038  function divWadDown(uint256 x, uint256 y) internal pure returns (uint256) {... */
        tag_21:
            /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":939:946  uint256 */
          0x00
            /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":965:986  mulDivDown(x, WAD, y) */
          tag_53
            /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":976:977  x */
          dup4
            /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":491:495  1e18 */
          0x0de0b6b3a7640000
            /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":984:985  y */
          dup5
            /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":965:975  mulDivDown */
          tag_28
            /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":965:986  mulDivDown(x, WAD, y) */
          jump	// in
        tag_53:
            /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":958:986  return mulDivDown(x, WAD, y) */
          swap4
            /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":874:1038  function divWadDown(uint256 x, uint256 y) internal pure returns (uint256) {... */
          swap3
          pop
          pop
          pop
          jump	// out
            /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":4596:7543  function lnWad(int256 x) internal pure returns (int256 r) {... */
        tag_27:
            /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":4644:4652  int256 r */
          0x00
            /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":4700:4701  0 */
          dup1
            /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":4696:4697  x */
          dup3
            /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":4696:4701  x > 0 */
          sgt
            /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":4688:4715  require(x > 0, "UNDEFINED") */
          tag_55
          jumpi
          0x00
          dup1
          revert
        tag_55:
            /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":5107:5115  int256 k */
          0x00
            /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":5145:5147  96 */
          0x60
            /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":5125:5141  log2(uint256(x)) */
          tag_56
            /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":5138:5139  x */
          dup5
            /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":5125:5129  log2 */
          tag_57
            /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":5125:5141  log2(uint256(x)) */
          jump	// in
        tag_56:
            /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":5118:5147  int256(log2(uint256(x))) - 96 */
          sub
            /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":5175:5178  159 */
          0x9f
            /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":5175:5182  159 - k */
          dup2
          dup2
          sub
            /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":5161:5183  x <<= uint256(159 - k) */
          swap5
          swap1
          swap5
          shl
            /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":5208:5225  uint256(x) >> 159 */
          swap1
          swap4
          shr
            /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":6001:6032  5573035233440673466300451813936 */
          0x465772b2bbbb5f824b15207a30
            /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":5997:6032  x + 5573035233440673466300451813936 */
          dup2
          add
            /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":6052:6057  q * x */
          dup2
          mul
            /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":5459:5461  96 */
          0x60
            /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":6051:6064  (q * x) >> 96 */
          swap1
          dup2
          sar
            /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":6068:6100  71694874799317883764090561454958 */
          0x0388eaa27412d5aca026815d636e
            /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":6050:6100  ((q * x) >> 96) + 71694874799317883764090561454958 */
          add
            /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":6120:6125  q * x */
          dup3
          mul
            /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":6119:6132  (q * x) >> 96 */
          dup2
          sar
            /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":6136:6169  283447036172924575727196451306956 */
          0x0df99ac502031bf953eff472fdcc
            /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":6118:6169  ((q * x) >> 96) + 283447036172924575727196451306956 */
          add
            /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":6189:6194  q * x */
          dup3
          mul
            /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":6188:6201  (q * x) >> 96 */
          dup2
          sar
            /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":6205:6238  401686690394027663651624208769553 */
          0x13cdffb29d51d99322bdff5f2211
            /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":6187:6238  ((q * x) >> 96) + 401686690394027663651624208769553 */
          add
            /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":6258:6263  q * x */
          dup3
          mul
            /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":6257:6270  (q * x) >> 96 */
          dup2
          sar
            /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":6274:6307  204048457590392012362485061816622 */
          0x0a0f742023def783a307a986912e
            /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":6256:6307  ((q * x) >> 96) + 204048457590392012362485061816622 */
          add
            /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":6327:6332  q * x */
          dup3
          mul
            /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":6326:6339  (q * x) >> 96 */
          dup2
          sar
            /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":6343:6375  31853899698501571402653359427138 */
          0x01920d8043ca89b5239253284e42
            /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":6325:6375  ((q * x) >> 96) + 31853899698501571402653359427138 */
          add
            /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":6395:6400  q * x */
          dup3
          mul
            /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":6394:6407  (q * x) >> 96 */
          dup2
          sar
            /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":6411:6441  909429971244387300277376558375 */
          0x0b7a86d7375468fac667a0a527
            /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":6393:6441  ((q * x) >> 96) + 909429971244387300277376558375 */
          add
            /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":5398:5429  3273285459638523848632254066296 */
          0x29508e458543d8aa4df2abee78
            /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":5394:5429  x + 3273285459638523848632254066296 */
          dup4
          add
            /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":5449:5454  p * x */
          dup4
          mul
            /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":5448:5461  (p * x) >> 96 */
          dup3
          sar
            /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":5465:5497  24828157081833163892658089445524 */
          0x0139601a2efabe717e604cbb4894
            /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":5447:5497  ((p * x) >> 96) + 24828157081833163892658089445524 */
          add
            /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":5517:5522  p * x */
          dup4
          mul
            /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":5516:5529  (p * x) >> 96 */
          dup3
          sar
            /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":5533:5565  43456485725739037958740375743393 */
          0x02247f7a7b6594320649aa03aba1
            /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":5515:5565  ((p * x) >> 96) + 43456485725739037958740375743393 */
          add
            /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":5585:5590  p * x */
          dup4
          mul
            /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":5584:5597  (p * x) >> 96 */
          dup3
          sar
          not(0x8c3f38e95a6b1ff2ab1c3b3436)
            /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":5583:5633  ((p * x) >> 96) - 11111509109440967052023855526967 */
          add
            /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":5653:5658  p * x */
          dup4
          mul
            /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":5652:5665  (p * x) >> 96 */
          dup3
          sar
          not(0x02384773bdf1ac5676facced6090)
            /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":5651:5701  ((p * x) >> 96) - 45023709667254063763336534515857 */
          add
            /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":5721:5726  p * x */
          dup4
          mul
            /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":5720:5733  (p * x) >> 96 */
          swap1
          swap2
          sar
          not(0xb9a025d814b29c212b8b1a07cd)
            /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":5719:5769  ((p * x) >> 96) - 14706773417378608786704636184526 */
          add
            /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":5787:5792  p * x */
          swap1
          swap2
          mul
          not(sub(shl(0x61, 0x0504a838426634cdd8738f5435), 0x01))
            /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":5787:5833  p * x - (795164235651350426258249787498 << 96) */
          add
            /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":6735:6745  sdiv(p, q) */
          sdiv
            /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":7125:7168  1677202110996718588342820967067443963516166 */
          0x1340daa0d5f769dba1915cef59f0815a5506
            /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":7120:7168  r *= 1677202110996718588342820967067443963516166 */
          mul
            /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":7232:7303  16597577552685614221487285958193947469193820559219878177908093499208371 */
          0x0267a36c0c95b3975ab3ee5b203a7614a3f75373f047d803ae7b6687f2b3
            /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":7232:7307  16597577552685614221487285958193947469193820559219878177908093499208371 * k */
          swap4
          swap1
          swap4
          mul
            /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":7227:7307  r += 16597577552685614221487285958193947469193820559219878177908093499208371 * k */
          swap3
          swap1
          swap3
          add
            /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":7380:7452  600920179829731861736702779321621459595472258049074101567377883020018308 */
          0x57115e47018c7177eebf7cd370a3356a1b7863008a5ae8028c72b8864284
            /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":7375:7452  r += 600920179829731861736702779321621459595472258049074101567377883020018308 */
          add
            /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":7523:7526  174 */
          0xae
            /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":7517:7526  r >>= 174 */
          sar
          swap3
          swap2
          pop
          pop
            /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":4596:7543  function lnWad(int256 x) internal pure returns (int256 r) {... */
          jump	// out
            /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":7741:8276  function mulDivDown(... */
        tag_28:
            /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":7947:7956  mul(x, y) */
          dup3
          dup3
          mul
            /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":8078:8097  iszero(denominator) */
          dup2
          iszero
            /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":8071:8098  iszero(iszero(denominator)) */
          iszero
            /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":8103:8112  iszero(x) */
          dup5
          iszero
            /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":8117:8126  div(z, x) */
          dup6
          dup4
          div
            /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":8114:8130  eq(div(z, x), y) */
          dup6
          eq
            /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":8100:8131  or(iszero(x), eq(div(z, x), y)) */
          or
            /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":8067:8132  and(iszero(iszero(denominator)), or(iszero(x), eq(div(z, x), y))) */
          and
            /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":8057:8178  if iszero(and(iszero(iszero(denominator)), or(iszero(x), eq(div(z, x), y)))) {... */
          tag_59
          jumpi
            /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":8162:8163  0 */
          0x00
            /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":8159:8160  0 */
          dup1
            /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":8152:8164  revert(0, 0) */
          revert
            /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":8057:8178  if iszero(and(iszero(iszero(denominator)), or(iszero(x), eq(div(z, x), y)))) {... */
        tag_59:
            /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":8241:8260  div(z, denominator) */
          div
          swap3
            /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":7741:8276  function mulDivDown(... */
          swap2
          pop
          pop
          jump	// out
            /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":15328:15903  function log2(uint256 x) internal pure returns (uint256 r) {... */
        tag_57:
            /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":15376:15385  uint256 r */
          0x00
            /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":15409:15410  0 */
          dup1
            /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":15405:15406  x */
          dup3
            /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":15405:15410  x > 0 */
          gt
            /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":15397:15424  require(x > 0, "UNDEFINED") */
          tag_61
          jumpi
          0x00
          dup1
          revert
        tag_61:
          pop
            /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":15821:15822  1 */
          0x01
          sub(shl(0x80, 0x01), 0x01)
          dup3
          gt
            /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":15467:15468  7 */
          0x07
            /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":15463:15512  shl(7, lt(0xffffffffffffffffffffffffffffffff, x)) */
          shl
            /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":15566:15575  shr(r, x) */
          dup3
          dup2
          shr
          sub(shl(0x40, 0x01), 0x01)
            /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":15543:15576  lt(0xffffffffffffffff, shr(r, x)) */
          lt
            /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":15540:15541  6 */
          0x06
            /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":15536:15577  shl(6, lt(0xffffffffffffffff, shr(r, x))) */
          shl
            /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":15530:15578  or(r, shl(6, lt(0xffffffffffffffff, shr(r, x)))) */
          or
            /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":15624:15633  shr(r, x) */
          dup3
          dup2
          shr
            /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":15612:15622  0xffffffff */
          0xffffffff
            /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":15609:15634  lt(0xffffffff, shr(r, x)) */
          lt
            /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":15606:15607  5 */
          0x05
            /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":15602:15635  shl(5, lt(0xffffffff, shr(r, x))) */
          shl
            /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":15596:15636  or(r, shl(5, lt(0xffffffff, shr(r, x)))) */
          or
            /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":15678:15687  shr(r, x) */
          dup3
          dup2
          shr
            /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":15670:15676  0xffff */
          0xffff
            /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":15667:15688  lt(0xffff, shr(r, x)) */
          lt
            /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":15664:15665  4 */
          0x04
            /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":15660:15689  shl(4, lt(0xffff, shr(r, x))) */
          shl
            /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":15654:15690  or(r, shl(4, lt(0xffff, shr(r, x)))) */
          or
            /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":15730:15739  shr(r, x) */
          dup3
          dup2
          shr
            /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":15724:15728  0xff */
          0xff
            /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":15721:15740  lt(0xff, shr(r, x)) */
          lt
            /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":15718:15719  3 */
          0x03
            /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":15714:15741  shl(3, lt(0xff, shr(r, x))) */
          swap1
          dup2
          shl
            /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":15708:15742  or(r, shl(3, lt(0xff, shr(r, x)))) */
          swap1
          swap2
          or
            /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":15781:15790  shr(r, x) */
          dup4
          dup2
          shr
            /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":15776:15779  0xf */
          0x0f
            /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":15773:15791  lt(0xf, shr(r, x)) */
          lt
            /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":15770:15771  2 */
          0x02
            /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":15766:15792  shl(2, lt(0xf, shr(r, x))) */
          shl
            /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":15760:15793  or(r, shl(2, lt(0xf, shr(r, x)))) */
          or
            /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":15832:15841  shr(r, x) */
          dup4
          dup2
          shr
            /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":15824:15842  lt(0x3, shr(r, x)) */
          swap1
          swap2
          lt
            /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":15817:15843  shl(1, lt(0x3, shr(r, x))) */
          dup3
          shl
            /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":15811:15844  or(r, shl(1, lt(0x3, shr(r, x)))) */
          or
            /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":15876:15885  shr(r, x) */
          swap2
          dup3
          shr
          gt
            /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":15862:15887  or(r, lt(0x1, shr(r, x))) */
          or
          swap1
            /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":15328:15903  function log2(uint256 x) internal pure returns (uint256 r) {... */
          jump	// out
            /* "#utility.yul":14:504   */
        tag_3:
            /* "#utility.yul":127:133   */
          0x00
            /* "#utility.yul":135:141   */
          dup1
            /* "#utility.yul":143:149   */
          0x00
            /* "#utility.yul":151:157   */
          dup1
            /* "#utility.yul":159:165   */
          0x00
            /* "#utility.yul":167:173   */
          dup1
            /* "#utility.yul":220:223   */
          0xc0
            /* "#utility.yul":208:217   */
          dup8
            /* "#utility.yul":199:206   */
          dup10
            /* "#utility.yul":195:218   */
          sub
            /* "#utility.yul":191:224   */
          slt
            /* "#utility.yul":188:241   */
          iszero
          tag_65
          jumpi
            /* "#utility.yul":237:238   */
          0x00
            /* "#utility.yul":234:235   */
          dup1
            /* "#utility.yul":227:239   */
          revert
            /* "#utility.yul":188:241   */
        tag_65:
            /* "#utility.yul":266:275   */
          dup7
            /* "#utility.yul":260:276   */
          mload
            /* "#utility.yul":250:276   */
          swap6
          pop
            /* "#utility.yul":316:318   */
          0x20
            /* "#utility.yul":305:314   */
          dup8
            /* "#utility.yul":301:319   */
          add
            /* "#utility.yul":295:320   */
          mload
            /* "#utility.yul":285:320   */
          swap5
          pop
            /* "#utility.yul":360:362   */
          0x40
            /* "#utility.yul":349:358   */
          dup8
            /* "#utility.yul":345:363   */
          add
            /* "#utility.yul":339:364   */
          mload
            /* "#utility.yul":329:364   */
          swap4
          pop
            /* "#utility.yul":404:406   */
          0x60
            /* "#utility.yul":393:402   */
          dup8
            /* "#utility.yul":389:407   */
          add
            /* "#utility.yul":383:408   */
          mload
            /* "#utility.yul":373:408   */
          swap3
          pop
            /* "#utility.yul":448:451   */
          0x80
            /* "#utility.yul":437:446   */
          dup8
            /* "#utility.yul":433:452   */
          add
            /* "#utility.yul":427:453   */
          mload
            /* "#utility.yul":417:453   */
          swap2
          pop
            /* "#utility.yul":493:496   */
          0xa0
            /* "#utility.yul":482:491   */
          dup8
            /* "#utility.yul":478:497   */
          add
            /* "#utility.yul":472:498   */
          mload
            /* "#utility.yul":462:498   */
          swap1
          pop
            /* "#utility.yul":14:504   */
          swap3
          swap6
          pop
          swap3
          swap6
          pop
          swap3
          swap6
          jump	// out
            /* "#utility.yul":509:636   */
        tag_8:
            /* "#utility.yul":570:580   */
          0x4e487b71
            /* "#utility.yul":565:568   */
          0xe0
            /* "#utility.yul":561:581   */
          shl
            /* "#utility.yul":558:559   */
          0x00
            /* "#utility.yul":551:582   */
          mstore
            /* "#utility.yul":601:605   */
          0x01
            /* "#utility.yul":598:599   */
          0x04
            /* "#utility.yul":591:606   */
          mstore
            /* "#utility.yul":625:629   */
          0x24
            /* "#utility.yul":622:623   */
          0x00
            /* "#utility.yul":615:630   */
          revert
            /* "#utility.yul":641:768   */
        tag_62:
            /* "#utility.yul":702:712   */
          0x4e487b71
            /* "#utility.yul":697:700   */
          0xe0
            /* "#utility.yul":693:713   */
          shl
            /* "#utility.yul":690:691   */
          0x00
            /* "#utility.yul":683:714   */
          mstore
            /* "#utility.yul":733:737   */
          0x11
            /* "#utility.yul":730:731   */
          0x04
            /* "#utility.yul":723:738   */
          mstore
            /* "#utility.yul":757:761   */
          0x24
            /* "#utility.yul":754:755   */
          0x00
            /* "#utility.yul":747:762   */
          revert
            /* "#utility.yul":773:901   */
        tag_18:
            /* "#utility.yul":840:849   */
          dup2
          dup2
          sub
            /* "#utility.yul":861:872   */
          dup2
          dup2
          gt
            /* "#utility.yul":858:895   */
          iszero
          tag_16
          jumpi
            /* "#utility.yul":875:893   */
          tag_16
          tag_62
          jump	// in
            /* "#utility.yul":906:1031   */
        tag_34:
            /* "#utility.yul":971:980   */
          dup1
          dup3
          add
            /* "#utility.yul":992:1002   */
          dup1
          dup3
          gt
            /* "#utility.yul":989:1025   */
          iszero
          tag_16
          jumpi
            /* "#utility.yul":1005:1023   */
          tag_16
          tag_62
          jump	// in
            /* "#utility.yul":1036:1253   */
        tag_36:
            /* "#utility.yul":1076:1077   */
          0x00
            /* "#utility.yul":1102:1103   */
          dup3
            /* "#utility.yul":1092:1224   */
          tag_75
          jumpi
            /* "#utility.yul":1146:1156   */
          0x4e487b71
            /* "#utility.yul":1141:1144   */
          0xe0
            /* "#utility.yul":1137:1157   */
          shl
            /* "#utility.yul":1134:1135   */
          0x00
            /* "#utility.yul":1127:1158   */
          mstore
            /* "#utility.yul":1181:1185   */
          0x12
            /* "#utility.yul":1178:1179   */
          0x04
            /* "#utility.yul":1171:1186   */
          mstore
            /* "#utility.yul":1209:1213   */
          0x24
            /* "#utility.yul":1206:1207   */
          0x00
            /* "#utility.yul":1199:1214   */
          revert
            /* "#utility.yul":1092:1224   */
        tag_75:
          pop
            /* "#utility.yul":1238:1247   */
          div
          swap1
            /* "#utility.yul":1036:1253   */
          jump	// out
            /* "#utility.yul":1258:1474   */
        tag_43:
            /* "#utility.yul":1322:1331   */
          dup1
          dup3
          add
            /* "#utility.yul":1350:1361   */
          dup3
          dup2
          slt
            /* "#utility.yul":1297:1300   */
          0x00
            /* "#utility.yul":1380:1389   */
          dup4
          slt
            /* "#utility.yul":1408:1418   */
          dup1
          iszero
            /* "#utility.yul":1404:1423   */
          dup3
          and
            /* "#utility.yul":1433:1443   */
          dup3
          iszero
            /* "#utility.yul":1425:1444   */
          dup3
          and
            /* "#utility.yul":1401:1445   */
          or
            /* "#utility.yul":1398:1468   */
          iszero
          tag_78
          jumpi
            /* "#utility.yul":1448:1466   */
          tag_78
          tag_62
          jump	// in
        tag_78:
            /* "#utility.yul":1398:1468   */
          pop
          pop
            /* "#utility.yul":1258:1474   */
          swap3
          swap2
          pop
          pop
          jump	// out
        tag_63:
            /* "contracts/InterestRateModel.sol":208:5464  contract InterestRateModel {... */
          mload(0x80)
          mload(0xa0)
          mload(0xc0)
          mload(0xe0)
          mload(0x0100)
          mload(0x0120)
          codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))
          0x00
          assignImmutable("0x8933cd72e164c9b6ce552201c117297f7873e41b74a3438d5253e75d613ffbad")
          0x00
          assignImmutable("0xdefe319dc50e05250759b13bd8d7e9db7bb9ceac4f390379b62a1cc566578ec9")
          0x00
          assignImmutable("0x425aac06c182adcdfed4d2e1cb5cddb9644e1930dc479a82e602f60a766b30e7")
          0x00
          assignImmutable("0x535ebbacc766b9aec6eaef74a72c1c73399b3f83af81812ea51294501adf4ccf")
          0x00
          assignImmutable("0xa92a119aeb5e5432887b46772e423cfac2594bfdf681094c34bd022e8c31d0")
          0x00
          assignImmutable("0x924caa65d1644bcda3c737cb4f972c9170b1e3eb26b1eeba5090c589a3beb7a4")
          return(0x00, dataSize(sub_0))
        stop

        sub_0: assembly {
                /* "contracts/InterestRateModel.sol":208:5464  contract InterestRateModel {... */
              mstore(0x40, 0x80)
              callvalue
              dup1
              iszero
              tag_1
              jumpi
              0x00
              dup1
              revert
            tag_1:
              pop
              jumpi(tag_2, lt(calldatasize, 0x04))
              shr(0xe0, calldataload(0x00))
              dup1
              0x84a87466
              gt
              tag_12
              jumpi
              dup1
              0x84a87466
              eq
              tag_7
              jumpi
              dup1
              0xb9969934
              eq
              tag_8
              jumpi
              dup1
              0xd8372685
              eq
              tag_9
              jumpi
              dup1
              0xdf635f3d
              eq
              tag_10
              jumpi
              dup1
              0xdfb08e10
              eq
              tag_11
              jumpi
              0x00
              dup1
              revert
            tag_12:
              dup1
              0x0481520b
              eq
              tag_3
              jumpi
              dup1
              0x26980121
              eq
              tag_4
              jumpi
              dup1
              0x4d6fc522
              eq
              tag_5
              jumpi
              dup1
              0x62caa049
              eq
              tag_6
              jumpi
            tag_2:
              0x00
              dup1
              revert
                /* "contracts/InterestRateModel.sol":796:840  uint256 public immutable fixedMaxUtilization */
            tag_3:
              tag_13
              immutable("0x535ebbacc766b9aec6eaef74a72c1c73399b3f83af81812ea51294501adf4ccf")
              dup2
              jump
            tag_13:
              mload(0x40)
                /* "#utility.yul":160:185   */
              swap1
              dup2
              mstore
                /* "#utility.yul":148:150   */
              0x20
                /* "#utility.yul":133:151   */
              add
                /* "contracts/InterestRateModel.sol":796:840  uint256 public immutable fixedMaxUtilization */
            tag_15:
              mload(0x40)
              dup1
              swap2
              sub
              swap1
              return
                /* "contracts/InterestRateModel.sol":992:1030  int256 public immutable floatingCurveB */
            tag_4:
              tag_13
              immutable("0xdefe319dc50e05250759b13bd8d7e9db7bb9ceac4f390379b62a1cc566578ec9")
              dup2
              jump
                /* "contracts/InterestRateModel.sol":622:658  uint256 public immutable fixedCurveA */
            tag_5:
              tag_13
              immutable("0x924caa65d1644bcda3c737cb4f972c9170b1e3eb26b1eeba5090c589a3beb7a4")
              dup2
              jump
                /* "contracts/InterestRateModel.sol":3489:3758  function minFixedRate(... */
            tag_6:
              tag_24
              tag_25
              calldatasize
              0x04
              tag_26
              jump	// in
            tag_25:
              tag_27
              jump	// in
            tag_24:
              0x40
              dup1
              mload
                /* "#utility.yul":871:896   */
              swap3
              dup4
              mstore
                /* "#utility.yul":927:929   */
              0x20
                /* "#utility.yul":912:930   */
              dup4
              add
                /* "#utility.yul":905:939   */
              swap2
              swap1
              swap2
              mstore
                /* "#utility.yul":844:862   */
              add
                /* "contracts/InterestRateModel.sol":3489:3758  function minFixedRate(... */
              tag_15
                /* "#utility.yul":697:945   */
              jump
                /* "contracts/InterestRateModel.sol":5236:5462  function floatingRate(uint256 utilization) public view returns (uint256) {... */
            tag_7:
              tag_13
              tag_31
              calldatasize
              0x04
              tag_32
              jump	// in
            tag_31:
              tag_33
              jump	// in
                /* "contracts/InterestRateModel.sol":895:934  uint256 public immutable floatingCurveA */
            tag_8:
              tag_13
              immutable("0x425aac06c182adcdfed4d2e1cb5cddb9644e1930dc479a82e602f60a766b30e7")
              dup2
              jump
                /* "contracts/InterestRateModel.sol":1081:1128  uint256 public immutable floatingMaxUtilization */
            tag_9:
              tag_13
              immutable("0x8933cd72e164c9b6ce552201c117297f7873e41b74a3438d5253e75d613ffbad")
              dup2
              jump
                /* "contracts/InterestRateModel.sol":2366:2984  function fixedBorrowRate(... */
            tag_10:
              tag_13
              tag_42
              calldatasize
              0x04
              tag_43
              jump	// in
            tag_42:
              tag_44
              jump	// in
                /* "contracts/InterestRateModel.sol":713:748  int256 public immutable fixedCurveB */
            tag_11:
              tag_13
              immutable("0xa92a119aeb5e5432887b46772e423cfac2594bfdf681094c34bd022e8c31d0")
              dup2
              jump
                /* "contracts/InterestRateModel.sol":3489:3758  function minFixedRate(... */
            tag_27:
                /* "contracts/InterestRateModel.sol":3608:3620  uint256 rate */
              0x00
              dup1
                /* "contracts/InterestRateModel.sol":3663:3705  borrowed.divWadUp(supplied + backupAssets) */
              tag_53
                /* "contracts/InterestRateModel.sol":3681:3704  supplied + backupAssets */
              tag_54
                /* "contracts/InterestRateModel.sol":3692:3704  backupAssets */
              dup5
                /* "contracts/InterestRateModel.sol":3681:3689  supplied */
              dup7
                /* "contracts/InterestRateModel.sol":3681:3704  supplied + backupAssets */
              tag_55
              jump	// in
            tag_54:
                /* "contracts/InterestRateModel.sol":3663:3671  borrowed */
              dup7
              swap1
                /* "contracts/InterestRateModel.sol":3663:3680  borrowed.divWadUp */
              tag_56
                /* "contracts/InterestRateModel.sol":3663:3705  borrowed.divWadUp(supplied + backupAssets) */
              jump	// in
            tag_53:
                /* "contracts/InterestRateModel.sol":3649:3705  utilization = borrowed.divWadUp(supplied + backupAssets) */
              swap1
              pop
                /* "contracts/InterestRateModel.sol":3718:3753  fixedRate(utilization, utilization) */
              tag_57
                /* "contracts/InterestRateModel.sol":3728:3739  utilization */
              dup2
                /* "contracts/InterestRateModel.sol":3741:3752  utilization */
              dup3
                /* "contracts/InterestRateModel.sol":3718:3727  fixedRate */
              tag_58
                /* "contracts/InterestRateModel.sol":3718:3753  fixedRate(utilization, utilization) */
              jump	// in
            tag_57:
                /* "contracts/InterestRateModel.sol":3711:3753  rate = fixedRate(utilization, utilization) */
              swap2
              pop
                /* "contracts/InterestRateModel.sol":3489:3758  function minFixedRate(... */
              swap4
              pop
              swap4
              swap2
              pop
              pop
              jump	// out
                /* "contracts/InterestRateModel.sol":5236:5462  function floatingRate(uint256 utilization) public view returns (uint256) {... */
            tag_33:
                /* "contracts/InterestRateModel.sol":5300:5307  uint256 */
              0x00
              dup1
                /* "contracts/InterestRateModel.sol":5400:5414  floatingCurveB */
              immutable("0xdefe319dc50e05250759b13bd8d7e9db7bb9ceac4f390379b62a1cc566578ec9")
                /* "contracts/InterestRateModel.sol":5333:5396  floatingCurveA.divWadDown(floatingMaxUtilization - utilization) */
              tag_60
                /* "contracts/InterestRateModel.sol":5359:5395  floatingMaxUtilization - utilization */
              tag_61
                /* "contracts/InterestRateModel.sol":5384:5395  utilization */
              dup6
                /* "contracts/InterestRateModel.sol":5359:5381  floatingMaxUtilization */
              immutable("0x8933cd72e164c9b6ce552201c117297f7873e41b74a3438d5253e75d613ffbad")
                /* "contracts/InterestRateModel.sol":5359:5395  floatingMaxUtilization - utilization */
              tag_62
              jump	// in
            tag_61:
                /* "contracts/InterestRateModel.sol":5333:5347  floatingCurveA */
              immutable("0x425aac06c182adcdfed4d2e1cb5cddb9644e1930dc479a82e602f60a766b30e7")
              swap1
                /* "contracts/InterestRateModel.sol":5333:5358  floatingCurveA.divWadDown */
              tag_49
                /* "contracts/InterestRateModel.sol":5333:5396  floatingCurveA.divWadDown(floatingMaxUtilization - utilization) */
              jump	// in
            tag_60:
                /* "contracts/InterestRateModel.sol":5326:5414  int256(floatingCurveA.divWadDown(floatingMaxUtilization - utilization)) + floatingCurveB */
              tag_63
              swap2
              swap1
              tag_64
              jump	// in
            tag_63:
                /* "contracts/InterestRateModel.sol":5315:5414  int256 r = int256(floatingCurveA.divWadDown(floatingMaxUtilization - utilization)) + floatingCurveB */
              swap1
              pop
                /* "contracts/InterestRateModel.sol":5432:5433  0 */
              0x00
                /* "contracts/InterestRateModel.sol":5427:5428  r */
              dup2
                /* "contracts/InterestRateModel.sol":5427:5433  r >= 0 */
              slt
              iszero
                /* "contracts/InterestRateModel.sol":5420:5434  assert(r >= 0) */
              tag_66
              jumpi
              tag_66
              tag_67
              jump	// in
            tag_66:
                /* "contracts/InterestRateModel.sol":5455:5456  r */
              swap3
                /* "contracts/InterestRateModel.sol":5236:5462  function floatingRate(uint256 utilization) public view returns (uint256) {... */
              swap2
              pop
              pop
              jump	// out
                /* "contracts/InterestRateModel.sol":2366:2984  function fixedBorrowRate(... */
            tag_44:
                /* "contracts/InterestRateModel.sol":2530:2537  uint256 */
              0x00
                /* "contracts/InterestRateModel.sol":2568:2576  maturity */
              dup6
                /* "contracts/InterestRateModel.sol":2549:2564  block.timestamp */
              timestamp
                /* "contracts/InterestRateModel.sol":2549:2576  block.timestamp >= maturity */
              lt
                /* "contracts/InterestRateModel.sol":2545:2601  if (block.timestamp >= maturity) revert AlreadyMatured() */
              tag_69
              jumpi
                /* "contracts/InterestRateModel.sol":2585:2601  AlreadyMatured() */
              mload(0x40)
              shl(0xe5, 0x05a29e11)
              dup2
              mstore
              0x04
              add
              mload(0x40)
              dup1
              swap2
              sub
              swap1
              revert
                /* "contracts/InterestRateModel.sol":2545:2601  if (block.timestamp >= maturity) revert AlreadyMatured() */
            tag_69:
                /* "contracts/InterestRateModel.sol":2608:2631  uint256 potentialAssets */
              0x00
                /* "contracts/InterestRateModel.sol":2634:2657  supplied + backupAssets */
              tag_70
                /* "contracts/InterestRateModel.sol":2645:2657  backupAssets */
              dup4
                /* "contracts/InterestRateModel.sol":2634:2642  supplied */
              dup6
                /* "contracts/InterestRateModel.sol":2634:2657  supplied + backupAssets */
              tag_55
              jump	// in
            tag_70:
                /* "contracts/InterestRateModel.sol":2608:2657  uint256 potentialAssets = supplied + backupAssets */
              swap1
              pop
                /* "contracts/InterestRateModel.sol":2663:2687  uint256 utilizationAfter */
              0x00
                /* "contracts/InterestRateModel.sol":2690:2735  (borrowed + amount).divWadUp(potentialAssets) */
              tag_71
                /* "contracts/InterestRateModel.sol":2608:2657  uint256 potentialAssets = supplied + backupAssets */
              dup3
                /* "contracts/InterestRateModel.sol":2691:2708  borrowed + amount */
              tag_72
                /* "contracts/InterestRateModel.sol":2702:2708  amount */
              dup10
                /* "contracts/InterestRateModel.sol":2691:2699  borrowed */
              dup10
                /* "contracts/InterestRateModel.sol":2691:2708  borrowed + amount */
              tag_55
              jump	// in
            tag_72:
                /* "contracts/InterestRateModel.sol":2690:2718  (borrowed + amount).divWadUp */
              swap1
              tag_56
                /* "contracts/InterestRateModel.sol":2690:2735  (borrowed + amount).divWadUp(potentialAssets) */
              jump	// in
            tag_71:
                /* "contracts/InterestRateModel.sol":2663:2735  uint256 utilizationAfter = (borrowed + amount).divWadUp(potentialAssets) */
              swap1
              pop
                /* "contracts/InterestRateModel.sol":2765:2769  1e18 */
              0x0de0b6b3a7640000
                /* "contracts/InterestRateModel.sol":2746:2762  utilizationAfter */
              dup2
                /* "contracts/InterestRateModel.sol":2746:2769  utilizationAfter > 1e18 */
              gt
                /* "contracts/InterestRateModel.sol":2742:2799  if (utilizationAfter > 1e18) revert UtilizationExceeded() */
              iszero
              tag_73
              jumpi
                /* "contracts/InterestRateModel.sol":2778:2799  UtilizationExceeded() */
              mload(0x40)
              shl(0xe0, 0x86a8c2bd)
              dup2
              mstore
              0x04
              add
              mload(0x40)
              dup1
              swap2
              sub
              swap1
              revert
                /* "contracts/InterestRateModel.sol":2742:2799  if (utilizationAfter > 1e18) revert UtilizationExceeded() */
            tag_73:
                /* "contracts/InterestRateModel.sol":2806:2831  uint256 utilizationBefore */
              0x00
                /* "contracts/InterestRateModel.sol":2834:2870  borrowed.divWadDown(potentialAssets) */
              tag_74
                /* "contracts/InterestRateModel.sol":2834:2842  borrowed */
              dup8
                /* "contracts/InterestRateModel.sol":2854:2869  potentialAssets */
              dup5
                /* "contracts/InterestRateModel.sol":2834:2853  borrowed.divWadDown */
              tag_49
                /* "contracts/InterestRateModel.sol":2834:2870  borrowed.divWadDown(potentialAssets) */
              jump	// in
            tag_74:
                /* "contracts/InterestRateModel.sol":2806:2870  uint256 utilizationBefore = borrowed.divWadDown(potentialAssets) */
              swap1
              pop
                /* "contracts/InterestRateModel.sol":2884:2979  fixedRate(utilizationBefore, utilizationAfter).mulDivDown(maturity - block.timestamp, 365 days) */
              tag_75
                /* "contracts/InterestRateModel.sol":2942:2968  maturity - block.timestamp */
              tag_76
                /* "contracts/InterestRateModel.sol":2953:2968  block.timestamp */
              timestamp
                /* "contracts/InterestRateModel.sol":2942:2950  maturity */
              dup12
                /* "contracts/InterestRateModel.sol":2942:2968  maturity - block.timestamp */
              tag_62
              jump	// in
            tag_76:
                /* "contracts/InterestRateModel.sol":2970:2978  365 days */
              0x01e13380
                /* "contracts/InterestRateModel.sol":2884:2930  fixedRate(utilizationBefore, utilizationAfter) */
              tag_77
                /* "contracts/InterestRateModel.sol":2894:2911  utilizationBefore */
              dup5
                /* "contracts/InterestRateModel.sol":2913:2929  utilizationAfter */
              dup7
                /* "contracts/InterestRateModel.sol":2884:2893  fixedRate */
              tag_58
                /* "contracts/InterestRateModel.sol":2884:2930  fixedRate(utilizationBefore, utilizationAfter) */
              jump	// in
            tag_77:
                /* "contracts/InterestRateModel.sol":2884:2941  fixedRate(utilizationBefore, utilizationAfter).mulDivDown */
              swap2
                /* "contracts/InterestRateModel.sol":2884:2979  fixedRate(utilizationBefore, utilizationAfter).mulDivDown(maturity - block.timestamp, 365 days) */
              swap1
                /* "contracts/InterestRateModel.sol":2884:2941  fixedRate(utilizationBefore, utilizationAfter).mulDivDown */
              tag_51
                /* "contracts/InterestRateModel.sol":2884:2979  fixedRate(utilizationBefore, utilizationAfter).mulDivDown(maturity - block.timestamp, 365 days) */
              jump	// in
            tag_75:
                /* "contracts/InterestRateModel.sol":2877:2979  return fixedRate(utilizationBefore, utilizationAfter).mulDivDown(maturity - block.timestamp, 365 days) */
              swap10
                /* "contracts/InterestRateModel.sol":2366:2984  function fixedBorrowRate(... */
              swap9
              pop
              pop
              pop
              pop
              pop
              pop
              pop
              pop
              pop
              jump	// out
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":874:1038  function divWadDown(uint256 x, uint256 y) internal pure returns (uint256) {... */
            tag_49:
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":939:946  uint256 */
              0x00
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":965:986  mulDivDown(x, WAD, y) */
              tag_79
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":976:977  x */
              dup4
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":491:495  1e18 */
              0x0de0b6b3a7640000
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":984:985  y */
              dup5
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":965:975  mulDivDown */
              tag_51
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":965:986  mulDivDown(x, WAD, y) */
              jump	// in
            tag_79:
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":958:986  return mulDivDown(x, WAD, y) */
              swap4
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":874:1038  function divWadDown(uint256 x, uint256 y) internal pure returns (uint256) {... */
              swap3
              pop
              pop
              pop
              jump	// out
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":4596:7543  function lnWad(int256 x) internal pure returns (int256 r) {... */
            tag_50:
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":4644:4652  int256 r */
              0x00
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":4700:4701  0 */
              dup1
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":4696:4697  x */
              dup3
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":4696:4701  x > 0 */
              sgt
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":4688:4715  require(x > 0, "UNDEFINED") */
              tag_81
              jumpi
              0x00
              dup1
              revert
            tag_81:
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":5107:5115  int256 k */
              0x00
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":5145:5147  96 */
              0x60
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":5125:5141  log2(uint256(x)) */
              tag_82
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":5138:5139  x */
              dup5
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":5125:5129  log2 */
              tag_83
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":5125:5141  log2(uint256(x)) */
              jump	// in
            tag_82:
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":5118:5147  int256(log2(uint256(x))) - 96 */
              sub
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":5175:5178  159 */
              0x9f
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":5175:5182  159 - k */
              dup2
              dup2
              sub
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":5161:5183  x <<= uint256(159 - k) */
              swap5
              swap1
              swap5
              shl
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":5208:5225  uint256(x) >> 159 */
              swap1
              swap4
              shr
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":6001:6032  5573035233440673466300451813936 */
              0x465772b2bbbb5f824b15207a30
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":5997:6032  x + 5573035233440673466300451813936 */
              dup2
              add
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":6052:6057  q * x */
              dup2
              mul
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":5459:5461  96 */
              0x60
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":6051:6064  (q * x) >> 96 */
              swap1
              dup2
              sar
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":6068:6100  71694874799317883764090561454958 */
              0x0388eaa27412d5aca026815d636e
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":6050:6100  ((q * x) >> 96) + 71694874799317883764090561454958 */
              add
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":6120:6125  q * x */
              dup3
              mul
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":6119:6132  (q * x) >> 96 */
              dup2
              sar
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":6136:6169  283447036172924575727196451306956 */
              0x0df99ac502031bf953eff472fdcc
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":6118:6169  ((q * x) >> 96) + 283447036172924575727196451306956 */
              add
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":6189:6194  q * x */
              dup3
              mul
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":6188:6201  (q * x) >> 96 */
              dup2
              sar
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":6205:6238  401686690394027663651624208769553 */
              0x13cdffb29d51d99322bdff5f2211
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":6187:6238  ((q * x) >> 96) + 401686690394027663651624208769553 */
              add
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":6258:6263  q * x */
              dup3
              mul
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":6257:6270  (q * x) >> 96 */
              dup2
              sar
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":6274:6307  204048457590392012362485061816622 */
              0x0a0f742023def783a307a986912e
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":6256:6307  ((q * x) >> 96) + 204048457590392012362485061816622 */
              add
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":6327:6332  q * x */
              dup3
              mul
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":6326:6339  (q * x) >> 96 */
              dup2
              sar
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":6343:6375  31853899698501571402653359427138 */
              0x01920d8043ca89b5239253284e42
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":6325:6375  ((q * x) >> 96) + 31853899698501571402653359427138 */
              add
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":6395:6400  q * x */
              dup3
              mul
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":6394:6407  (q * x) >> 96 */
              dup2
              sar
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":6411:6441  909429971244387300277376558375 */
              0x0b7a86d7375468fac667a0a527
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":6393:6441  ((q * x) >> 96) + 909429971244387300277376558375 */
              add
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":5398:5429  3273285459638523848632254066296 */
              0x29508e458543d8aa4df2abee78
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":5394:5429  x + 3273285459638523848632254066296 */
              dup4
              add
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":5449:5454  p * x */
              dup4
              mul
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":5448:5461  (p * x) >> 96 */
              dup3
              sar
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":5465:5497  24828157081833163892658089445524 */
              0x0139601a2efabe717e604cbb4894
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":5447:5497  ((p * x) >> 96) + 24828157081833163892658089445524 */
              add
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":5517:5522  p * x */
              dup4
              mul
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":5516:5529  (p * x) >> 96 */
              dup3
              sar
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":5533:5565  43456485725739037958740375743393 */
              0x02247f7a7b6594320649aa03aba1
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":5515:5565  ((p * x) >> 96) + 43456485725739037958740375743393 */
              add
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":5585:5590  p * x */
              dup4
              mul
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":5584:5597  (p * x) >> 96 */
              dup3
              sar
              not(0x8c3f38e95a6b1ff2ab1c3b3436)
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":5583:5633  ((p * x) >> 96) - 11111509109440967052023855526967 */
              add
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":5653:5658  p * x */
              dup4
              mul
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":5652:5665  (p * x) >> 96 */
              dup3
              sar
              not(0x02384773bdf1ac5676facced6090)
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":5651:5701  ((p * x) >> 96) - 45023709667254063763336534515857 */
              add
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":5721:5726  p * x */
              dup4
              mul
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":5720:5733  (p * x) >> 96 */
              swap1
              swap2
              sar
              not(0xb9a025d814b29c212b8b1a07cd)
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":5719:5769  ((p * x) >> 96) - 14706773417378608786704636184526 */
              add
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":5787:5792  p * x */
              swap1
              swap2
              mul
              not(0x0a09507084cc699bb0e71ea869ffffffffffffffffffffffff)
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":5787:5833  p * x - (795164235651350426258249787498 << 96) */
              add
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":6735:6745  sdiv(p, q) */
              sdiv
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":7125:7168  1677202110996718588342820967067443963516166 */
              0x1340daa0d5f769dba1915cef59f0815a5506
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":7120:7168  r *= 1677202110996718588342820967067443963516166 */
              mul
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":7232:7303  16597577552685614221487285958193947469193820559219878177908093499208371 */
              0x0267a36c0c95b3975ab3ee5b203a7614a3f75373f047d803ae7b6687f2b3
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":7232:7307  16597577552685614221487285958193947469193820559219878177908093499208371 * k */
              swap4
              swap1
              swap4
              mul
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":7227:7307  r += 16597577552685614221487285958193947469193820559219878177908093499208371 * k */
              swap3
              swap1
              swap3
              add
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":7380:7452  600920179829731861736702779321621459595472258049074101567377883020018308 */
              0x57115e47018c7177eebf7cd370a3356a1b7863008a5ae8028c72b8864284
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":7375:7452  r += 600920179829731861736702779321621459595472258049074101567377883020018308 */
              add
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":7523:7526  174 */
              0xae
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":7517:7526  r >>= 174 */
              sar
              swap3
              swap2
              pop
              pop
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":4596:7543  function lnWad(int256 x) internal pure returns (int256 r) {... */
              jump	// out
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":7741:8276  function mulDivDown(... */
            tag_51:
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":7947:7956  mul(x, y) */
              dup3
              dup3
              mul
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":8078:8097  iszero(denominator) */
              dup2
              iszero
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":8071:8098  iszero(iszero(denominator)) */
              iszero
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":8103:8112  iszero(x) */
              dup5
              iszero
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":8117:8126  div(z, x) */
              dup6
              dup4
              div
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":8114:8130  eq(div(z, x), y) */
              dup6
              eq
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":8100:8131  or(iszero(x), eq(div(z, x), y)) */
              or
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":8067:8132  and(iszero(iszero(denominator)), or(iszero(x), eq(div(z, x), y))) */
              and
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":8057:8178  if iszero(and(iszero(iszero(denominator)), or(iszero(x), eq(div(z, x), y)))) {... */
              tag_85
              jumpi
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":8162:8163  0 */
              0x00
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":8159:8160  0 */
              dup1
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":8152:8164  revert(0, 0) */
              revert
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":8057:8178  if iszero(and(iszero(iszero(denominator)), or(iszero(x), eq(div(z, x), y)))) {... */
            tag_85:
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":8241:8260  div(z, denominator) */
              div
              swap3
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":7741:8276  function mulDivDown(... */
              swap2
              pop
              pop
              jump	// out
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":1044:1202  function divWadUp(uint256 x, uint256 y) internal pure returns (uint256) {... */
            tag_56:
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":1107:1114  uint256 */
              0x00
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":1133:1152  mulDivUp(x, WAD, y) */
              tag_79
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":1142:1143  x */
              dup4
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":491:495  1e18 */
              0x0de0b6b3a7640000
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":1150:1151  y */
              dup5
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":1133:1141  mulDivUp */
              tag_88
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":1133:1152  mulDivUp(x, WAD, y) */
              jump	// in
                /* "contracts/InterestRateModel.sol":4233:4983  function fixedRate(uint256 utilizationBefore, uint256 utilizationAfter) internal view returns (uint256) {... */
            tag_58:
                /* "contracts/InterestRateModel.sol":4328:4335  uint256 */
              0x00
              dup1
                /* "contracts/InterestRateModel.sol":4359:4398  fixedMaxUtilization - utilizationBefore */
              tag_90
                /* "contracts/InterestRateModel.sol":4381:4398  utilizationBefore */
              dup5
                /* "contracts/InterestRateModel.sol":4359:4378  fixedMaxUtilization */
              immutable("0x535ebbacc766b9aec6eaef74a72c1c73399b3f83af81812ea51294501adf4ccf")
                /* "contracts/InterestRateModel.sol":4359:4398  fixedMaxUtilization - utilizationBefore */
              tag_62
              jump	// in
            tag_90:
                /* "contracts/InterestRateModel.sol":4343:4398  uint256 alpha = fixedMaxUtilization - utilizationBefore */
              swap1
              pop
                /* "contracts/InterestRateModel.sol":4404:4417  uint256 delta */
              0x00
                /* "contracts/InterestRateModel.sol":4420:4456  utilizationAfter - utilizationBefore */
              tag_91
                /* "contracts/InterestRateModel.sol":4439:4456  utilizationBefore */
              dup6
                /* "contracts/InterestRateModel.sol":4420:4436  utilizationAfter */
              dup6
                /* "contracts/InterestRateModel.sol":4420:4456  utilizationAfter - utilizationBefore */
              tag_62
              jump	// in
            tag_91:
                /* "contracts/InterestRateModel.sol":4404:4456  uint256 delta = utilizationAfter - utilizationBefore */
              swap1
              pop
                /* "contracts/InterestRateModel.sol":4462:4470  int256 r */
              0x00
                /* "contracts/InterestRateModel.sol":4924:4935  fixedCurveB */
              immutable("0xa92a119aeb5e5432887b46772e423cfac2594bfdf681094c34bd022e8c31d0")
                /* "contracts/InterestRateModel.sol":564:570  7.5e14 */
              0x02aa1efb94e000
                /* "contracts/InterestRateModel.sol":4487:4510  delta.divWadDown(alpha) */
              tag_92
                /* "contracts/InterestRateModel.sol":4404:4456  uint256 delta = utilizationAfter - utilizationBefore */
              dup5
                /* "contracts/InterestRateModel.sol":4504:4509  alpha */
              dup7
                /* "contracts/InterestRateModel.sol":4487:4503  delta.divWadDown */
              tag_49
                /* "contracts/InterestRateModel.sol":4487:4510  delta.divWadDown(alpha) */
              jump	// in
            tag_92:
                /* "contracts/InterestRateModel.sol":4487:4532  delta.divWadDown(alpha) < PRECISION_THRESHOLD */
              lt
                /* "contracts/InterestRateModel.sol":4487:4915  delta.divWadDown(alpha) < PRECISION_THRESHOLD... */
              tag_93
              jumpi
                /* "contracts/InterestRateModel.sol":4773:4915  fixedCurveA.mulDivDown(... */
              tag_94
                /* "contracts/InterestRateModel.sol":4815:4887  int256(alpha.divWadDown(fixedMaxUtilization - utilizationAfter)).lnWad() */
              tag_95
                /* "contracts/InterestRateModel.sol":4822:4878  alpha.divWadDown(fixedMaxUtilization - utilizationAfter) */
              tag_96
                /* "contracts/InterestRateModel.sol":4839:4877  fixedMaxUtilization - utilizationAfter */
              tag_97
                /* "contracts/InterestRateModel.sol":4861:4877  utilizationAfter */
              dup10
                /* "contracts/InterestRateModel.sol":4839:4858  fixedMaxUtilization */
              immutable("0x535ebbacc766b9aec6eaef74a72c1c73399b3f83af81812ea51294501adf4ccf")
                /* "contracts/InterestRateModel.sol":4839:4877  fixedMaxUtilization - utilizationAfter */
              tag_62
              jump	// in
            tag_97:
                /* "contracts/InterestRateModel.sol":4822:4827  alpha */
              dup8
              swap1
                /* "contracts/InterestRateModel.sol":4822:4838  alpha.divWadDown */
              tag_49
                /* "contracts/InterestRateModel.sol":4822:4878  alpha.divWadDown(fixedMaxUtilization - utilizationAfter) */
              jump	// in
            tag_96:
                /* "contracts/InterestRateModel.sol":4815:4885  int256(alpha.divWadDown(fixedMaxUtilization - utilizationAfter)).lnWad */
              tag_50
                /* "contracts/InterestRateModel.sol":4815:4887  int256(alpha.divWadDown(fixedMaxUtilization - utilizationAfter)).lnWad() */
              jump	// in
            tag_95:
                /* "contracts/InterestRateModel.sol":4773:4784  fixedCurveA */
              immutable("0x924caa65d1644bcda3c737cb4f972c9170b1e3eb26b1eeba5090c589a3beb7a4")
              swap1
                /* "contracts/InterestRateModel.sol":4900:4905  delta */
              dup6
                /* "contracts/InterestRateModel.sol":4773:4795  fixedCurveA.mulDivDown */
              tag_51
                /* "contracts/InterestRateModel.sol":4773:4915  fixedCurveA.mulDivDown(... */
              jump	// in
            tag_94:
                /* "contracts/InterestRateModel.sol":4487:4915  delta.divWadDown(alpha) < PRECISION_THRESHOLD... */
              jump(tag_109)
            tag_93:
                /* "contracts/InterestRateModel.sol":4761:4762  6 */
              0x06
                /* "contracts/InterestRateModel.sol":4695:4757  fixedCurveA.divWadDown(fixedMaxUtilization - utilizationAfter) */
              tag_99
                /* "contracts/InterestRateModel.sol":4718:4756  fixedMaxUtilization - utilizationAfter */
              tag_100
                /* "contracts/InterestRateModel.sol":4740:4756  utilizationAfter */
              dup9
                /* "contracts/InterestRateModel.sol":4718:4737  fixedMaxUtilization */
              immutable("0x535ebbacc766b9aec6eaef74a72c1c73399b3f83af81812ea51294501adf4ccf")
                /* "contracts/InterestRateModel.sol":4718:4756  fixedMaxUtilization - utilizationAfter */
              tag_62
              jump	// in
            tag_100:
                /* "contracts/InterestRateModel.sol":4695:4706  fixedCurveA */
              immutable("0x924caa65d1644bcda3c737cb4f972c9170b1e3eb26b1eeba5090c589a3beb7a4")
              swap1
                /* "contracts/InterestRateModel.sol":4695:4717  fixedCurveA.divWadDown */
              tag_49
                /* "contracts/InterestRateModel.sol":4695:4757  fixedCurveA.divWadDown(fixedMaxUtilization - utilizationAfter) */
              jump	// in
            tag_99:
                /* "contracts/InterestRateModel.sol":4586:4682  fixedCurveA.mulDivDown(4e18, fixedMaxUtilization - ((utilizationAfter + utilizationBefore) / 2)) */
              tag_101
                /* "contracts/InterestRateModel.sol":4609:4613  4e18 */
              0x3782dace9d900000
                /* "contracts/InterestRateModel.sol":4679:4680  2 */
              0x02
                /* "contracts/InterestRateModel.sol":4639:4675  utilizationAfter + utilizationBefore */
              tag_102
                /* "contracts/InterestRateModel.sol":4658:4675  utilizationBefore */
              dup13
                /* "contracts/InterestRateModel.sol":4639:4655  utilizationAfter */
              dup13
                /* "contracts/InterestRateModel.sol":4639:4675  utilizationAfter + utilizationBefore */
              tag_55
              jump	// in
            tag_102:
                /* "contracts/InterestRateModel.sol":4638:4680  (utilizationAfter + utilizationBefore) / 2 */
              tag_103
              swap2
              swap1
              tag_104
              jump	// in
            tag_103:
                /* "contracts/InterestRateModel.sol":4615:4681  fixedMaxUtilization - ((utilizationAfter + utilizationBefore) / 2) */
              tag_105
              swap1
                /* "contracts/InterestRateModel.sol":4615:4634  fixedMaxUtilization */
              immutable("0x535ebbacc766b9aec6eaef74a72c1c73399b3f83af81812ea51294501adf4ccf")
                /* "contracts/InterestRateModel.sol":4615:4681  fixedMaxUtilization - ((utilizationAfter + utilizationBefore) / 2) */
              tag_62
              jump	// in
            tag_105:
                /* "contracts/InterestRateModel.sol":4586:4597  fixedCurveA */
              immutable("0x924caa65d1644bcda3c737cb4f972c9170b1e3eb26b1eeba5090c589a3beb7a4")
              swap2
                /* "contracts/InterestRateModel.sol":4586:4682  fixedCurveA.mulDivDown(4e18, fixedMaxUtilization - ((utilizationAfter + utilizationBefore) / 2)) */
              swap1
                /* "contracts/InterestRateModel.sol":4586:4608  fixedCurveA.mulDivDown */
              tag_51
                /* "contracts/InterestRateModel.sol":4586:4682  fixedCurveA.mulDivDown(4e18, fixedMaxUtilization - ((utilizationAfter + utilizationBefore) / 2)) */
              jump	// in
            tag_101:
                /* "contracts/InterestRateModel.sol":4544:4573  fixedCurveA.divWadDown(alpha) */
              tag_106
                /* "contracts/InterestRateModel.sol":4544:4555  fixedCurveA */
              immutable("0x924caa65d1644bcda3c737cb4f972c9170b1e3eb26b1eeba5090c589a3beb7a4")
                /* "contracts/InterestRateModel.sol":4567:4572  alpha */
              dup9
                /* "contracts/InterestRateModel.sol":4544:4566  fixedCurveA.divWadDown */
              tag_49
                /* "contracts/InterestRateModel.sol":4544:4573  fixedCurveA.divWadDown(alpha) */
              jump	// in
            tag_106:
                /* "contracts/InterestRateModel.sol":4544:4682  fixedCurveA.divWadDown(alpha) +... */
              tag_107
              swap2
              swap1
              tag_55
              jump	// in
            tag_107:
                /* "contracts/InterestRateModel.sol":4544:4757  fixedCurveA.divWadDown(alpha) +... */
              tag_108
              swap2
              swap1
              tag_55
              jump	// in
            tag_108:
                /* "contracts/InterestRateModel.sol":4543:4762  (fixedCurveA.divWadDown(alpha) +... */
              tag_109
              swap2
              swap1
              tag_104
              jump	// in
            tag_109:
                /* "contracts/InterestRateModel.sol":4473:4935  int256(... */
              tag_110
              swap2
              swap1
              tag_64
              jump	// in
            tag_110:
                /* "contracts/InterestRateModel.sol":4462:4935  int256 r = int256(... */
              swap1
              pop
                /* "contracts/InterestRateModel.sol":4953:4954  0 */
              0x00
                /* "contracts/InterestRateModel.sol":4948:4949  r */
              dup2
                /* "contracts/InterestRateModel.sol":4948:4954  r >= 0 */
              slt
              iszero
                /* "contracts/InterestRateModel.sol":4941:4955  assert(r >= 0) */
              tag_112
              jumpi
              tag_112
              tag_67
              jump	// in
            tag_112:
                /* "contracts/InterestRateModel.sol":4976:4977  r */
              swap6
                /* "contracts/InterestRateModel.sol":4233:4983  function fixedRate(uint256 utilizationBefore, uint256 utilizationAfter) internal view returns (uint256) {... */
              swap5
              pop
              pop
              pop
              pop
              pop
              jump	// out
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":15328:15903  function log2(uint256 x) internal pure returns (uint256 r) {... */
            tag_83:
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":15376:15385  uint256 r */
              0x00
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":15409:15410  0 */
              dup1
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":15405:15406  x */
              dup3
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":15405:15410  x > 0 */
              gt
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":15397:15424  require(x > 0, "UNDEFINED") */
              tag_114
              jumpi
              0x00
              dup1
              revert
            tag_114:
              pop
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":15821:15822  1 */
              0x01
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":15473:15507  0xffffffffffffffffffffffffffffffff */
              0xffffffffffffffffffffffffffffffff
              dup3
              gt
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":15467:15468  7 */
              0x07
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":15463:15512  shl(7, lt(0xffffffffffffffffffffffffffffffff, x)) */
              shl
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":15566:15575  shr(r, x) */
              dup3
              dup2
              shr
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":15546:15564  0xffffffffffffffff */
              0xffffffffffffffff
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":15543:15576  lt(0xffffffffffffffff, shr(r, x)) */
              lt
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":15540:15541  6 */
              0x06
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":15536:15577  shl(6, lt(0xffffffffffffffff, shr(r, x))) */
              shl
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":15530:15578  or(r, shl(6, lt(0xffffffffffffffff, shr(r, x)))) */
              or
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":15624:15633  shr(r, x) */
              dup3
              dup2
              shr
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":15612:15622  0xffffffff */
              0xffffffff
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":15609:15634  lt(0xffffffff, shr(r, x)) */
              lt
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":15606:15607  5 */
              0x05
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":15602:15635  shl(5, lt(0xffffffff, shr(r, x))) */
              shl
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":15596:15636  or(r, shl(5, lt(0xffffffff, shr(r, x)))) */
              or
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":15678:15687  shr(r, x) */
              dup3
              dup2
              shr
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":15670:15676  0xffff */
              0xffff
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":15667:15688  lt(0xffff, shr(r, x)) */
              lt
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":15664:15665  4 */
              0x04
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":15660:15689  shl(4, lt(0xffff, shr(r, x))) */
              shl
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":15654:15690  or(r, shl(4, lt(0xffff, shr(r, x)))) */
              or
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":15730:15739  shr(r, x) */
              dup3
              dup2
              shr
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":15724:15728  0xff */
              0xff
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":15721:15740  lt(0xff, shr(r, x)) */
              lt
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":15718:15719  3 */
              0x03
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":15714:15741  shl(3, lt(0xff, shr(r, x))) */
              swap1
              dup2
              shl
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":15708:15742  or(r, shl(3, lt(0xff, shr(r, x)))) */
              swap1
              swap2
              or
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":15781:15790  shr(r, x) */
              dup4
              dup2
              shr
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":15776:15779  0xf */
              0x0f
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":15773:15791  lt(0xf, shr(r, x)) */
              lt
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":15770:15771  2 */
              0x02
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":15766:15792  shl(2, lt(0xf, shr(r, x))) */
              shl
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":15760:15793  or(r, shl(2, lt(0xf, shr(r, x)))) */
              or
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":15832:15841  shr(r, x) */
              dup4
              dup2
              shr
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":15824:15842  lt(0x3, shr(r, x)) */
              swap1
              swap2
              lt
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":15817:15843  shl(1, lt(0x3, shr(r, x))) */
              dup3
              shl
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":15811:15844  or(r, shl(1, lt(0x3, shr(r, x)))) */
              or
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":15876:15885  shr(r, x) */
              swap2
              dup3
              shr
              gt
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":15862:15887  or(r, lt(0x1, shr(r, x))) */
              or
              swap1
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":15328:15903  function log2(uint256 x) internal pure returns (uint256 r) {... */
              jump	// out
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":8282:9034  function mulDivUp(... */
            tag_88:
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":8486:8495  mul(x, y) */
              dup3
              dup3
              mul
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":8617:8636  iszero(denominator) */
              dup2
              iszero
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":8610:8637  iszero(iszero(denominator)) */
              iszero
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":8642:8651  iszero(x) */
              dup5
              iszero
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":8656:8665  div(z, x) */
              dup6
              dup4
              div
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":8653:8669  eq(div(z, x), y) */
              dup6
              eq
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":8639:8670  or(iszero(x), eq(div(z, x), y)) */
              or
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":8606:8671  and(iszero(iszero(denominator)), or(iszero(x), eq(div(z, x), y))) */
              and
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":8596:8717  if iszero(and(iszero(iszero(denominator)), or(iszero(x), eq(div(z, x), y)))) {... */
              tag_116
              jumpi
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":8701:8702  0 */
              0x00
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":8698:8699  0 */
              dup1
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":8691:8703  revert(0, 0) */
              revert
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":8596:8717  if iszero(and(iszero(iszero(denominator)), or(iszero(x), eq(div(z, x), y)))) {... */
            tag_116:
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":9015:9016  1 */
              0x01
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":9001:9012  denominator */
              dup3
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":8997:8998  1 */
              0x01
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":8994:8995  z */
              dup4
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":8990:8999  sub(z, 1) */
              sub
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":8986:9013  div(sub(z, 1), denominator) */
              div
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":8982:9017  add(div(sub(z, 1), denominator), 1) */
              add
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":8977:8978  z */
              dup2
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":8970:8979  iszero(z) */
              iszero
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":8963:8980  iszero(iszero(z)) */
              iszero
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":8959:9018  mul(iszero(iszero(z)), add(div(sub(z, 1), denominator), 1)) */
              mul
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":8954:9018  z := mul(iszero(iszero(z)), add(div(sub(z, 1), denominator), 1)) */
              swap1
              pop
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":8282:9034  function mulDivUp(... */
              swap4
              swap3
              pop
              pop
              pop
              jump	// out
                /* "#utility.yul":376:692   */
            tag_26:
                /* "#utility.yul":453:459   */
              0x00
                /* "#utility.yul":461:467   */
              dup1
                /* "#utility.yul":469:475   */
              0x00
                /* "#utility.yul":522:524   */
              0x60
                /* "#utility.yul":510:519   */
              dup5
                /* "#utility.yul":501:508   */
              dup7
                /* "#utility.yul":497:520   */
              sub
                /* "#utility.yul":493:525   */
              slt
                /* "#utility.yul":490:542   */
              iszero
              tag_122
              jumpi
                /* "#utility.yul":538:539   */
              0x00
                /* "#utility.yul":535:536   */
              dup1
                /* "#utility.yul":528:540   */
              revert
                /* "#utility.yul":490:542   */
            tag_122:
              pop
              pop
                /* "#utility.yul":561:584   */
              dup2
              calldataload
              swap4
                /* "#utility.yul":631:633   */
              0x20
                /* "#utility.yul":616:634   */
              dup4
              add
                /* "#utility.yul":603:635   */
              calldataload
              swap4
              pop
                /* "#utility.yul":682:684   */
              0x40
                /* "#utility.yul":667:685   */
              swap1
              swap3
              add
                /* "#utility.yul":654:686   */
              calldataload
              swap2
                /* "#utility.yul":376:692   */
              swap1
              pop
              jump	// out
                /* "#utility.yul":950:1130   */
            tag_32:
                /* "#utility.yul":1009:1015   */
              0x00
                /* "#utility.yul":1062:1064   */
              0x20
                /* "#utility.yul":1050:1059   */
              dup3
                /* "#utility.yul":1041:1048   */
              dup5
                /* "#utility.yul":1037:1060   */
              sub
                /* "#utility.yul":1033:1065   */
              slt
                /* "#utility.yul":1030:1082   */
              iszero
              tag_125
              jumpi
                /* "#utility.yul":1078:1079   */
              0x00
                /* "#utility.yul":1075:1076   */
              dup1
                /* "#utility.yul":1068:1080   */
              revert
                /* "#utility.yul":1030:1082   */
            tag_125:
              pop
                /* "#utility.yul":1101:1124   */
              calldataload
              swap2
                /* "#utility.yul":950:1130   */
              swap1
              pop
              jump	// out
                /* "#utility.yul":1135:1589   */
            tag_43:
                /* "#utility.yul":1230:1236   */
              0x00
                /* "#utility.yul":1238:1244   */
              dup1
                /* "#utility.yul":1246:1252   */
              0x00
                /* "#utility.yul":1254:1260   */
              dup1
                /* "#utility.yul":1262:1268   */
              0x00
                /* "#utility.yul":1315:1318   */
              0xa0
                /* "#utility.yul":1303:1312   */
              dup7
                /* "#utility.yul":1294:1301   */
              dup9
                /* "#utility.yul":1290:1313   */
              sub
                /* "#utility.yul":1286:1319   */
              slt
                /* "#utility.yul":1283:1336   */
              iszero
              tag_127
              jumpi
                /* "#utility.yul":1332:1333   */
              0x00
                /* "#utility.yul":1329:1330   */
              dup1
                /* "#utility.yul":1322:1334   */
              revert
                /* "#utility.yul":1283:1336   */
            tag_127:
              pop
              pop
                /* "#utility.yul":1355:1378   */
              dup4
              calldataload
              swap6
                /* "#utility.yul":1425:1427   */
              0x20
                /* "#utility.yul":1410:1428   */
              dup6
              add
                /* "#utility.yul":1397:1429   */
              calldataload
              swap6
              pop
                /* "#utility.yul":1476:1478   */
              0x40
                /* "#utility.yul":1461:1479   */
              dup6
              add
                /* "#utility.yul":1448:1480   */
              calldataload
              swap5
                /* "#utility.yul":1527:1529   */
              0x60
                /* "#utility.yul":1512:1530   */
              dup2
              add
                /* "#utility.yul":1499:1531   */
              calldataload
              swap5
              pop
                /* "#utility.yul":1578:1581   */
              0x80
                /* "#utility.yul":1563:1582   */
              add
                /* "#utility.yul":1550:1583   */
              calldataload
              swap3
              pop
                /* "#utility.yul":1135:1589   */
              swap1
              pop
              jump	// out
                /* "#utility.yul":1594:1721   */
            tag_117:
                /* "#utility.yul":1655:1665   */
              0x4e487b71
                /* "#utility.yul":1650:1653   */
              0xe0
                /* "#utility.yul":1646:1666   */
              shl
                /* "#utility.yul":1643:1644   */
              0x00
                /* "#utility.yul":1636:1667   */
              mstore
                /* "#utility.yul":1686:1690   */
              0x11
                /* "#utility.yul":1683:1684   */
              0x04
                /* "#utility.yul":1676:1691   */
              mstore
                /* "#utility.yul":1710:1714   */
              0x24
                /* "#utility.yul":1707:1708   */
              0x00
                /* "#utility.yul":1700:1715   */
              revert
                /* "#utility.yul":1726:1851   */
            tag_55:
                /* "#utility.yul":1791:1800   */
              dup1
              dup3
              add
                /* "#utility.yul":1812:1822   */
              dup1
              dup3
              gt
                /* "#utility.yul":1809:1845   */
              iszero
              tag_66
              jumpi
                /* "#utility.yul":1825:1843   */
              tag_66
              tag_117
              jump	// in
                /* "#utility.yul":1856:1984   */
            tag_62:
                /* "#utility.yul":1923:1932   */
              dup2
              dup2
              sub
                /* "#utility.yul":1944:1955   */
              dup2
              dup2
              gt
                /* "#utility.yul":1941:1978   */
              iszero
              tag_66
              jumpi
                /* "#utility.yul":1958:1976   */
              tag_66
              tag_117
              jump	// in
                /* "#utility.yul":1989:2205   */
            tag_64:
                /* "#utility.yul":2053:2062   */
              dup1
              dup3
              add
                /* "#utility.yul":2081:2092   */
              dup3
              dup2
              slt
                /* "#utility.yul":2028:2031   */
              0x00
                /* "#utility.yul":2111:2120   */
              dup4
              slt
                /* "#utility.yul":2139:2149   */
              dup1
              iszero
                /* "#utility.yul":2135:2154   */
              dup3
              and
                /* "#utility.yul":2164:2174   */
              dup3
              iszero
                /* "#utility.yul":2156:2175   */
              dup3
              and
                /* "#utility.yul":2132:2176   */
              or
                /* "#utility.yul":2129:2199   */
              iszero
              tag_137
              jumpi
                /* "#utility.yul":2179:2197   */
              tag_137
              tag_117
              jump	// in
            tag_137:
                /* "#utility.yul":2129:2199   */
              pop
              pop
                /* "#utility.yul":1989:2205   */
              swap3
              swap2
              pop
              pop
              jump	// out
                /* "#utility.yul":2210:2337   */
            tag_67:
                /* "#utility.yul":2271:2281   */
              0x4e487b71
                /* "#utility.yul":2266:2269   */
              0xe0
                /* "#utility.yul":2262:2282   */
              shl
                /* "#utility.yul":2259:2260   */
              0x00
                /* "#utility.yul":2252:2283   */
              mstore
                /* "#utility.yul":2302:2306   */
              0x01
                /* "#utility.yul":2299:2300   */
              0x04
                /* "#utility.yul":2292:2307   */
              mstore
                /* "#utility.yul":2326:2330   */
              0x24
                /* "#utility.yul":2323:2324   */
              0x00
                /* "#utility.yul":2316:2331   */
              revert
                /* "#utility.yul":2342:2559   */
            tag_104:
                /* "#utility.yul":2382:2383   */
              0x00
                /* "#utility.yul":2408:2409   */
              dup3
                /* "#utility.yul":2398:2530   */
              tag_140
              jumpi
                /* "#utility.yul":2452:2462   */
              0x4e487b71
                /* "#utility.yul":2447:2450   */
              0xe0
                /* "#utility.yul":2443:2463   */
              shl
                /* "#utility.yul":2440:2441   */
              0x00
                /* "#utility.yul":2433:2464   */
              mstore
                /* "#utility.yul":2487:2491   */
              0x12
                /* "#utility.yul":2484:2485   */
              0x04
                /* "#utility.yul":2477:2492   */
              mstore
                /* "#utility.yul":2515:2519   */
              0x24
                /* "#utility.yul":2512:2513   */
              0x00
                /* "#utility.yul":2505:2520   */
              revert
                /* "#utility.yul":2398:2530   */
            tag_140:
              pop
                /* "#utility.yul":2544:2553   */
              div
              swap1
                /* "#utility.yul":2342:2559   */
              jump	// out

            auxdata: 0xa26469706673582212205567581fdfbd735e77dc0fc0b5e8d602a1415e3e4b512b293fe66a7c77b23d1864736f6c63430008110033
        }
    }

    sub_3: assembly {
            /* "node_modules/solmate/src/test/utils/mocks/MockERC20.sol":108:476  contract MockERC20 is ERC20 {... */
          mstore(0x40, 0xe0)
            /* "node_modules/solmate/src/test/utils/mocks/MockERC20.sol":142:280  constructor(... */
          callvalue
          dup1
          iszero
          tag_1
          jumpi
          0x00
          dup1
          revert
        tag_1:
          pop
          mload(0x40)
          sub(codesize, bytecodeSize)
          dup1
          bytecodeSize
          dup4
          codecopy
          dup2
          add
          0x40
          dup2
          swap1
          mstore
          tag_2
          swap2
          tag_3
          jump	// in
        tag_2:
            /* "node_modules/solmate/src/test/utils/mocks/MockERC20.sol":251:256  _name */
          dup3
            /* "node_modules/solmate/src/test/utils/mocks/MockERC20.sol":258:265  _symbol */
          dup3
            /* "node_modules/solmate/src/test/utils/mocks/MockERC20.sol":267:276  _decimals */
          dup3
            /* "node_modules/solmate/src/tokens/ERC20.sol":2081:2085  name */
          0x00
            /* "node_modules/solmate/src/tokens/ERC20.sol":2081:2093  name = _name */
          tag_7
            /* "node_modules/solmate/src/test/utils/mocks/MockERC20.sol":251:256  _name */
          dup5
            /* "node_modules/solmate/src/tokens/ERC20.sol":2081:2085  name */
          dup3
            /* "node_modules/solmate/src/tokens/ERC20.sol":2081:2093  name = _name */
          tag_8
          jump	// in
        tag_7:
          pop
            /* "node_modules/solmate/src/tokens/ERC20.sol":2103:2109  symbol */
          0x01
            /* "node_modules/solmate/src/tokens/ERC20.sol":2103:2119  symbol = _symbol */
          tag_9
            /* "node_modules/solmate/src/tokens/ERC20.sol":2112:2119  _symbol */
          dup4
            /* "node_modules/solmate/src/tokens/ERC20.sol":2103:2109  symbol */
          dup3
            /* "node_modules/solmate/src/tokens/ERC20.sol":2103:2119  symbol = _symbol */
          tag_8
          jump	// in
        tag_9:
          pop
            /* "node_modules/solmate/src/tokens/ERC20.sol":2129:2149  decimals = _decimals */
          0xff
          dup2
          and
          0x80
          mstore
            /* "node_modules/solmate/src/tokens/ERC20.sol":2179:2192  block.chainid */
          chainid
            /* "node_modules/solmate/src/tokens/ERC20.sol":2160:2192  INITIAL_CHAIN_ID = block.chainid */
          0xa0
          mstore
            /* "node_modules/solmate/src/tokens/ERC20.sol":2229:2253  computeDomainSeparator() */
          tag_10
            /* "node_modules/solmate/src/tokens/ERC20.sol":2229:2251  computeDomainSeparator */
          tag_11
            /* "node_modules/solmate/src/tokens/ERC20.sol":2229:2253  computeDomainSeparator() */
          jump	// in
        tag_10:
            /* "node_modules/solmate/src/tokens/ERC20.sol":2202:2253  INITIAL_DOMAIN_SEPARATOR = computeDomainSeparator() */
          0xc0
          mstore
          pop
            /* "node_modules/solmate/src/test/utils/mocks/MockERC20.sol":108:476  contract MockERC20 is ERC20 {... */
          tag_25
          swap5
          pop
          pop
          pop
          pop
          pop
          jump
            /* "node_modules/solmate/src/tokens/ERC20.sol":5497:5943  function computeDomainSeparator() internal view virtual returns (bytes32) {... */
        tag_11:
            /* "node_modules/solmate/src/tokens/ERC20.sol":5562:5569  bytes32 */
          0x00
            /* "node_modules/solmate/src/tokens/ERC20.sol":5659:5754  keccak256("EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)") */
          0x8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f
            /* "node_modules/solmate/src/tokens/ERC20.sol":5792:5796  name */
          0x00
            /* "node_modules/solmate/src/tokens/ERC20.sol":5776:5798  keccak256(bytes(name)) */
          mload(0x40)
          tag_15
          swap2
          swap1
          tag_16
          jump	// in
        tag_15:
          0x40
          dup1
          mload
          swap2
          dup3
          swap1
          sub
          dup3
          keccak256
            /* "node_modules/solmate/src/tokens/ERC20.sol":5627:5922  abi.encode(... */
          0x20
          dup4
          add
            /* "#utility.yul":5405:5430   */
          swap4
          swap1
          swap4
          mstore
            /* "#utility.yul":5446:5464   */
          dup2
          add
            /* "#utility.yul":5439:5473   */
          swap2
          swap1
          swap2
          mstore
            /* "node_modules/solmate/src/tokens/ERC20.sol":5820:5834  keccak256("1") */
          0xc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6
            /* "#utility.yul":5489:5507   */
          0x60
          dup3
          add
            /* "#utility.yul":5482:5516   */
          mstore
            /* "node_modules/solmate/src/tokens/ERC20.sol":5856:5869  block.chainid */
          chainid
            /* "#utility.yul":5532:5550   */
          0x80
          dup3
          add
            /* "#utility.yul":5525:5559   */
          mstore
            /* "node_modules/solmate/src/tokens/ERC20.sol":5899:5903  this */
          address
            /* "#utility.yul":5575:5594   */
          0xa0
          dup3
          add
            /* "#utility.yul":5568:5629   */
          mstore
            /* "#utility.yul":5377:5396   */
          0xc0
          add
            /* "node_modules/solmate/src/tokens/ERC20.sol":5627:5922  abi.encode(... */
          mload(0x40)
          0x20
          dup2
          dup4
          sub
          sub
          dup2
          mstore
          swap1
          0x40
          mstore
            /* "node_modules/solmate/src/tokens/ERC20.sol":5600:5936  keccak256(... */
          dup1
          mload
          swap1
          0x20
          add
          keccak256
            /* "node_modules/solmate/src/tokens/ERC20.sol":5581:5936  return... */
          swap1
          pop
            /* "node_modules/solmate/src/tokens/ERC20.sol":5497:5943  function computeDomainSeparator() internal view virtual returns (bytes32) {... */
          swap1
          jump	// out
            /* "#utility.yul":14:141   */
        tag_19:
            /* "#utility.yul":75:85   */
          0x4e487b71
            /* "#utility.yul":70:73   */
          0xe0
            /* "#utility.yul":66:86   */
          shl
            /* "#utility.yul":63:64   */
          0x00
            /* "#utility.yul":56:87   */
          mstore
            /* "#utility.yul":106:110   */
          0x41
            /* "#utility.yul":103:104   */
          0x04
            /* "#utility.yul":96:111   */
          mstore
            /* "#utility.yul":130:134   */
          0x24
            /* "#utility.yul":127:128   */
          0x00
            /* "#utility.yul":120:135   */
          revert
            /* "#utility.yul":146:986   */
        tag_20:
            /* "#utility.yul":200:205   */
          0x00
            /* "#utility.yul":253:256   */
          dup3
            /* "#utility.yul":246:250   */
          0x1f
            /* "#utility.yul":238:244   */
          dup4
            /* "#utility.yul":234:251   */
          add
            /* "#utility.yul":230:257   */
          slt
            /* "#utility.yul":220:275   */
          tag_28
          jumpi
            /* "#utility.yul":271:272   */
          0x00
            /* "#utility.yul":268:269   */
          dup1
            /* "#utility.yul":261:273   */
          revert
            /* "#utility.yul":220:275   */
        tag_28:
            /* "#utility.yul":294:307   */
          dup2
          mload
          sub(shl(0x40, 0x01), 0x01)
            /* "#utility.yul":356:366   */
          dup1
          dup3
          gt
            /* "#utility.yul":353:389   */
          iszero
          tag_30
          jumpi
            /* "#utility.yul":369:387   */
          tag_30
          tag_19
          jump	// in
        tag_30:
            /* "#utility.yul":444:446   */
          0x40
            /* "#utility.yul":438:447   */
          mload
            /* "#utility.yul":412:414   */
          0x1f
            /* "#utility.yul":498:511   */
          dup4
          add
          not(0x1f)
            /* "#utility.yul":494:516   */
          swap1
          dup2
          and
            /* "#utility.yul":518:520   */
          0x3f
            /* "#utility.yul":490:521   */
          add
            /* "#utility.yul":486:526   */
          and
            /* "#utility.yul":474:527   */
          dup2
          add
          swap1
            /* "#utility.yul":542:560   */
          dup3
          dup3
          gt
            /* "#utility.yul":562:584   */
          dup2
          dup4
          lt
            /* "#utility.yul":539:585   */
          or
            /* "#utility.yul":536:608   */
          iszero
          tag_32
          jumpi
            /* "#utility.yul":588:606   */
          tag_32
          tag_19
          jump	// in
        tag_32:
            /* "#utility.yul":628:638   */
          dup2
            /* "#utility.yul":624:626   */
          0x40
            /* "#utility.yul":617:639   */
          mstore
            /* "#utility.yul":663:665   */
          dup4
            /* "#utility.yul":655:661   */
          dup2
            /* "#utility.yul":648:666   */
          mstore
            /* "#utility.yul":685:689   */
          0x20
            /* "#utility.yul":675:689   */
          swap3
          pop
            /* "#utility.yul":730:733   */
          dup7
            /* "#utility.yul":725:727   */
          dup4
            /* "#utility.yul":720:722   */
          dup6
            /* "#utility.yul":712:718   */
          dup9
            /* "#utility.yul":708:723   */
          add
            /* "#utility.yul":704:728   */
          add
            /* "#utility.yul":701:734   */
          gt
            /* "#utility.yul":698:751   */
          iszero
          tag_33
          jumpi
            /* "#utility.yul":747:748   */
          0x00
            /* "#utility.yul":744:745   */
          dup1
            /* "#utility.yul":737:749   */
          revert
            /* "#utility.yul":698:751   */
        tag_33:
            /* "#utility.yul":769:770   */
          0x00
            /* "#utility.yul":760:770   */
          swap2
          pop
            /* "#utility.yul":779:912   */
        tag_34:
            /* "#utility.yul":793:795   */
          dup4
            /* "#utility.yul":790:791   */
          dup3
            /* "#utility.yul":787:796   */
          lt
            /* "#utility.yul":779:912   */
          iszero
          tag_36
          jumpi
            /* "#utility.yul":881:895   */
          dup6
          dup3
          add
            /* "#utility.yul":877:900   */
          dup4
          add
            /* "#utility.yul":871:901   */
          mload
            /* "#utility.yul":850:864   */
          dup2
          dup4
          add
            /* "#utility.yul":846:869   */
          dup5
          add
            /* "#utility.yul":839:902   */
          mstore
            /* "#utility.yul":804:814   */
          swap1
          dup3
          add
          swap1
            /* "#utility.yul":779:912   */
          jump(tag_34)
        tag_36:
            /* "#utility.yul":954:955   */
          0x00
            /* "#utility.yul":932:947   */
          swap4
          dup2
          add
            /* "#utility.yul":928:952   */
          swap1
          swap3
          add
            /* "#utility.yul":921:956   */
          swap3
          swap1
          swap3
          mstore
            /* "#utility.yul":936:942   */
          swap5
            /* "#utility.yul":146:986   */
          swap4
          pop
          pop
          pop
          pop
          jump	// out
            /* "#utility.yul":991:1703   */
        tag_3:
            /* "#utility.yul":1097:1103   */
          0x00
            /* "#utility.yul":1105:1111   */
          dup1
            /* "#utility.yul":1113:1119   */
          0x00
            /* "#utility.yul":1166:1168   */
          0x60
            /* "#utility.yul":1154:1163   */
          dup5
            /* "#utility.yul":1145:1152   */
          dup7
            /* "#utility.yul":1141:1164   */
          sub
            /* "#utility.yul":1137:1169   */
          slt
            /* "#utility.yul":1134:1186   */
          iszero
          tag_38
          jumpi
            /* "#utility.yul":1182:1183   */
          0x00
            /* "#utility.yul":1179:1180   */
          dup1
            /* "#utility.yul":1172:1184   */
          revert
            /* "#utility.yul":1134:1186   */
        tag_38:
            /* "#utility.yul":1209:1225   */
          dup4
          mload
          sub(shl(0x40, 0x01), 0x01)
            /* "#utility.yul":1274:1288   */
          dup1
          dup3
          gt
            /* "#utility.yul":1271:1305   */
          iszero
          tag_39
          jumpi
            /* "#utility.yul":1301:1302   */
          0x00
            /* "#utility.yul":1298:1299   */
          dup1
            /* "#utility.yul":1291:1303   */
          revert
            /* "#utility.yul":1271:1305   */
        tag_39:
            /* "#utility.yul":1324:1385   */
          tag_40
            /* "#utility.yul":1377:1384   */
          dup8
            /* "#utility.yul":1368:1374   */
          dup4
            /* "#utility.yul":1357:1366   */
          dup9
            /* "#utility.yul":1353:1375   */
          add
            /* "#utility.yul":1324:1385   */
          tag_20
          jump	// in
        tag_40:
            /* "#utility.yul":1314:1385   */
          swap5
          pop
            /* "#utility.yul":1431:1433   */
          0x20
            /* "#utility.yul":1420:1429   */
          dup7
            /* "#utility.yul":1416:1434   */
          add
            /* "#utility.yul":1410:1435   */
          mload
            /* "#utility.yul":1394:1435   */
          swap2
          pop
            /* "#utility.yul":1460:1462   */
          dup1
            /* "#utility.yul":1450:1458   */
          dup3
            /* "#utility.yul":1447:1463   */
          gt
            /* "#utility.yul":1444:1480   */
          iszero
          tag_41
          jumpi
            /* "#utility.yul":1476:1477   */
          0x00
            /* "#utility.yul":1473:1474   */
          dup1
            /* "#utility.yul":1466:1478   */
          revert
            /* "#utility.yul":1444:1480   */
        tag_41:
          pop
            /* "#utility.yul":1499:1562   */
          tag_42
            /* "#utility.yul":1554:1561   */
          dup7
            /* "#utility.yul":1543:1551   */
          dup3
            /* "#utility.yul":1532:1541   */
          dup8
            /* "#utility.yul":1528:1552   */
          add
            /* "#utility.yul":1499:1562   */
          tag_20
          jump	// in
        tag_42:
            /* "#utility.yul":1489:1562   */
          swap3
          pop
          pop
            /* "#utility.yul":1605:1607   */
          0x40
            /* "#utility.yul":1594:1603   */
          dup5
            /* "#utility.yul":1590:1608   */
          add
            /* "#utility.yul":1584:1609   */
          mload
            /* "#utility.yul":1649:1653   */
          0xff
            /* "#utility.yul":1642:1647   */
          dup2
            /* "#utility.yul":1638:1654   */
          and
            /* "#utility.yul":1631:1636   */
          dup2
            /* "#utility.yul":1628:1655   */
          eq
            /* "#utility.yul":1618:1673   */
          tag_43
          jumpi
            /* "#utility.yul":1669:1670   */
          0x00
            /* "#utility.yul":1666:1667   */
          dup1
            /* "#utility.yul":1659:1671   */
          revert
            /* "#utility.yul":1618:1673   */
        tag_43:
            /* "#utility.yul":1692:1697   */
          dup1
            /* "#utility.yul":1682:1697   */
          swap2
          pop
          pop
            /* "#utility.yul":991:1703   */
          swap3
          pop
          swap3
          pop
          swap3
          jump	// out
            /* "#utility.yul":1708:2088   */
        tag_21:
            /* "#utility.yul":1787:1788   */
          0x01
            /* "#utility.yul":1783:1795   */
          dup2
          dup2
          shr
          swap1
            /* "#utility.yul":1830:1842   */
          dup3
          and
          dup1
            /* "#utility.yul":1851:1912   */
          tag_45
          jumpi
            /* "#utility.yul":1905:1909   */
          0x7f
            /* "#utility.yul":1897:1903   */
          dup3
            /* "#utility.yul":1893:1910   */
          and
            /* "#utility.yul":1883:1910   */
          swap2
          pop
            /* "#utility.yul":1851:1912   */
        tag_45:
            /* "#utility.yul":1958:1960   */
          0x20
            /* "#utility.yul":1950:1956   */
          dup3
            /* "#utility.yul":1947:1961   */
          lt
            /* "#utility.yul":1927:1945   */
          dup2
            /* "#utility.yul":1924:1962   */
          sub
            /* "#utility.yul":1921:2082   */
          tag_46
          jumpi
            /* "#utility.yul":2004:2014   */
          0x4e487b71
            /* "#utility.yul":1999:2002   */
          0xe0
            /* "#utility.yul":1995:2015   */
          shl
            /* "#utility.yul":1992:1993   */
          0x00
            /* "#utility.yul":1985:2016   */
          mstore
            /* "#utility.yul":2039:2043   */
          0x22
            /* "#utility.yul":2036:2037   */
          0x04
            /* "#utility.yul":2029:2044   */
          mstore
            /* "#utility.yul":2067:2071   */
          0x24
            /* "#utility.yul":2064:2065   */
          0x00
            /* "#utility.yul":2057:2072   */
          revert
            /* "#utility.yul":1921:2082   */
        tag_46:
          pop
            /* "#utility.yul":1708:2088   */
          swap2
          swap1
          pop
          jump	// out
            /* "#utility.yul":2219:2764   */
        tag_23:
            /* "#utility.yul":2321:2323   */
          0x1f
            /* "#utility.yul":2316:2319   */
          dup3
            /* "#utility.yul":2313:2324   */
          gt
            /* "#utility.yul":2310:2758   */
          iszero
          tag_49
          jumpi
            /* "#utility.yul":2357:2358   */
          0x00
            /* "#utility.yul":2382:2387   */
          dup2
            /* "#utility.yul":2378:2380   */
          dup2
            /* "#utility.yul":2371:2388   */
          mstore
            /* "#utility.yul":2427:2431   */
          0x20
            /* "#utility.yul":2423:2425   */
          dup2
            /* "#utility.yul":2413:2432   */
          keccak256
            /* "#utility.yul":2497:2499   */
          0x1f
            /* "#utility.yul":2485:2495   */
          dup6
            /* "#utility.yul":2481:2500   */
          add
            /* "#utility.yul":2478:2479   */
          0x05
            /* "#utility.yul":2474:2501   */
          shr
            /* "#utility.yul":2468:2472   */
          dup2
            /* "#utility.yul":2464:2502   */
          add
            /* "#utility.yul":2533:2537   */
          0x20
            /* "#utility.yul":2521:2531   */
          dup7
            /* "#utility.yul":2518:2538   */
          lt
            /* "#utility.yul":2515:2562   */
          iszero
          tag_50
          jumpi
          pop
            /* "#utility.yul":2556:2560   */
          dup1
            /* "#utility.yul":2515:2562   */
        tag_50:
            /* "#utility.yul":2611:2613   */
          0x1f
            /* "#utility.yul":2606:2609   */
          dup6
            /* "#utility.yul":2602:2614   */
          add
            /* "#utility.yul":2599:2600   */
          0x05
            /* "#utility.yul":2595:2615   */
          shr
            /* "#utility.yul":2589:2593   */
          dup3
            /* "#utility.yul":2585:2616   */
          add
            /* "#utility.yul":2575:2616   */
          swap2
          pop
            /* "#utility.yul":2666:2748   */
        tag_51:
            /* "#utility.yul":2684:2686   */
          dup2
            /* "#utility.yul":2677:2682   */
          dup2
            /* "#utility.yul":2674:2687   */
          lt
            /* "#utility.yul":2666:2748   */
          iszero
          tag_53
          jumpi
            /* "#utility.yul":2729:2746   */
          dup3
          dup2
          sstore
            /* "#utility.yul":2710:2711   */
          0x01
            /* "#utility.yul":2699:2712   */
          add
            /* "#utility.yul":2666:2748   */
          jump(tag_51)
        tag_53:
            /* "#utility.yul":2670:2673   */
          pop
          pop
          pop
            /* "#utility.yul":2310:2758   */
        tag_49:
            /* "#utility.yul":2219:2764   */
          pop
          pop
          pop
          jump	// out
            /* "#utility.yul":2940:4292   */
        tag_8:
            /* "#utility.yul":3060:3070   */
          dup2
          mload
          sub(shl(0x40, 0x01), 0x01)
            /* "#utility.yul":3082:3112   */
          dup2
          gt
            /* "#utility.yul":3079:3135   */
          iszero
          tag_57
          jumpi
            /* "#utility.yul":3115:3133   */
          tag_57
          tag_19
          jump	// in
        tag_57:
            /* "#utility.yul":3144:3241   */
          tag_58
            /* "#utility.yul":3234:3240   */
          dup2
            /* "#utility.yul":3194:3232   */
          tag_59
            /* "#utility.yul":3226:3230   */
          dup5
            /* "#utility.yul":3220:3231   */
          sload
            /* "#utility.yul":3194:3232   */
          tag_21
          jump	// in
        tag_59:
            /* "#utility.yul":3188:3192   */
          dup5
            /* "#utility.yul":3144:3241   */
          tag_23
          jump	// in
        tag_58:
            /* "#utility.yul":3296:3300   */
          0x20
          dup1
            /* "#utility.yul":3360:3362   */
          0x1f
            /* "#utility.yul":3349:3363   */
          dup4
          gt
            /* "#utility.yul":3377:3378   */
          0x01
            /* "#utility.yul":3372:4035   */
          dup2
          eq
          tag_61
          jumpi
            /* "#utility.yul":4079:4080   */
          0x00
            /* "#utility.yul":4096:4102   */
          dup5
            /* "#utility.yul":4093:4182   */
          iszero
          tag_62
          jumpi
          pop
            /* "#utility.yul":4148:4167   */
          dup6
          dup4
          add
            /* "#utility.yul":4142:4168   */
          mload
            /* "#utility.yul":4093:4182   */
        tag_62:
          not(0x00)
            /* "#utility.yul":2897:2898   */
          0x03
            /* "#utility.yul":2893:2904   */
          dup7
          swap1
          shl
            /* "#utility.yul":2889:2913   */
          shr
            /* "#utility.yul":2885:2914   */
          not
            /* "#utility.yul":2875:2915   */
          and
            /* "#utility.yul":2921:2922   */
          0x01
            /* "#utility.yul":2917:2928   */
          dup6
          swap1
          shl
            /* "#utility.yul":2872:2929   */
          or
            /* "#utility.yul":4195:4276   */
          dup6
          sstore
            /* "#utility.yul":3342:4286   */
          jump(tag_53)
            /* "#utility.yul":3372:4035   */
        tag_61:
            /* "#utility.yul":2166:2167   */
          0x00
            /* "#utility.yul":2159:2173   */
          dup6
          dup2
          mstore
            /* "#utility.yul":2203:2207   */
          0x20
            /* "#utility.yul":2190:2208   */
          dup2
          keccak256
          not(0x1f)
            /* "#utility.yul":3408:3428   */
          dup7
          and
          swap2
            /* "#utility.yul":3526:3762   */
        tag_65:
            /* "#utility.yul":3540:3547   */
          dup3
            /* "#utility.yul":3537:3538   */
          dup2
            /* "#utility.yul":3534:3548   */
          lt
            /* "#utility.yul":3526:3762   */
          iszero
          tag_67
          jumpi
            /* "#utility.yul":3629:3648   */
          dup9
          dup7
          add
            /* "#utility.yul":3623:3649   */
          mload
            /* "#utility.yul":3608:3650   */
          dup3
          sstore
            /* "#utility.yul":3721:3748   */
          swap5
          dup5
          add
          swap5
            /* "#utility.yul":3689:3690   */
          0x01
            /* "#utility.yul":3677:3691   */
          swap1
          swap2
          add
          swap1
            /* "#utility.yul":3556:3575   */
          dup5
          add
            /* "#utility.yul":3526:3762   */
          jump(tag_65)
        tag_67:
            /* "#utility.yul":3530:3533   */
          pop
            /* "#utility.yul":3790:3796   */
          dup6
            /* "#utility.yul":3781:3788   */
          dup3
            /* "#utility.yul":3778:3797   */
          lt
            /* "#utility.yul":3775:3976   */
          iszero
          tag_68
          jumpi
            /* "#utility.yul":3851:3870   */
          dup8
          dup6
          add
            /* "#utility.yul":3845:3871   */
          mload
          not(0x00)
            /* "#utility.yul":3934:3935   */
          0x03
            /* "#utility.yul":3930:3944   */
          dup9
          swap1
          shl
            /* "#utility.yul":3946:3949   */
          0xf8
            /* "#utility.yul":3926:3950   */
          and
            /* "#utility.yul":3922:3959   */
          shr
            /* "#utility.yul":3918:3960   */
          not
            /* "#utility.yul":3903:3961   */
          and
            /* "#utility.yul":3888:3962   */
          dup2
          sstore
            /* "#utility.yul":3775:3976   */
        tag_68:
          pop
          pop
          pop
          pop
          pop
            /* "#utility.yul":4022:4023   */
          0x01
            /* "#utility.yul":4006:4020   */
          swap1
          dup2
          shl
            /* "#utility.yul":4002:4024   */
          add
            /* "#utility.yul":3989:4025   */
          swap1
          sstore
          pop
            /* "#utility.yul":2940:4292   */
          jump	// out
            /* "#utility.yul":4297:5141   */
        tag_16:
            /* "#utility.yul":4427:4430   */
          0x00
            /* "#utility.yul":4456:4457   */
          dup1
            /* "#utility.yul":4489:4495   */
          dup4
            /* "#utility.yul":4483:4496   */
          sload
            /* "#utility.yul":4519:4555   */
          tag_70
            /* "#utility.yul":4545:4554   */
          dup2
            /* "#utility.yul":4519:4555   */
          tag_21
          jump	// in
        tag_70:
            /* "#utility.yul":4574:4575   */
          0x01
            /* "#utility.yul":4591:4609   */
          dup3
          dup2
          and
            /* "#utility.yul":4618:4751   */
          dup1
          iszero
          tag_72
          jumpi
            /* "#utility.yul":4765:4766   */
          0x01
            /* "#utility.yul":4760:5116   */
          dup2
          eq
          tag_73
          jumpi
            /* "#utility.yul":4584:5116   */
          jump(tag_71)
            /* "#utility.yul":4618:4751   */
        tag_72:
          not(0xff)
            /* "#utility.yul":4651:4675   */
          dup5
          and
            /* "#utility.yul":4639:4676   */
          dup8
          mstore
            /* "#utility.yul":4724:4738   */
          dup3
          iszero
            /* "#utility.yul":4717:4739   */
          iszero
            /* "#utility.yul":4705:4740   */
          dup4
          mul
            /* "#utility.yul":4696:4741   */
          dup8
          add
          swap5
          pop
            /* "#utility.yul":4618:4751   */
          jump(tag_71)
            /* "#utility.yul":4760:5116   */
        tag_73:
            /* "#utility.yul":4791:4797   */
          dup8
            /* "#utility.yul":4788:4789   */
          0x00
            /* "#utility.yul":4781:4798   */
          mstore
            /* "#utility.yul":4821:4825   */
          0x20
            /* "#utility.yul":4866:4868   */
          dup1
            /* "#utility.yul":4863:4864   */
          0x00
            /* "#utility.yul":4853:4869   */
          keccak256
            /* "#utility.yul":4891:4892   */
          0x00
            /* "#utility.yul":4905:5070   */
        tag_74:
            /* "#utility.yul":4919:4925   */
          dup6
            /* "#utility.yul":4916:4917   */
          dup2
            /* "#utility.yul":4913:4926   */
          lt
            /* "#utility.yul":4905:5070   */
          iszero
          tag_76
          jumpi
            /* "#utility.yul":4997:5011   */
          dup2
          sload
            /* "#utility.yul":4984:4995   */
          dup11
          dup3
          add
            /* "#utility.yul":4977:5012   */
          mstore
            /* "#utility.yul":5040:5056   */
          swap1
          dup5
          add
          swap1
            /* "#utility.yul":4934:4944   */
          dup3
          add
            /* "#utility.yul":4905:5070   */
          jump(tag_74)
        tag_76:
            /* "#utility.yul":4909:4912   */
          pop
          pop
          pop
            /* "#utility.yul":5099:5105   */
          dup3
            /* "#utility.yul":5094:5097   */
          dup8
            /* "#utility.yul":5090:5106   */
          add
            /* "#utility.yul":5083:5106   */
          swap5
          pop
            /* "#utility.yul":4584:5116   */
        tag_71:
          pop
            /* "#utility.yul":5132:5135   */
          swap3
          swap7
            /* "#utility.yul":4297:5141   */
          swap6
          pop
          pop
          pop
          pop
          pop
          pop
          jump	// out
            /* "#utility.yul":5146:5635   */
        tag_25:
            /* "node_modules/solmate/src/test/utils/mocks/MockERC20.sol":108:476  contract MockERC20 is ERC20 {... */
          mload(0x80)
          mload(0xa0)
          mload(0xc0)
          codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))
          0x00
          assignImmutable("0x206508c77e56a93fc1501de6f2d9e2e919258e4fe17c6ecf06cb5126d770e054")
          0x00
          assignImmutable("0x063b0319e2281f25923728cc5b1320091ce96c495bdc22c6454b9dacb4150a22")
          0x00
          assignImmutable("0x882a693831b629c58206e238ce0b4b78266c460fa9ea945dc8c81da0aa0c28f6")
          return(0x00, dataSize(sub_0))
        stop

        sub_0: assembly {
                /* "node_modules/solmate/src/test/utils/mocks/MockERC20.sol":108:476  contract MockERC20 is ERC20 {... */
              mstore(0x40, 0x80)
              callvalue
              dup1
              iszero
              tag_1
              jumpi
              0x00
              dup1
              revert
            tag_1:
              pop
              jumpi(tag_2, lt(calldatasize, 0x04))
              shr(0xe0, calldataload(0x00))
              dup1
              0x70a08231
              gt
              tag_17
              jumpi
              dup1
              0x9dc29fac
              gt
              tag_18
              jumpi
              dup1
              0x9dc29fac
              eq
              tag_13
              jumpi
              dup1
              0xa9059cbb
              eq
              tag_14
              jumpi
              dup1
              0xd505accf
              eq
              tag_15
              jumpi
              dup1
              0xdd62ed3e
              eq
              tag_16
              jumpi
              0x00
              dup1
              revert
            tag_18:
              dup1
              0x70a08231
              eq
              tag_10
              jumpi
              dup1
              0x7ecebe00
              eq
              tag_11
              jumpi
              dup1
              0x95d89b41
              eq
              tag_12
              jumpi
              0x00
              dup1
              revert
            tag_17:
              dup1
              0x23b872dd
              gt
              tag_19
              jumpi
              dup1
              0x23b872dd
              eq
              tag_6
              jumpi
              dup1
              0x313ce567
              eq
              tag_7
              jumpi
              dup1
              0x3644e515
              eq
              tag_8
              jumpi
              dup1
              0x40c10f19
              eq
              tag_9
              jumpi
              0x00
              dup1
              revert
            tag_19:
              dup1
              0x06fdde03
              eq
              tag_3
              jumpi
              dup1
              0x095ea7b3
              eq
              tag_4
              jumpi
              dup1
              0x18160ddd
              eq
              tag_5
              jumpi
            tag_2:
              0x00
              dup1
              revert
                /* "node_modules/solmate/src/tokens/ERC20.sol":1018:1036  string public name */
            tag_3:
              tag_20
              tag_21
              jump	// in
            tag_20:
              mload(0x40)
              tag_22
              swap2
              swap1
              tag_23
              jump	// in
            tag_22:
              mload(0x40)
              dup1
              swap2
              sub
              swap1
              return
                /* "node_modules/solmate/src/tokens/ERC20.sol":2448:2659  function approve(address spender, uint256 amount) public virtual returns (bool) {... */
            tag_4:
              tag_24
              tag_25
              calldatasize
              0x04
              tag_26
              jump	// in
            tag_25:
              tag_27
              jump	// in
            tag_24:
              mload(0x40)
                /* "#utility.yul":1169:1183   */
              swap1
              iszero
                /* "#utility.yul":1162:1184   */
              iszero
                /* "#utility.yul":1144:1185   */
              dup2
              mstore
                /* "#utility.yul":1132:1134   */
              0x20
                /* "#utility.yul":1117:1135   */
              add
                /* "node_modules/solmate/src/tokens/ERC20.sol":2448:2659  function approve(address spender, uint256 amount) public virtual returns (bool) {... */
              tag_22
                /* "#utility.yul":1004:1191   */
              jump
                /* "node_modules/solmate/src/tokens/ERC20.sol":1291:1317  uint256 public totalSupply */
            tag_5:
              tag_30
              sload(0x02)
              dup2
              jump
            tag_30:
              mload(0x40)
                /* "#utility.yul":1342:1367   */
              swap1
              dup2
              mstore
                /* "#utility.yul":1330:1332   */
              0x20
                /* "#utility.yul":1315:1333   */
              add
                /* "node_modules/solmate/src/tokens/ERC20.sol":1291:1317  uint256 public totalSupply */
              tag_22
                /* "#utility.yul":1196:1373   */
              jump
                /* "node_modules/solmate/src/tokens/ERC20.sol":3044:3636  function transferFrom(... */
            tag_6:
              tag_24
              tag_35
              calldatasize
              0x04
              tag_36
              jump	// in
            tag_35:
              tag_37
              jump	// in
                /* "node_modules/solmate/src/tokens/ERC20.sol":1070:1101  uint8 public immutable decimals */
            tag_7:
              tag_39
              immutable("0x882a693831b629c58206e238ce0b4b78266c460fa9ea945dc8c81da0aa0c28f6")
              dup2
              jump
            tag_39:
              mload(0x40)
                /* "#utility.yul":1883:1887   */
              0xff
                /* "#utility.yul":1871:1888   */
              swap1
              swap2
              and
                /* "#utility.yul":1853:1889   */
              dup2
              mstore
                /* "#utility.yul":1841:1843   */
              0x20
                /* "#utility.yul":1826:1844   */
              add
                /* "node_modules/solmate/src/tokens/ERC20.sol":1070:1101  uint8 public immutable decimals */
              tag_22
                /* "#utility.yul":1711:1895   */
              jump
                /* "node_modules/solmate/src/tokens/ERC20.sol":5314:5491  function DOMAIN_SEPARATOR() public view virtual returns (bytes32) {... */
            tag_8:
              tag_30
              tag_44
              jump	// in
                /* "node_modules/solmate/src/test/utils/mocks/MockERC20.sol":286:375  function mint(address to, uint256 value) public virtual {... */
            tag_9:
              tag_47
              tag_48
              calldatasize
              0x04
              tag_26
              jump	// in
            tag_48:
              tag_49
              jump	// in
            tag_47:
              stop
                /* "node_modules/solmate/src/tokens/ERC20.sol":1324:1368  mapping(address => uint256) public balanceOf */
            tag_10:
              tag_30
              tag_51
              calldatasize
              0x04
              tag_52
              jump	// in
            tag_51:
              mstore(0x20, 0x03)
              0x00
              swap1
              dup2
              mstore
              0x40
              swap1
              keccak256
              sload
              dup2
              jump
                /* "node_modules/solmate/src/tokens/ERC20.sol":1738:1779  mapping(address => uint256) public nonces */
            tag_11:
              tag_30
              tag_56
              calldatasize
              0x04
              tag_52
              jump	// in
            tag_56:
              mstore(0x20, 0x05)
              0x00
              swap1
              dup2
              mstore
              0x40
              swap1
              keccak256
              sload
              dup2
              jump
                /* "node_modules/solmate/src/tokens/ERC20.sol":1043:1063  string public symbol */
            tag_12:
              tag_20
              tag_60
              jump	// in
                /* "node_modules/solmate/src/test/utils/mocks/MockERC20.sol":381:474  function burn(address from, uint256 value) public virtual {... */
            tag_13:
              tag_47
              tag_63
              calldatasize
              0x04
              tag_26
              jump	// in
            tag_63:
              tag_64
              jump	// in
                /* "node_modules/solmate/src/tokens/ERC20.sol":2665:3038  function transfer(address to, uint256 amount) public virtual returns (bool) {... */
            tag_14:
              tag_24
              tag_66
              calldatasize
              0x04
              tag_26
              jump	// in
            tag_66:
              tag_67
              jump	// in
                /* "node_modules/solmate/src/tokens/ERC20.sol":3825:5308  function permit(... */
            tag_15:
              tag_47
              tag_70
              calldatasize
              0x04
              tag_71
              jump	// in
            tag_70:
              tag_72
              jump	// in
                /* "node_modules/solmate/src/tokens/ERC20.sol":1375:1439  mapping(address => mapping(address => uint256)) public allowance */
            tag_16:
              tag_30
              tag_74
              calldatasize
              0x04
              tag_75
              jump	// in
            tag_74:
              0x04
              0x20
              swap1
              dup2
              mstore
              0x00
              swap3
              dup4
              mstore
              0x40
              dup1
              dup5
              keccak256
              swap1
              swap2
              mstore
              swap1
              dup3
              mstore
              swap1
              keccak256
              sload
              dup2
              jump
                /* "node_modules/solmate/src/tokens/ERC20.sol":1018:1036  string public name */
            tag_21:
              0x00
              dup1
              sload
              tag_78
              swap1
              tag_79
              jump	// in
            tag_78:
              dup1
              0x1f
              add
              0x20
              dup1
              swap2
              div
              mul
              0x20
              add
              mload(0x40)
              swap1
              dup2
              add
              0x40
              mstore
              dup1
              swap3
              swap2
              swap1
              dup2
              dup2
              mstore
              0x20
              add
              dup3
              dup1
              sload
              tag_80
              swap1
              tag_79
              jump	// in
            tag_80:
              dup1
              iszero
              tag_81
              jumpi
              dup1
              0x1f
              lt
              tag_82
              jumpi
              0x0100
              dup1
              dup4
              sload
              div
              mul
              dup4
              mstore
              swap2
              0x20
              add
              swap2
              jump(tag_81)
            tag_82:
              dup3
              add
              swap2
              swap1
              0x00
              mstore
              keccak256(0x00, 0x20)
              swap1
            tag_83:
              dup2
              sload
              dup2
              mstore
              swap1
              0x01
              add
              swap1
              0x20
              add
              dup1
              dup4
              gt
              tag_83
              jumpi
              dup3
              swap1
              sub
              0x1f
              and
              dup3
              add
              swap2
            tag_81:
              pop
              pop
              pop
              pop
              pop
              dup2
              jump	// out
                /* "node_modules/solmate/src/tokens/ERC20.sol":2448:2659  function approve(address spender, uint256 amount) public virtual returns (bool) {... */
            tag_27:
                /* "node_modules/solmate/src/tokens/ERC20.sol":2548:2558  msg.sender */
              caller
                /* "node_modules/solmate/src/tokens/ERC20.sol":2522:2526  bool */
              0x00
                /* "node_modules/solmate/src/tokens/ERC20.sol":2538:2559  allowance[msg.sender] */
              dup2
              dup2
              mstore
                /* "node_modules/solmate/src/tokens/ERC20.sol":2538:2547  allowance */
              0x04
                /* "node_modules/solmate/src/tokens/ERC20.sol":2538:2559  allowance[msg.sender] */
              0x20
              swap1
              dup2
              mstore
              0x40
              dup1
              dup4
              keccak256
              sub(shl(0xa0, 0x01), 0x01)
                /* "node_modules/solmate/src/tokens/ERC20.sol":2538:2568  allowance[msg.sender][spender] */
              dup8
              and
              dup1
              dup6
              mstore
              swap3
              mstore
              dup1
              dup4
              keccak256
                /* "node_modules/solmate/src/tokens/ERC20.sol":2538:2577  allowance[msg.sender][spender] = amount */
              dup6
              swap1
              sstore
                /* "node_modules/solmate/src/tokens/ERC20.sol":2593:2630  Approval(msg.sender, spender, amount) */
              mload
                /* "node_modules/solmate/src/tokens/ERC20.sol":2522:2526  bool */
              swap2
              swap3
                /* "node_modules/solmate/src/tokens/ERC20.sol":2538:2568  allowance[msg.sender][spender] */
              swap1
              swap2
                /* "node_modules/solmate/src/tokens/ERC20.sol":2593:2630  Approval(msg.sender, spender, amount) */
              0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925
              swap1
              tag_85
              swap1
                /* "node_modules/solmate/src/tokens/ERC20.sol":2571:2577  amount */
              dup7
                /* "#utility.yul":1342:1367   */
              dup2
              mstore
                /* "#utility.yul":1330:1332   */
              0x20
                /* "#utility.yul":1315:1333   */
              add
              swap1
                /* "#utility.yul":1196:1373   */
              jump
                /* "node_modules/solmate/src/tokens/ERC20.sol":2593:2630  Approval(msg.sender, spender, amount) */
            tag_85:
              mload(0x40)
              dup1
              swap2
              sub
              swap1
              log3
              pop
                /* "node_modules/solmate/src/tokens/ERC20.sol":2648:2652  true */
              0x01
                /* "node_modules/solmate/src/tokens/ERC20.sol":2448:2659  function approve(address spender, uint256 amount) public virtual returns (bool) {... */
            tag_84:
              swap3
              swap2
              pop
              pop
              jump	// out
                /* "node_modules/solmate/src/tokens/ERC20.sol":3044:3636  function transferFrom(... */
            tag_37:
              sub(shl(0xa0, 0x01), 0x01)
                /* "node_modules/solmate/src/tokens/ERC20.sol":3196:3211  allowance[from] */
              dup4
              and
                /* "node_modules/solmate/src/tokens/ERC20.sol":3162:3166  bool */
              0x00
                /* "node_modules/solmate/src/tokens/ERC20.sol":3196:3211  allowance[from] */
              swap1
              dup2
              mstore
                /* "node_modules/solmate/src/tokens/ERC20.sol":3196:3205  allowance */
              0x04
                /* "node_modules/solmate/src/tokens/ERC20.sol":3196:3211  allowance[from] */
              0x20
              swap1
              dup2
              mstore
              0x40
              dup1
              dup4
              keccak256
                /* "node_modules/solmate/src/tokens/ERC20.sol":3212:3222  msg.sender */
              caller
                /* "node_modules/solmate/src/tokens/ERC20.sol":3196:3223  allowance[from][msg.sender] */
              dup5
              mstore
              swap1
              swap2
              mstore
              dup2
              keccak256
              sload
              not(0x00)
                /* "node_modules/solmate/src/tokens/ERC20.sol":3274:3302  allowed != type(uint256).max */
              dup2
              eq
                /* "node_modules/solmate/src/tokens/ERC20.sol":3270:3350  if (allowed != type(uint256).max) allowance[from][msg.sender] = allowed - amount */
              tag_87
              jumpi
                /* "node_modules/solmate/src/tokens/ERC20.sol":3334:3350  allowed - amount */
              tag_88
                /* "node_modules/solmate/src/tokens/ERC20.sol":3344:3350  amount */
              dup4
                /* "node_modules/solmate/src/tokens/ERC20.sol":3334:3341  allowed */
              dup3
                /* "node_modules/solmate/src/tokens/ERC20.sol":3334:3350  allowed - amount */
              tag_89
              jump	// in
            tag_88:
              sub(shl(0xa0, 0x01), 0x01)
                /* "node_modules/solmate/src/tokens/ERC20.sol":3304:3319  allowance[from] */
              dup7
              and
              0x00
              swap1
              dup2
              mstore
                /* "node_modules/solmate/src/tokens/ERC20.sol":3304:3313  allowance */
              0x04
                /* "node_modules/solmate/src/tokens/ERC20.sol":3304:3319  allowance[from] */
              0x20
              swap1
              dup2
              mstore
              0x40
              dup1
              dup4
              keccak256
                /* "node_modules/solmate/src/tokens/ERC20.sol":3320:3330  msg.sender */
              caller
                /* "node_modules/solmate/src/tokens/ERC20.sol":3304:3331  allowance[from][msg.sender] */
              dup5
              mstore
              swap1
              swap2
              mstore
              swap1
              keccak256
                /* "node_modules/solmate/src/tokens/ERC20.sol":3304:3350  allowance[from][msg.sender] = allowed - amount */
              sstore
                /* "node_modules/solmate/src/tokens/ERC20.sol":3270:3350  if (allowed != type(uint256).max) allowance[from][msg.sender] = allowed - amount */
            tag_87:
              sub(shl(0xa0, 0x01), 0x01)
                /* "node_modules/solmate/src/tokens/ERC20.sol":3361:3376  balanceOf[from] */
              dup6
              and
              0x00
              swap1
              dup2
              mstore
                /* "node_modules/solmate/src/tokens/ERC20.sol":3361:3370  balanceOf */
              0x03
                /* "node_modules/solmate/src/tokens/ERC20.sol":3361:3376  balanceOf[from] */
              0x20
              mstore
              0x40
              dup2
              keccak256
                /* "node_modules/solmate/src/tokens/ERC20.sol":3361:3386  balanceOf[from] -= amount */
              dup1
              sload
                /* "node_modules/solmate/src/tokens/ERC20.sol":3380:3386  amount */
              dup6
              swap3
                /* "node_modules/solmate/src/tokens/ERC20.sol":3361:3376  balanceOf[from] */
              swap1
                /* "node_modules/solmate/src/tokens/ERC20.sol":3361:3386  balanceOf[from] -= amount */
              tag_90
              swap1
                /* "node_modules/solmate/src/tokens/ERC20.sol":3380:3386  amount */
              dup5
              swap1
                /* "node_modules/solmate/src/tokens/ERC20.sol":3361:3386  balanceOf[from] -= amount */
              tag_89
              jump	// in
            tag_90:
              swap1
              swap2
              sstore
              pop
              pop
              sub(shl(0xa0, 0x01), 0x01)
                /* "node_modules/solmate/src/tokens/ERC20.sol":3532:3545  balanceOf[to] */
              dup1
              dup6
              and
              0x00
              dup2
              dup2
              mstore
                /* "node_modules/solmate/src/tokens/ERC20.sol":3532:3541  balanceOf */
              0x03
                /* "node_modules/solmate/src/tokens/ERC20.sol":3532:3545  balanceOf[to] */
              0x20
              mstore
              0x40
              swap1
              dup2
              swap1
              keccak256
                /* "node_modules/solmate/src/tokens/ERC20.sol":3532:3555  balanceOf[to] += amount */
              dup1
              sload
              dup8
              add
              swap1
              sstore
                /* "node_modules/solmate/src/tokens/ERC20.sol":3581:3607  Transfer(from, to, amount) */
              mload
                /* "node_modules/solmate/src/tokens/ERC20.sol":3532:3545  balanceOf[to] */
              swap1
              swap2
                /* "node_modules/solmate/src/tokens/ERC20.sol":3581:3607  Transfer(from, to, amount) */
              dup8
              and
              swap1
              0x00
              dup1
              mload
              0x20
              data_ada389e1fc24a8587c776340efb91b36e675792ab631816100d55df0b5cf3cbc
              dup4
              codecopy
              dup2
              mload
              swap2
              mstore
              swap1
              tag_91
              swap1
                /* "node_modules/solmate/src/tokens/ERC20.sol":3549:3555  amount */
              dup8
                /* "#utility.yul":1342:1367   */
              dup2
              mstore
                /* "#utility.yul":1330:1332   */
              0x20
                /* "#utility.yul":1315:1333   */
              add
              swap1
                /* "#utility.yul":1196:1373   */
              jump
                /* "node_modules/solmate/src/tokens/ERC20.sol":3581:3607  Transfer(from, to, amount) */
            tag_91:
              mload(0x40)
              dup1
              swap2
              sub
              swap1
              log3
              pop
                /* "node_modules/solmate/src/tokens/ERC20.sol":3625:3629  true */
              0x01
              swap5
                /* "node_modules/solmate/src/tokens/ERC20.sol":3044:3636  function transferFrom(... */
              swap4
              pop
              pop
              pop
              pop
              jump	// out
                /* "node_modules/solmate/src/tokens/ERC20.sol":5314:5491  function DOMAIN_SEPARATOR() public view virtual returns (bytes32) {... */
            tag_44:
                /* "node_modules/solmate/src/tokens/ERC20.sol":5371:5378  bytes32 */
              0x00
                /* "node_modules/solmate/src/tokens/ERC20.sol":5414:5430  INITIAL_CHAIN_ID */
              immutable("0x063b0319e2281f25923728cc5b1320091ce96c495bdc22c6454b9dacb4150a22")
                /* "node_modules/solmate/src/tokens/ERC20.sol":5397:5410  block.chainid */
              chainid
                /* "node_modules/solmate/src/tokens/ERC20.sol":5397:5430  block.chainid == INITIAL_CHAIN_ID */
              eq
                /* "node_modules/solmate/src/tokens/ERC20.sol":5397:5484  block.chainid == INITIAL_CHAIN_ID ? INITIAL_DOMAIN_SEPARATOR : computeDomainSeparator() */
              tag_93
              jumpi
                /* "node_modules/solmate/src/tokens/ERC20.sol":5460:5484  computeDomainSeparator() */
              tag_94
                /* "node_modules/solmate/src/tokens/ERC20.sol":5460:5482  computeDomainSeparator */
              tag_95
                /* "node_modules/solmate/src/tokens/ERC20.sol":5460:5484  computeDomainSeparator() */
              jump	// in
            tag_94:
                /* "node_modules/solmate/src/tokens/ERC20.sol":5390:5484  return block.chainid == INITIAL_CHAIN_ID ? INITIAL_DOMAIN_SEPARATOR : computeDomainSeparator() */
              swap1
              pop
                /* "node_modules/solmate/src/tokens/ERC20.sol":5314:5491  function DOMAIN_SEPARATOR() public view virtual returns (bytes32) {... */
              swap1
              jump	// out
                /* "node_modules/solmate/src/tokens/ERC20.sol":5397:5484  block.chainid == INITIAL_CHAIN_ID ? INITIAL_DOMAIN_SEPARATOR : computeDomainSeparator() */
            tag_93:
              pop
                /* "node_modules/solmate/src/tokens/ERC20.sol":5433:5457  INITIAL_DOMAIN_SEPARATOR */
              immutable("0x206508c77e56a93fc1501de6f2d9e2e919258e4fe17c6ecf06cb5126d770e054")
              swap1
                /* "node_modules/solmate/src/tokens/ERC20.sol":5314:5491  function DOMAIN_SEPARATOR() public view virtual returns (bytes32) {... */
              jump	// out
                /* "node_modules/solmate/src/test/utils/mocks/MockERC20.sol":286:375  function mint(address to, uint256 value) public virtual {... */
            tag_49:
                /* "node_modules/solmate/src/test/utils/mocks/MockERC20.sol":352:368  _mint(to, value) */
              tag_98
                /* "node_modules/solmate/src/test/utils/mocks/MockERC20.sol":358:360  to */
              dup3
                /* "node_modules/solmate/src/test/utils/mocks/MockERC20.sol":362:367  value */
              dup3
                /* "node_modules/solmate/src/test/utils/mocks/MockERC20.sol":352:357  _mint */
              tag_99
                /* "node_modules/solmate/src/test/utils/mocks/MockERC20.sol":352:368  _mint(to, value) */
              jump	// in
            tag_98:
                /* "node_modules/solmate/src/test/utils/mocks/MockERC20.sol":286:375  function mint(address to, uint256 value) public virtual {... */
              pop
              pop
              jump	// out
                /* "node_modules/solmate/src/tokens/ERC20.sol":1043:1063  string public symbol */
            tag_60:
              0x01
              dup1
              sload
              tag_78
              swap1
              tag_79
              jump	// in
                /* "node_modules/solmate/src/test/utils/mocks/MockERC20.sol":381:474  function burn(address from, uint256 value) public virtual {... */
            tag_64:
                /* "node_modules/solmate/src/test/utils/mocks/MockERC20.sol":449:467  _burn(from, value) */
              tag_98
                /* "node_modules/solmate/src/test/utils/mocks/MockERC20.sol":455:459  from */
              dup3
                /* "node_modules/solmate/src/test/utils/mocks/MockERC20.sol":461:466  value */
              dup3
                /* "node_modules/solmate/src/test/utils/mocks/MockERC20.sol":449:454  _burn */
              tag_107
                /* "node_modules/solmate/src/test/utils/mocks/MockERC20.sol":449:467  _burn(from, value) */
              jump	// in
                /* "node_modules/solmate/src/tokens/ERC20.sol":2665:3038  function transfer(address to, uint256 amount) public virtual returns (bool) {... */
            tag_67:
                /* "node_modules/solmate/src/tokens/ERC20.sol":2761:2771  msg.sender */
              caller
                /* "node_modules/solmate/src/tokens/ERC20.sol":2735:2739  bool */
              0x00
                /* "node_modules/solmate/src/tokens/ERC20.sol":2751:2772  balanceOf[msg.sender] */
              swap1
              dup2
              mstore
                /* "node_modules/solmate/src/tokens/ERC20.sol":2751:2760  balanceOf */
              0x03
                /* "node_modules/solmate/src/tokens/ERC20.sol":2751:2772  balanceOf[msg.sender] */
              0x20
              mstore
              0x40
              dup2
              keccak256
                /* "node_modules/solmate/src/tokens/ERC20.sol":2751:2782  balanceOf[msg.sender] -= amount */
              dup1
              sload
                /* "node_modules/solmate/src/tokens/ERC20.sol":2776:2782  amount */
              dup4
              swap2
                /* "node_modules/solmate/src/tokens/ERC20.sol":2751:2772  balanceOf[msg.sender] */
              swap1
                /* "node_modules/solmate/src/tokens/ERC20.sol":2735:2739  bool */
              dup4
              swap1
                /* "node_modules/solmate/src/tokens/ERC20.sol":2751:2782  balanceOf[msg.sender] -= amount */
              tag_109
              swap1
                /* "node_modules/solmate/src/tokens/ERC20.sol":2776:2782  amount */
              dup5
              swap1
                /* "node_modules/solmate/src/tokens/ERC20.sol":2751:2782  balanceOf[msg.sender] -= amount */
              tag_89
              jump	// in
            tag_109:
              swap1
              swap2
              sstore
              pop
              pop
              sub(shl(0xa0, 0x01), 0x01)
                /* "node_modules/solmate/src/tokens/ERC20.sol":2928:2941  balanceOf[to] */
              dup4
              and
              0x00
              dup2
              dup2
              mstore
                /* "node_modules/solmate/src/tokens/ERC20.sol":2928:2937  balanceOf */
              0x03
                /* "node_modules/solmate/src/tokens/ERC20.sol":2928:2941  balanceOf[to] */
              0x20
              mstore
              0x40
              swap1
              dup2
              swap1
              keccak256
                /* "node_modules/solmate/src/tokens/ERC20.sol":2928:2951  balanceOf[to] += amount */
              dup1
              sload
              dup6
              add
              swap1
              sstore
                /* "node_modules/solmate/src/tokens/ERC20.sol":2977:3009  Transfer(msg.sender, to, amount) */
              mload
                /* "node_modules/solmate/src/tokens/ERC20.sol":2986:2996  msg.sender */
              caller
              swap1
              0x00
              dup1
              mload
              0x20
              data_ada389e1fc24a8587c776340efb91b36e675792ab631816100d55df0b5cf3cbc
              dup4
              codecopy
              dup2
              mload
              swap2
              mstore
                /* "node_modules/solmate/src/tokens/ERC20.sol":2977:3009  Transfer(msg.sender, to, amount) */
              swap1
              tag_85
              swap1
                /* "node_modules/solmate/src/tokens/ERC20.sol":2945:2951  amount */
              dup7
                /* "#utility.yul":1342:1367   */
              dup2
              mstore
                /* "#utility.yul":1330:1332   */
              0x20
                /* "#utility.yul":1315:1333   */
              add
              swap1
                /* "#utility.yul":1196:1373   */
              jump
                /* "node_modules/solmate/src/tokens/ERC20.sol":3825:5308  function permit(... */
            tag_72:
                /* "node_modules/solmate/src/tokens/ERC20.sol":4044:4059  block.timestamp */
              timestamp
                /* "node_modules/solmate/src/tokens/ERC20.sol":4032:4040  deadline */
              dup5
                /* "node_modules/solmate/src/tokens/ERC20.sol":4032:4059  deadline >= block.timestamp */
              lt
              iszero
                /* "node_modules/solmate/src/tokens/ERC20.sol":4024:4087  require(deadline >= block.timestamp, "PERMIT_DEADLINE_EXPIRED") */
              tag_112
              jumpi
              0x00
              dup1
              revert
            tag_112:
                /* "node_modules/solmate/src/tokens/ERC20.sol":4252:4276  address recoveredAddress */
              0x00
                /* "node_modules/solmate/src/tokens/ERC20.sol":4279:5084  ecrecover(... */
              0x01
                /* "node_modules/solmate/src/tokens/ERC20.sol":4415:4433  DOMAIN_SEPARATOR() */
              tag_113
                /* "node_modules/solmate/src/tokens/ERC20.sol":4415:4431  DOMAIN_SEPARATOR */
              tag_44
                /* "node_modules/solmate/src/tokens/ERC20.sol":4415:4433  DOMAIN_SEPARATOR() */
              jump	// in
            tag_113:
              sub(shl(0xa0, 0x01), 0x01)
                /* "node_modules/solmate/src/tokens/ERC20.sol":4860:4873  nonces[owner] */
              dup11
              dup2
              and
              0x00
              dup2
              dup2
              mstore
                /* "node_modules/solmate/src/tokens/ERC20.sol":4860:4866  nonces */
              0x05
                /* "node_modules/solmate/src/tokens/ERC20.sol":4860:4873  nonces[owner] */
              0x20
              swap1
              dup2
              mstore
              0x40
              swap2
              dup3
              swap1
              keccak256
                /* "node_modules/solmate/src/tokens/ERC20.sol":4860:4875  nonces[owner]++ */
              dup1
              sload
              0x01
              dup2
              add
              swap1
              swap2
              sstore
                /* "node_modules/solmate/src/tokens/ERC20.sol":4498:4947  abi.encode(... */
              dup3
              mload
                /* "node_modules/solmate/src/tokens/ERC20.sol":4542:4707  keccak256(... */
              0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9
                /* "node_modules/solmate/src/tokens/ERC20.sol":4498:4947  abi.encode(... */
              dup2
              dup5
              add
                /* "#utility.yul":4173:4198   */
              mstore
                /* "#utility.yul":4252:4270   */
              dup1
              dup5
              add
                /* "#utility.yul":4245:4288   */
              swap5
              swap1
              swap5
              mstore
                /* "#utility.yul":4324:4339   */
              swap4
              dup14
              and
                /* "#utility.yul":4304:4322   */
              0x60
              dup5
              add
                /* "#utility.yul":4297:4340   */
              mstore
                /* "#utility.yul":4356:4374   */
              0x80
              dup4
              add
                /* "#utility.yul":4349:4383   */
              dup13
              swap1
              mstore
                /* "#utility.yul":4399:4418   */
              0xa0
              dup4
              add
                /* "#utility.yul":4392:4427   */
              swap4
              swap1
              swap4
              mstore
                /* "#utility.yul":4443:4462   */
              0xc0
              dup1
              dup4
              add
                /* "#utility.yul":4436:4471   */
              dup12
              swap1
              mstore
                /* "node_modules/solmate/src/tokens/ERC20.sol":4498:4947  abi.encode(... */
              dup2
              mload
              dup1
              dup5
              sub
              swap1
              swap2
              add
              dup2
              mstore
                /* "#utility.yul":4145:4164   */
              0xe0
              dup4
              add
                /* "node_modules/solmate/src/tokens/ERC20.sol":4498:4947  abi.encode(... */
              swap1
              swap2
              mstore
                /* "node_modules/solmate/src/tokens/ERC20.sol":4459:4973  keccak256(... */
              dup1
              mload
              swap3
              add
              swap2
              swap1
              swap2
              keccak256
              shl(0xf0, 0x1901)
                /* "node_modules/solmate/src/tokens/ERC20.sol":4337:4995  abi.encodePacked(... */
              0x0100
              dup4
              add
                /* "#utility.yul":4740:4767   */
              mstore
                /* "#utility.yul":4783:4794   */
              0x0102
              dup3
              add
                /* "#utility.yul":4776:4803   */
              swap3
              swap1
              swap3
              mstore
                /* "#utility.yul":4819:4831   */
              0x0122
              dup2
              add
                /* "#utility.yul":4812:4840   */
              swap2
              swap1
              swap2
              mstore
                /* "#utility.yul":4856:4868   */
              0x0142
              add
                /* "node_modules/solmate/src/tokens/ERC20.sol":4337:4995  abi.encodePacked(... */
              0x40
              dup1
              mload
              not(0x1f)
              dup2
              dup5
              sub
              add
              dup2
              mstore
              dup3
              dup3
              mstore
                /* "node_modules/solmate/src/tokens/ERC20.sol":4306:5013  keccak256(... */
              dup1
              mload
                /* "node_modules/solmate/src/tokens/ERC20.sol":4337:4995  abi.encodePacked(... */
              0x20
                /* "node_modules/solmate/src/tokens/ERC20.sol":4306:5013  keccak256(... */
              swap2
              dup3
              add
              keccak256
                /* "node_modules/solmate/src/tokens/ERC20.sol":4279:5084  ecrecover(... */
              0x00
              dup5
              mstore
              swap1
              dup4
              add
              dup1
              dup4
              mstore
                /* "#utility.yul":5106:5131   */
              mstore
                /* "#utility.yul":5179:5183   */
              0xff
                /* "#utility.yul":5167:5184   */
              dup8
              and
                /* "#utility.yul":5147:5165   */
              swap1
              dup3
              add
                /* "#utility.yul":5140:5185   */
              mstore
                /* "#utility.yul":5201:5219   */
              0x60
              dup2
              add
                /* "#utility.yul":5194:5228   */
              dup6
              swap1
              mstore
                /* "#utility.yul":5244:5262   */
              0x80
              dup2
              add
                /* "#utility.yul":5237:5271   */
              dup5
              swap1
              mstore
                /* "#utility.yul":5078:5097   */
              0xa0
              add
                /* "node_modules/solmate/src/tokens/ERC20.sol":4279:5084  ecrecover(... */
              0x20
              mload(0x40)
              0x20
              dup2
              sub
              swap1
              dup1
              dup5
              sub
              swap1
              dup6
              gas
              staticcall
              iszero
              dup1
              iszero
              tag_121
              jumpi
              returndatasize
              0x00
              dup1
              returndatacopy
              revert(0x00, returndatasize)
            tag_121:
              pop
              pop
              mload(add(not(0x1f), mload(0x40)))
              swap2
              pop
              pop
              sub(shl(0xa0, 0x01), 0x01)
                /* "node_modules/solmate/src/tokens/ERC20.sol":5107:5137  recoveredAddress != address(0) */
              dup2
              and
              iszero
              dup1
              iszero
              swap1
                /* "node_modules/solmate/src/tokens/ERC20.sol":5107:5166  recoveredAddress != address(0) && recoveredAddress == owner */
              tag_122
              jumpi
              pop
                /* "node_modules/solmate/src/tokens/ERC20.sol":5161:5166  owner */
              dup8
              sub(shl(0xa0, 0x01), 0x01)
                /* "node_modules/solmate/src/tokens/ERC20.sol":5141:5166  recoveredAddress == owner */
              and
                /* "node_modules/solmate/src/tokens/ERC20.sol":5141:5157  recoveredAddress */
              dup2
              sub(shl(0xa0, 0x01), 0x01)
                /* "node_modules/solmate/src/tokens/ERC20.sol":5141:5166  recoveredAddress == owner */
              and
              eq
                /* "node_modules/solmate/src/tokens/ERC20.sol":5107:5166  recoveredAddress != address(0) && recoveredAddress == owner */
            tag_122:
                /* "node_modules/solmate/src/tokens/ERC20.sol":5099:5185  require(recoveredAddress != address(0) && recoveredAddress == owner, "INVALID_SIGNER") */
              tag_123
              jumpi
              0x00
              dup1
              revert
            tag_123:
              sub(shl(0xa0, 0x01), 0x01)
                /* "node_modules/solmate/src/tokens/ERC20.sol":5200:5227  allowance[recoveredAddress] */
              swap1
              dup2
              and
              0x00
              swap1
              dup2
              mstore
                /* "node_modules/solmate/src/tokens/ERC20.sol":5200:5209  allowance */
              0x04
                /* "node_modules/solmate/src/tokens/ERC20.sol":5200:5227  allowance[recoveredAddress] */
              0x20
              swap1
              dup2
              mstore
              0x40
              dup1
              dup4
              keccak256
                /* "node_modules/solmate/src/tokens/ERC20.sol":5200:5236  allowance[recoveredAddress][spender] */
              dup11
              dup6
              and
              dup1
              dup6
              mstore
              swap1
              dup4
              mstore
              swap3
              dup2
              swap1
              keccak256
                /* "node_modules/solmate/src/tokens/ERC20.sol":5200:5244  allowance[recoveredAddress][spender] = value */
              dup10
              swap1
              sstore
                /* "node_modules/solmate/src/tokens/ERC20.sol":5270:5301  Approval(owner, spender, value) */
              mload
                /* "#utility.yul":1342:1367   */
              dup9
              dup2
              mstore
                /* "node_modules/solmate/src/tokens/ERC20.sol":5200:5236  allowance[recoveredAddress][spender] */
              swap2
              swap3
                /* "node_modules/solmate/src/tokens/ERC20.sol":5270:5301  Approval(owner, spender, value) */
              dup11
              and
              swap2
              0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925
              swap2
                /* "#utility.yul":1315:1333   */
              add
                /* "node_modules/solmate/src/tokens/ERC20.sol":5270:5301  Approval(owner, spender, value) */
              mload(0x40)
              dup1
              swap2
              sub
              swap1
              log3
                /* "node_modules/solmate/src/tokens/ERC20.sol":3825:5308  function permit(... */
              pop
              pop
              pop
              pop
              pop
              pop
              pop
              jump	// out
                /* "node_modules/solmate/src/tokens/ERC20.sol":5497:5943  function computeDomainSeparator() internal view virtual returns (bytes32) {... */
            tag_95:
                /* "node_modules/solmate/src/tokens/ERC20.sol":5562:5569  bytes32 */
              0x00
                /* "node_modules/solmate/src/tokens/ERC20.sol":5659:5754  keccak256("EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)") */
              0x8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f
                /* "node_modules/solmate/src/tokens/ERC20.sol":5792:5796  name */
              0x00
                /* "node_modules/solmate/src/tokens/ERC20.sol":5776:5798  keccak256(bytes(name)) */
              mload(0x40)
              tag_126
              swap2
              swap1
              tag_127
              jump	// in
            tag_126:
              0x40
              dup1
              mload
              swap2
              dup3
              swap1
              sub
              dup3
              keccak256
                /* "node_modules/solmate/src/tokens/ERC20.sol":5627:5922  abi.encode(... */
              0x20
              dup4
              add
                /* "#utility.yul":6808:6833   */
              swap4
              swap1
              swap4
              mstore
                /* "#utility.yul":6849:6867   */
              dup2
              add
                /* "#utility.yul":6842:6876   */
              swap2
              swap1
              swap2
              mstore
                /* "node_modules/solmate/src/tokens/ERC20.sol":5820:5834  keccak256("1") */
              0xc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6
                /* "#utility.yul":6892:6910   */
              0x60
              dup3
              add
                /* "#utility.yul":6885:6919   */
              mstore
                /* "node_modules/solmate/src/tokens/ERC20.sol":5856:5869  block.chainid */
              chainid
                /* "#utility.yul":6935:6953   */
              0x80
              dup3
              add
                /* "#utility.yul":6928:6962   */
              mstore
                /* "node_modules/solmate/src/tokens/ERC20.sol":5899:5903  this */
              address
                /* "#utility.yul":6978:6997   */
              0xa0
              dup3
              add
                /* "#utility.yul":6971:7032   */
              mstore
                /* "#utility.yul":6780:6799   */
              0xc0
              add
                /* "node_modules/solmate/src/tokens/ERC20.sol":5627:5922  abi.encode(... */
              mload(0x40)
              0x20
              dup2
              dup4
              sub
              sub
              dup2
              mstore
              swap1
              0x40
              mstore
                /* "node_modules/solmate/src/tokens/ERC20.sol":5600:5936  keccak256(... */
              dup1
              mload
              swap1
              0x20
              add
              keccak256
                /* "node_modules/solmate/src/tokens/ERC20.sol":5581:5936  return... */
              swap1
              pop
                /* "node_modules/solmate/src/tokens/ERC20.sol":5497:5943  function computeDomainSeparator() internal view virtual returns (bytes32) {... */
              swap1
              jump	// out
                /* "node_modules/solmate/src/tokens/ERC20.sol":6137:6462  function _mint(address to, uint256 amount) internal virtual {... */
            tag_99:
                /* "node_modules/solmate/src/tokens/ERC20.sol":6222:6228  amount */
              dup1
                /* "node_modules/solmate/src/tokens/ERC20.sol":6207:6218  totalSupply */
              0x02
              0x00
                /* "node_modules/solmate/src/tokens/ERC20.sol":6207:6228  totalSupply += amount */
              dup3
              dup3
              sload
              tag_131
              swap2
              swap1
              tag_132
              jump	// in
            tag_131:
              swap1
              swap2
              sstore
              pop
              pop
              sub(shl(0xa0, 0x01), 0x01)
                /* "node_modules/solmate/src/tokens/ERC20.sol":6374:6387  balanceOf[to] */
              dup3
              and
              0x00
              dup2
              dup2
              mstore
                /* "node_modules/solmate/src/tokens/ERC20.sol":6374:6383  balanceOf */
              0x03
                /* "node_modules/solmate/src/tokens/ERC20.sol":6374:6387  balanceOf[to] */
              0x20
              swap1
              dup2
              mstore
              0x40
              dup1
              dup4
              keccak256
                /* "node_modules/solmate/src/tokens/ERC20.sol":6374:6397  balanceOf[to] += amount */
              dup1
              sload
              dup7
              add
              swap1
              sstore
                /* "node_modules/solmate/src/tokens/ERC20.sol":6423:6455  Transfer(address(0), to, amount) */
              mload
                /* "#utility.yul":1342:1367   */
              dup5
              dup2
              mstore
              0x00
              dup1
              mload
              0x20
              data_ada389e1fc24a8587c776340efb91b36e675792ab631816100d55df0b5cf3cbc
              dup4
              codecopy
              dup2
              mload
              swap2
              mstore
                /* "node_modules/solmate/src/tokens/ERC20.sol":6423:6455  Transfer(address(0), to, amount) */
              swap2
                /* "#utility.yul":1315:1333   */
              add
                /* "node_modules/solmate/src/tokens/ERC20.sol":6423:6455  Transfer(address(0), to, amount) */
            tag_133:
              mload(0x40)
              dup1
              swap2
              sub
              swap1
              log3
                /* "node_modules/solmate/src/tokens/ERC20.sol":6137:6462  function _mint(address to, uint256 amount) internal virtual {... */
              pop
              pop
              jump	// out
                /* "node_modules/solmate/src/tokens/ERC20.sol":6468:6796  function _burn(address from, uint256 amount) internal virtual {... */
            tag_107:
              sub(shl(0xa0, 0x01), 0x01)
                /* "node_modules/solmate/src/tokens/ERC20.sol":6540:6555  balanceOf[from] */
              dup3
              and
              0x00
              swap1
              dup2
              mstore
                /* "node_modules/solmate/src/tokens/ERC20.sol":6540:6549  balanceOf */
              0x03
                /* "node_modules/solmate/src/tokens/ERC20.sol":6540:6555  balanceOf[from] */
              0x20
              mstore
              0x40
              dup2
              keccak256
                /* "node_modules/solmate/src/tokens/ERC20.sol":6540:6565  balanceOf[from] -= amount */
              dup1
              sload
                /* "node_modules/solmate/src/tokens/ERC20.sol":6559:6565  amount */
              dup4
              swap3
                /* "node_modules/solmate/src/tokens/ERC20.sol":6540:6555  balanceOf[from] */
              swap1
                /* "node_modules/solmate/src/tokens/ERC20.sol":6540:6565  balanceOf[from] -= amount */
              tag_135
              swap1
                /* "node_modules/solmate/src/tokens/ERC20.sol":6559:6565  amount */
              dup5
              swap1
                /* "node_modules/solmate/src/tokens/ERC20.sol":6540:6565  balanceOf[from] -= amount */
              tag_89
              jump	// in
            tag_135:
              swap1
              swap2
              sstore
              pop
              pop
                /* "node_modules/solmate/src/tokens/ERC20.sol":6708:6719  totalSupply */
              0x02
                /* "node_modules/solmate/src/tokens/ERC20.sol":6708:6729  totalSupply -= amount */
              dup1
              sload
              dup3
              swap1
              sub
              swap1
              sstore
                /* "node_modules/solmate/src/tokens/ERC20.sol":6755:6789  Transfer(from, address(0), amount) */
              mload(0x40)
                /* "#utility.yul":1342:1367   */
              dup2
              dup2
              mstore
              0x00
              swap1
              sub(shl(0xa0, 0x01), 0x01)
                /* "node_modules/solmate/src/tokens/ERC20.sol":6755:6789  Transfer(from, address(0), amount) */
              dup5
              and
              swap1
              0x00
              dup1
              mload
              0x20
              data_ada389e1fc24a8587c776340efb91b36e675792ab631816100d55df0b5cf3cbc
              dup4
              codecopy
              dup2
              mload
              swap2
              mstore
              swap1
                /* "#utility.yul":1330:1332   */
              0x20
                /* "#utility.yul":1315:1333   */
              add
                /* "node_modules/solmate/src/tokens/ERC20.sol":6755:6789  Transfer(from, address(0), amount) */
              tag_133
                /* "#utility.yul":1196:1373   */
              jump
                /* "#utility.yul":14:562   */
            tag_23:
                /* "#utility.yul":126:130   */
              0x00
                /* "#utility.yul":155:157   */
              0x20
                /* "#utility.yul":184:186   */
              dup1
                /* "#utility.yul":173:182   */
              dup4
                /* "#utility.yul":166:187   */
              mstore
                /* "#utility.yul":216:222   */
              dup4
                /* "#utility.yul":210:223   */
              mload
                /* "#utility.yul":259:265   */
              dup1
                /* "#utility.yul":254:256   */
              dup3
                /* "#utility.yul":243:252   */
              dup6
                /* "#utility.yul":239:257   */
              add
                /* "#utility.yul":232:266   */
              mstore
                /* "#utility.yul":284:285   */
              0x00
                /* "#utility.yul":294:434   */
            tag_142:
                /* "#utility.yul":308:314   */
              dup2
                /* "#utility.yul":305:306   */
              dup2
                /* "#utility.yul":302:315   */
              lt
                /* "#utility.yul":294:434   */
              iszero
              tag_144
              jumpi
                /* "#utility.yul":403:417   */
              dup6
              dup2
              add
                /* "#utility.yul":399:422   */
              dup4
              add
                /* "#utility.yul":393:423   */
              mload
                /* "#utility.yul":369:386   */
              dup6
              dup3
              add
                /* "#utility.yul":388:390   */
              0x40
                /* "#utility.yul":365:391   */
              add
                /* "#utility.yul":358:424   */
              mstore
                /* "#utility.yul":323:333   */
              dup3
              add
                /* "#utility.yul":294:434   */
              jump(tag_142)
            tag_144:
                /* "#utility.yul":298:301   */
              pop
                /* "#utility.yul":483:484   */
              0x00
                /* "#utility.yul":478:480   */
              0x40
                /* "#utility.yul":469:475   */
              dup3
                /* "#utility.yul":458:467   */
              dup7
                /* "#utility.yul":454:476   */
              add
                /* "#utility.yul":450:481   */
              add
                /* "#utility.yul":443:485   */
              mstore
                /* "#utility.yul":553:555   */
              0x40
                /* "#utility.yul":546:548   */
              0x1f
                /* "#utility.yul":542:549   */
              not
                /* "#utility.yul":537:539   */
              0x1f
                /* "#utility.yul":529:535   */
              dup4
                /* "#utility.yul":525:540   */
              add
                /* "#utility.yul":521:550   */
              and
                /* "#utility.yul":510:519   */
              dup6
                /* "#utility.yul":506:551   */
              add
                /* "#utility.yul":502:556   */
              add
                /* "#utility.yul":494:556   */
              swap3
              pop
              pop
              pop
                /* "#utility.yul":14:562   */
              swap3
              swap2
              pop
              pop
              jump	// out
                /* "#utility.yul":567:740   */
            tag_137:
                /* "#utility.yul":635:655   */
              dup1
              calldataload
              sub(shl(0xa0, 0x01), 0x01)
                /* "#utility.yul":684:715   */
              dup2
              and
                /* "#utility.yul":674:716   */
              dup2
              eq
                /* "#utility.yul":664:734   */
              tag_146
              jumpi
                /* "#utility.yul":730:731   */
              0x00
                /* "#utility.yul":727:728   */
              dup1
                /* "#utility.yul":720:732   */
              revert
                /* "#utility.yul":664:734   */
            tag_146:
                /* "#utility.yul":567:740   */
              swap2
              swap1
              pop
              jump	// out
                /* "#utility.yul":745:999   */
            tag_26:
                /* "#utility.yul":813:819   */
              0x00
                /* "#utility.yul":821:827   */
              dup1
                /* "#utility.yul":874:876   */
              0x40
                /* "#utility.yul":862:871   */
              dup4
                /* "#utility.yul":853:860   */
              dup6
                /* "#utility.yul":849:872   */
              sub
                /* "#utility.yul":845:877   */
              slt
                /* "#utility.yul":842:894   */
              iszero
              tag_148
              jumpi
                /* "#utility.yul":890:891   */
              0x00
                /* "#utility.yul":887:888   */
              dup1
                /* "#utility.yul":880:892   */
              revert
                /* "#utility.yul":842:894   */
            tag_148:
                /* "#utility.yul":913:942   */
              tag_149
                /* "#utility.yul":932:941   */
              dup4
                /* "#utility.yul":913:942   */
              tag_137
              jump	// in
            tag_149:
                /* "#utility.yul":903:942   */
              swap5
                /* "#utility.yul":989:991   */
              0x20
                /* "#utility.yul":974:992   */
              swap4
              swap1
              swap4
              add
                /* "#utility.yul":961:993   */
              calldataload
              swap4
              pop
              pop
              pop
                /* "#utility.yul":745:999   */
              jump	// out
                /* "#utility.yul":1378:1706   */
            tag_36:
                /* "#utility.yul":1455:1461   */
              0x00
                /* "#utility.yul":1463:1469   */
              dup1
                /* "#utility.yul":1471:1477   */
              0x00
                /* "#utility.yul":1524:1526   */
              0x60
                /* "#utility.yul":1512:1521   */
              dup5
                /* "#utility.yul":1503:1510   */
              dup7
                /* "#utility.yul":1499:1522   */
              sub
                /* "#utility.yul":1495:1527   */
              slt
                /* "#utility.yul":1492:1544   */
              iszero
              tag_153
              jumpi
                /* "#utility.yul":1540:1541   */
              0x00
                /* "#utility.yul":1537:1538   */
              dup1
                /* "#utility.yul":1530:1542   */
              revert
                /* "#utility.yul":1492:1544   */
            tag_153:
                /* "#utility.yul":1563:1592   */
              tag_154
                /* "#utility.yul":1582:1591   */
              dup5
                /* "#utility.yul":1563:1592   */
              tag_137
              jump	// in
            tag_154:
                /* "#utility.yul":1553:1592   */
              swap3
              pop
                /* "#utility.yul":1611:1649   */
              tag_155
                /* "#utility.yul":1645:1647   */
              0x20
                /* "#utility.yul":1634:1643   */
              dup6
                /* "#utility.yul":1630:1648   */
              add
                /* "#utility.yul":1611:1649   */
              tag_137
              jump	// in
            tag_155:
                /* "#utility.yul":1601:1649   */
              swap2
              pop
                /* "#utility.yul":1696:1698   */
              0x40
                /* "#utility.yul":1685:1694   */
              dup5
                /* "#utility.yul":1681:1699   */
              add
                /* "#utility.yul":1668:1700   */
              calldataload
                /* "#utility.yul":1658:1700   */
              swap1
              pop
                /* "#utility.yul":1378:1706   */
              swap3
              pop
              swap3
              pop
              swap3
              jump	// out
                /* "#utility.yul":2082:2268   */
            tag_52:
                /* "#utility.yul":2141:2147   */
              0x00
                /* "#utility.yul":2194:2196   */
              0x20
                /* "#utility.yul":2182:2191   */
              dup3
                /* "#utility.yul":2173:2180   */
              dup5
                /* "#utility.yul":2169:2192   */
              sub
                /* "#utility.yul":2165:2197   */
              slt
                /* "#utility.yul":2162:2214   */
              iszero
              tag_159
              jumpi
                /* "#utility.yul":2210:2211   */
              0x00
                /* "#utility.yul":2207:2208   */
              dup1
                /* "#utility.yul":2200:2212   */
              revert
                /* "#utility.yul":2162:2214   */
            tag_159:
                /* "#utility.yul":2233:2262   */
              tag_160
                /* "#utility.yul":2252:2261   */
              dup3
                /* "#utility.yul":2233:2262   */
              tag_137
              jump	// in
            tag_160:
                /* "#utility.yul":2223:2262   */
              swap4
                /* "#utility.yul":2082:2268   */
              swap3
              pop
              pop
              pop
              jump	// out
                /* "#utility.yul":2273:2966   */
            tag_71:
                /* "#utility.yul":2384:2390   */
              0x00
                /* "#utility.yul":2392:2398   */
              dup1
                /* "#utility.yul":2400:2406   */
              0x00
                /* "#utility.yul":2408:2414   */
              dup1
                /* "#utility.yul":2416:2422   */
              0x00
                /* "#utility.yul":2424:2430   */
              dup1
                /* "#utility.yul":2432:2438   */
              0x00
                /* "#utility.yul":2485:2488   */
              0xe0
                /* "#utility.yul":2473:2482   */
              dup9
                /* "#utility.yul":2464:2471   */
              dup11
                /* "#utility.yul":2460:2483   */
              sub
                /* "#utility.yul":2456:2489   */
              slt
                /* "#utility.yul":2453:2506   */
              iszero
              tag_162
              jumpi
                /* "#utility.yul":2502:2503   */
              0x00
                /* "#utility.yul":2499:2500   */
              dup1
                /* "#utility.yul":2492:2504   */
              revert
                /* "#utility.yul":2453:2506   */
            tag_162:
                /* "#utility.yul":2525:2554   */
              tag_163
                /* "#utility.yul":2544:2553   */
              dup9
                /* "#utility.yul":2525:2554   */
              tag_137
              jump	// in
            tag_163:
                /* "#utility.yul":2515:2554   */
              swap7
              pop
                /* "#utility.yul":2573:2611   */
              tag_164
                /* "#utility.yul":2607:2609   */
              0x20
                /* "#utility.yul":2596:2605   */
              dup10
                /* "#utility.yul":2592:2610   */
              add
                /* "#utility.yul":2573:2611   */
              tag_137
              jump	// in
            tag_164:
                /* "#utility.yul":2563:2611   */
              swap6
              pop
                /* "#utility.yul":2658:2660   */
              0x40
                /* "#utility.yul":2647:2656   */
              dup9
                /* "#utility.yul":2643:2661   */
              add
                /* "#utility.yul":2630:2662   */
              calldataload
                /* "#utility.yul":2620:2662   */
              swap5
              pop
                /* "#utility.yul":2709:2711   */
              0x60
                /* "#utility.yul":2698:2707   */
              dup9
                /* "#utility.yul":2694:2712   */
              add
                /* "#utility.yul":2681:2713   */
              calldataload
                /* "#utility.yul":2671:2713   */
              swap4
              pop
                /* "#utility.yul":2763:2766   */
              0x80
                /* "#utility.yul":2752:2761   */
              dup9
                /* "#utility.yul":2748:2767   */
              add
                /* "#utility.yul":2735:2768   */
              calldataload
                /* "#utility.yul":2808:2812   */
              0xff
                /* "#utility.yul":2801:2806   */
              dup2
                /* "#utility.yul":2797:2813   */
              and
                /* "#utility.yul":2790:2795   */
              dup2
                /* "#utility.yul":2787:2814   */
              eq
                /* "#utility.yul":2777:2832   */
              tag_165
              jumpi
                /* "#utility.yul":2828:2829   */
              0x00
                /* "#utility.yul":2825:2826   */
              dup1
                /* "#utility.yul":2818:2830   */
              revert
                /* "#utility.yul":2777:2832   */
            tag_165:
                /* "#utility.yul":2273:2966   */
              swap7
              swap10
              swap6
              swap9
              pop
              swap4
              swap7
              swap3
              swap6
                /* "#utility.yul":2851:2856   */
              swap5
                /* "#utility.yul":2903:2906   */
              0xa0
                /* "#utility.yul":2888:2907   */
              dup5
              add
                /* "#utility.yul":2875:2908   */
              calldataload
              swap5
              pop
                /* "#utility.yul":2955:2958   */
              0xc0
                /* "#utility.yul":2940:2959   */
              swap1
              swap4
              add
                /* "#utility.yul":2927:2960   */
              calldataload
              swap3
                /* "#utility.yul":2273:2966   */
              swap2
              pop
              pop
              jump	// out
                /* "#utility.yul":2971:3231   */
            tag_75:
                /* "#utility.yul":3039:3045   */
              0x00
                /* "#utility.yul":3047:3053   */
              dup1
                /* "#utility.yul":3100:3102   */
              0x40
                /* "#utility.yul":3088:3097   */
              dup4
                /* "#utility.yul":3079:3086   */
              dup6
                /* "#utility.yul":3075:3098   */
              sub
                /* "#utility.yul":3071:3103   */
              slt
                /* "#utility.yul":3068:3120   */
              iszero
              tag_167
              jumpi
                /* "#utility.yul":3116:3117   */
              0x00
                /* "#utility.yul":3113:3114   */
              dup1
                /* "#utility.yul":3106:3118   */
              revert
                /* "#utility.yul":3068:3120   */
            tag_167:
                /* "#utility.yul":3139:3168   */
              tag_168
                /* "#utility.yul":3158:3167   */
              dup4
                /* "#utility.yul":3139:3168   */
              tag_137
              jump	// in
            tag_168:
                /* "#utility.yul":3129:3168   */
              swap2
              pop
                /* "#utility.yul":3187:3225   */
              tag_169
                /* "#utility.yul":3221:3223   */
              0x20
                /* "#utility.yul":3210:3219   */
              dup5
                /* "#utility.yul":3206:3224   */
              add
                /* "#utility.yul":3187:3225   */
              tag_137
              jump	// in
            tag_169:
                /* "#utility.yul":3177:3225   */
              swap1
              pop
                /* "#utility.yul":2971:3231   */
              swap3
              pop
              swap3
              swap1
              pop
              jump	// out
                /* "#utility.yul":3236:3616   */
            tag_79:
                /* "#utility.yul":3315:3316   */
              0x01
                /* "#utility.yul":3311:3323   */
              dup2
              dup2
              shr
              swap1
                /* "#utility.yul":3358:3370   */
              dup3
              and
              dup1
                /* "#utility.yul":3379:3440   */
              tag_171
              jumpi
                /* "#utility.yul":3433:3437   */
              0x7f
                /* "#utility.yul":3425:3431   */
              dup3
                /* "#utility.yul":3421:3438   */
              and
                /* "#utility.yul":3411:3438   */
              swap2
              pop
                /* "#utility.yul":3379:3440   */
            tag_171:
                /* "#utility.yul":3486:3488   */
              0x20
                /* "#utility.yul":3478:3484   */
              dup3
                /* "#utility.yul":3475:3489   */
              lt
                /* "#utility.yul":3455:3473   */
              dup2
                /* "#utility.yul":3452:3490   */
              sub
                /* "#utility.yul":3449:3610   */
              tag_172
              jumpi
                /* "#utility.yul":3532:3542   */
              0x4e487b71
                /* "#utility.yul":3527:3530   */
              0xe0
                /* "#utility.yul":3523:3543   */
              shl
                /* "#utility.yul":3520:3521   */
              0x00
                /* "#utility.yul":3513:3544   */
              mstore
                /* "#utility.yul":3567:3571   */
              0x22
                /* "#utility.yul":3564:3565   */
              0x04
                /* "#utility.yul":3557:3572   */
              mstore
                /* "#utility.yul":3595:3599   */
              0x24
                /* "#utility.yul":3592:3593   */
              0x00
                /* "#utility.yul":3585:3600   */
              revert
                /* "#utility.yul":3449:3610   */
            tag_172:
              pop
                /* "#utility.yul":3236:3616   */
              swap2
              swap1
              pop
              jump	// out
                /* "#utility.yul":3621:3748   */
            tag_138:
                /* "#utility.yul":3682:3692   */
              0x4e487b71
                /* "#utility.yul":3677:3680   */
              0xe0
                /* "#utility.yul":3673:3693   */
              shl
                /* "#utility.yul":3670:3671   */
              0x00
                /* "#utility.yul":3663:3694   */
              mstore
                /* "#utility.yul":3713:3717   */
              0x11
                /* "#utility.yul":3710:3711   */
              0x04
                /* "#utility.yul":3703:3718   */
              mstore
                /* "#utility.yul":3737:3741   */
              0x24
                /* "#utility.yul":3734:3735   */
              0x00
                /* "#utility.yul":3727:3742   */
              revert
                /* "#utility.yul":3753:3881   */
            tag_89:
                /* "#utility.yul":3820:3829   */
              dup2
              dup2
              sub
                /* "#utility.yul":3841:3852   */
              dup2
              dup2
              gt
                /* "#utility.yul":3838:3875   */
              iszero
              tag_84
              jumpi
                /* "#utility.yul":3855:3873   */
              tag_84
              tag_138
              jump	// in
                /* "#utility.yul":5411:6544   */
            tag_127:
                /* "#utility.yul":5541:5544   */
              0x00
                /* "#utility.yul":5570:5571   */
              dup1
                /* "#utility.yul":5603:5609   */
              dup4
                /* "#utility.yul":5597:5610   */
              sload
                /* "#utility.yul":5633:5636   */
              dup2
                /* "#utility.yul":5655:5656   */
              0x01
                /* "#utility.yul":5683:5692   */
              dup3
                /* "#utility.yul":5679:5681   */
              dup2
                /* "#utility.yul":5675:5693   */
              shr
                /* "#utility.yul":5665:5693   */
              swap2
              pop
                /* "#utility.yul":5743:5745   */
              dup1
                /* "#utility.yul":5732:5741   */
              dup4
                /* "#utility.yul":5728:5746   */
              and
                /* "#utility.yul":5765:5783   */
              dup1
                /* "#utility.yul":5755:5816   */
              tag_182
              jumpi
                /* "#utility.yul":5809:5813   */
              0x7f
                /* "#utility.yul":5801:5807   */
              dup4
                /* "#utility.yul":5797:5814   */
              and
                /* "#utility.yul":5787:5814   */
              swap3
              pop
                /* "#utility.yul":5755:5816   */
            tag_182:
                /* "#utility.yul":5835:5837   */
              0x20
                /* "#utility.yul":5883:5885   */
              dup1
                /* "#utility.yul":5875:5881   */
              dup5
                /* "#utility.yul":5872:5886   */
              lt
                /* "#utility.yul":5852:5870   */
              dup3
                /* "#utility.yul":5849:5887   */
              sub
                /* "#utility.yul":5846:6011   */
              tag_183
              jumpi
              shl(0xe0, 0x4e487b71)
                /* "#utility.yul":5910:5943   */
              dup7
              mstore
                /* "#utility.yul":5966:5970   */
              0x22
                /* "#utility.yul":5963:5964   */
              0x04
                /* "#utility.yul":5956:5971   */
              mstore
                /* "#utility.yul":5996:6000   */
              0x24
                /* "#utility.yul":5917:5920   */
              dup7
                /* "#utility.yul":5984:6001   */
              revert
                /* "#utility.yul":5846:6011   */
            tag_183:
                /* "#utility.yul":6027:6045   */
              dup2
                /* "#utility.yul":6054:6187   */
              dup1
              iszero
              tag_185
              jumpi
                /* "#utility.yul":6201:6202   */
              0x01
                /* "#utility.yul":6196:6519   */
              dup2
              eq
              tag_186
              jumpi
                /* "#utility.yul":6020:6519   */
              jump(tag_184)
                /* "#utility.yul":6054:6187   */
            tag_185:
              not(0xff)
                /* "#utility.yul":6087:6111   */
              dup7
              and
                /* "#utility.yul":6075:6112   */
              dup10
              mstore
                /* "#utility.yul":6160:6174   */
              dup5
              iszero
                /* "#utility.yul":6153:6175   */
              iszero
                /* "#utility.yul":6141:6176   */
              dup6
              mul
                /* "#utility.yul":6132:6177   */
              dup10
              add
              swap7
              pop
                /* "#utility.yul":6054:6187   */
              jump(tag_184)
                /* "#utility.yul":6196:6519   */
            tag_186:
                /* "#utility.yul":5358:5359   */
              0x00
                /* "#utility.yul":5351:5365   */
              dup11
              dup2
              mstore
                /* "#utility.yul":5395:5399   */
              0x20
                /* "#utility.yul":5382:5400   */
              swap1
              keccak256
                /* "#utility.yul":6294:6295   */
              0x00
                /* "#utility.yul":6308:6473   */
            tag_188:
                /* "#utility.yul":6322:6328   */
              dup7
                /* "#utility.yul":6319:6320   */
              dup2
                /* "#utility.yul":6316:6329   */
              lt
                /* "#utility.yul":6308:6473   */
              iszero
              tag_190
              jumpi
                /* "#utility.yul":6400:6414   */
              dup2
              sload
                /* "#utility.yul":6387:6398   */
              dup12
              dup3
              add
                /* "#utility.yul":6380:6415   */
              mstore
                /* "#utility.yul":6443:6459   */
              swap1
              dup6
              add
              swap1
                /* "#utility.yul":6337:6347   */
              dup4
              add
                /* "#utility.yul":6308:6473   */
              jump(tag_188)
            tag_190:
                /* "#utility.yul":6312:6315   */
              pop
              pop
                /* "#utility.yul":6502:6508   */
              dup5
                /* "#utility.yul":6497:6500   */
              dup10
                /* "#utility.yul":6493:6509   */
              add
                /* "#utility.yul":6486:6509   */
              swap7
              pop
                /* "#utility.yul":6020:6519   */
            tag_184:
              pop
                /* "#utility.yul":6535:6538   */
              swap5
              swap9
                /* "#utility.yul":5411:6544   */
              swap8
              pop
              pop
              pop
              pop
              pop
              pop
              pop
              pop
              jump	// out
                /* "#utility.yul":7043:7168   */
            tag_132:
                /* "#utility.yul":7108:7117   */
              dup1
              dup3
              add
                /* "#utility.yul":7129:7139   */
              dup1
              dup3
              gt
                /* "#utility.yul":7126:7162   */
              iszero
              tag_84
              jumpi
                /* "#utility.yul":7142:7160   */
              tag_84
              tag_138
              jump	// in
            stop
            data_ada389e1fc24a8587c776340efb91b36e675792ab631816100d55df0b5cf3cbc ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef

            auxdata: 0xa26469706673582212201054ea0d4138a8c47fdda30048f6d5e8617d32c39225a609f3bf5a7bea5f11ef64736f6c63430008110033
        }
    }

    sub_4: assembly {
            /* "contracts/Market.sol":867:58189  contract Market is Initializable, AccessControlUpgradeable, PausableUpgradeable, ERC4626 {... */
          mstore(0x40, 0x0120)
            /* "contracts/Market.sol":4568:4694  constructor(ERC20 asset_, Auditor auditor_) ERC4626(asset_, "", "") {... */
          callvalue
          dup1
          iszero
          tag_1
          jumpi
          0x00
          dup1
          revert
        tag_1:
          pop
          mload(0x40)
          sub(codesize, bytecodeSize)
          dup1
          bytecodeSize
          dup4
          codecopy
          dup2
          add
          0x40
          dup2
          swap1
          mstore
          tag_2
          swap2
          tag_3
          jump	// in
        tag_2:
            /* "contracts/Market.sol":4620:4626  asset_ */
          dup2
            /* "node_modules/solmate/src/mixins/ERC4626.sol":1171:1343  constructor(... */
          mload(0x40)
          dup1
          0x20
          add
          0x40
          mstore
          dup1
          0x00
          dup2
          mstore
          pop
          mload(0x40)
          dup1
          0x20
          add
          0x40
          mstore
          dup1
          0x00
          dup2
          mstore
          pop
            /* "node_modules/solmate/src/mixins/ERC4626.sol":1277:1282  _name */
          dup2
            /* "node_modules/solmate/src/mixins/ERC4626.sol":1284:1291  _symbol */
          dup2
            /* "node_modules/solmate/src/mixins/ERC4626.sol":1293:1299  _asset */
          dup5
          sub(shl(0xa0, 0x01), 0x01)
            /* "node_modules/solmate/src/mixins/ERC4626.sol":1293:1308  _asset.decimals */
          and
          0x313ce567
            /* "node_modules/solmate/src/mixins/ERC4626.sol":1293:1310  _asset.decimals() */
          mload(0x40)
          dup2
          0xffffffff
          and
          0xe0
          shl
          dup2
          mstore
          0x04
          add
          0x20
          mload(0x40)
          dup1
          dup4
          sub
          dup2
          dup7
          gas
          staticcall
          iszero
          dup1
          iszero
          tag_7
          jumpi
          returndatasize
          0x00
          dup1
          returndatacopy
          revert(0x00, returndatasize)
        tag_7:
          pop
          pop
          pop
          pop
          mload(0x40)
          returndatasize
          not(0x1f)
          0x1f
          dup3
          add
          and
          dup3
          add
          dup1
          0x40
          mstore
          pop
          dup2
          add
          swap1
          tag_8
          swap2
          swap1
          tag_9
          jump	// in
        tag_8:
            /* "node_modules/solmate/src/tokens/ERC20.sol":2081:2085  name */
          0xc9
            /* "node_modules/solmate/src/tokens/ERC20.sol":2081:2093  name = _name */
          tag_12
            /* "node_modules/solmate/src/tokens/ERC20.sol":2088:2093  _name */
          dup5
            /* "node_modules/solmate/src/tokens/ERC20.sol":2081:2085  name */
          dup3
            /* "node_modules/solmate/src/tokens/ERC20.sol":2081:2093  name = _name */
          tag_13
          jump	// in
        tag_12:
          pop
            /* "node_modules/solmate/src/tokens/ERC20.sol":2103:2109  symbol */
          0xca
            /* "node_modules/solmate/src/tokens/ERC20.sol":2103:2119  symbol = _symbol */
          tag_14
            /* "node_modules/solmate/src/tokens/ERC20.sol":2112:2119  _symbol */
          dup4
            /* "node_modules/solmate/src/tokens/ERC20.sol":2103:2109  symbol */
          dup3
            /* "node_modules/solmate/src/tokens/ERC20.sol":2103:2119  symbol = _symbol */
          tag_13
          jump	// in
        tag_14:
          pop
            /* "node_modules/solmate/src/tokens/ERC20.sol":2129:2149  decimals = _decimals */
          0xff
          dup2
          and
          0x80
          mstore
            /* "node_modules/solmate/src/tokens/ERC20.sol":2179:2192  block.chainid */
          chainid
            /* "node_modules/solmate/src/tokens/ERC20.sol":2160:2192  INITIAL_CHAIN_ID = block.chainid */
          0xa0
          mstore
            /* "node_modules/solmate/src/tokens/ERC20.sol":2229:2253  computeDomainSeparator() */
          tag_15
            /* "node_modules/solmate/src/tokens/ERC20.sol":2229:2251  computeDomainSeparator */
          tag_16
            /* "node_modules/solmate/src/tokens/ERC20.sol":2229:2253  computeDomainSeparator() */
          jump	// in
        tag_15:
            /* "node_modules/solmate/src/tokens/ERC20.sol":2202:2253  INITIAL_DOMAIN_SEPARATOR = computeDomainSeparator() */
          0xc0
          mstore
          pop
          pop
          pop
          sub(shl(0xa0, 0x01), 0x01)
            /* "node_modules/solmate/src/mixins/ERC4626.sol":1322:1336  asset = _asset */
          swap3
          dup4
          and
          0xe0
          mstore
          pop
          pop
            /* "contracts/Market.sol":4642:4660  auditor = auditor_ */
          dup2
          and
          0x0100
          mstore
            /* "contracts/Market.sol":4667:4689  _disableInitializers() */
          tag_19
            /* "contracts/Market.sol":4667:4687  _disableInitializers */
          tag_20
            /* "contracts/Market.sol":4667:4689  _disableInitializers() */
          jump	// in
        tag_19:
            /* "contracts/Market.sol":4568:4694  constructor(ERC20 asset_, Auditor auditor_) ERC4626(asset_, "", "") {... */
          pop
          pop
            /* "contracts/Market.sol":867:58189  contract Market is Initializable, AccessControlUpgradeable, PausableUpgradeable, ERC4626 {... */
          jump(tag_38)
            /* "node_modules/solmate/src/tokens/ERC20.sol":5497:5943  function computeDomainSeparator() internal view virtual returns (bytes32) {... */
        tag_16:
            /* "node_modules/solmate/src/tokens/ERC20.sol":5562:5569  bytes32 */
          0x00
            /* "node_modules/solmate/src/tokens/ERC20.sol":5659:5754  keccak256("EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)") */
          0x8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f
            /* "node_modules/solmate/src/tokens/ERC20.sol":5792:5796  name */
          0xc9
            /* "node_modules/solmate/src/tokens/ERC20.sol":5776:5798  keccak256(bytes(name)) */
          mload(0x40)
          tag_23
          swap2
          swap1
          tag_24
          jump	// in
        tag_23:
          0x40
          dup1
          mload
          swap2
          dup3
          swap1
          sub
          dup3
          keccak256
            /* "node_modules/solmate/src/tokens/ERC20.sol":5627:5922  abi.encode(... */
          0x20
          dup4
          add
            /* "#utility.yul":4699:4724   */
          swap4
          swap1
          swap4
          mstore
            /* "#utility.yul":4740:4758   */
          dup2
          add
            /* "#utility.yul":4733:4767   */
          swap2
          swap1
          swap2
          mstore
            /* "node_modules/solmate/src/tokens/ERC20.sol":5820:5834  keccak256("1") */
          0xc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6
            /* "#utility.yul":4783:4801   */
          0x60
          dup3
          add
            /* "#utility.yul":4776:4810   */
          mstore
            /* "node_modules/solmate/src/tokens/ERC20.sol":5856:5869  block.chainid */
          chainid
            /* "#utility.yul":4826:4844   */
          0x80
          dup3
          add
            /* "#utility.yul":4819:4853   */
          mstore
            /* "node_modules/solmate/src/tokens/ERC20.sol":5899:5903  this */
          address
            /* "#utility.yul":4869:4888   */
          0xa0
          dup3
          add
            /* "#utility.yul":4862:4923   */
          mstore
            /* "#utility.yul":4671:4690   */
          0xc0
          add
            /* "node_modules/solmate/src/tokens/ERC20.sol":5627:5922  abi.encode(... */
          mload(0x40)
          0x20
          dup2
          dup4
          sub
          sub
          dup2
          mstore
          swap1
          0x40
          mstore
            /* "node_modules/solmate/src/tokens/ERC20.sol":5600:5936  keccak256(... */
          dup1
          mload
          swap1
          0x20
          add
          keccak256
            /* "node_modules/solmate/src/tokens/ERC20.sol":5581:5936  return... */
          swap1
          pop
            /* "node_modules/solmate/src/tokens/ERC20.sol":5497:5943  function computeDomainSeparator() internal view virtual returns (bytes32) {... */
          swap1
          jump	// out
            /* "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":5928:6207  function _disableInitializers() internal virtual {... */
        tag_20:
            /* "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":5996:6009  _initializing */
          sload(0x00)
          0x0100
          swap1
          div
          0xff
          and
            /* "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":5995:6009  !_initializing */
          iszero
            /* "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":5987:6053  require(!_initializing, "Initializable: contract is initializing") */
          tag_28
          jumpi
          0x00
          dup1
          revert
        tag_28:
            /* "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":6067:6079  _initialized */
          sload(0x00)
            /* "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":6082:6097  type(uint8).max */
          0xff
            /* "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":6067:6079  _initialized */
          swap1
          dup2
          and
            /* "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":6067:6097  _initialized < type(uint8).max */
          lt
            /* "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":6063:6201  if (_initialized < type(uint8).max) {... */
          iszero
          tag_29
          jumpi
            /* "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":6113:6125  _initialized */
          0x00
            /* "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":6113:6143  _initialized = type(uint8).max */
          dup1
          sload
          not(0xff)
          and
            /* "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":6128:6143  type(uint8).max */
          0xff
            /* "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":6113:6143  _initialized = type(uint8).max */
          swap1
          dup2
          or
          swap1
          swap2
          sstore
            /* "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":6162:6190  Initialized(type(uint8).max) */
          mload(0x40)
            /* "#utility.yul":5076:5112   */
          swap1
          dup2
          mstore
            /* "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":6162:6190  Initialized(type(uint8).max) */
          0x7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498
          swap1
            /* "#utility.yul":5064:5066   */
          0x20
            /* "#utility.yul":5049:5067   */
          add
            /* "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":6162:6190  Initialized(type(uint8).max) */
          mload(0x40)
          dup1
          swap2
          sub
          swap1
          log1
            /* "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":6063:6201  if (_initialized < type(uint8).max) {... */
        tag_29:
            /* "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":5928:6207  function _disableInitializers() internal virtual {... */
          jump	// out
            /* "#utility.yul":14:152   */
        tag_32:
          sub(shl(0xa0, 0x01), 0x01)
            /* "#utility.yul":96:127   */
          dup2
          and
            /* "#utility.yul":86:128   */
          dup2
          eq
            /* "#utility.yul":76:146   */
          tag_40
          jumpi
            /* "#utility.yul":142:143   */
          0x00
            /* "#utility.yul":139:140   */
          dup1
            /* "#utility.yul":132:144   */
          revert
            /* "#utility.yul":76:146   */
        tag_40:
            /* "#utility.yul":14:152   */
          pop
          jump	// out
            /* "#utility.yul":157:587   */
        tag_3:
            /* "#utility.yul":267:273   */
          0x00
            /* "#utility.yul":275:281   */
          dup1
            /* "#utility.yul":328:330   */
          0x40
            /* "#utility.yul":316:325   */
          dup4
            /* "#utility.yul":307:314   */
          dup6
            /* "#utility.yul":303:326   */
          sub
            /* "#utility.yul":299:331   */
          slt
            /* "#utility.yul":296:348   */
          iszero
          tag_42
          jumpi
            /* "#utility.yul":344:345   */
          0x00
            /* "#utility.yul":341:342   */
          dup1
            /* "#utility.yul":334:346   */
          revert
            /* "#utility.yul":296:348   */
        tag_42:
            /* "#utility.yul":376:385   */
          dup3
            /* "#utility.yul":370:386   */
          mload
            /* "#utility.yul":395:433   */
          tag_43
            /* "#utility.yul":427:432   */
          dup2
            /* "#utility.yul":395:433   */
          tag_32
          jump	// in
        tag_43:
            /* "#utility.yul":502:504   */
          0x20
            /* "#utility.yul":487:505   */
          dup5
          add
            /* "#utility.yul":481:506   */
          mload
            /* "#utility.yul":452:457   */
          swap1
          swap3
          pop
            /* "#utility.yul":515:555   */
          tag_44
            /* "#utility.yul":481:506   */
          dup2
            /* "#utility.yul":515:555   */
          tag_32
          jump	// in
        tag_44:
            /* "#utility.yul":574:581   */
          dup1
            /* "#utility.yul":564:581   */
          swap2
          pop
          pop
            /* "#utility.yul":157:587   */
          swap3
          pop
          swap3
          swap1
          pop
          jump	// out
            /* "#utility.yul":592:865   */
        tag_9:
            /* "#utility.yul":660:666   */
          0x00
            /* "#utility.yul":713:715   */
          0x20
            /* "#utility.yul":701:710   */
          dup3
            /* "#utility.yul":692:699   */
          dup5
            /* "#utility.yul":688:711   */
          sub
            /* "#utility.yul":684:716   */
          slt
            /* "#utility.yul":681:733   */
          iszero
          tag_46
          jumpi
            /* "#utility.yul":729:730   */
          0x00
            /* "#utility.yul":726:727   */
          dup1
            /* "#utility.yul":719:731   */
          revert
            /* "#utility.yul":681:733   */
        tag_46:
            /* "#utility.yul":761:770   */
          dup2
            /* "#utility.yul":755:771   */
          mload
            /* "#utility.yul":811:815   */
          0xff
            /* "#utility.yul":804:809   */
          dup2
            /* "#utility.yul":800:816   */
          and
            /* "#utility.yul":793:798   */
          dup2
            /* "#utility.yul":790:817   */
          eq
            /* "#utility.yul":780:835   */
          tag_47
          jumpi
            /* "#utility.yul":831:832   */
          0x00
            /* "#utility.yul":828:829   */
          dup1
            /* "#utility.yul":821:833   */
          revert
            /* "#utility.yul":780:835   */
        tag_47:
            /* "#utility.yul":854:859   */
          swap4
            /* "#utility.yul":592:865   */
          swap3
          pop
          pop
          pop
          jump	// out
            /* "#utility.yul":870:997   */
        tag_33:
            /* "#utility.yul":931:941   */
          0x4e487b71
            /* "#utility.yul":926:929   */
          0xe0
            /* "#utility.yul":922:942   */
          shl
            /* "#utility.yul":919:920   */
          0x00
            /* "#utility.yul":912:943   */
          mstore
            /* "#utility.yul":962:966   */
          0x41
            /* "#utility.yul":959:960   */
          0x04
            /* "#utility.yul":952:967   */
          mstore
            /* "#utility.yul":986:990   */
          0x24
            /* "#utility.yul":983:984   */
          0x00
            /* "#utility.yul":976:991   */
          revert
            /* "#utility.yul":1002:1382   */
        tag_34:
            /* "#utility.yul":1081:1082   */
          0x01
            /* "#utility.yul":1077:1089   */
          dup2
          dup2
          shr
          swap1
            /* "#utility.yul":1124:1136   */
          dup3
          and
          dup1
            /* "#utility.yul":1145:1206   */
          tag_50
          jumpi
            /* "#utility.yul":1199:1203   */
          0x7f
            /* "#utility.yul":1191:1197   */
          dup3
            /* "#utility.yul":1187:1204   */
          and
            /* "#utility.yul":1177:1204   */
          swap2
          pop
            /* "#utility.yul":1145:1206   */
        tag_50:
            /* "#utility.yul":1252:1254   */
          0x20
            /* "#utility.yul":1244:1250   */
          dup3
            /* "#utility.yul":1241:1255   */
          lt
            /* "#utility.yul":1221:1239   */
          dup2
            /* "#utility.yul":1218:1256   */
          sub
            /* "#utility.yul":1215:1376   */
          tag_51
          jumpi
            /* "#utility.yul":1298:1308   */
          0x4e487b71
            /* "#utility.yul":1293:1296   */
          0xe0
            /* "#utility.yul":1289:1309   */
          shl
            /* "#utility.yul":1286:1287   */
          0x00
            /* "#utility.yul":1279:1310   */
          mstore
            /* "#utility.yul":1333:1337   */
          0x22
            /* "#utility.yul":1330:1331   */
          0x04
            /* "#utility.yul":1323:1338   */
          mstore
            /* "#utility.yul":1361:1365   */
          0x24
            /* "#utility.yul":1358:1359   */
          0x00
            /* "#utility.yul":1351:1366   */
          revert
            /* "#utility.yul":1215:1376   */
        tag_51:
          pop
            /* "#utility.yul":1002:1382   */
          swap2
          swap1
          pop
          jump	// out
            /* "#utility.yul":1513:2058   */
        tag_36:
            /* "#utility.yul":1615:1617   */
          0x1f
            /* "#utility.yul":1610:1613   */
          dup3
            /* "#utility.yul":1607:1618   */
          gt
            /* "#utility.yul":1604:2052   */
          iszero
          tag_54
          jumpi
            /* "#utility.yul":1651:1652   */
          0x00
            /* "#utility.yul":1676:1681   */
          dup2
            /* "#utility.yul":1672:1674   */
          dup2
            /* "#utility.yul":1665:1682   */
          mstore
            /* "#utility.yul":1721:1725   */
          0x20
            /* "#utility.yul":1717:1719   */
          dup2
            /* "#utility.yul":1707:1726   */
          keccak256
            /* "#utility.yul":1791:1793   */
          0x1f
            /* "#utility.yul":1779:1789   */
          dup6
            /* "#utility.yul":1775:1794   */
          add
            /* "#utility.yul":1772:1773   */
          0x05
            /* "#utility.yul":1768:1795   */
          shr
            /* "#utility.yul":1762:1766   */
          dup2
            /* "#utility.yul":1758:1796   */
          add
            /* "#utility.yul":1827:1831   */
          0x20
            /* "#utility.yul":1815:1825   */
          dup7
            /* "#utility.yul":1812:1832   */
          lt
            /* "#utility.yul":1809:1856   */
          iszero
          tag_55
          jumpi
          pop
            /* "#utility.yul":1850:1854   */
          dup1
            /* "#utility.yul":1809:1856   */
        tag_55:
            /* "#utility.yul":1905:1907   */
          0x1f
            /* "#utility.yul":1900:1903   */
          dup6
            /* "#utility.yul":1896:1908   */
          add
            /* "#utility.yul":1893:1894   */
          0x05
            /* "#utility.yul":1889:1909   */
          shr
            /* "#utility.yul":1883:1887   */
          dup3
            /* "#utility.yul":1879:1910   */
          add
            /* "#utility.yul":1869:1910   */
          swap2
          pop
            /* "#utility.yul":1960:2042   */
        tag_56:
            /* "#utility.yul":1978:1980   */
          dup2
            /* "#utility.yul":1971:1976   */
          dup2
            /* "#utility.yul":1968:1981   */
          lt
            /* "#utility.yul":1960:2042   */
          iszero
          tag_58
          jumpi
            /* "#utility.yul":2023:2040   */
          dup3
          dup2
          sstore
            /* "#utility.yul":2004:2005   */
          0x01
            /* "#utility.yul":1993:2006   */
          add
            /* "#utility.yul":1960:2042   */
          jump(tag_56)
        tag_58:
            /* "#utility.yul":1964:1967   */
          pop
          pop
          pop
            /* "#utility.yul":1604:2052   */
        tag_54:
            /* "#utility.yul":1513:2058   */
          pop
          pop
          pop
          jump	// out
            /* "#utility.yul":2234:3586   */
        tag_13:
            /* "#utility.yul":2354:2364   */
          dup2
          mload
          sub(shl(0x40, 0x01), 0x01)
            /* "#utility.yul":2376:2406   */
          dup2
          gt
            /* "#utility.yul":2373:2429   */
          iszero
          tag_62
          jumpi
            /* "#utility.yul":2409:2427   */
          tag_62
          tag_33
          jump	// in
        tag_62:
            /* "#utility.yul":2438:2535   */
          tag_63
            /* "#utility.yul":2528:2534   */
          dup2
            /* "#utility.yul":2488:2526   */
          tag_64
            /* "#utility.yul":2520:2524   */
          dup5
            /* "#utility.yul":2514:2525   */
          sload
            /* "#utility.yul":2488:2526   */
          tag_34
          jump	// in
        tag_64:
            /* "#utility.yul":2482:2486   */
          dup5
            /* "#utility.yul":2438:2535   */
          tag_36
          jump	// in
        tag_63:
            /* "#utility.yul":2590:2594   */
          0x20
          dup1
            /* "#utility.yul":2654:2656   */
          0x1f
            /* "#utility.yul":2643:2657   */
          dup4
          gt
            /* "#utility.yul":2671:2672   */
          0x01
            /* "#utility.yul":2666:3329   */
          dup2
          eq
          tag_66
          jumpi
            /* "#utility.yul":3373:3374   */
          0x00
            /* "#utility.yul":3390:3396   */
          dup5
            /* "#utility.yul":3387:3476   */
          iszero
          tag_67
          jumpi
          pop
            /* "#utility.yul":3442:3461   */
          dup6
          dup4
          add
            /* "#utility.yul":3436:3462   */
          mload
            /* "#utility.yul":3387:3476   */
        tag_67:
          not(0x00)
            /* "#utility.yul":2191:2192   */
          0x03
            /* "#utility.yul":2187:2198   */
          dup7
          swap1
          shl
            /* "#utility.yul":2183:2207   */
          shr
            /* "#utility.yul":2179:2208   */
          not
            /* "#utility.yul":2169:2209   */
          and
            /* "#utility.yul":2215:2216   */
          0x01
            /* "#utility.yul":2211:2222   */
          dup6
          swap1
          shl
            /* "#utility.yul":2166:2223   */
          or
            /* "#utility.yul":3489:3570   */
          dup6
          sstore
            /* "#utility.yul":2636:3580   */
          jump(tag_58)
            /* "#utility.yul":2666:3329   */
        tag_66:
            /* "#utility.yul":1460:1461   */
          0x00
            /* "#utility.yul":1453:1467   */
          dup6
          dup2
          mstore
            /* "#utility.yul":1497:1501   */
          0x20
            /* "#utility.yul":1484:1502   */
          dup2
          keccak256
          not(0x1f)
            /* "#utility.yul":2702:2722   */
          dup7
          and
          swap2
            /* "#utility.yul":2820:3056   */
        tag_70:
            /* "#utility.yul":2834:2841   */
          dup3
            /* "#utility.yul":2831:2832   */
          dup2
            /* "#utility.yul":2828:2842   */
          lt
            /* "#utility.yul":2820:3056   */
          iszero
          tag_72
          jumpi
            /* "#utility.yul":2923:2942   */
          dup9
          dup7
          add
            /* "#utility.yul":2917:2943   */
          mload
            /* "#utility.yul":2902:2944   */
          dup3
          sstore
            /* "#utility.yul":3015:3042   */
          swap5
          dup5
          add
          swap5
            /* "#utility.yul":2983:2984   */
          0x01
            /* "#utility.yul":2971:2985   */
          swap1
          swap2
          add
          swap1
            /* "#utility.yul":2850:2869   */
          dup5
          add
            /* "#utility.yul":2820:3056   */
          jump(tag_70)
        tag_72:
            /* "#utility.yul":2824:2827   */
          pop
            /* "#utility.yul":3084:3090   */
          dup6
            /* "#utility.yul":3075:3082   */
          dup3
            /* "#utility.yul":3072:3091   */
          lt
            /* "#utility.yul":3069:3270   */
          iszero
          tag_73
          jumpi
            /* "#utility.yul":3145:3164   */
          dup8
          dup6
          add
            /* "#utility.yul":3139:3165   */
          mload
          not(0x00)
            /* "#utility.yul":3228:3229   */
          0x03
            /* "#utility.yul":3224:3238   */
          dup9
          swap1
          shl
            /* "#utility.yul":3240:3243   */
          0xf8
            /* "#utility.yul":3220:3244   */
          and
            /* "#utility.yul":3216:3253   */
          shr
            /* "#utility.yul":3212:3254   */
          not
            /* "#utility.yul":3197:3255   */
          and
            /* "#utility.yul":3182:3256   */
          dup2
          sstore
            /* "#utility.yul":3069:3270   */
        tag_73:
          pop
          pop
          pop
          pop
          pop
            /* "#utility.yul":3316:3317   */
          0x01
            /* "#utility.yul":3300:3314   */
          swap1
          dup2
          shl
            /* "#utility.yul":3296:3318   */
          add
            /* "#utility.yul":3283:3319   */
          swap1
          sstore
          pop
            /* "#utility.yul":2234:3586   */
          jump	// out
            /* "#utility.yul":3591:4435   */
        tag_24:
            /* "#utility.yul":3721:3724   */
          0x00
            /* "#utility.yul":3750:3751   */
          dup1
            /* "#utility.yul":3783:3789   */
          dup4
            /* "#utility.yul":3777:3790   */
          sload
            /* "#utility.yul":3813:3849   */
          tag_75
            /* "#utility.yul":3839:3848   */
          dup2
            /* "#utility.yul":3813:3849   */
          tag_34
          jump	// in
        tag_75:
            /* "#utility.yul":3868:3869   */
          0x01
            /* "#utility.yul":3885:3903   */
          dup3
          dup2
          and
            /* "#utility.yul":3912:4045   */
          dup1
          iszero
          tag_77
          jumpi
            /* "#utility.yul":4059:4060   */
          0x01
            /* "#utility.yul":4054:4410   */
          dup2
          eq
          tag_78
          jumpi
            /* "#utility.yul":3878:4410   */
          jump(tag_76)
            /* "#utility.yul":3912:4045   */
        tag_77:
          not(0xff)
            /* "#utility.yul":3945:3969   */
          dup5
          and
            /* "#utility.yul":3933:3970   */
          dup8
          mstore
            /* "#utility.yul":4018:4032   */
          dup3
          iszero
            /* "#utility.yul":4011:4033   */
          iszero
            /* "#utility.yul":3999:4034   */
          dup4
          mul
            /* "#utility.yul":3990:4035   */
          dup8
          add
          swap5
          pop
            /* "#utility.yul":3912:4045   */
          jump(tag_76)
            /* "#utility.yul":4054:4410   */
        tag_78:
            /* "#utility.yul":4085:4091   */
          dup8
            /* "#utility.yul":4082:4083   */
          0x00
            /* "#utility.yul":4075:4092   */
          mstore
            /* "#utility.yul":4115:4119   */
          0x20
            /* "#utility.yul":4160:4162   */
          dup1
            /* "#utility.yul":4157:4158   */
          0x00
            /* "#utility.yul":4147:4163   */
          keccak256
            /* "#utility.yul":4185:4186   */
          0x00
            /* "#utility.yul":4199:4364   */
        tag_79:
            /* "#utility.yul":4213:4219   */
          dup6
            /* "#utility.yul":4210:4211   */
          dup2
            /* "#utility.yul":4207:4220   */
          lt
            /* "#utility.yul":4199:4364   */
          iszero
          tag_81
          jumpi
            /* "#utility.yul":4291:4305   */
          dup2
          sload
            /* "#utility.yul":4278:4289   */
          dup11
          dup3
          add
            /* "#utility.yul":4271:4306   */
          mstore
            /* "#utility.yul":4334:4350   */
          swap1
          dup5
          add
          swap1
            /* "#utility.yul":4228:4238   */
          dup3
          add
            /* "#utility.yul":4199:4364   */
          jump(tag_79)
        tag_81:
            /* "#utility.yul":4203:4206   */
          pop
          pop
          pop
            /* "#utility.yul":4393:4399   */
          dup3
            /* "#utility.yul":4388:4391   */
          dup8
            /* "#utility.yul":4384:4400   */
          add
            /* "#utility.yul":4377:4400   */
          swap5
          pop
            /* "#utility.yul":3878:4410   */
        tag_76:
          pop
            /* "#utility.yul":4426:4429   */
          swap3
          swap7
            /* "#utility.yul":3591:4435   */
          swap6
          pop
          pop
          pop
          pop
          pop
          pop
          jump	// out
            /* "#utility.yul":4934:5118   */
        tag_38:
            /* "contracts/Market.sol":867:58189  contract Market is Initializable, AccessControlUpgradeable, PausableUpgradeable, ERC4626 {... */
          mload(0x80)
          mload(0xa0)
          mload(0xc0)
          mload(0xe0)
          mload(0x0100)
          codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))
          0x00
          assignImmutable("0x2adb6ba13100982fae82a6c459fdc0b83ba757ca8251e42f5db6158bc4c7e480")
          0x00
          assignImmutable("0xa89f858efa0702d27b503f14d00e73a25115c8d5bdd25598ae4b376a61175436")
          0x00
          assignImmutable("0x206508c77e56a93fc1501de6f2d9e2e919258e4fe17c6ecf06cb5126d770e054")
          0x00
          assignImmutable("0x063b0319e2281f25923728cc5b1320091ce96c495bdc22c6454b9dacb4150a22")
          0x00
          assignImmutable("0x882a693831b629c58206e238ce0b4b78266c460fa9ea945dc8c81da0aa0c28f6")
          return(0x00, dataSize(sub_0))
        stop

        sub_0: assembly {
                /* "contracts/Market.sol":867:58189  contract Market is Initializable, AccessControlUpgradeable, PausableUpgradeable, ERC4626 {... */
              mstore(0x40, 0x80)
              callvalue
              dup1
              iszero
              tag_1
              jumpi
              0x00
              dup1
              revert
            tag_1:
              pop
              jumpi(tag_2, lt(calldatasize, 0x04))
              shr(0xe0, calldataload(0x00))
              dup1
              0x6eb9ffeb
              gt
              tag_96
              jumpi
              dup1
              0xb3d7f6b9
              gt
              tag_97
              jumpi
              dup1
              0xd547741f
              gt
              tag_98
              jumpi
              dup1
              0xe94b3c21
              gt
              tag_99
              jumpi
              dup1
              0xe94b3c21
              eq
              tag_90
              jumpi
              dup1
              0xeee8c9e0
              eq
              tag_91
              jumpi
              dup1
              0xef8b30f7
              eq
              tag_92
              jumpi
              dup1
              0xf3fdb15a
              eq
              tag_93
              jumpi
              dup1
              0xfb0fc4c3
              eq
              tag_94
              jumpi
              dup1
              0xfea45d94
              eq
              tag_95
              jumpi
              0x00
              dup1
              revert
            tag_99:
              dup1
              0xd547741f
              eq
              tag_84
              jumpi
              dup1
              0xd6b7494f
              eq
              tag_85
              jumpi
              dup1
              0xd905777e
              eq
              tag_86
              jumpi
              dup1
              0xdd62ed3e
              eq
              tag_87
              jumpi
              dup1
              0xe00b2625
              eq
              tag_88
              jumpi
              dup1
              0xe63ab1e9
              eq
              tag_89
              jumpi
              0x00
              dup1
              revert
            tag_98:
              dup1
              0xc6e6f592
              gt
              tag_100
              jumpi
              dup1
              0xc6e6f592
              eq
              tag_78
              jumpi
              dup1
              0xccfd8b11
              eq
              tag_79
              jumpi
              dup1
              0xce96cb77
              eq
              tag_80
              jumpi
              dup1
              0xd2681a0b
              eq
              tag_81
              jumpi
              dup1
              0xd505accf
              eq
              tag_82
              jumpi
              dup1
              0xd5164184
              eq
              tag_83
              jumpi
              0x00
              dup1
              revert
            tag_100:
              dup1
              0xb3d7f6b9
              eq
              tag_72
              jumpi
              dup1
              0xb460af94
              eq
              tag_73
              jumpi
              dup1
              0xba087652
              eq
              tag_74
              jumpi
              dup1
              0xbee36bb3
              eq
              tag_75
              jumpi
              dup1
              0xbf722ca2
              eq
              tag_76
              jumpi
              dup1
              0xc63d75b6
              eq
              tag_35
              jumpi
              0x00
              dup1
              revert
            tag_97:
              dup1
              0x926bb633
              gt
              tag_101
              jumpi
              dup1
              0xa1bab447
              gt
              tag_102
              jumpi
              dup1
              0xa1bab447
              eq
              tag_66
              jumpi
              dup1
              0xa1e8f02b
              eq
              tag_67
              jumpi
              dup1
              0xa217fddf
              eq
              tag_68
              jumpi
              dup1
              0xa9059cbb
              eq
              tag_69
              jumpi
              dup1
              0xacb70815
              eq
              tag_70
              jumpi
              dup1
              0xb2a02ff1
              eq
              tag_71
              jumpi
              0x00
              dup1
              revert
            tag_102:
              dup1
              0x926bb633
              eq
              tag_60
              jumpi
              dup1
              0x94bf804d
              eq
              tag_61
              jumpi
              dup1
              0x95d89b41
              eq
              tag_62
              jumpi
              dup1
              0x9f73066e
              eq
              tag_63
              jumpi
              dup1
              0xa05a091a
              eq
              tag_64
              jumpi
              dup1
              0xa16a8850
              eq
              tag_65
              jumpi
              0x00
              dup1
              revert
            tag_101:
              dup1
              0x8456cb59
              gt
              tag_103
              jumpi
              dup1
              0x8456cb59
              eq
              tag_54
              jumpi
              dup1
              0x8a1baa46
              eq
              tag_55
              jumpi
              dup1
              0x8bcd4016
              eq
              tag_56
              jumpi
              dup1
              0x8c3cba5a
              eq
              tag_57
              jumpi
              dup1
              0x8d0e5f02
              eq
              tag_58
              jumpi
              dup1
              0x91d14854
              eq
              tag_59
              jumpi
              0x00
              dup1
              revert
            tag_103:
              dup1
              0x6eb9ffeb
              eq
              tag_49
              jumpi
              dup1
              0x70a08231
              eq
              tag_50
              jumpi
              dup1
              0x78007e23
              eq
              tag_51
              jumpi
              dup1
              0x7ad226dc
              eq
              tag_52
              jumpi
              dup1
              0x7ecebe00
              eq
              tag_53
              jumpi
              0x00
              dup1
              revert
            tag_96:
              dup1
              0x313ce567
              gt
              tag_104
              jumpi
              dup1
              0x4322b714
              gt
              tag_105
              jumpi
              dup1
              0x5cc2ef83
              gt
              tag_106
              jumpi
              dup1
              0x5cc2ef83
              eq
              tag_43
              jumpi
              dup1
              0x5e5c06e2
              eq
              tag_44
              jumpi
              dup1
              0x61d027b3
              eq
              tag_45
              jumpi
              dup1
              0x66601032
              eq
              tag_46
              jumpi
              dup1
              0x6bb65f53
              eq
              tag_47
              jumpi
              dup1
              0x6e553f65
              eq
              tag_48
              jumpi
              0x00
              dup1
              revert
            tag_106:
              dup1
              0x4322b714
              eq
              tag_37
              jumpi
              dup1
              0x47dffde0
              eq
              tag_38
              jumpi
              dup1
              0x4914c008
              eq
              tag_39
              jumpi
              dup1
              0x4cdad506
              eq
              tag_40
              jumpi
              dup1
              0x4e7c5059
              eq
              tag_41
              jumpi
              dup1
              0x5c975abb
              eq
              tag_42
              jumpi
              0x00
              dup1
              revert
            tag_105:
              dup1
              0x3aa18d6f
              gt
              tag_107
              jumpi
              dup1
              0x3aa18d6f
              eq
              tag_31
              jumpi
              dup1
              0x3c6f317f
              eq
              tag_32
              jumpi
              dup1
              0x3ec045a6
              eq
              tag_33
              jumpi
              dup1
              0x3f4ba83a
              eq
              tag_34
              jumpi
              dup1
              0x402d267d
              eq
              tag_35
              jumpi
              dup1
              0x42da42bf
              eq
              tag_36
              jumpi
              0x00
              dup1
              revert
            tag_107:
              dup1
              0x313ce567
              eq
              tag_26
              jumpi
              dup1
              0x34f7d1f2
              eq
              tag_27
              jumpi
              dup1
              0x3644e515
              eq
              tag_28
              jumpi
              dup1
              0x36568abe
              eq
              tag_29
              jumpi
              dup1
              0x38d52e0f
              eq
              tag_30
              jumpi
              0x00
              dup1
              revert
            tag_104:
              dup1
              0x0f2b75aa
              gt
              tag_108
              jumpi
              dup1
              0x248a9ca3
              gt
              tag_109
              jumpi
              dup1
              0x248a9ca3
              eq
              tag_20
              jumpi
              dup1
              0x25fc07a9
              eq
              tag_21
              jumpi
              dup1
              0x28acf2cf
              eq
              tag_22
              jumpi
              dup1
              0x2c5dcc77
              eq
              tag_23
              jumpi
              dup1
              0x2e0af008
              eq
              tag_24
              jumpi
              dup1
              0x2f2ff15d
              eq
              tag_25
              jumpi
              0x00
              dup1
              revert
            tag_109:
              dup1
              0x0f2b75aa
              eq
              tag_14
              jumpi
              dup1
              0x18160ddd
              eq
              tag_15
              jumpi
              dup1
              0x1a5b9e62
              eq
              tag_16
              jumpi
              dup1
              0x1a90f186
              eq
              tag_17
              jumpi
              dup1
              0x1d43b30b
              eq
              tag_18
              jumpi
              dup1
              0x23b872dd
              eq
              tag_19
              jumpi
              0x00
              dup1
              revert
            tag_108:
              dup1
              0x06fdde03
              gt
              tag_110
              jumpi
              dup1
              0x06fdde03
              eq
              tag_8
              jumpi
              dup1
              0x07a2d13a
              eq
              tag_9
              jumpi
              dup1
              0x095ea7b3
              eq
              tag_10
              jumpi
              dup1
              0x0a28a477
              eq
              tag_11
              jumpi
              dup1
              0x0ab69be8
              eq
              tag_12
              jumpi
              dup1
              0x0e52dbec
              eq
              tag_13
              jumpi
              0x00
              dup1
              revert
            tag_110:
              dup1
              0x014a296f
              eq
              tag_3
              jumpi
              dup1
              0x01e1d114
              eq
              tag_4
              jumpi
              dup1
              0x01ffc9a7
              eq
              tag_5
              jumpi
              dup1
              0x022d8af5
              eq
              tag_6
              jumpi
              dup1
              0x0539fa8c
              eq
              tag_7
              jumpi
            tag_2:
              0x00
              dup1
              revert
                /* "contracts/Market.sol":35023:35183  function accountSnapshot(address account) external view returns (uint256, uint256) {... */
            tag_3:
              tag_111
              tag_112
              calldatasize
              0x04
              tag_113
              jump	// in
            tag_112:
              tag_114
              jump	// in
            tag_111:
              0x40
              dup1
              mload
                /* "#utility.yul":576:601   */
              swap3
              dup4
              mstore
                /* "#utility.yul":632:634   */
              0x20
                /* "#utility.yul":617:635   */
              dup4
              add
                /* "#utility.yul":610:644   */
              swap2
              swap1
              swap2
              mstore
                /* "#utility.yul":549:567   */
              add
                /* "contracts/Market.sol":35023:35183  function accountSnapshot(address account) external view returns (uint256, uint256) {... */
            tag_115:
              mload(0x40)
              dup1
              swap2
              sub
              swap1
              return
                /* "contracts/Market.sol":41155:42153  function totalAssets() public view override returns (uint256) {... */
            tag_4:
              tag_117
              tag_118
              jump	// in
            tag_117:
              mload(0x40)
                /* "#utility.yul":801:826   */
              swap1
              dup2
              mstore
                /* "#utility.yul":789:791   */
              0x20
                /* "#utility.yul":774:792   */
              add
                /* "contracts/Market.sol":41155:42153  function totalAssets() public view override returns (uint256) {... */
              tag_115
                /* "#utility.yul":655:832   */
              jump
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":2903:3116  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */
            tag_5:
              tag_121
              tag_122
              calldatasize
              0x04
              tag_123
              jump	// in
            tag_122:
              tag_124
              jump	// in
            tag_121:
              mload(0x40)
                /* "#utility.yul":1293:1307   */
              swap1
              iszero
                /* "#utility.yul":1286:1308   */
              iszero
                /* "#utility.yul":1268:1309   */
              dup2
              mstore
                /* "#utility.yul":1256:1258   */
              0x20
                /* "#utility.yul":1241:1259   */
              add
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":2903:3116  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */
              tag_115
                /* "#utility.yul":1128:1315   */
              jump
                /* "contracts/Market.sol":46440:46801  function setEarningsAccumulatorSmoothFactor(... */
            tag_6:
              tag_127
              tag_128
              calldatasize
              0x04
              tag_129
              jump	// in
            tag_128:
              tag_130
              jump	// in
            tag_127:
              stop
                /* "contracts/Market.sol":2711:2737  uint256 public dampSpeedUp */
            tag_7:
              tag_117
              sload(0xd8)
              dup2
              jump
                /* "node_modules/solmate/src/tokens/ERC20.sol":1018:1036  string public name */
            tag_8:
              tag_134
              tag_135
              jump	// in
            tag_134:
              mload(0x40)
              tag_115
              swap2
              swap1
              tag_137
              jump	// in
                /* "node_modules/solmate/src/mixins/ERC4626.sol":4450:4707  function convertToAssets(uint256 shares) public view virtual returns (uint256) {... */
            tag_9:
              tag_117
              tag_139
              calldatasize
              0x04
              tag_140
              jump	// in
            tag_139:
              tag_141
              jump	// in
                /* "node_modules/solmate/src/tokens/ERC20.sol":2448:2659  function approve(address spender, uint256 amount) public virtual returns (bool) {... */
            tag_10:
              tag_121
              tag_144
              calldatasize
              0x04
              tag_145
              jump	// in
            tag_144:
              tag_146
              jump	// in
                /* "node_modules/solmate/src/mixins/ERC4626.sol":5101:5356  function previewWithdraw(uint256 assets) public view virtual returns (uint256) {... */
            tag_11:
              tag_117
              tag_149
              calldatasize
              0x04
              tag_140
              jump	// in
            tag_149:
              tag_150
              jump	// in
                /* "contracts/Market.sol":44714:44879  function fixedPoolBalance(uint256 maturity) external view returns (uint256, uint256) {... */
            tag_12:
              tag_111
              tag_153
              calldatasize
              0x04
              tag_140
              jump	// in
            tag_153:
                /* "contracts/Market.sol":44781:44788  uint256 */
              0x00
                /* "contracts/Market.sol":44813:44833  fixedPools[maturity] */
              swap1
              dup2
              mstore
                /* "contracts/Market.sol":44813:44823  fixedPools */
              0xd1
                /* "contracts/Market.sol":44813:44833  fixedPools[maturity] */
              0x20
              mstore
              0x40
              swap1
              keccak256
                /* "contracts/Market.sol":44813:44842  fixedPools[maturity].borrowed */
              dup1
              sload
                /* "contracts/Market.sol":44844:44873  fixedPools[maturity].supplied */
              0x01
              swap1
              swap2
              add
              sload
                /* "contracts/Market.sol":44813:44842  fixedPools[maturity].borrowed */
              swap1
              swap2
                /* "contracts/Market.sol":44714:44879  function fixedPoolBalance(uint256 maturity) external view returns (uint256, uint256) {... */
              jump
                /* "contracts/Market.sol":2939:2966  uint8 public maxFuturePools */
            tag_13:
              sload(0xda)
              tag_156
              swap1
              0xff
              and
              dup2
              jump
            tag_156:
              mload(0x40)
                /* "#utility.yul":3037:3041   */
              0xff
                /* "#utility.yul":3025:3042   */
              swap1
              swap2
              and
                /* "#utility.yul":3007:3043   */
              dup2
              mstore
                /* "#utility.yul":2995:2997   */
              0x20
                /* "#utility.yul":2980:2998   */
              add
                /* "contracts/Market.sol":2939:2966  uint8 public maxFuturePools */
              tag_115
                /* "#utility.yul":2865:3049   */
              jump
                /* "contracts/Market.sol":38801:39329  function previewFloatingAssetsAverage() public view returns (uint256) {... */
            tag_14:
              tag_117
              tag_161
              jump	// in
                /* "node_modules/solmate/src/tokens/ERC20.sol":1291:1317  uint256 public totalSupply */
            tag_15:
              tag_117
              sload(0xcb)
              dup2
              jump
                /* "contracts/Market.sol":12307:14901  function borrowAtMaturity(... */
            tag_16:
              tag_117
              tag_167
              calldatasize
              0x04
              tag_168
              jump	// in
            tag_167:
              tag_169
              jump	// in
                /* "contracts/Market.sol":2180:2207  uint256 public floatingDebt */
            tag_17:
              tag_117
              sload(0xd4)
              dup2
              jump
                /* "contracts/Market.sol":35404:36481  function previewDebt(address borrower) public view returns (uint256 debt) {... */
            tag_18:
              tag_117
              tag_175
              calldatasize
              0x04
              tag_113
              jump	// in
            tag_175:
              tag_176
              jump	// in
                /* "contracts/Market.sol":34322:34753  function transferFrom(address from, address to, uint256 shares) public override returns (bool) {... */
            tag_19:
              tag_121
              tag_179
              calldatasize
              0x04
              tag_180
              jump	// in
            tag_179:
              tag_181
              jump	// in
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":4708:4837  function getRoleAdmin(bytes32 role) public view virtual override returns (bytes32) {... */
            tag_20:
              tag_117
              tag_184
              calldatasize
              0x04
              tag_140
              jump	// in
            tag_184:
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":4782:4789  bytes32 */
              0x00
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":4808:4820  _roles[role] */
              swap1
              dup2
              mstore
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":4808:4814  _roles */
              0x65
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":4808:4820  _roles[role] */
              0x20
              mstore
              0x40
              swap1
              keccak256
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":4808:4830  _roles[role].adminRole */
              0x01
              add
              sload
              swap1
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":4708:4837  function getRoleAdmin(bytes32 role) public view virtual override returns (bytes32) {... */
              jump
                /* "contracts/Market.sol":44400:44524  function fixedPoolBorrowed(uint256 maturity) external view returns (uint256) {... */
            tag_21:
              tag_117
              tag_190
              calldatasize
              0x04
              tag_140
              jump	// in
            tag_190:
                /* "contracts/Market.sol":44468:44475  uint256 */
              0x00
                /* "contracts/Market.sol":44490:44510  fixedPools[maturity] */
              swap1
              dup2
              mstore
                /* "contracts/Market.sol":44490:44500  fixedPools */
              0xd1
                /* "contracts/Market.sol":44490:44510  fixedPools[maturity] */
              0x20
              mstore
              0x40
              swap1
              keccak256
                /* "contracts/Market.sol":44490:44519  fixedPools[maturity].borrowed */
              sload
              swap1
                /* "contracts/Market.sol":44400:44524  function fixedPoolBorrowed(uint256 maturity) external view returns (uint256) {... */
              jump
                /* "contracts/Market.sol":47854:48016  function setMaxFuturePools(uint8 futurePools) public onlyRole(DEFAULT_ADMIN_ROLE) {... */
            tag_22:
              tag_127
              tag_194
              calldatasize
              0x04
              tag_195
              jump	// in
            tag_194:
              tag_196
              jump	// in
                /* "contracts/Market.sol":48824:49093  function setTreasury(address treasury_, uint256 treasuryFeeRate_) public onlyRole(DEFAULT_ADMIN_ROLE) {... */
            tag_23:
              tag_127
              tag_198
              calldatasize
              0x04
              tag_145
              jump	// in
            tag_198:
              tag_199
              jump	// in
                /* "contracts/Market.sol":3709:3738  uint256 public floatingAssets */
            tag_24:
              tag_117
              sload(0xdd)
              dup2
              jump
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":5133:5278  function grantRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {... */
            tag_25:
              tag_127
              tag_204
              calldatasize
              0x04
              tag_205
              jump	// in
            tag_204:
              tag_206
              jump	// in
                /* "node_modules/solmate/src/tokens/ERC20.sol":1070:1101  uint8 public immutable decimals */
            tag_26:
              tag_156
              immutable("0x882a693831b629c58206e238ce0b4b78266c460fa9ea945dc8c81da0aa0c28f6")
              dup2
              jump
                /* "contracts/Market.sol":10354:11809  function depositAtMaturity(... */
            tag_27:
              tag_117
              tag_211
              calldatasize
              0x04
              tag_212
              jump	// in
            tag_211:
              tag_213
              jump	// in
                /* "node_modules/solmate/src/tokens/ERC20.sol":5314:5491  function DOMAIN_SEPARATOR() public view virtual returns (bytes32) {... */
            tag_28:
              tag_117
              tag_216
              jump	// in
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":6242:6456  function renounceRole(bytes32 role, address account) public virtual override {... */
            tag_29:
              tag_127
              tag_219
              calldatasize
              0x04
              tag_205
              jump	// in
            tag_219:
              tag_220
              jump	// in
                /* "node_modules/solmate/src/mixins/ERC4626.sol":1136:1164  ERC20 public immutable asset */
            tag_30:
              tag_221
              immutable("0xa89f858efa0702d27b503f14d00e73a25115c8d5bdd25598ae4b376a61175436")
              dup2
              jump
            tag_221:
              mload(0x40)
              sub(shl(0xa0, 0x01), 0x01)
                /* "#utility.yul":5785:5817   */
              swap1
              swap2
              and
                /* "#utility.yul":5767:5818   */
              dup2
              mstore
                /* "#utility.yul":5755:5757   */
              0x20
                /* "#utility.yul":5740:5758   */
              add
                /* "node_modules/solmate/src/mixins/ERC4626.sol":1136:1164  ERC20 public immutable asset */
              tag_115
                /* "#utility.yul":5606:5824   */
              jump
                /* "contracts/Market.sol":2839:2867  uint256 public dampSpeedDown */
            tag_31:
              tag_117
              sload(0xd9)
              dup2
              jump
                /* "contracts/Market.sol":18762:19281  function repayAtMaturity(... */
            tag_32:
              tag_117
              tag_229
              calldatasize
              0x04
              tag_212
              jump	// in
            tag_229:
              tag_230
              jump	// in
                /* "contracts/Market.sol":1349:1381  Auditor public immutable auditor */
            tag_33:
              tag_221
              immutable("0x2adb6ba13100982fae82a6c459fdc0b83ba757ca8251e42f5db6158bc4c7e480")
              dup2
              jump
                /* "contracts/Market.sol":49370:49441  function unpause() external onlyRole(PAUSER_ROLE) {... */
            tag_34:
              tag_127
              tag_237
              jump	// in
                /* "node_modules/solmate/src/mixins/ERC4626.sol":5683:5791  function maxDeposit(address) public view virtual returns (uint256) {... */
            tag_35:
              tag_117
              tag_239
              calldatasize
              0x04
              tag_113
              jump	// in
            tag_239:
              pop
              not(0x00)
                /* "node_modules/solmate/src/mixins/ERC4626.sol":5767:5784  type(uint256).max */
              swap1
                /* "node_modules/solmate/src/mixins/ERC4626.sol":5683:5791  function maxDeposit(address) public view virtual returns (uint256) {... */
              jump
                /* "contracts/Market.sol":45690:45860  function setBackupFeeRate(uint256 backupFeeRate_) public onlyRole(DEFAULT_ADMIN_ROLE) {... */
            tag_36:
              tag_127
              tag_243
              calldatasize
              0x04
              tag_140
              jump	// in
            tag_243:
              tag_244
              jump	// in
                /* "contracts/Market.sol":3613:3641  uint128 public reserveFactor */
            tag_37:
              sload(0xdc)
              tag_245
              swap1
              shl(0x80, 0x01)
              swap1
              div
              sub(shl(0x80, 0x01), 0x01)
              and
              dup2
              jump
            tag_245:
              mload(0x40)
              sub(shl(0x80, 0x01), 0x01)
                /* "#utility.yul":6217:6264   */
              swap1
              swap2
              and
                /* "#utility.yul":6199:6265   */
              dup2
              mstore
                /* "#utility.yul":6187:6189   */
              0x20
                /* "#utility.yul":6172:6190   */
              add
                /* "contracts/Market.sol":3613:3641  uint128 public reserveFactor */
              tag_115
                /* "#utility.yul":6053:6271   */
              jump
                /* "contracts/Market.sol":43431:43708  function previewRefund(uint256 shares) public view returns (uint256) {... */
            tag_38:
              tag_117
              tag_250
              calldatasize
              0x04
              tag_140
              jump	// in
            tag_250:
              tag_251
              jump	// in
                /* "contracts/Market.sol":23225:25790  function liquidate(... */
            tag_39:
              tag_117
              tag_254
              calldatasize
              0x04
              tag_255
              jump	// in
            tag_254:
              tag_256
              jump	// in
                /* "node_modules/solmate/src/mixins/ERC4626.sol":5362:5486  function previewRedeem(uint256 shares) public view virtual returns (uint256) {... */
            tag_40:
              tag_117
              tag_259
              calldatasize
              0x04
              tag_140
              jump	// in
            tag_259:
              tag_260
              jump	// in
                /* "contracts/Market.sol":1796:1847  mapping(uint256 => FixedLib.Pool) public fixedPools */
            tag_41:
              tag_262
              tag_263
              calldatasize
              0x04
              tag_140
              jump	// in
            tag_263:
              mstore(0x20, 0xd1)
              0x00
              swap1
              dup2
              mstore
              0x40
              swap1
              keccak256
              dup1
              sload
              0x01
              dup3
              add
              sload
              0x02
              dup4
              add
              sload
              0x03
              swap1
              swap4
              add
              sload
              swap2
              swap3
              swap1
              swap2
              dup5
              jump
            tag_262:
              0x40
              dup1
              mload
                /* "#utility.yul":6983:7008   */
              swap5
              dup6
              mstore
                /* "#utility.yul":7039:7041   */
              0x20
                /* "#utility.yul":7024:7042   */
              dup6
              add
                /* "#utility.yul":7017:7051   */
              swap4
              swap1
              swap4
              mstore
                /* "#utility.yul":7067:7085   */
              swap2
              dup4
              add
                /* "#utility.yul":7060:7094   */
              mstore
                /* "#utility.yul":7125:7127   */
              0x60
                /* "#utility.yul":7110:7128   */
              dup3
              add
                /* "#utility.yul":7103:7137   */
              mstore
                /* "#utility.yul":6970:6973   */
              0x80
                /* "#utility.yul":6955:6974   */
              add
                /* "contracts/Market.sol":1796:1847  mapping(uint256 => FixedLib.Pool) public fixedPools */
              tag_115
                /* "#utility.yul":6752:7143   */
              jump
                /* "node_modules/@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol":1858:1942  function paused() public view virtual returns (bool) {... */
            tag_42:
                /* "node_modules/@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol":1928:1935  _paused */
              and(0xff, sload(0x97))
                /* "node_modules/@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol":1858:1942  function paused() public view virtual returns (bool) {... */
              jump(tag_121)
                /* "contracts/Market.sol":46066:46271  function setDampSpeed(uint256 up, uint256 down) public onlyRole(DEFAULT_ADMIN_ROLE) {... */
            tag_43:
              tag_127
              tag_271
              calldatasize
              0x04
              tag_272
              jump	// in
            tag_271:
              tag_273
              jump	// in
                /* "contracts/Market.sol":1944:1987  mapping(address => Account) public accounts */
            tag_44:
              tag_274
              tag_275
              calldatasize
              0x04
              tag_113
              jump	// in
            tag_275:
              mstore(0x20, 0xd2)
              0x00
              swap1
              dup2
              mstore
              0x40
              swap1
              keccak256
              dup1
              sload
              0x01
              dup3
              add
              sload
              0x02
              swap1
              swap3
              add
              sload
              swap1
              swap2
              swap1
              dup4
              jump
            tag_274:
              0x40
              dup1
              mload
                /* "#utility.yul":7603:7628   */
              swap4
              dup5
              mstore
                /* "#utility.yul":7659:7661   */
              0x20
                /* "#utility.yul":7644:7662   */
              dup5
              add
                /* "#utility.yul":7637:7671   */
              swap3
              swap1
              swap3
              mstore
                /* "#utility.yul":7687:7705   */
              swap1
              dup3
              add
                /* "#utility.yul":7680:7714   */
              mstore
                /* "#utility.yul":7591:7593   */
              0x60
                /* "#utility.yul":7576:7594   */
              add
                /* "contracts/Market.sol":1944:1987  mapping(address => Account) public accounts */
              tag_115
                /* "#utility.yul":7401:7720   */
              jump
                /* "contracts/Market.sol":4215:4238  address public treasury */
            tag_45:
              sload(0xe1)
              tag_221
              swap1
              sub(shl(0xa0, 0x01), 0x01)
              and
              dup2
              jump
                /* "contracts/Market.sol":4322:4352  uint256 public treasuryFeeRate */
            tag_46:
              tag_117
              sload(0xe2)
              dup2
              jump
                /* "contracts/Market.sol":4470:4512  RewardsController public rewardsController */
            tag_47:
              sload(0xe3)
              tag_221
              swap1
              sub(shl(0xa0, 0x01), 0x01)
              and
              dup2
              jump
                /* "node_modules/solmate/src/mixins/ERC4626.sol":1537:2053  function deposit(uint256 assets, address receiver) public virtual returns (uint256 shares) {... */
            tag_48:
              tag_117
              tag_291
              calldatasize
              0x04
              tag_205
              jump	// in
            tag_291:
              tag_293
              jump	// in
                /* "contracts/Market.sol":3127:3163  uint32 public lastFloatingDebtUpdate */
            tag_49:
              sload(0xda)
              tag_295
              swap1
              shl(0x28, 0x01)
              swap1
              div
              0xffffffff
              and
              dup2
              jump
            tag_295:
              mload(0x40)
                /* "#utility.yul":8661:8671   */
              0xffffffff
                /* "#utility.yul":8649:8672   */
              swap1
              swap2
              and
                /* "#utility.yul":8631:8673   */
              dup2
              mstore
                /* "#utility.yul":8619:8621   */
              0x20
                /* "#utility.yul":8604:8622   */
              add
                /* "contracts/Market.sol":3127:3163  uint32 public lastFloatingDebtUpdate */
              tag_115
                /* "#utility.yul":8487:8679   */
              jump
                /* "node_modules/solmate/src/tokens/ERC20.sol":1324:1368  mapping(address => uint256) public balanceOf */
            tag_50:
              tag_117
              tag_300
              calldatasize
              0x04
              tag_113
              jump	// in
            tag_300:
              mstore(0x20, 0xcc)
              0x00
              swap1
              dup2
              mstore
              0x40
              swap1
              keccak256
              sload
              dup2
              jump
                /* "contracts/Market.sol":42394:42671  function previewBorrow(uint256 assets) public view returns (uint256) {... */
            tag_51:
              tag_117
              tag_304
              calldatasize
              0x04
              tag_140
              jump	// in
            tag_304:
              tag_305
              jump	// in
                /* "contracts/Market.sol":8326:8627  function refund(... */
            tag_52:
              tag_111
              tag_308
              calldatasize
              0x04
              tag_205
              jump	// in
            tag_308:
              tag_309
              jump	// in
                /* "node_modules/solmate/src/tokens/ERC20.sol":1738:1779  mapping(address => uint256) public nonces */
            tag_53:
              tag_117
              tag_312
              calldatasize
              0x04
              tag_113
              jump	// in
            tag_312:
              mstore(0x20, 0xce)
              0x00
              swap1
              dup2
              mstore
              0x40
              swap1
              keccak256
              sload
              dup2
              jump
                /* "contracts/Market.sol":49198:49265  function pause() external onlyRole(PAUSER_ROLE) {... */
            tag_54:
              tag_127
              tag_316
              jump	// in
                /* "contracts/Market.sol":2303:2337  uint256 public earningsAccumulator */
            tag_55:
              tag_117
              sload(0xd5)
              dup2
              jump
                /* "contracts/Market.sol":46936:47256  function setInterestRateModel(InterestRateModel interestRateModel_) public onlyRole(DEFAULT_ADMIN_ROLE) {... */
            tag_56:
              tag_127
              tag_321
              calldatasize
              0x04
              tag_113
              jump	// in
            tag_321:
              tag_323
              jump	// in
                /* "contracts/Market.sol":2069:2106  uint256 public floatingBackupBorrowed */
            tag_57:
              tag_117
              sload(0xd3)
              dup2
              jump
                /* "contracts/Market.sol":3976:4016  uint256 public totalFloatingBorrowShares */
            tag_58:
              tag_117
              sload(0xdf)
              dup2
              jump
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":3203:3348  function hasRole(bytes32 role, address account) public view virtual override returns (bool) {... */
            tag_59:
              tag_121
              tag_331
              calldatasize
              0x04
              tag_205
              jump	// in
            tag_331:
              tag_332
              jump	// in
                /* "contracts/Market.sol":26036:27739  function clearBadDebt(address borrower) external {... */
            tag_60:
              tag_127
              tag_335
              calldatasize
              0x04
              tag_113
              jump	// in
            tag_335:
              tag_336
              jump	// in
                /* "node_modules/solmate/src/mixins/ERC4626.sol":2059:2526  function mint(uint256 shares, address receiver) public virtual returns (uint256 assets) {... */
            tag_61:
              tag_117
              tag_338
              calldatasize
              0x04
              tag_205
              jump	// in
            tag_338:
              tag_339
              jump	// in
                /* "node_modules/solmate/src/tokens/ERC20.sol":1043:1063  string public symbol */
            tag_62:
              tag_134
              tag_342
              jump	// in
                /* "contracts/Market.sol":4774:5799  function initialize(... */
            tag_63:
              tag_127
              tag_345
              calldatasize
              0x04
              tag_346
              jump	// in
            tag_345:
              tag_347
              jump	// in
                /* "contracts/Market.sol":15540:18313  function withdrawAtMaturity(... */
            tag_64:
              tag_117
              tag_349
              calldatasize
              0x04
              tag_168
              jump	// in
            tag_349:
              tag_350
              jump	// in
                /* "contracts/Market.sol":3032:3068  uint32 public lastAccumulatorAccrual */
            tag_65:
              sload(0xda)
              tag_295
              swap1
              0x0100
              swap1
              div
              0xffffffff
              and
              dup2
              jump
                /* "contracts/Market.sol":48135:48293  function setPenaltyRate(uint256 penaltyRate_) public onlyRole(DEFAULT_ADMIN_ROLE) {... */
            tag_66:
              tag_127
              tag_356
              calldatasize
              0x04
              tag_140
              jump	// in
            tag_356:
              tag_357
              jump	// in
                /* "contracts/Market.sol":2580:2608  uint256 public backupFeeRate */
            tag_67:
              tag_117
              sload(0xd7)
              dup2
              jump
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":2324:2373  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */
            tag_68:
              tag_117
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":2369:2373  0x00 */
              0x00
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":2324:2373  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */
              dup2
              jump
                /* "contracts/Market.sol":33450:33865  function transfer(address to, uint256 shares) public override returns (bool) {... */
            tag_69:
              tag_121
              tag_365
              calldatasize
              0x04
              tag_145
              jump	// in
            tag_365:
              tag_366
              jump	// in
                /* "contracts/Market.sol":7622:7939  function repay(... */
            tag_70:
              tag_111
              tag_369
              calldatasize
              0x04
              tag_205
              jump	// in
            tag_369:
              tag_370
              jump	// in
                /* "contracts/Market.sol":28295:28461  function seize(address liquidator, address borrower, uint256 assets) external whenNotPaused {... */
            tag_71:
              tag_127
              tag_373
              calldatasize
              0x04
              tag_180
              jump	// in
            tag_373:
              tag_374
              jump	// in
                /* "node_modules/solmate/src/mixins/ERC4626.sol":4844:5095  function previewMint(uint256 shares) public view virtual returns (uint256) {... */
            tag_72:
              tag_117
              tag_376
              calldatasize
              0x04
              tag_140
              jump	// in
            tag_376:
              tag_377
              jump	// in
                /* "contracts/Market.sol":31575:31975  function withdraw(uint256 assets, address receiver, address owner) public override returns (uint256 shares) {... */
            tag_73:
              tag_117
              tag_380
              calldatasize
              0x04
              tag_381
              jump	// in
            tag_380:
              tag_382
              jump	// in
                /* "contracts/Market.sol":32415:32826  function redeem(uint256 shares, address receiver, address owner) public override returns (uint256 assets) {... */
            tag_74:
              tag_117
              tag_385
              calldatasize
              0x04
              tag_381
              jump	// in
            tag_385:
              tag_386
              jump	// in
                /* "contracts/Market.sol":47416:47620  function setRewardsController(RewardsController rewardsController_) public onlyRole(DEFAULT_ADMIN_ROLE) {... */
            tag_75:
              tag_127
              tag_389
              calldatasize
              0x04
              tag_113
              jump	// in
            tag_389:
              tag_391
              jump	// in
                /* "contracts/Market.sol":42914:43192  function previewRepay(uint256 assets) public view returns (uint256) {... */
            tag_76:
              tag_117
              tag_393
              calldatasize
              0x04
              tag_140
              jump	// in
            tag_393:
              tag_394
              jump	// in
                /* "node_modules/solmate/src/mixins/ERC4626.sol":4187:4444  function convertToShares(uint256 assets) public view virtual returns (uint256) {... */
            tag_78:
              tag_117
              tag_401
              calldatasize
              0x04
              tag_140
              jump	// in
            tag_401:
              tag_402
              jump	// in
                /* "contracts/Market.sol":1476:1562  mapping(uint256 => mapping(address => FixedLib.Position)) public fixedDepositPositions */
            tag_79:
              tag_111
              tag_405
              calldatasize
              0x04
              tag_205
              jump	// in
            tag_405:
              0xcf
              0x20
              swap1
              dup2
              mstore
              0x00
              swap3
              dup4
              mstore
              0x40
              dup1
              dup5
              keccak256
              swap1
              swap2
              mstore
              swap1
              dup3
              mstore
              swap1
              keccak256
              dup1
              sload
              0x01
              swap1
              swap2
              add
              sload
              dup3
              jump
                /* "node_modules/solmate/src/mixins/ERC4626.sol":5908:6039  function maxWithdraw(address owner) public view virtual returns (uint256) {... */
            tag_80:
              tag_117
              tag_409
              calldatasize
              0x04
              tag_113
              jump	// in
            tag_409:
              tag_410
              jump	// in
                /* "contracts/Market.sol":1655:1740  mapping(uint256 => mapping(address => FixedLib.Position)) public fixedBorrowPositions */
            tag_81:
              tag_111
              tag_413
              calldatasize
              0x04
              tag_205
              jump	// in
            tag_413:
              0xd0
              0x20
              swap1
              dup2
              mstore
              0x00
              swap3
              dup4
              mstore
              0x40
              dup1
              dup5
              keccak256
              swap1
              swap2
              mstore
              swap1
              dup3
              mstore
              swap1
              keccak256
              dup1
              sload
              0x01
              swap1
              swap2
              add
              sload
              dup3
              jump
                /* "node_modules/solmate/src/tokens/ERC20.sol":3825:5308  function permit(... */
            tag_82:
              tag_127
              tag_417
              calldatasize
              0x04
              tag_418
              jump	// in
            tag_417:
              tag_419
              jump	// in
                /* "contracts/Market.sol":6148:7233  function borrow(... */
            tag_83:
              tag_117
              tag_421
              calldatasize
              0x04
              tag_381
              jump	// in
            tag_421:
              tag_422
              jump	// in
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":5558:5705  function revokeRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {... */
            tag_84:
              tag_127
              tag_425
              calldatasize
              0x04
              tag_205
              jump	// in
            tag_425:
              tag_426
              jump	// in
                /* "contracts/Market.sol":2434:2460  uint256 public penaltyRate */
            tag_85:
              tag_117
              sload(0xd6)
              dup2
              jump
                /* "node_modules/solmate/src/mixins/ERC4626.sol":6045:6157  function maxRedeem(address owner) public view virtual returns (uint256) {... */
            tag_86:
              tag_117
              tag_431
              calldatasize
              0x04
              tag_113
              jump	// in
            tag_431:
              sub(shl(0xa0, 0x01), 0x01)
                /* "node_modules/solmate/src/mixins/ERC4626.sol":6134:6150  balanceOf[owner] */
              and
                /* "node_modules/solmate/src/mixins/ERC4626.sol":6108:6115  uint256 */
              0x00
                /* "node_modules/solmate/src/mixins/ERC4626.sol":6134:6150  balanceOf[owner] */
              swap1
              dup2
              mstore
                /* "node_modules/solmate/src/mixins/ERC4626.sol":6134:6143  balanceOf */
              0xcc
                /* "node_modules/solmate/src/mixins/ERC4626.sol":6134:6150  balanceOf[owner] */
              0x20
              mstore
              0x40
              swap1
              keccak256
              sload
              swap1
                /* "node_modules/solmate/src/mixins/ERC4626.sol":6045:6157  function maxRedeem(address owner) public view virtual returns (uint256) {... */
              jump
                /* "node_modules/solmate/src/tokens/ERC20.sol":1375:1439  mapping(address => mapping(address => uint256)) public allowance */
            tag_87:
              tag_117
              tag_435
              calldatasize
              0x04
              tag_436
              jump	// in
            tag_435:
              0xcd
              0x20
              swap1
              dup2
              mstore
              0x00
              swap3
              dup4
              mstore
              0x40
              dup1
              dup5
              keccak256
              swap1
              swap2
              mstore
              swap1
              dup3
              mstore
              swap1
              keccak256
              sload
              dup2
              jump
                /* "contracts/Market.sol":48462:48632  function setReserveFactor(uint128 reserveFactor_) public onlyRole(DEFAULT_ADMIN_ROLE) {... */
            tag_88:
              tag_127
              tag_440
              calldatasize
              0x04
              tag_129
              jump	// in
            tag_440:
              tag_441
              jump	// in
                /* "contracts/Market.sol":1218:1280  bytes32 public constant PAUSER_ROLE = keccak256("PAUSER_ROLE") */
            tag_89:
              tag_117
                /* "contracts/Market.sol":1256:1280  keccak256("PAUSER_ROLE") */
              0x65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a
                /* "contracts/Market.sol":1218:1280  bytes32 public constant PAUSER_ROLE = keccak256("PAUSER_ROLE") */
              dup2
              jump
                /* "contracts/Market.sol":3844:3880  uint256 public floatingAssetsAverage */
            tag_90:
              tag_117
              sload(0xde)
              dup2
              jump
                /* "contracts/Market.sol":40439:40926  function totalFloatingBorrowAssets() public view returns (uint256) {... */
            tag_91:
              tag_117
              tag_449
              jump	// in
                /* "node_modules/solmate/src/mixins/ERC4626.sol":4713:4838  function previewDeposit(uint256 assets) public view virtual returns (uint256) {... */
            tag_92:
              tag_117
              tag_452
              calldatasize
              0x04
              tag_140
              jump	// in
            tag_452:
              tag_453
              jump	// in
                /* "contracts/Market.sol":3341:3383  InterestRateModel public interestRateModel */
            tag_93:
              sload(0xdb)
              tag_221
              swap1
              sub(shl(0xa0, 0x01), 0x01)
              and
              dup2
              jump
                /* "contracts/Market.sol":3232:3263  uint32 public lastAverageUpdate */
            tag_94:
              sload(0xda)
              tag_295
              swap1
              shl(0x48, 0x01)
              swap1
              div
              0xffffffff
              and
              dup2
              jump
                /* "contracts/Market.sol":3468:3514  uint128 public earningsAccumulatorSmoothFactor */
            tag_95:
              sload(0xdc)
              tag_245
              swap1
              sub(shl(0x80, 0x01), 0x01)
              and
              dup2
              jump
                /* "contracts/Market.sol":35023:35183  function accountSnapshot(address account) external view returns (uint256, uint256) {... */
            tag_114:
              sub(shl(0xa0, 0x01), 0x01)
                /* "contracts/Market.sol":35136:35154  balanceOf[account] */
              dup2
              and
                /* "contracts/Market.sol":35088:35095  uint256 */
              0x00
                /* "contracts/Market.sol":35136:35154  balanceOf[account] */
              swap1
              dup2
              mstore
                /* "contracts/Market.sol":35136:35145  balanceOf */
              0xcc
                /* "contracts/Market.sol":35136:35154  balanceOf[account] */
              0x20
              mstore
              0x40
              dup2
              keccak256
              sload
                /* "contracts/Market.sol":35088:35095  uint256 */
              dup2
              swap1
                /* "contracts/Market.sol":35120:35155  convertToAssets(balanceOf[account]) */
              tag_466
              swap1
                /* "contracts/Market.sol":35120:35135  convertToAssets */
              tag_141
                /* "contracts/Market.sol":35120:35155  convertToAssets(balanceOf[account]) */
              jump	// in
            tag_466:
                /* "contracts/Market.sol":35157:35177  previewDebt(account) */
              tag_467
                /* "contracts/Market.sol":35169:35176  account */
              dup5
                /* "contracts/Market.sol":35157:35168  previewDebt */
              tag_176
                /* "contracts/Market.sol":35157:35177  previewDebt(account) */
              jump	// in
            tag_467:
                /* "contracts/Market.sol":35112:35178  return (convertToAssets(balanceOf[account]), previewDebt(account)) */
              swap2
              pop
              swap2
              pop
                /* "contracts/Market.sol":35023:35183  function accountSnapshot(address account) external view returns (uint256, uint256) {... */
              swap2
              pop
              swap2
              jump	// out
                /* "contracts/Market.sol":41155:42153  function totalAssets() public view override returns (uint256) {... */
            tag_118:
                /* "contracts/Market.sol":41269:41283  maxFuturePools */
              sload(0xda)
                /* "contracts/Market.sol":41208:41215  uint256 */
              0x00
              swap1
                /* "contracts/Market.sol":41269:41283  maxFuturePools */
              0xff
              and
                /* "contracts/Market.sol":41208:41215  uint256 */
              dup2
                /* "contracts/utils/FixedLib.sol":306:313  4 weeks */
              0x24ea00
                /* "contracts/Market.sol":41370:41385  block.timestamp */
              timestamp
                /* "contracts/Market.sol":41370:41405  block.timestamp % FixedLib.INTERVAL */
              dup2
              dup2
              mod
                /* "contracts/Market.sol":41351:41406  block.timestamp - (block.timestamp % FixedLib.INTERVAL) */
              swap1
              sub
              swap1
                /* "contracts/Market.sol":41453:41490  memMaxFuturePools * FixedLib.INTERVAL */
              dup4
              mul
                /* "contracts/Market.sol":41436:41490  latestMaturity + memMaxFuturePools * FixedLib.INTERVAL */
              dup2
              add
                /* "contracts/Market.sol":41351:41406  block.timestamp - (block.timestamp % FixedLib.INTERVAL) */
              dup2
                /* "contracts/Market.sol":41499:41958  for (uint256 maturity = latestMaturity; maturity <= maxMaturity; maturity += FixedLib.INTERVAL) {... */
            tag_472:
                /* "contracts/Market.sol":41551:41562  maxMaturity */
              dup2
                /* "contracts/Market.sol":41539:41547  maturity */
              dup2
                /* "contracts/Market.sol":41539:41562  maturity <= maxMaturity */
              gt
                /* "contracts/Market.sol":41499:41958  for (uint256 maturity = latestMaturity; maturity <= maxMaturity; maturity += FixedLib.INTERVAL) {... */
              tag_473
              jumpi
                /* "contracts/Market.sol":41605:41631  FixedLib.Pool storage pool */
              0x00
                /* "contracts/Market.sol":41634:41654  fixedPools[maturity] */
              dup2
              dup2
              mstore
                /* "contracts/Market.sol":41634:41644  fixedPools */
              0xd1
                /* "contracts/Market.sol":41634:41654  fixedPools[maturity] */
              0x20
              mstore
              0x40
              swap1
              keccak256
                /* "contracts/Market.sol":41686:41702  pool.lastAccrual */
              0x03
              dup2
              add
              sload
                /* "contracts/Market.sol":41717:41739  maturity > lastAccrual */
              dup1
              dup4
              gt
                /* "contracts/Market.sol":41713:41950  if (maturity > lastAccrual) {... */
              iszero
              tag_475
              jumpi
                /* "contracts/Market.sol":41789:41797  maturity */
              dup3
                /* "contracts/Market.sol":41771:41786  block.timestamp */
              timestamp
                /* "contracts/Market.sol":41771:41797  block.timestamp < maturity */
              lt
                /* "contracts/Market.sol":41771:41939  block.timestamp < maturity... */
              tag_476
              jumpi
                /* "contracts/Market.sol":41916:41920  pool */
              dup2
                /* "contracts/Market.sol":41916:41939  pool.unassignedEarnings */
              0x02
              add
              sload
                /* "contracts/Market.sol":41771:41939  block.timestamp < maturity... */
              jump(tag_478)
            tag_476:
                /* "contracts/Market.sol":41812:41835  pool.unassignedEarnings */
              0x02
              dup3
              add
              sload
                /* "contracts/Market.sol":41812:41901  pool.unassignedEarnings.mulDivDown(block.timestamp - lastAccrual, maturity - lastAccrual) */
              tag_478
              swap1
                /* "contracts/Market.sol":41847:41862  block.timestamp */
              timestamp
                /* "contracts/Market.sol":41847:41876  block.timestamp - lastAccrual */
              dup4
              swap1
              sub
                /* "contracts/Market.sol":41878:41900  maturity - lastAccrual */
              dup4
              dup7
              sub
                /* "contracts/Market.sol":41812:41846  pool.unassignedEarnings.mulDivDown */
              tag_479
                /* "contracts/Market.sol":41812:41901  pool.unassignedEarnings.mulDivDown(block.timestamp - lastAccrual, maturity - lastAccrual) */
              jump	// in
            tag_478:
                /* "contracts/Market.sol":41753:41939  backupEarnings += block.timestamp < maturity... */
              dup7
              add
              swap6
              pop
                /* "contracts/Market.sol":41713:41950  if (maturity > lastAccrual) {... */
            tag_475:
              pop
              pop
                /* "contracts/utils/FixedLib.sol":306:313  4 weeks */
              0x24ea00
                /* "contracts/Market.sol":41564:41593  maturity += FixedLib.INTERVAL */
              add
                /* "contracts/Market.sol":41499:41958  for (uint256 maturity = latestMaturity; maturity <= maxMaturity; maturity += FixedLib.INTERVAL) {... */
              jump(tag_472)
            tag_473:
              pop
                /* "contracts/Market.sol":42063:42142  (totalFloatingBorrowAssets() - floatingDebt).mulWadDown(1e18 - treasuryFeeRate) */
              tag_480
                /* "contracts/Market.sol":42126:42141  treasuryFeeRate */
              sload(0xe2)
                /* "contracts/Market.sol":42119:42123  1e18 */
              0x0de0b6b3a7640000
                /* "contracts/Market.sol":42119:42141  1e18 - treasuryFeeRate */
              sub
                /* "contracts/Market.sol":42094:42106  floatingDebt */
              sload(0xd4)
                /* "contracts/Market.sol":42064:42091  totalFloatingBorrowAssets() */
              tag_481
                /* "contracts/Market.sol":42064:42089  totalFloatingBorrowAssets */
              tag_449
                /* "contracts/Market.sol":42064:42091  totalFloatingBorrowAssets() */
              jump	// in
            tag_481:
                /* "contracts/Market.sol":42064:42106  totalFloatingBorrowAssets() - floatingDebt */
              sub
              swap1
                /* "contracts/Market.sol":42063:42118  (totalFloatingBorrowAssets() - floatingDebt).mulWadDown */
              tag_482
                /* "contracts/Market.sol":42063:42142  (totalFloatingBorrowAssets() - floatingDebt).mulWadDown(1e18 - treasuryFeeRate) */
              jump	// in
            tag_480:
                /* "contracts/Market.sol":42031:42052  accumulatedEarnings() */
              tag_483
                /* "contracts/Market.sol":42031:42050  accumulatedEarnings */
              tag_484
                /* "contracts/Market.sol":42031:42052  accumulatedEarnings() */
              jump	// in
            tag_483:
                /* "contracts/Market.sol":42006:42020  backupEarnings */
              dup5
                /* "contracts/Market.sol":41981:41995  floatingAssets */
              sload(0xdd)
                /* "contracts/Market.sol":41981:42020  floatingAssets +... */
              add
                /* "contracts/Market.sol":41981:42052  floatingAssets +... */
              add
                /* "contracts/Market.sol":41981:42142  floatingAssets +... */
              add
                /* "contracts/Market.sol":41966:42142  return... */
              swap5
              pop
              pop
              pop
              pop
              pop
                /* "contracts/Market.sol":41155:42153  function totalAssets() public view override returns (uint256) {... */
              swap1
              jump	// out
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":2903:3116  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */
            tag_124:
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":2988:2992  bool */
              0x00
              not(sub(shl(0xe0, 0x01), 0x01))
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":3011:3069  interfaceId == type(IAccessControlUpgradeable).interfaceId */
              dup3
              and
              shl(0xe0, 0x7965db0b)
              eq
              dup1
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":3011:3109  interfaceId == type(IAccessControlUpgradeable).interfaceId || super.supportsInterface(interfaceId) */
              tag_487
              jumpi
              pop
              shl(0xe0, 0x01ffc9a7)
              not(sub(shl(0xe0, 0x01), 0x01))
                /* "node_modules/@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol":1168:1219  interfaceId == type(IERC165Upgradeable).interfaceId */
              dup4
              and
              eq
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":3073:3109  super.supportsInterface(interfaceId) */
            tag_487:
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":3004:3109  return interfaceId == type(IAccessControlUpgradeable).interfaceId || super.supportsInterface(interfaceId) */
              swap3
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":2903:3116  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */
              swap2
              pop
              pop
              jump	// out
                /* "contracts/Market.sol":46440:46801  function setEarningsAccumulatorSmoothFactor(... */
            tag_130:
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":2369:2373  0x00 */
              0x00
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":2802:2818  _checkRole(role) */
              tag_490
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":2369:2373  0x00 */
              dup2
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":2802:2812  _checkRole */
              tag_491
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":2802:2818  _checkRole(role) */
              jump	// in
            tag_490:
                /* "contracts/Market.sol":46594:46621  accrueAccumulatedEarnings() */
              tag_493
                /* "contracts/Market.sol":46594:46619  accrueAccumulatedEarnings */
              tag_494
                /* "contracts/Market.sol":46594:46621  accrueAccumulatedEarnings() */
              jump	// in
            tag_493:
                /* "contracts/Market.sol":46576:46590  floatingAssets */
              0xdd
              0x00
                /* "contracts/Market.sol":46576:46621  floatingAssets += accrueAccumulatedEarnings() */
              dup3
              dup3
              sload
              tag_495
              swap2
              swap1
              tag_496
              jump	// in
            tag_495:
              swap1
              swap2
              sstore
              pop
                /* "contracts/Market.sol":46627:46645  emitMarketUpdate() */
              tag_497
              swap1
              pop
                /* "contracts/Market.sol":46627:46643  emitMarketUpdate */
              tag_498
                /* "contracts/Market.sol":46627:46645  emitMarketUpdate() */
              jump	// in
            tag_497:
                /* "contracts/Market.sol":46651:46682  earningsAccumulatorSmoothFactor */
              0xdc
                /* "contracts/Market.sol":46651:46717  earningsAccumulatorSmoothFactor = earningsAccumulatorSmoothFactor_ */
              dup1
              sload
              not(0xffffffffffffffffffffffffffffffff)
              and
              sub(shl(0x80, 0x01), 0x01)
              dup5
              and
              swap1
              dup2
              or
              swap1
              swap2
              sstore
                /* "contracts/Market.sol":46728:46796  EarningsAccumulatorSmoothFactorSet(earningsAccumulatorSmoothFactor_) */
              mload(0x40)
                /* "#utility.yul":6199:6265   */
              swap1
              dup2
              mstore
                /* "contracts/Market.sol":46728:46796  EarningsAccumulatorSmoothFactorSet(earningsAccumulatorSmoothFactor_) */
              0x5499a947330efc8c6d458d51fd04d56d7e44dc1469558b2300e359963cef317e
              swap1
                /* "#utility.yul":6187:6189   */
              0x20
                /* "#utility.yul":6172:6190   */
              add
                /* "contracts/Market.sol":46728:46796  EarningsAccumulatorSmoothFactorSet(earningsAccumulatorSmoothFactor_) */
            tag_499:
              mload(0x40)
              dup1
              swap2
              sub
              swap1
              log1
                /* "contracts/Market.sol":46440:46801  function setEarningsAccumulatorSmoothFactor(... */
              pop
              pop
              jump	// out
                /* "node_modules/solmate/src/tokens/ERC20.sol":1018:1036  string public name */
            tag_135:
              0xc9
              dup1
              sload
              tag_501
              swap1
              tag_502
              jump	// in
            tag_501:
              dup1
              0x1f
              add
              0x20
              dup1
              swap2
              div
              mul
              0x20
              add
              mload(0x40)
              swap1
              dup2
              add
              0x40
              mstore
              dup1
              swap3
              swap2
              swap1
              dup2
              dup2
              mstore
              0x20
              add
              dup3
              dup1
              sload
              tag_503
              swap1
              tag_502
              jump	// in
            tag_503:
              dup1
              iszero
              tag_504
              jumpi
              dup1
              0x1f
              lt
              tag_505
              jumpi
              0x0100
              dup1
              dup4
              sload
              div
              mul
              dup4
              mstore
              swap2
              0x20
              add
              swap2
              jump(tag_504)
            tag_505:
              dup3
              add
              swap2
              swap1
              0x00
              mstore
              keccak256(0x00, 0x20)
              swap1
            tag_506:
              dup2
              sload
              dup2
              mstore
              swap1
              0x01
              add
              swap1
              0x20
              add
              dup1
              dup4
              gt
              tag_506
              jumpi
              dup3
              swap1
              sub
              0x1f
              and
              dup3
              add
              swap2
            tag_504:
              pop
              pop
              pop
              pop
              pop
              dup2
              jump	// out
                /* "node_modules/solmate/src/mixins/ERC4626.sol":4450:4707  function convertToAssets(uint256 shares) public view virtual returns (uint256) {... */
            tag_141:
                /* "node_modules/solmate/src/mixins/ERC4626.sol":4556:4567  totalSupply */
              sload(0xcb)
                /* "node_modules/solmate/src/mixins/ERC4626.sol":4520:4527  uint256 */
              0x00
              swap1
                /* "node_modules/solmate/src/mixins/ERC4626.sol":4637:4648  supply == 0 */
              dup1
              iszero
                /* "node_modules/solmate/src/mixins/ERC4626.sol":4637:4700  supply == 0 ? shares : shares.mulDivDown(totalAssets(), supply) */
              tag_508
              jumpi
                /* "node_modules/solmate/src/mixins/ERC4626.sol":4660:4700  shares.mulDivDown(totalAssets(), supply) */
              tag_509
                /* "node_modules/solmate/src/mixins/ERC4626.sol":4678:4691  totalAssets() */
              tag_510
                /* "node_modules/solmate/src/mixins/ERC4626.sol":4678:4689  totalAssets */
              tag_118
                /* "node_modules/solmate/src/mixins/ERC4626.sol":4678:4691  totalAssets() */
              jump	// in
            tag_510:
                /* "node_modules/solmate/src/mixins/ERC4626.sol":4660:4666  shares */
              dup5
              swap1
                /* "node_modules/solmate/src/mixins/ERC4626.sol":4693:4699  supply */
              dup4
                /* "node_modules/solmate/src/mixins/ERC4626.sol":4660:4677  shares.mulDivDown */
              tag_479
                /* "node_modules/solmate/src/mixins/ERC4626.sol":4660:4700  shares.mulDivDown(totalAssets(), supply) */
              jump	// in
            tag_509:
                /* "node_modules/solmate/src/mixins/ERC4626.sol":4637:4700  supply == 0 ? shares : shares.mulDivDown(totalAssets(), supply) */
              jump(tag_511)
            tag_508:
                /* "node_modules/solmate/src/mixins/ERC4626.sol":4651:4657  shares */
              dup3
                /* "node_modules/solmate/src/mixins/ERC4626.sol":4637:4700  supply == 0 ? shares : shares.mulDivDown(totalAssets(), supply) */
            tag_511:
                /* "node_modules/solmate/src/mixins/ERC4626.sol":4630:4700  return supply == 0 ? shares : shares.mulDivDown(totalAssets(), supply) */
              swap4
                /* "node_modules/solmate/src/mixins/ERC4626.sol":4450:4707  function convertToAssets(uint256 shares) public view virtual returns (uint256) {... */
              swap3
              pop
              pop
              pop
              jump	// out
                /* "node_modules/solmate/src/tokens/ERC20.sol":2448:2659  function approve(address spender, uint256 amount) public virtual returns (bool) {... */
            tag_146:
                /* "node_modules/solmate/src/tokens/ERC20.sol":2548:2558  msg.sender */
              caller
                /* "node_modules/solmate/src/tokens/ERC20.sol":2522:2526  bool */
              0x00
                /* "node_modules/solmate/src/tokens/ERC20.sol":2538:2559  allowance[msg.sender] */
              dup2
              dup2
              mstore
                /* "node_modules/solmate/src/tokens/ERC20.sol":2538:2547  allowance */
              0xcd
                /* "node_modules/solmate/src/tokens/ERC20.sol":2538:2559  allowance[msg.sender] */
              0x20
              swap1
              dup2
              mstore
              0x40
              dup1
              dup4
              keccak256
              sub(shl(0xa0, 0x01), 0x01)
                /* "node_modules/solmate/src/tokens/ERC20.sol":2538:2568  allowance[msg.sender][spender] */
              dup8
              and
              dup1
              dup6
              mstore
              swap3
              mstore
              dup1
              dup4
              keccak256
                /* "node_modules/solmate/src/tokens/ERC20.sol":2538:2577  allowance[msg.sender][spender] = amount */
              dup6
              swap1
              sstore
                /* "node_modules/solmate/src/tokens/ERC20.sol":2593:2630  Approval(msg.sender, spender, amount) */
              mload
                /* "node_modules/solmate/src/tokens/ERC20.sol":2522:2526  bool */
              swap2
              swap3
                /* "node_modules/solmate/src/tokens/ERC20.sol":2538:2568  allowance[msg.sender][spender] */
              swap1
              swap2
                /* "node_modules/solmate/src/tokens/ERC20.sol":2593:2630  Approval(msg.sender, spender, amount) */
              0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925
              swap1
              tag_513
              swap1
                /* "node_modules/solmate/src/tokens/ERC20.sol":2571:2577  amount */
              dup7
                /* "#utility.yul":801:826   */
              dup2
              mstore
                /* "#utility.yul":789:791   */
              0x20
                /* "#utility.yul":774:792   */
              add
              swap1
                /* "#utility.yul":655:832   */
              jump
                /* "node_modules/solmate/src/tokens/ERC20.sol":2593:2630  Approval(msg.sender, spender, amount) */
            tag_513:
              mload(0x40)
              dup1
              swap2
              sub
              swap1
              log3
              pop
                /* "node_modules/solmate/src/tokens/ERC20.sol":2648:2652  true */
              0x01
                /* "node_modules/solmate/src/tokens/ERC20.sol":2448:2659  function approve(address spender, uint256 amount) public virtual returns (bool) {... */
              swap3
              swap2
              pop
              pop
              jump	// out
                /* "node_modules/solmate/src/mixins/ERC4626.sol":5101:5356  function previewWithdraw(uint256 assets) public view virtual returns (uint256) {... */
            tag_150:
                /* "node_modules/solmate/src/mixins/ERC4626.sol":5207:5218  totalSupply */
              sload(0xcb)
                /* "node_modules/solmate/src/mixins/ERC4626.sol":5171:5178  uint256 */
              0x00
              swap1
                /* "node_modules/solmate/src/mixins/ERC4626.sol":5288:5299  supply == 0 */
              dup1
              iszero
                /* "node_modules/solmate/src/mixins/ERC4626.sol":5288:5349  supply == 0 ? assets : assets.mulDivUp(supply, totalAssets()) */
              tag_508
              jumpi
                /* "node_modules/solmate/src/mixins/ERC4626.sol":5311:5349  assets.mulDivUp(supply, totalAssets()) */
              tag_509
                /* "node_modules/solmate/src/mixins/ERC4626.sol":5327:5333  supply */
              dup2
                /* "node_modules/solmate/src/mixins/ERC4626.sol":5335:5348  totalAssets() */
              tag_517
                /* "node_modules/solmate/src/mixins/ERC4626.sol":5335:5346  totalAssets */
              tag_118
                /* "node_modules/solmate/src/mixins/ERC4626.sol":5335:5348  totalAssets() */
              jump	// in
            tag_517:
                /* "node_modules/solmate/src/mixins/ERC4626.sol":5311:5317  assets */
              dup6
              swap2
                /* "node_modules/solmate/src/mixins/ERC4626.sol":5311:5349  assets.mulDivUp(supply, totalAssets()) */
              swap1
                /* "node_modules/solmate/src/mixins/ERC4626.sol":5311:5326  assets.mulDivUp */
              tag_518
                /* "node_modules/solmate/src/mixins/ERC4626.sol":5311:5349  assets.mulDivUp(supply, totalAssets()) */
              jump	// in
                /* "contracts/Market.sol":38801:39329  function previewFloatingAssetsAverage() public view returns (uint256) {... */
            tag_161:
                /* "contracts/Market.sol":38905:38919  floatingAssets */
              sload(0xdd)
                /* "contracts/Market.sol":38960:38981  floatingAssetsAverage */
              sload(0xde)
                /* "contracts/Market.sol":38862:38869  uint256 */
              0x00
              swap2
                /* "contracts/Market.sol":38905:38919  floatingAssets */
              swap1
                /* "contracts/Market.sol":38862:38869  uint256 */
              dup3
                /* "contracts/Market.sol":39013:39057  memFloatingAssets < memFloatingAssetsAverage */
              dup2
              dup4
              lt
                /* "contracts/Market.sol":39013:39087  memFloatingAssets < memFloatingAssetsAverage ? dampSpeedDown : dampSpeedUp */
              tag_522
              jumpi
                /* "contracts/Market.sol":39076:39087  dampSpeedUp */
              sload(0xd8)
                /* "contracts/Market.sol":39013:39087  memFloatingAssets < memFloatingAssetsAverage ? dampSpeedDown : dampSpeedUp */
              jump(tag_523)
            tag_522:
                /* "contracts/Market.sol":39060:39073  dampSpeedDown */
              sload(0xd9)
                /* "contracts/Market.sol":39013:39087  memFloatingAssets < memFloatingAssetsAverage ? dampSpeedDown : dampSpeedUp */
            tag_523:
                /* "contracts/Market.sol":39178:39195  lastAverageUpdate */
              sload(0xda)
                /* "contracts/Market.sol":38987:39087  uint256 dampSpeedFactor = memFloatingAssets < memFloatingAssetsAverage ? dampSpeedDown : dampSpeedUp */
              swap1
              swap2
              pop
                /* "contracts/Market.sol":39093:39114  uint256 averageFactor */
              0x00
              swap1
                /* "contracts/Market.sol":39132:39207  (-int256(dampSpeedFactor * (block.timestamp - lastAverageUpdate))).expWad() */
              tag_524
              swap1
                /* "contracts/Market.sol":39160:39195  block.timestamp - lastAverageUpdate */
              tag_525
              swap1
              shl(0x48, 0x01)
                /* "contracts/Market.sol":39178:39195  lastAverageUpdate */
              swap1
              div
              0xffffffff
              and
                /* "contracts/Market.sol":39160:39175  block.timestamp */
              timestamp
                /* "contracts/Market.sol":39160:39195  block.timestamp - lastAverageUpdate */
              tag_526
              jump	// in
            tag_525:
                /* "contracts/Market.sol":39141:39196  dampSpeedFactor * (block.timestamp - lastAverageUpdate) */
              tag_527
              swap1
                /* "contracts/Market.sol":39141:39156  dampSpeedFactor */
              dup5
                /* "contracts/Market.sol":39141:39196  dampSpeedFactor * (block.timestamp - lastAverageUpdate) */
              tag_528
              jump	// in
            tag_527:
                /* "contracts/Market.sol":39133:39197  -int256(dampSpeedFactor * (block.timestamp - lastAverageUpdate)) */
              tag_529
              swap1
              tag_530
              jump	// in
            tag_529:
                /* "contracts/Market.sol":39132:39205  (-int256(dampSpeedFactor * (block.timestamp - lastAverageUpdate))).expWad */
              tag_531
                /* "contracts/Market.sol":39132:39207  (-int256(dampSpeedFactor * (block.timestamp - lastAverageUpdate))).expWad() */
              jump	// in
            tag_524:
                /* "contracts/Market.sol":39125:39207  1e18 - (-int256(dampSpeedFactor * (block.timestamp - lastAverageUpdate))).expWad() */
              tag_532
              swap1
                /* "contracts/Market.sol":39125:39129  1e18 */
              0x0de0b6b3a7640000
                /* "contracts/Market.sol":39125:39207  1e18 - (-int256(dampSpeedFactor * (block.timestamp - lastAverageUpdate))).expWad() */
              tag_533
              jump	// in
            tag_532:
                /* "contracts/Market.sol":39093:39208  uint256 averageFactor = uint256(1e18 - (-int256(dampSpeedFactor * (block.timestamp - lastAverageUpdate))).expWad()) */
              swap1
              pop
                /* "contracts/Market.sol":39281:39324  averageFactor.mulWadDown(memFloatingAssets) */
              tag_534
                /* "contracts/Market.sol":39093:39208  uint256 averageFactor = uint256(1e18 - (-int256(dampSpeedFactor * (block.timestamp - lastAverageUpdate))).expWad()) */
              dup2
                /* "contracts/Market.sol":39306:39323  memFloatingAssets */
              dup6
                /* "contracts/Market.sol":39281:39305  averageFactor.mulWadDown */
              tag_482
                /* "contracts/Market.sol":39281:39324  averageFactor.mulWadDown(memFloatingAssets) */
              jump	// in
            tag_534:
                /* "contracts/Market.sol":39221:39278  memFloatingAssetsAverage.mulWadDown(1e18 - averageFactor) */
              tag_535
                /* "contracts/Market.sol":39257:39277  1e18 - averageFactor */
              tag_536
                /* "contracts/Market.sol":39264:39277  averageFactor */
              dup4
                /* "contracts/Market.sol":39257:39261  1e18 */
              0x0de0b6b3a7640000
                /* "contracts/Market.sol":39257:39277  1e18 - averageFactor */
              tag_526
              jump	// in
            tag_536:
                /* "contracts/Market.sol":39221:39245  memFloatingAssetsAverage */
              dup6
              swap1
                /* "contracts/Market.sol":39221:39256  memFloatingAssetsAverage.mulWadDown */
              tag_482
                /* "contracts/Market.sol":39221:39278  memFloatingAssetsAverage.mulWadDown(1e18 - averageFactor) */
              jump	// in
            tag_535:
                /* "contracts/Market.sol":39221:39324  memFloatingAssetsAverage.mulWadDown(1e18 - averageFactor) + averageFactor.mulWadDown(memFloatingAssets) */
              tag_537
              swap2
              swap1
              tag_496
              jump	// in
            tag_537:
                /* "contracts/Market.sol":39214:39324  return memFloatingAssetsAverage.mulWadDown(1e18 - averageFactor) + averageFactor.mulWadDown(memFloatingAssets) */
              swap5
              pop
              pop
              pop
              pop
              pop
                /* "contracts/Market.sol":38801:39329  function previewFloatingAssetsAverage() public view returns (uint256) {... */
              swap1
              jump	// out
                /* "contracts/Market.sol":12307:14901  function borrowAtMaturity(... */
            tag_169:
                /* "contracts/Market.sol":12478:12496  uint256 assetsOwed */
              0x00
                /* "node_modules/@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol":1482:1501  _requireNotPaused() */
              tag_539
                /* "node_modules/@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol":1482:1499  _requireNotPaused */
              tag_540
                /* "node_modules/@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol":1482:1501  _requireNotPaused() */
              jump	// in
            tag_539:
                /* "contracts/Market.sol":12508:12514  assets */
              dup5
                /* "contracts/Market.sol":12518:12519  0 */
              0x00
                /* "contracts/Market.sol":12508:12519  assets == 0 */
              sub
                /* "contracts/Market.sol":12504:12540  if (assets == 0) revert ZeroBorrow() */
              tag_542
              jumpi
                /* "contracts/Market.sol":12528:12540  ZeroBorrow() */
              mload(0x40)
              shl(0xe0, 0x774257f7)
              dup2
              mstore
              0x04
              add
              mload(0x40)
              dup1
              swap2
              sub
              swap1
              revert
                /* "contracts/Market.sol":12504:12540  if (assets == 0) revert ZeroBorrow() */
            tag_542:
                /* "contracts/Market.sol":12606:12620  maxFuturePools */
              sload(0xda)
                /* "contracts/Market.sol":12572:12664  FixedLib.checkPoolState(maturity, maxFuturePools, FixedLib.State.VALID, FixedLib.State.NONE) */
              tag_543
              swap1
                /* "contracts/Market.sol":12596:12604  maturity */
              dup8
              swap1
                /* "contracts/Market.sol":12606:12620  maxFuturePools */
              0xff
              and
                /* "contracts/Market.sol":12622:12642  FixedLib.State.VALID */
              0x03
                /* "contracts/Market.sol":12606:12620  maxFuturePools */
              0x00
                /* "contracts/Market.sol":12572:12595  FixedLib.checkPoolState */
              tag_544
                /* "contracts/Market.sol":12572:12664  FixedLib.checkPoolState(maturity, maxFuturePools, FixedLib.State.VALID, FixedLib.State.NONE) */
              jump	// in
            tag_543:
                /* "contracts/Market.sol":12671:12697  FixedLib.Pool storage pool */
              0x00
                /* "contracts/Market.sol":12700:12720  fixedPools[maturity] */
              dup7
              dup2
              mstore
                /* "contracts/Market.sol":12700:12710  fixedPools */
              0xd1
                /* "contracts/Market.sol":12700:12720  fixedPools[maturity] */
              0x20
              mstore
              0x40
              dup2
              keccak256
              swap1
                /* "contracts/Market.sol":12752:12781  pool.accrueEarnings(maturity) */
              tag_545
                /* "contracts/Market.sol":12700:12720  fixedPools[maturity] */
              dup3
                /* "contracts/Market.sol":12711:12719  maturity */
              dup10
                /* "contracts/Market.sol":12752:12771  pool.accrueEarnings */
              tag_546
                /* "contracts/Market.sol":12752:12781  pool.accrueEarnings(maturity) */
              jump	// in
            tag_545:
                /* "contracts/Market.sol":12827:12844  interestRateModel */
              sload(0xdb)
                /* "contracts/Market.sol":12879:12892  pool.borrowed */
              dup4
              sload
                /* "contracts/Market.sol":12827:12844  interestRateModel */
              0x01
                /* "contracts/Market.sol":12894:12907  pool.supplied */
              dup6
              add
              sload
                /* "contracts/Market.sol":12727:12781  uint256 backupEarnings = pool.accrueEarnings(maturity) */
              swap3
              swap4
              pop
                /* "contracts/Market.sol":12788:12799  uint256 fee */
              0x00
              swap3
                /* "contracts/Market.sol":12802:12946  assets.mulWadDown(... */
              tag_547
              swap3
              sub(shl(0xa0, 0x01), 0x01)
                /* "contracts/Market.sol":12827:12844  interestRateModel */
              and
              swap2
                /* "contracts/Market.sol":12827:12860  interestRateModel.fixedBorrowRate */
              0xdf635f3d
              swap2
                /* "contracts/Market.sol":12861:12869  maturity */
              dup14
              swap2
                /* "contracts/Market.sol":12871:12877  assets */
              dup14
              swap2
                /* "contracts/Market.sol":12909:12939  previewFloatingAssetsAverage() */
              tag_548
                /* "contracts/Market.sol":12909:12937  previewFloatingAssetsAverage */
              tag_161
                /* "contracts/Market.sol":12909:12939  previewFloatingAssetsAverage() */
              jump	// in
            tag_548:
                /* "contracts/Market.sol":12827:12940  interestRateModel.fixedBorrowRate(maturity, assets, pool.borrowed, pool.supplied, previewFloatingAssetsAverage()) */
              mload(0x40)
              not(sub(shl(0xe0, 0x01), 0x01))
              0xe0
              dup9
              swap1
              shl
              and
              dup2
              mstore
              0x04
              dup2
              add
                /* "#utility.yul":13753:13778   */
              swap6
              swap1
              swap6
              mstore
                /* "#utility.yul":13794:13812   */
              0x24
              dup6
              add
                /* "#utility.yul":13787:13821   */
              swap4
              swap1
              swap4
              mstore
                /* "#utility.yul":13837:13855   */
              0x44
              dup5
              add
                /* "#utility.yul":13830:13864   */
              swap2
              swap1
              swap2
              mstore
                /* "#utility.yul":13880:13898   */
              0x64
              dup4
              add
                /* "#utility.yul":13873:13907   */
              mstore
                /* "#utility.yul":13923:13942   */
              0x84
              dup3
              add
                /* "#utility.yul":13916:13951   */
              mstore
                /* "#utility.yul":13725:13744   */
              0xa4
              add
                /* "contracts/Market.sol":12827:12940  interestRateModel.fixedBorrowRate(maturity, assets, pool.borrowed, pool.supplied, previewFloatingAssetsAverage()) */
              0x20
              mload(0x40)
              dup1
              dup4
              sub
              dup2
              dup7
              gas
              staticcall
              iszero
              dup1
              iszero
              tag_552
              jumpi
              returndatasize
              0x00
              dup1
              returndatacopy
              revert(0x00, returndatasize)
            tag_552:
              pop
              pop
              pop
              pop
              mload(0x40)
              returndatasize
              not(0x1f)
              0x1f
              dup3
              add
              and
              dup3
              add
              dup1
              0x40
              mstore
              pop
              dup2
              add
              swap1
              tag_553
              swap2
              swap1
              tag_554
              jump	// in
            tag_553:
                /* "contracts/Market.sol":12802:12808  assets */
              dup10
              swap1
                /* "contracts/Market.sol":12802:12819  assets.mulWadDown */
              tag_482
                /* "contracts/Market.sol":12802:12946  assets.mulWadDown(... */
              jump	// in
            tag_547:
                /* "contracts/Market.sol":12788:12946  uint256 fee = assets.mulWadDown(... */
              swap1
              pop
                /* "contracts/Market.sol":12965:12977  assets + fee */
              tag_555
                /* "contracts/Market.sol":12788:12946  uint256 fee = assets.mulWadDown(... */
              dup2
                /* "contracts/Market.sol":12965:12971  assets */
              dup10
                /* "contracts/Market.sol":12965:12977  assets + fee */
              tag_496
              jump	// in
            tag_555:
                /* "contracts/Market.sol":12952:12977  assetsOwed = assets + fee */
              swap4
              pop
                /* "contracts/Market.sol":13063:13072  maxAssets */
              dup7
                /* "contracts/Market.sol":13050:13060  assetsOwed */
              dup5
                /* "contracts/Market.sol":13050:13072  assetsOwed > maxAssets */
              gt
                /* "contracts/Market.sol":13046:13095  if (assetsOwed > maxAssets) revert Disagreement() */
              iszero
              tag_556
              jumpi
                /* "contracts/Market.sol":13081:13095  Disagreement() */
              mload(0x40)
              shl(0xe2, 0x2c1b6b41)
              dup2
              mstore
              0x04
              add
              mload(0x40)
              dup1
              swap2
              sub
              swap1
              revert
                /* "contracts/Market.sol":13046:13095  if (assetsOwed > maxAssets) revert Disagreement() */
            tag_556:
                /* "contracts/Market.sol":13143:13160  rewardsController */
              and(sub(shl(0xa0, 0x01), 0x01), sload(0xe3))
                /* "contracts/Market.sol":13170:13213  address(memRewardsController) != address(0) */
              dup1
              iszero
                /* "contracts/Market.sol":13166:13258  if (address(memRewardsController) != address(0)) memRewardsController.handleBorrow(borrower) */
              tag_557
              jumpi
                /* "contracts/Market.sol":13215:13258  memRewardsController.handleBorrow(borrower) */
              mload(0x40)
              shl(0xe0, 0x6c912dad)
              dup2
              mstore
              sub(shl(0xa0, 0x01), 0x01)
                /* "#utility.yul":5785:5817   */
              dup8
              dup2
              and
                /* "contracts/Market.sol":13215:13258  memRewardsController.handleBorrow(borrower) */
              0x04
              dup4
              add
                /* "#utility.yul":5767:5818   */
              mstore
                /* "contracts/Market.sol":13215:13248  memRewardsController.handleBorrow */
              dup3
              and
              swap1
              0x6c912dad
              swap1
                /* "#utility.yul":5740:5758   */
              0x24
              add
                /* "contracts/Market.sol":13215:13258  memRewardsController.handleBorrow(borrower) */
              0x00
              mload(0x40)
              dup1
              dup4
              sub
              dup2
              0x00
              dup8
              dup1
              extcodesize
              iszero
              dup1
              iszero
              tag_559
              jumpi
              0x00
              dup1
              revert
            tag_559:
              pop
              gas
              call
              iszero
              dup1
              iszero
              tag_561
              jumpi
              returndatasize
              0x00
              dup1
              returndatacopy
              revert(0x00, returndatasize)
            tag_561:
              pop
              pop
              pop
              pop
                /* "contracts/Market.sol":13166:13258  if (address(memRewardsController) != address(0)) memRewardsController.handleBorrow(borrower) */
            tag_557:
                /* "contracts/Market.sol":13265:13301  spendAllowance(borrower, assetsOwed) */
              tag_562
                /* "contracts/Market.sol":13280:13288  borrower */
              dup7
                /* "contracts/Market.sol":13290:13300  assetsOwed */
              dup7
                /* "contracts/Market.sol":13265:13279  spendAllowance */
              tag_563
                /* "contracts/Market.sol":13265:13301  spendAllowance(borrower, assetsOwed) */
              jump	// in
            tag_562:
                /* "contracts/Market.sol":13316:13342  uint256 backupDebtAddition */
              0x00
                /* "contracts/Market.sol":13345:13364  pool.borrow(assets) */
              tag_564
                /* "contracts/Market.sol":13345:13349  pool */
              dup6
                /* "contracts/Market.sol":13357:13363  assets */
              dup12
                /* "contracts/Market.sol":13345:13356  pool.borrow */
              tag_565
                /* "contracts/Market.sol":13345:13364  pool.borrow(assets) */
              jump	// in
            tag_564:
                /* "contracts/Market.sol":13316:13364  uint256 backupDebtAddition = pool.borrow(assets) */
              swap1
              pop
                /* "contracts/Market.sol":13376:13398  backupDebtAddition > 0 */
              dup1
              iszero
                /* "contracts/Market.sol":13372:13773  if (backupDebtAddition > 0) {... */
              tag_566
              jumpi
                /* "contracts/Market.sol":13410:13443  uint256 newFloatingBackupBorrowed */
              0x00
                /* "contracts/Market.sol":13471:13489  backupDebtAddition */
              dup2
                /* "contracts/Market.sol":13446:13468  floatingBackupBorrowed */
              sload(0xd3)
                /* "contracts/Market.sol":13446:13489  floatingBackupBorrowed + backupDebtAddition */
              tag_567
              swap2
              swap1
              tag_496
              jump	// in
            tag_567:
                /* "contracts/Market.sol":13410:13489  uint256 newFloatingBackupBorrowed = floatingBackupBorrowed + backupDebtAddition */
              swap1
              pop
                /* "contracts/Market.sol":13499:13538  depositToTreasury(updateFloatingDebt()) */
              tag_568
                /* "contracts/Market.sol":13517:13537  updateFloatingDebt() */
              tag_569
                /* "contracts/Market.sol":13517:13535  updateFloatingDebt */
              tag_570
                /* "contracts/Market.sol":13517:13537  updateFloatingDebt() */
              jump	// in
            tag_569:
                /* "contracts/Market.sol":13499:13516  depositToTreasury */
              tag_571
                /* "contracts/Market.sol":13499:13538  depositToTreasury(updateFloatingDebt()) */
              jump	// in
            tag_568:
                /* "contracts/Market.sol":13628:13641  reserveFactor */
              sload(0xdc)
                /* "contracts/Market.sol":13595:13642  floatingAssets.mulWadDown(1e18 - reserveFactor) */
              tag_572
              swap1
                /* "contracts/Market.sol":13621:13641  1e18 - reserveFactor */
              tag_573
              swap1
              shl(0x80, 0x01)
                /* "contracts/Market.sol":13628:13641  reserveFactor */
              swap1
              div
              sub(shl(0x80, 0x01), 0x01)
              and
                /* "contracts/Market.sol":13621:13625  1e18 */
              0x0de0b6b3a7640000
                /* "contracts/Market.sol":13621:13641  1e18 - reserveFactor */
              tag_574
              jump	// in
            tag_573:
                /* "contracts/Market.sol":13595:13609  floatingAssets */
              sload(0xdd)
              swap1
              sub(shl(0x80, 0x01), 0x01)
                /* "contracts/Market.sol":13595:13642  floatingAssets.mulWadDown(1e18 - reserveFactor) */
              and
                /* "contracts/Market.sol":13595:13620  floatingAssets.mulWadDown */
              tag_482
                /* "contracts/Market.sol":13595:13642  floatingAssets.mulWadDown(1e18 - reserveFactor) */
              jump	// in
            tag_572:
                /* "contracts/Market.sol":13580:13592  floatingDebt */
              sload(0xd4)
                /* "contracts/Market.sol":13552:13592  newFloatingBackupBorrowed + floatingDebt */
              tag_575
              swap1
                /* "contracts/Market.sol":13552:13577  newFloatingBackupBorrowed */
              dup4
                /* "contracts/Market.sol":13552:13592  newFloatingBackupBorrowed + floatingDebt */
              tag_496
              jump	// in
            tag_575:
                /* "contracts/Market.sol":13552:13642  newFloatingBackupBorrowed + floatingDebt > floatingAssets.mulWadDown(1e18 - reserveFactor) */
              gt
                /* "contracts/Market.sol":13548:13705  if (newFloatingBackupBorrowed + floatingDebt > floatingAssets.mulWadDown(1e18 - reserveFactor)) {... */
              iszero
              tag_576
              jumpi
                /* "contracts/Market.sol":13663:13694  InsufficientProtocolLiquidity() */
              mload(0x40)
              shl(0xe3, 0x2d41ad)
              dup2
              mstore
              0x04
              add
              mload(0x40)
              dup1
              swap2
              sub
              swap1
              revert
                /* "contracts/Market.sol":13548:13705  if (newFloatingBackupBorrowed + floatingDebt > floatingAssets.mulWadDown(1e18 - reserveFactor)) {... */
            tag_576:
                /* "contracts/Market.sol":13714:13736  floatingBackupBorrowed */
              0xd3
                /* "contracts/Market.sol":13714:13764  floatingBackupBorrowed = newFloatingBackupBorrowed */
              sstore
                /* "contracts/Market.sol":13372:13773  if (backupDebtAddition > 0) {... */
            tag_566:
              pop
                /* "contracts/Market.sol":13865:13899  FixedLib.Position storage position */
              0x00
                /* "contracts/Market.sol":13902:13932  fixedBorrowPositions[maturity] */
              dup11
              dup2
              mstore
                /* "contracts/Market.sol":13902:13922  fixedBorrowPositions */
              0xd0
                /* "contracts/Market.sol":13902:13932  fixedBorrowPositions[maturity] */
              0x20
              swap1
              dup2
              mstore
              0x40
              dup1
              dup4
              keccak256
              sub(shl(0xa0, 0x01), 0x01)
                /* "contracts/Market.sol":13902:13942  fixedBorrowPositions[maturity][borrower] */
              dup11
              and
              dup5
              mstore
              swap1
              swap2
              mstore
              dup2
              keccak256
                /* "contracts/Market.sol":13954:13972  position.principal */
              dup1
              sload
                /* "contracts/Market.sol":13902:13942  fixedBorrowPositions[maturity][borrower] */
              swap1
              swap2
                /* "contracts/Market.sol":13954:13977  position.principal == 0 */
              sub
                /* "contracts/Market.sol":13950:14117  if (position.principal == 0) {... */
              tag_577
              jumpi
              sub(shl(0xa0, 0x01), 0x01)
                /* "contracts/Market.sol":14015:14033  accounts[borrower] */
              dup8
              and
                /* "contracts/Market.sol":13989:14012  Account storage account */
              0x00
                /* "contracts/Market.sol":14015:14033  accounts[borrower] */
              swap1
              dup2
              mstore
                /* "contracts/Market.sol":14015:14023  accounts */
              0xd2
                /* "contracts/Market.sol":14015:14033  accounts[borrower] */
              0x20
              mstore
              0x40
              swap1
              keccak256
                /* "contracts/Market.sol":14066:14086  account.fixedBorrows */
              0x01
              dup2
              add
              sload
                /* "contracts/Market.sol":14066:14108  account.fixedBorrows.setMaturity(maturity) */
              tag_578
              swap1
                /* "contracts/Market.sol":14099:14107  maturity */
              dup14
                /* "contracts/Market.sol":14066:14098  account.fixedBorrows.setMaturity */
              tag_579
                /* "contracts/Market.sol":14066:14108  account.fixedBorrows.setMaturity(maturity) */
              jump	// in
            tag_578:
                /* "contracts/Market.sol":14043:14063  account.fixedBorrows */
              0x01
              swap1
              swap2
              add
                /* "contracts/Market.sol":14043:14108  account.fixedBorrows = account.fixedBorrows.setMaturity(maturity) */
              sstore
                /* "contracts/Market.sol":13950:14117  if (position.principal == 0) {... */
            tag_577:
                /* "contracts/Market.sol":14234:14263  uint256 newUnassignedEarnings */
              0x00
                /* "contracts/Market.sol":14265:14290  uint256 newBackupEarnings */
              dup1
                /* "contracts/Market.sol":14294:14373  pool.distributeEarnings(... */
              tag_580
                /* "contracts/Market.sol":14327:14349  chargeTreasuryFee(fee) */
              tag_581
                /* "contracts/Market.sol":14345:14348  fee */
              dup7
                /* "contracts/Market.sol":14327:14344  chargeTreasuryFee */
              tag_582
                /* "contracts/Market.sol":14327:14349  chargeTreasuryFee(fee) */
              jump	// in
            tag_581:
                /* "contracts/Market.sol":14294:14317  pool.distributeEarnings */
              0x40
              dup1
              mload
              0x80
              dup2
              add
              dup3
              mstore
              dup11
              sload
              dup2
              mstore
              0x01
              dup12
              add
              sload
              0x20
              dup3
              add
              mstore
              0x02
              dup12
              add
              sload
              swap2
              dup2
              add
              swap2
              swap1
              swap2
              mstore
              0x03
              dup11
              add
              sload
              0x60
              dup3
              add
              mstore
              swap1
                /* "contracts/Market.sol":14359:14365  assets */
              dup15
                /* "contracts/Market.sol":14294:14317  pool.distributeEarnings */
              tag_583
                /* "contracts/Market.sol":14294:14373  pool.distributeEarnings(... */
              jump	// in
            tag_580:
                /* "contracts/Market.sol":14233:14373  (uint256 newUnassignedEarnings, uint256 newBackupEarnings) = pool.distributeEarnings(... */
              swap1
              swap3
              pop
              swap1
              pop
                /* "contracts/Market.sol":14385:14410  newUnassignedEarnings > 0 */
              dup2
              iszero
                /* "contracts/Market.sol":14381:14460  if (newUnassignedEarnings > 0) pool.unassignedEarnings += newUnassignedEarnings */
              tag_584
              jumpi
                /* "contracts/Market.sol":14439:14460  newUnassignedEarnings */
              dup2
                /* "contracts/Market.sol":14412:14416  pool */
              dup8
                /* "contracts/Market.sol":14412:14435  pool.unassignedEarnings */
              0x02
              add
              0x00
                /* "contracts/Market.sol":14412:14460  pool.unassignedEarnings += newUnassignedEarnings */
              dup3
              dup3
              sload
              tag_585
              swap2
              swap1
              tag_496
              jump	// in
            tag_585:
              swap1
              swap2
              sstore
              pop
              pop
                /* "contracts/Market.sol":14381:14460  if (newUnassignedEarnings > 0) pool.unassignedEarnings += newUnassignedEarnings */
            tag_584:
                /* "contracts/Market.sol":14468:14503  collectFreeLunch(newBackupEarnings) */
              tag_586
                /* "contracts/Market.sol":14485:14502  newBackupEarnings */
              dup2
                /* "contracts/Market.sol":14468:14484  collectFreeLunch */
              tag_587
                /* "contracts/Market.sol":14468:14503  collectFreeLunch(newBackupEarnings) */
              jump	// in
            tag_586:
                /* "contracts/Market.sol":14555:14621  FixedLib.Position(position.principal + assets, position.fee + fee) */
              mload(0x40)
              dup1
              0x40
              add
              0x40
              mstore
              dup1
                /* "contracts/Market.sol":14594:14600  assets */
              dup14
                /* "contracts/Market.sol":14573:14581  position */
              dup6
                /* "contracts/Market.sol":14573:14591  position.principal */
              0x00
              add
              sload
                /* "contracts/Market.sol":14573:14600  position.principal + assets */
              tag_588
              swap2
              swap1
              tag_496
              jump	// in
            tag_588:
                /* "contracts/Market.sol":14555:14621  FixedLib.Position(position.principal + assets, position.fee + fee) */
              dup2
              mstore
              0x20
              add
                /* "contracts/Market.sol":14617:14620  fee */
              dup7
                /* "contracts/Market.sol":14602:14610  position */
              dup6
                /* "contracts/Market.sol":14602:14614  position.fee */
              0x01
              add
              sload
                /* "contracts/Market.sol":14602:14620  position.fee + fee */
              tag_589
              swap2
              swap1
              tag_496
              jump	// in
            tag_589:
                /* "contracts/Market.sol":14555:14621  FixedLib.Position(position.principal + assets, position.fee + fee) */
              swap1
              mstore
                /* "contracts/Market.sol":14512:14542  fixedBorrowPositions[maturity] */
              0x00
              dup15
              dup2
              mstore
                /* "contracts/Market.sol":14512:14532  fixedBorrowPositions */
              0xd0
                /* "contracts/Market.sol":14512:14542  fixedBorrowPositions[maturity] */
              0x20
              swap1
              dup2
              mstore
              0x40
              dup1
              dup4
              keccak256
              sub(shl(0xa0, 0x01), 0x01)
                /* "contracts/Market.sol":14512:14552  fixedBorrowPositions[maturity][borrower] */
              dup15
              and
              dup5
              mstore
              dup3
              mstore
              dup3
              keccak256
                /* "contracts/Market.sol":14512:14621  fixedBorrowPositions[maturity][borrower] = FixedLib.Position(position.principal + assets, position.fee + fee) */
              dup4
              mload
              dup2
              sstore
              swap3
              add
              mload
              0x01
              swap1
              swap3
              add
              swap2
              swap1
              swap2
              sstore
                /* "contracts/Market.sol":14634:14648  floatingAssets */
              0xdd
                /* "contracts/Market.sol":14634:14666  floatingAssets += backupEarnings */
              dup1
              sload
                /* "contracts/Market.sol":14652:14666  backupEarnings */
              dup9
              swap6
              pop
                /* "contracts/Market.sol":14634:14648  floatingAssets */
              swap1
              swap4
              pop
                /* "contracts/Market.sol":14512:14542  fixedBorrowPositions[maturity] */
              swap1
              swap2
              pop
                /* "contracts/Market.sol":14634:14666  floatingAssets += backupEarnings */
              tag_590
              swap1
                /* "contracts/Market.sol":14652:14666  backupEarnings */
              dup5
              swap1
                /* "contracts/Market.sol":14634:14666  floatingAssets += backupEarnings */
              tag_496
              jump	// in
            tag_590:
              swap1
              swap2
              sstore
              pop
              pop
                /* "contracts/Market.sol":14678:14749  BorrowAtMaturity(maturity, msg.sender, receiver, borrower, assets, fee) */
              0x40
              dup1
              mload
                /* "contracts/Market.sol":14705:14715  msg.sender */
              caller
                /* "#utility.yul":14558:14609   */
              dup2
              mstore
                /* "#utility.yul":14640:14642   */
              0x20
                /* "#utility.yul":14625:14643   */
              dup2
              add
                /* "#utility.yul":14618:14652   */
              dup12
              swap1
              mstore
                /* "#utility.yul":14668:14686   */
              swap1
              dup2
              add
                /* "#utility.yul":14661:14695   */
              dup4
              swap1
              mstore
              sub(shl(0xa0, 0x01), 0x01)
                /* "contracts/Market.sol":14678:14749  BorrowAtMaturity(maturity, msg.sender, receiver, borrower, assets, fee) */
              dup1
              dup9
              and
              swap2
              swap1
              dup10
              and
              swap1
                /* "contracts/Market.sol":14695:14703  maturity */
              dup13
              swap1
                /* "contracts/Market.sol":14678:14749  BorrowAtMaturity(maturity, msg.sender, receiver, borrower, assets, fee) */
              0x66866b472f27d55d69496091bbd651907b2fb1041b3eeaca6e565ae5b5af4013
              swap1
                /* "#utility.yul":14546:14548   */
              0x60
                /* "#utility.yul":14531:14549   */
              add
                /* "contracts/Market.sol":14678:14749  BorrowAtMaturity(maturity, msg.sender, receiver, borrower, assets, fee) */
              mload(0x40)
              dup1
              swap2
              sub
              swap1
              log4
                /* "contracts/Market.sol":14755:14773  emitMarketUpdate() */
              tag_593
                /* "contracts/Market.sol":14755:14771  emitMarketUpdate */
              tag_498
                /* "contracts/Market.sol":14755:14773  emitMarketUpdate() */
              jump	// in
            tag_593:
                /* "contracts/Market.sol":14779:14812  emitFixedEarningsUpdate(maturity) */
              tag_594
                /* "contracts/Market.sol":14803:14811  maturity */
              dup11
                /* "contracts/Market.sol":14779:14802  emitFixedEarningsUpdate */
              tag_595
                /* "contracts/Market.sol":14779:14812  emitFixedEarningsUpdate(maturity) */
              jump	// in
            tag_594:
                /* "contracts/Market.sol":14819:14854  auditor.checkBorrow(this, borrower) */
              mload(0x40)
              shl(0xe0, 0x7b9d8931)
              dup2
              mstore
                /* "contracts/Market.sol":14839:14843  this */
              address
                /* "contracts/Market.sol":14819:14854  auditor.checkBorrow(this, borrower) */
              0x04
              dup3
              add
                /* "#utility.yul":14933:14967   */
              mstore
              sub(shl(0xa0, 0x01), 0x01)
                /* "#utility.yul":15003:15018   */
              dup8
              dup2
              and
                /* "#utility.yul":14983:15001   */
              0x24
              dup4
              add
                /* "#utility.yul":14976:15019   */
              mstore
                /* "contracts/Market.sol":14819:14826  auditor */
              immutable("0x2adb6ba13100982fae82a6c459fdc0b83ba757ca8251e42f5db6158bc4c7e480")
                /* "contracts/Market.sol":14819:14838  auditor.checkBorrow */
              and
              swap1
              0x7b9d8931
              swap1
                /* "#utility.yul":14868:14886   */
              0x44
              add
                /* "contracts/Market.sol":14819:14854  auditor.checkBorrow(this, borrower) */
              0x00
              mload(0x40)
              dup1
              dup4
              sub
              dup2
              0x00
              dup8
              dup1
              extcodesize
              iszero
              dup1
              iszero
              tag_598
              jumpi
              0x00
              dup1
              revert
            tag_598:
              pop
              gas
              call
              iszero
              dup1
              iszero
              tag_600
              jumpi
              returndatasize
              0x00
              dup1
              returndatacopy
              revert(0x00, returndatasize)
            tag_600:
              pop
                /* "contracts/Market.sol":14860:14896  asset.safeTransfer(receiver, assets) */
              tag_601
              swap3
              pop
              pop
              sub(shl(0xa0, 0x01), 0x01)
                /* "contracts/Market.sol":14860:14865  asset */
              immutable("0xa89f858efa0702d27b503f14d00e73a25115c8d5bdd25598ae4b376a61175436")
                /* "contracts/Market.sol":14860:14878  asset.safeTransfer */
              and
              swap1
              pop
                /* "contracts/Market.sol":14879:14887  receiver */
              dup9
                /* "contracts/Market.sol":14889:14895  assets */
              dup12
                /* "contracts/Market.sol":14860:14878  asset.safeTransfer */
              tag_602
                /* "contracts/Market.sol":14860:14896  asset.safeTransfer(receiver, assets) */
              jump	// in
            tag_601:
                /* "contracts/Market.sol":12498:14901  {... */
              pop
              pop
              pop
              pop
                /* "contracts/Market.sol":12307:14901  function borrowAtMaturity(... */
              swap6
              swap5
              pop
              pop
              pop
              pop
              pop
              jump	// out
                /* "contracts/Market.sol":35404:36481  function previewDebt(address borrower) public view returns (uint256 debt) {... */
            tag_176:
              sub(shl(0xa0, 0x01), 0x01)
                /* "contracts/Market.sol":35510:35528  accounts[borrower] */
              dup2
              and
                /* "contracts/Market.sol":35464:35476  uint256 debt */
              0x00
                /* "contracts/Market.sol":35510:35528  accounts[borrower] */
              swap1
              dup2
              mstore
                /* "contracts/Market.sol":35510:35518  accounts */
              0xd2
                /* "contracts/Market.sol":35510:35528  accounts[borrower] */
              0x20
              swap1
              dup2
              mstore
              0x40
              dup3
              keccak256
                /* "contracts/Market.sol":35559:35570  penaltyRate */
              sload(0xd6)
                /* "contracts/Market.sol":35603:35623  account.fixedBorrows */
              0x01
              dup3
              add
              sload
                /* "contracts/Market.sol":35510:35528  accounts[borrower] */
              swap2
              swap3
                /* "contracts/Market.sol":35559:35570  penaltyRate */
              swap1
              swap2
                /* "contracts/Market.sol":35707:35729  packedMaturities >> 32 */
              swap1
              dup2
              swap1
              shr
              swap1
                /* "contracts/Market.sol":35668:35681  (1 << 32) - 1 */
              0xffffffff
                /* "contracts/Market.sol":35648:35682  packedMaturities & ((1 << 32) - 1) */
              and
                /* "contracts/Market.sol":35851:36335  while (packedMaturities != 0) {... */
            tag_604:
                /* "contracts/Market.sol":35858:35879  packedMaturities != 0 */
              dup2
              iszero
                /* "contracts/Market.sol":35851:36335  while (packedMaturities != 0) {... */
              tag_605
              jumpi
                /* "contracts/Market.sol":35912:35913  1 */
              0x01
                /* "contracts/Market.sol":35893:35913  packedMaturities & 1 */
              dup3
              and
                /* "contracts/Market.sol":35893:35918  packedMaturities & 1 != 0 */
              iszero
                /* "contracts/Market.sol":35889:36262  if (packedMaturities & 1 != 0) {... */
              tag_606
              jumpi
                /* "contracts/Market.sol":35930:35964  FixedLib.Position storage position */
              0x00
                /* "contracts/Market.sol":35967:35997  fixedBorrowPositions[maturity] */
              dup2
              dup2
              mstore
                /* "contracts/Market.sol":35967:35987  fixedBorrowPositions */
              0xd0
                /* "contracts/Market.sol":35967:35997  fixedBorrowPositions[maturity] */
              0x20
              swap1
              dup2
              mstore
              0x40
              dup1
              dup4
              keccak256
              sub(shl(0xa0, 0x01), 0x01)
                /* "contracts/Market.sol":35967:36007  fixedBorrowPositions[maturity][borrower] */
              dup11
              and
              dup5
              mstore
              swap1
              swap2
              mstore
              dup2
              keccak256
                /* "contracts/Market.sol":36063:36075  position.fee */
              0x01
              dup2
              add
              sload
                /* "contracts/Market.sol":36042:36060  position.principal */
              dup2
              sload
                /* "contracts/Market.sol":35967:36007  fixedBorrowPositions[maturity][borrower] */
              swap2
              swap3
                /* "contracts/Market.sol":35930:35964  FixedLib.Position storage position */
              swap2
                /* "contracts/Market.sol":36042:36075  position.principal + position.fee */
              tag_607
              swap2
                /* "contracts/Market.sol":36063:36075  position.fee */
              swap1
                /* "contracts/Market.sol":36042:36075  position.principal + position.fee */
              tag_496
              jump	// in
            tag_607:
                /* "contracts/Market.sol":36017:36075  uint256 positionAssets = position.principal + position.fee */
              swap1
              pop
                /* "contracts/Market.sol":36086:36108  debt += positionAssets */
              tag_608
                /* "contracts/Market.sol":36017:36075  uint256 positionAssets = position.principal + position.fee */
              dup2
                /* "contracts/Market.sol":36086:36108  debt += positionAssets */
              dup9
              tag_496
              jump	// in
            tag_608:
              swap7
              pop
                /* "contracts/Market.sol":36141:36149  maturity */
              dup3
                /* "contracts/Market.sol":36123:36138  block.timestamp */
              timestamp
                /* "contracts/Market.sol":36123:36149  block.timestamp > maturity */
              gt
                /* "contracts/Market.sol":36119:36254  if (block.timestamp > maturity) {... */
              iszero
              tag_609
              jumpi
                /* "contracts/Market.sol":36171:36243  positionAssets.mulWadDown((block.timestamp - maturity) * memPenaltyRate) */
              tag_610
                /* "contracts/Market.sol":36228:36242  memPenaltyRate */
              dup6
                /* "contracts/Market.sol":36198:36224  block.timestamp - maturity */
              tag_611
                /* "contracts/Market.sol":36216:36224  maturity */
              dup6
                /* "contracts/Market.sol":36198:36213  block.timestamp */
              timestamp
                /* "contracts/Market.sol":36198:36224  block.timestamp - maturity */
              tag_526
              jump	// in
            tag_611:
                /* "contracts/Market.sol":36197:36242  (block.timestamp - maturity) * memPenaltyRate */
              tag_612
              swap2
              swap1
              tag_528
              jump	// in
            tag_612:
                /* "contracts/Market.sol":36171:36185  positionAssets */
              dup3
              swap1
                /* "contracts/Market.sol":36171:36196  positionAssets.mulWadDown */
              tag_482
                /* "contracts/Market.sol":36171:36243  positionAssets.mulWadDown((block.timestamp - maturity) * memPenaltyRate) */
              jump	// in
            tag_610:
                /* "contracts/Market.sol":36163:36243  debt += positionAssets.mulWadDown((block.timestamp - maturity) * memPenaltyRate) */
              tag_613
              swap1
              dup9
              tag_496
              jump	// in
            tag_613:
              swap7
              pop
                /* "contracts/Market.sol":36119:36254  if (block.timestamp > maturity) {... */
            tag_609:
                /* "contracts/Market.sol":35920:36262  {... */
              pop
              pop
                /* "contracts/Market.sol":35889:36262  if (packedMaturities & 1 != 0) {... */
            tag_606:
                /* "contracts/Market.sol":36290:36291  1 */
              0x01
                /* "contracts/Market.sol":36269:36291  packedMaturities >>= 1 */
              swap2
              swap1
              swap2
              shr
              swap1
                /* "contracts/Market.sol":36299:36328  maturity += FixedLib.INTERVAL */
              tag_614
                /* "contracts/utils/FixedLib.sol":306:313  4 weeks */
              0x24ea00
                /* "contracts/Market.sol":36299:36328  maturity += FixedLib.INTERVAL */
              dup3
              tag_496
              jump	// in
            tag_614:
              swap1
              pop
                /* "contracts/Market.sol":35851:36335  while (packedMaturities != 0) {... */
              jump(tag_604)
            tag_605:
                /* "contracts/Market.sol":36397:36425  account.floatingBorrowShares */
              0x02
              dup5
              add
              sload
                /* "contracts/Market.sol":36435:36445  shares > 0 */
              dup1
              iszero
                /* "contracts/Market.sol":36431:36476  if (shares > 0) debt += previewRefund(shares) */
              tag_615
              jumpi
                /* "contracts/Market.sol":36455:36476  previewRefund(shares) */
              tag_616
                /* "contracts/Market.sol":36469:36475  shares */
              dup2
                /* "contracts/Market.sol":36455:36468  previewRefund */
              tag_251
                /* "contracts/Market.sol":36455:36476  previewRefund(shares) */
              jump	// in
            tag_616:
                /* "contracts/Market.sol":36447:36476  debt += previewRefund(shares) */
              tag_617
              swap1
              dup8
              tag_496
              jump	// in
            tag_617:
              swap6
              pop
                /* "contracts/Market.sol":36431:36476  if (shares > 0) debt += previewRefund(shares) */
            tag_615:
                /* "contracts/Market.sol":35478:36481  {... */
              pop
              pop
              pop
              pop
              pop
                /* "contracts/Market.sol":35404:36481  function previewDebt(address borrower) public view returns (uint256 debt) {... */
              swap2
              swap1
              pop
              jump	// out
                /* "contracts/Market.sol":34322:34753  function transferFrom(address from, address to, uint256 shares) public override returns (bool) {... */
            tag_181:
                /* "contracts/Market.sol":34411:34415  bool */
              0x00
                /* "contracts/Market.sol":34423:34430  auditor */
              immutable("0x2adb6ba13100982fae82a6c459fdc0b83ba757ca8251e42f5db6158bc4c7e480")
              sub(shl(0xa0, 0x01), 0x01)
                /* "contracts/Market.sol":34423:34445  auditor.checkShortfall */
              and
              0xa3883db5
                /* "contracts/Market.sol":34446:34450  this */
              address
                /* "contracts/Market.sol":34452:34456  from */
              dup7
                /* "contracts/Market.sol":34458:34479  previewRedeem(shares) */
              tag_619
                /* "contracts/Market.sol":34472:34478  shares */
              dup7
                /* "contracts/Market.sol":34458:34471  previewRedeem */
              tag_260
                /* "contracts/Market.sol":34458:34479  previewRedeem(shares) */
              jump	// in
            tag_619:
                /* "contracts/Market.sol":34423:34480  auditor.checkShortfall(this, from, previewRedeem(shares)) */
              mload(0x40)
              dup5
              0xffffffff
              and
              0xe0
              shl
              dup2
              mstore
              0x04
              add
              tag_620
              swap4
              swap3
              swap2
              swap1
              tag_621
              jump	// in
            tag_620:
              0x00
              mload(0x40)
              dup1
              dup4
              sub
              dup2
              dup7
              dup1
              extcodesize
              iszero
              dup1
              iszero
              tag_622
              jumpi
              0x00
              dup1
              revert
            tag_622:
              pop
              gas
              staticcall
              iszero
              dup1
              iszero
              tag_624
              jumpi
              returndatasize
              0x00
              dup1
              returndatacopy
              revert(0x00, returndatasize)
            tag_624:
              pop
              pop
                /* "contracts/Market.sol":34527:34544  rewardsController */
              and(sub(shl(0xa0, 0x01), 0x01), sload(0xe3))
              swap2
              pop
              pop
                /* "contracts/Market.sol":34554:34597  address(memRewardsController) != address(0) */
              dup1
              iszero
                /* "contracts/Market.sol":34550:34700  if (address(memRewardsController) != address(0)) {... */
              tag_625
              jumpi
                /* "contracts/Market.sol":34607:34647  memRewardsController.handleDeposit(from) */
              mload(0x40)
              shl(0xe0, 0x0149e46f)
              dup2
              mstore
              sub(shl(0xa0, 0x01), 0x01)
                /* "#utility.yul":5785:5817   */
              dup7
              dup2
              and
                /* "contracts/Market.sol":34607:34647  memRewardsController.handleDeposit(from) */
              0x04
              dup4
              add
                /* "#utility.yul":5767:5818   */
              mstore
                /* "contracts/Market.sol":34607:34641  memRewardsController.handleDeposit */
              dup3
              and
              swap1
              0x0149e46f
              swap1
                /* "#utility.yul":5740:5758   */
              0x24
              add
                /* "contracts/Market.sol":34607:34647  memRewardsController.handleDeposit(from) */
              0x00
              mload(0x40)
              dup1
              dup4
              sub
              dup2
              0x00
              dup8
              dup1
              extcodesize
              iszero
              dup1
              iszero
              tag_627
              jumpi
              0x00
              dup1
              revert
            tag_627:
              pop
              gas
              call
              iszero
              dup1
              iszero
              tag_629
              jumpi
              returndatasize
              0x00
              dup1
              returndatacopy
              revert(0x00, returndatasize)
            tag_629:
              pop
              pop
                /* "contracts/Market.sol":34655:34693  memRewardsController.handleDeposit(to) */
              mload(0x40)
              shl(0xe0, 0x0149e46f)
              dup2
              mstore
              sub(shl(0xa0, 0x01), 0x01)
                /* "#utility.yul":5785:5817   */
              dup8
              dup2
              and
                /* "contracts/Market.sol":34655:34693  memRewardsController.handleDeposit(to) */
              0x04
              dup4
              add
                /* "#utility.yul":5767:5818   */
              mstore
                /* "contracts/Market.sol":34655:34689  memRewardsController.handleDeposit */
              dup5
              and
              swap3
              pop
              0x0149e46f
              swap2
              pop
                /* "#utility.yul":5740:5758   */
              0x24
              add
                /* "contracts/Market.sol":34655:34693  memRewardsController.handleDeposit(to) */
              0x00
              mload(0x40)
              dup1
              dup4
              sub
              dup2
              0x00
              dup8
              dup1
              extcodesize
              iszero
              dup1
              iszero
              tag_631
              jumpi
              0x00
              dup1
              revert
            tag_631:
              pop
              gas
              call
              iszero
              dup1
              iszero
              tag_633
              jumpi
              returndatasize
              0x00
              dup1
              returndatacopy
              revert(0x00, returndatasize)
            tag_633:
              pop
              pop
              pop
              pop
                /* "contracts/Market.sol":34550:34700  if (address(memRewardsController) != address(0)) {... */
            tag_625:
                /* "contracts/Market.sol":34712:34748  super.transferFrom(from, to, shares) */
              tag_634
                /* "contracts/Market.sol":34731:34735  from */
              dup6
                /* "contracts/Market.sol":34737:34739  to */
              dup6
                /* "contracts/Market.sol":34741:34747  shares */
              dup6
                /* "contracts/Market.sol":34712:34730  super.transferFrom */
              tag_635
                /* "contracts/Market.sol":34712:34748  super.transferFrom(from, to, shares) */
              jump	// in
            tag_634:
                /* "contracts/Market.sol":34705:34748  return super.transferFrom(from, to, shares) */
              swap6
                /* "contracts/Market.sol":34322:34753  function transferFrom(address from, address to, uint256 shares) public override returns (bool) {... */
              swap5
              pop
              pop
              pop
              pop
              pop
              jump	// out
                /* "contracts/Market.sol":47854:48016  function setMaxFuturePools(uint8 futurePools) public onlyRole(DEFAULT_ADMIN_ROLE) {... */
            tag_196:
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":2369:2373  0x00 */
              0x00
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":2802:2818  _checkRole(role) */
              tag_639
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":2369:2373  0x00 */
              dup2
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":2802:2812  _checkRole */
              tag_491
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":2802:2818  _checkRole(role) */
              jump	// in
            tag_639:
                /* "contracts/Market.sol":47942:47956  maxFuturePools */
              0xda
                /* "contracts/Market.sol":47942:47970  maxFuturePools = futurePools */
              dup1
              sload
              not(0xff)
              and
              0xff
              dup5
              and
              swap1
              dup2
              or
              swap1
              swap2
              sstore
                /* "contracts/Market.sol":47981:48011  MaxFuturePoolsSet(futurePools) */
              mload(0x40)
                /* "#utility.yul":3007:3043   */
              swap1
              dup2
              mstore
                /* "contracts/Market.sol":47981:48011  MaxFuturePoolsSet(futurePools) */
              0x23c0170203096819aed8a13739fe91ce445ec92a7e2aa228081b5e45ee582c80
              swap1
                /* "#utility.yul":2995:2997   */
              0x20
                /* "#utility.yul":2980:2998   */
              add
                /* "contracts/Market.sol":47981:48011  MaxFuturePoolsSet(futurePools) */
              tag_499
                /* "#utility.yul":2865:3049   */
              jump
                /* "contracts/Market.sol":48824:49093  function setTreasury(address treasury_, uint256 treasuryFeeRate_) public onlyRole(DEFAULT_ADMIN_ROLE) {... */
            tag_199:
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":2369:2373  0x00 */
              0x00
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":2802:2818  _checkRole(role) */
              tag_644
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":2369:2373  0x00 */
              dup2
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":2802:2812  _checkRole */
              tag_491
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":2802:2818  _checkRole(role) */
              jump	// in
            tag_644:
                /* "contracts/Market.sol":48932:48971  depositToTreasury(updateFloatingDebt()) */
              tag_646
                /* "contracts/Market.sol":48950:48970  updateFloatingDebt() */
              tag_569
                /* "contracts/Market.sol":48950:48968  updateFloatingDebt */
              tag_570
                /* "contracts/Market.sol":48950:48970  updateFloatingDebt() */
              jump	// in
                /* "contracts/Market.sol":48932:48971  depositToTreasury(updateFloatingDebt()) */
            tag_646:
                /* "contracts/Market.sol":48977:48985  treasury */
              0xe1
                /* "contracts/Market.sol":48977:48997  treasury = treasury_ */
              dup1
              sload
              not(sub(shl(0xa0, 0x01), 0x01))
              and
              sub(shl(0xa0, 0x01), 0x01)
              dup6
              and
              swap1
              dup2
              or
              swap1
              swap2
              sstore
                /* "contracts/Market.sol":49003:49018  treasuryFeeRate */
              0xe2
                /* "contracts/Market.sol":49003:49037  treasuryFeeRate = treasuryFeeRate_ */
              dup4
              swap1
              sstore
                /* "contracts/Market.sol":49048:49088  TreasurySet(treasury_, treasuryFeeRate_) */
              mload(0x40)
                /* "#utility.yul":801:826   */
              dup4
              dup2
              mstore
                /* "contracts/Market.sol":49048:49088  TreasurySet(treasury_, treasuryFeeRate_) */
              0xd471a80a3a5fd21dfce2b1b7c88bbea4684ab90254a4e47345ac344d56678872
              swap1
                /* "#utility.yul":789:791   */
              0x20
                /* "#utility.yul":774:792   */
              add
                /* "contracts/Market.sol":49048:49088  TreasurySet(treasury_, treasuryFeeRate_) */
              mload(0x40)
              dup1
              swap2
              sub
              swap1
              log2
                /* "contracts/Market.sol":48824:49093  function setTreasury(address treasury_, uint256 treasuryFeeRate_) public onlyRole(DEFAULT_ADMIN_ROLE) {... */
              pop
              pop
              pop
              jump	// out
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":5133:5278  function grantRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {... */
            tag_206:
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":4782:4789  bytes32 */
              0x00
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":4808:4820  _roles[role] */
              dup3
              dup2
              mstore
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":4808:4814  _roles */
              0x65
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":4808:4820  _roles[role] */
              0x20
              mstore
              0x40
              swap1
              keccak256
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":4808:4830  _roles[role].adminRole */
              0x01
              add
              sload
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":2802:2818  _checkRole(role) */
              tag_651
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":2813:2817  role */
              dup2
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":2802:2812  _checkRole */
              tag_491
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":2802:2818  _checkRole(role) */
              jump	// in
            tag_651:
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":5246:5271  _grantRole(role, account) */
              tag_653
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":5257:5261  role */
              dup4
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":5263:5270  account */
              dup4
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":5246:5256  _grantRole */
              tag_654
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":5246:5271  _grantRole(role, account) */
              jump	// in
            tag_653:
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":5133:5278  function grantRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {... */
              pop
              pop
              pop
              jump	// out
                /* "contracts/Market.sol":10354:11809  function depositAtMaturity(... */
            tag_213:
                /* "contracts/Market.sol":10512:10534  uint256 positionAssets */
              0x00
                /* "node_modules/@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol":1482:1501  _requireNotPaused() */
              tag_656
                /* "node_modules/@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol":1482:1499  _requireNotPaused */
              tag_540
                /* "node_modules/@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol":1482:1501  _requireNotPaused() */
              jump	// in
            tag_656:
                /* "contracts/Market.sol":10546:10552  assets */
              dup4
                /* "contracts/Market.sol":10556:10557  0 */
              0x00
                /* "contracts/Market.sol":10546:10557  assets == 0 */
              sub
                /* "contracts/Market.sol":10542:10579  if (assets == 0) revert ZeroDeposit() */
              tag_658
              jumpi
                /* "contracts/Market.sol":10566:10579  ZeroDeposit() */
              mload(0x40)
              shl(0xe0, 0x56316e87)
              dup2
              mstore
              0x04
              add
              mload(0x40)
              dup1
              swap2
              sub
              swap1
              revert
                /* "contracts/Market.sol":10542:10579  if (assets == 0) revert ZeroDeposit() */
            tag_658:
                /* "contracts/Market.sol":10645:10659  maxFuturePools */
              sload(0xda)
                /* "contracts/Market.sol":10611:10703  FixedLib.checkPoolState(maturity, maxFuturePools, FixedLib.State.VALID, FixedLib.State.NONE) */
              tag_659
              swap1
                /* "contracts/Market.sol":10635:10643  maturity */
              dup7
              swap1
                /* "contracts/Market.sol":10645:10659  maxFuturePools */
              0xff
              and
                /* "contracts/Market.sol":10661:10681  FixedLib.State.VALID */
              0x03
                /* "contracts/Market.sol":10645:10659  maxFuturePools */
              0x00
                /* "contracts/Market.sol":10611:10634  FixedLib.checkPoolState */
              tag_544
                /* "contracts/Market.sol":10611:10703  FixedLib.checkPoolState(maturity, maxFuturePools, FixedLib.State.VALID, FixedLib.State.NONE) */
              jump	// in
            tag_659:
                /* "contracts/Market.sol":10710:10736  FixedLib.Pool storage pool */
              0x00
                /* "contracts/Market.sol":10739:10759  fixedPools[maturity] */
              dup6
              dup2
              mstore
                /* "contracts/Market.sol":10739:10749  fixedPools */
              0xd1
                /* "contracts/Market.sol":10739:10759  fixedPools[maturity] */
              0x20
              mstore
              0x40
              dup2
              keccak256
              swap1
                /* "contracts/Market.sol":10791:10820  pool.accrueEarnings(maturity) */
              tag_660
                /* "contracts/Market.sol":10739:10759  fixedPools[maturity] */
              dup3
                /* "contracts/Market.sol":10750:10758  maturity */
              dup9
                /* "contracts/Market.sol":10791:10810  pool.accrueEarnings */
              tag_546
                /* "contracts/Market.sol":10791:10820  pool.accrueEarnings(maturity) */
              jump	// in
            tag_660:
                /* "contracts/Market.sol":10892:10905  backupFeeRate */
              sload(0xd7)
                /* "contracts/Market.sol":10862:10883  pool.calculateDeposit */
              0x40
              dup1
              mload
              0x80
              dup2
              add
              dup3
              mstore
              dup6
              sload
              dup2
              mstore
              0x01
              dup7
              add
              sload
              0x20
              dup3
              add
              mstore
              0x02
              dup7
              add
              sload
              swap2
              dup2
              add
              swap2
              swap1
              swap2
              mstore
              0x03
              dup6
              add
              sload
              0x60
              dup3
              add
              mstore
                /* "contracts/Market.sol":10766:10820  uint256 backupEarnings = pool.accrueEarnings(maturity) */
              swap2
              swap3
              pop
                /* "contracts/Market.sol":10828:10839  uint256 fee */
              0x00
              swap2
              dup3
              swap2
                /* "contracts/Market.sol":10862:10906  pool.calculateDeposit(assets, backupFeeRate) */
              tag_661
              swap2
                /* "contracts/Market.sol":10862:10883  pool.calculateDeposit */
              swap1
                /* "contracts/Market.sol":10884:10890  assets */
              dup11
              swap1
                /* "contracts/Market.sol":10862:10883  pool.calculateDeposit */
              tag_662
                /* "contracts/Market.sol":10862:10906  pool.calculateDeposit(assets, backupFeeRate) */
              jump	// in
            tag_661:
                /* "contracts/Market.sol":10827:10906  (uint256 fee, uint256 backupFee) = pool.calculateDeposit(assets, backupFeeRate) */
              swap1
              swap3
              pop
              swap1
              pop
                /* "contracts/Market.sol":10929:10941  assets + fee */
              tag_663
                /* "contracts/Market.sol":10827:10906  (uint256 fee, uint256 backupFee) = pool.calculateDeposit(assets, backupFeeRate) */
              dup3
                /* "contracts/Market.sol":10929:10935  assets */
              dup10
                /* "contracts/Market.sol":10929:10941  assets + fee */
              tag_496
              jump	// in
            tag_663:
                /* "contracts/Market.sol":10912:10941  positionAssets = assets + fee */
              swap5
              pop
                /* "contracts/Market.sol":10968:10985  minAssetsRequired */
              dup7
                /* "contracts/Market.sol":10951:10965  positionAssets */
              dup6
                /* "contracts/Market.sol":10951:10985  positionAssets < minAssetsRequired */
              lt
                /* "contracts/Market.sol":10947:11008  if (positionAssets < minAssetsRequired) revert Disagreement() */
              iszero
              tag_664
              jumpi
                /* "contracts/Market.sol":10994:11008  Disagreement() */
              mload(0x40)
              shl(0xe2, 0x2c1b6b41)
              dup2
              mstore
              0x04
              add
              mload(0x40)
              dup1
              swap2
              sub
              swap1
              revert
                /* "contracts/Market.sol":10947:11008  if (positionAssets < minAssetsRequired) revert Disagreement() */
            tag_664:
                /* "contracts/Market.sol":11041:11061  pool.deposit(assets) */
              tag_665
                /* "contracts/Market.sol":11041:11045  pool */
              dup5
                /* "contracts/Market.sol":11054:11060  assets */
              dup10
                /* "contracts/Market.sol":11041:11053  pool.deposit */
              tag_666
                /* "contracts/Market.sol":11041:11061  pool.deposit(assets) */
              jump	// in
            tag_665:
                /* "contracts/Market.sol":11015:11037  floatingBackupBorrowed */
              0xd3
              0x00
                /* "contracts/Market.sol":11015:11061  floatingBackupBorrowed -= pool.deposit(assets) */
              dup3
              dup3
              sload
              tag_667
              swap2
              swap1
              tag_526
              jump	// in
            tag_667:
              swap1
              swap2
              sstore
              pop
                /* "contracts/Market.sol":11094:11109  fee + backupFee */
              tag_668
              swap1
              pop
                /* "contracts/Market.sol":11100:11109  backupFee */
              dup2
                /* "contracts/Market.sol":11094:11097  fee */
              dup4
                /* "contracts/Market.sol":11094:11109  fee + backupFee */
              tag_496
              jump	// in
            tag_668:
                /* "contracts/Market.sol":11067:11071  pool */
              dup5
                /* "contracts/Market.sol":11067:11090  pool.unassignedEarnings */
              0x02
              add
              0x00
                /* "contracts/Market.sol":11067:11109  pool.unassignedEarnings -= fee + backupFee */
              dup3
              dup3
              sload
              tag_669
              swap2
              swap1
              tag_526
              jump	// in
            tag_669:
              swap3
              pop
              pop
              dup2
              swap1
              sstore
              pop
                /* "contracts/Market.sol":11138:11147  backupFee */
              dup1
                /* "contracts/Market.sol":11115:11134  earningsAccumulator */
              0xd5
              0x00
                /* "contracts/Market.sol":11115:11147  earningsAccumulator += backupFee */
              dup3
              dup3
              sload
              tag_670
              swap2
              swap1
              tag_496
              jump	// in
            tag_670:
              swap1
              swap2
              sstore
              pop
              pop
                /* "contracts/Market.sol":11187:11221  FixedLib.Position storage position */
              0x00
                /* "contracts/Market.sol":11224:11255  fixedDepositPositions[maturity] */
              dup10
              dup2
              mstore
                /* "contracts/Market.sol":11224:11245  fixedDepositPositions */
              0xcf
                /* "contracts/Market.sol":11224:11255  fixedDepositPositions[maturity] */
              0x20
              swap1
              dup2
              mstore
              0x40
              dup1
              dup4
              keccak256
              sub(shl(0xa0, 0x01), 0x01)
                /* "contracts/Market.sol":11224:11265  fixedDepositPositions[maturity][receiver] */
              dup11
              and
              dup5
              mstore
              swap1
              swap2
              mstore
              dup2
              keccak256
                /* "contracts/Market.sol":11346:11364  position.principal */
              dup1
              sload
                /* "contracts/Market.sol":11224:11265  fixedDepositPositions[maturity][receiver] */
              swap1
              swap2
                /* "contracts/Market.sol":11346:11369  position.principal == 0 */
              sub
                /* "contracts/Market.sol":11342:11505  if (position.principal == 0) {... */
              tag_671
              jumpi
              sub(shl(0xa0, 0x01), 0x01)
                /* "contracts/Market.sol":11405:11423  accounts[receiver] */
              dup8
              and
                /* "contracts/Market.sol":11379:11402  Account storage account */
              0x00
                /* "contracts/Market.sol":11405:11423  accounts[receiver] */
              swap1
              dup2
              mstore
                /* "contracts/Market.sol":11405:11413  accounts */
              0xd2
                /* "contracts/Market.sol":11405:11423  accounts[receiver] */
              0x20
              mstore
              0x40
              swap1
              keccak256
                /* "contracts/Market.sol":11455:11476  account.fixedDeposits */
              dup1
              sload
                /* "contracts/Market.sol":11455:11498  account.fixedDeposits.setMaturity(maturity) */
              tag_672
              swap1
                /* "contracts/Market.sol":11489:11497  maturity */
              dup13
                /* "contracts/Market.sol":11455:11488  account.fixedDeposits.setMaturity */
              tag_579
                /* "contracts/Market.sol":11455:11498  account.fixedDeposits.setMaturity(maturity) */
              jump	// in
            tag_672:
                /* "contracts/Market.sol":11431:11498  account.fixedDeposits = account.fixedDeposits.setMaturity(maturity) */
              swap1
              sstore
                /* "contracts/Market.sol":11342:11505  if (position.principal == 0) {... */
            tag_671:
                /* "contracts/Market.sol":11533:11539  assets */
              dup9
                /* "contracts/Market.sol":11511:11519  position */
              dup2
                /* "contracts/Market.sol":11511:11529  position.principal */
              0x00
              add
              0x00
                /* "contracts/Market.sol":11511:11539  position.principal += assets */
              dup3
              dup3
              sload
              tag_673
              swap2
              swap1
              tag_496
              jump	// in
            tag_673:
              swap3
              pop
              pop
              dup2
              swap1
              sstore
              pop
                /* "contracts/Market.sol":11561:11564  fee */
              dup3
                /* "contracts/Market.sol":11545:11553  position */
              dup2
                /* "contracts/Market.sol":11545:11557  position.fee */
              0x01
              add
              0x00
                /* "contracts/Market.sol":11545:11564  position.fee += fee */
              dup3
              dup3
              sload
              tag_674
              swap2
              swap1
              tag_496
              jump	// in
            tag_674:
              swap3
              pop
              pop
              dup2
              swap1
              sstore
              pop
                /* "contracts/Market.sol":11589:11603  backupEarnings */
              dup4
                /* "contracts/Market.sol":11571:11585  floatingAssets */
              0xdd
              0x00
                /* "contracts/Market.sol":11571:11603  floatingAssets += backupEarnings */
              dup3
              dup3
              sload
              tag_675
              swap2
              swap1
              tag_496
              jump	// in
            tag_675:
              swap1
              swap2
              sstore
              pop
              pop
                /* "contracts/Market.sol":11615:11677  DepositAtMaturity(maturity, msg.sender, receiver, assets, fee) */
              0x40
              dup1
              mload
                /* "#utility.yul":576:601   */
              dup11
              dup2
              mstore
                /* "#utility.yul":632:634   */
              0x20
                /* "#utility.yul":617:635   */
              dup2
              add
                /* "#utility.yul":610:644   */
              dup6
              swap1
              mstore
              sub(shl(0xa0, 0x01), 0x01)
                /* "contracts/Market.sol":11615:11677  DepositAtMaturity(maturity, msg.sender, receiver, assets, fee) */
              dup10
              and
              swap2
                /* "contracts/Market.sol":11643:11653  msg.sender */
              caller
              swap2
                /* "contracts/Market.sol":11633:11641  maturity */
              dup14
              swap2
                /* "contracts/Market.sol":11615:11677  DepositAtMaturity(maturity, msg.sender, receiver, assets, fee) */
              0xd9900507c64720c1a5e11858a42769b599616268b832495aa6afe8b9dc566e76
              swap2
                /* "#utility.yul":549:567   */
              add
                /* "contracts/Market.sol":11615:11677  DepositAtMaturity(maturity, msg.sender, receiver, assets, fee) */
              mload(0x40)
              dup1
              swap2
              sub
              swap1
              log4
                /* "contracts/Market.sol":11683:11701  emitMarketUpdate() */
              tag_677
                /* "contracts/Market.sol":11683:11699  emitMarketUpdate */
              tag_498
                /* "contracts/Market.sol":11683:11701  emitMarketUpdate() */
              jump	// in
            tag_677:
                /* "contracts/Market.sol":11707:11740  emitFixedEarningsUpdate(maturity) */
              tag_678
                /* "contracts/Market.sol":11731:11739  maturity */
              dup11
                /* "contracts/Market.sol":11707:11730  emitFixedEarningsUpdate */
              tag_595
                /* "contracts/Market.sol":11707:11740  emitFixedEarningsUpdate(maturity) */
              jump	// in
            tag_678:
                /* "contracts/Market.sol":11747:11804  asset.safeTransferFrom(msg.sender, address(this), assets) */
              tag_679
              sub(shl(0xa0, 0x01), 0x01)
                /* "contracts/Market.sol":11747:11752  asset */
              immutable("0xa89f858efa0702d27b503f14d00e73a25115c8d5bdd25598ae4b376a61175436")
                /* "contracts/Market.sol":11747:11769  asset.safeTransferFrom */
              and
                /* "contracts/Market.sol":11770:11780  msg.sender */
              caller
                /* "contracts/Market.sol":11790:11794  this */
              address
                /* "contracts/Market.sol":11797:11803  assets */
              dup13
                /* "contracts/Market.sol":11747:11769  asset.safeTransferFrom */
              tag_680
                /* "contracts/Market.sol":11747:11804  asset.safeTransferFrom(msg.sender, address(this), assets) */
              jump	// in
            tag_679:
                /* "contracts/Market.sol":10536:11809  {... */
              pop
              pop
              pop
              pop
              pop
                /* "contracts/Market.sol":10354:11809  function depositAtMaturity(... */
              swap5
              swap4
              pop
              pop
              pop
              pop
              jump	// out
                /* "node_modules/solmate/src/tokens/ERC20.sol":5314:5491  function DOMAIN_SEPARATOR() public view virtual returns (bytes32) {... */
            tag_216:
                /* "node_modules/solmate/src/tokens/ERC20.sol":5371:5378  bytes32 */
              0x00
                /* "node_modules/solmate/src/tokens/ERC20.sol":5414:5430  INITIAL_CHAIN_ID */
              immutable("0x063b0319e2281f25923728cc5b1320091ce96c495bdc22c6454b9dacb4150a22")
                /* "node_modules/solmate/src/tokens/ERC20.sol":5397:5410  block.chainid */
              chainid
                /* "node_modules/solmate/src/tokens/ERC20.sol":5397:5430  block.chainid == INITIAL_CHAIN_ID */
              eq
                /* "node_modules/solmate/src/tokens/ERC20.sol":5397:5484  block.chainid == INITIAL_CHAIN_ID ? INITIAL_DOMAIN_SEPARATOR : computeDomainSeparator() */
              tag_682
              jumpi
                /* "node_modules/solmate/src/tokens/ERC20.sol":5460:5484  computeDomainSeparator() */
              tag_683
                /* "node_modules/solmate/src/tokens/ERC20.sol":5460:5482  computeDomainSeparator */
              tag_684
                /* "node_modules/solmate/src/tokens/ERC20.sol":5460:5484  computeDomainSeparator() */
              jump	// in
            tag_683:
                /* "node_modules/solmate/src/tokens/ERC20.sol":5390:5484  return block.chainid == INITIAL_CHAIN_ID ? INITIAL_DOMAIN_SEPARATOR : computeDomainSeparator() */
              swap1
              pop
                /* "node_modules/solmate/src/tokens/ERC20.sol":5314:5491  function DOMAIN_SEPARATOR() public view virtual returns (bytes32) {... */
              swap1
              jump	// out
                /* "node_modules/solmate/src/tokens/ERC20.sol":5397:5484  block.chainid == INITIAL_CHAIN_ID ? INITIAL_DOMAIN_SEPARATOR : computeDomainSeparator() */
            tag_682:
              pop
                /* "node_modules/solmate/src/tokens/ERC20.sol":5433:5457  INITIAL_DOMAIN_SEPARATOR */
              immutable("0x206508c77e56a93fc1501de6f2d9e2e919258e4fe17c6ecf06cb5126d770e054")
              swap1
                /* "node_modules/solmate/src/tokens/ERC20.sol":5314:5491  function DOMAIN_SEPARATOR() public view virtual returns (bytes32) {... */
              jump	// out
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":6242:6456  function renounceRole(bytes32 role, address account) public virtual override {... */
            tag_220:
              sub(shl(0xa0, 0x01), 0x01)
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":6337:6360  account == _msgSender() */
              dup2
              and
                /* "node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":929:939  msg.sender */
              caller
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":6337:6360  account == _msgSender() */
              eq
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":6329:6412  require(account == _msgSender(), "AccessControl: can only renounce roles for self") */
              tag_689
              jumpi
              0x00
              dup1
              revert
            tag_689:
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":6423:6449  _revokeRole(role, account) */
              tag_690
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":6435:6439  role */
              dup3
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":6441:6448  account */
              dup3
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":6423:6434  _revokeRole */
              tag_691
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":6423:6449  _revokeRole(role, account) */
              jump	// in
            tag_690:
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":6242:6456  function renounceRole(bytes32 role, address account) public virtual override {... */
              pop
              pop
              jump	// out
                /* "contracts/Market.sol":18762:19281  function repayAtMaturity(... */
            tag_230:
                /* "contracts/Market.sol":18918:18943  uint256 actualRepayAssets */
              0x00
                /* "node_modules/@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol":1482:1501  _requireNotPaused() */
              tag_693
                /* "node_modules/@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol":1482:1499  _requireNotPaused */
              tag_540
                /* "node_modules/@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol":1482:1501  _requireNotPaused() */
              jump	// in
            tag_693:
                /* "contracts/Market.sol":19011:19025  maxFuturePools */
              sload(0xda)
                /* "contracts/Market.sol":18977:19072  FixedLib.checkPoolState(maturity, maxFuturePools, FixedLib.State.VALID, FixedLib.State.MATURED) */
              tag_695
              swap1
                /* "contracts/Market.sol":19001:19009  maturity */
              dup7
              swap1
                /* "contracts/Market.sol":19011:19025  maxFuturePools */
              0xff
              and
                /* "contracts/Market.sol":19027:19047  FixedLib.State.VALID */
              0x03
                /* "contracts/Market.sol":19049:19071  FixedLib.State.MATURED */
              0x02
                /* "contracts/Market.sol":18977:19000  FixedLib.checkPoolState */
              tag_544
                /* "contracts/Market.sol":18977:19072  FixedLib.checkPoolState(maturity, maxFuturePools, FixedLib.State.VALID, FixedLib.State.MATURED) */
              jump	// in
            tag_695:
                /* "contracts/Market.sol":19099:19177  noTransferRepayAtMaturity(maturity, positionAssets, maxAssets, borrower, true) */
              tag_696
                /* "contracts/Market.sol":19125:19133  maturity */
              dup6
                /* "contracts/Market.sol":19135:19149  positionAssets */
              dup6
                /* "contracts/Market.sol":19151:19160  maxAssets */
              dup6
                /* "contracts/Market.sol":19162:19170  borrower */
              dup6
                /* "contracts/Market.sol":19172:19176  true */
              0x01
                /* "contracts/Market.sol":19099:19124  noTransferRepayAtMaturity */
              tag_697
                /* "contracts/Market.sol":19099:19177  noTransferRepayAtMaturity(maturity, positionAssets, maxAssets, borrower, true) */
              jump	// in
            tag_696:
                /* "contracts/Market.sol":19079:19177  actualRepayAssets = noTransferRepayAtMaturity(maturity, positionAssets, maxAssets, borrower, true) */
              swap1
              pop
                /* "contracts/Market.sol":19183:19201  emitMarketUpdate() */
              tag_698
                /* "contracts/Market.sol":19183:19199  emitMarketUpdate */
              tag_498
                /* "contracts/Market.sol":19183:19201  emitMarketUpdate() */
              jump	// in
            tag_698:
                /* "contracts/Market.sol":19208:19276  asset.safeTransferFrom(msg.sender, address(this), actualRepayAssets) */
              tag_699
              sub(shl(0xa0, 0x01), 0x01)
                /* "contracts/Market.sol":19208:19213  asset */
              immutable("0xa89f858efa0702d27b503f14d00e73a25115c8d5bdd25598ae4b376a61175436")
                /* "contracts/Market.sol":19208:19230  asset.safeTransferFrom */
              and
                /* "contracts/Market.sol":19231:19241  msg.sender */
              caller
                /* "contracts/Market.sol":19251:19255  this */
              address
                /* "contracts/Market.sol":19258:19275  actualRepayAssets */
              dup5
                /* "contracts/Market.sol":19208:19230  asset.safeTransferFrom */
              tag_680
                /* "contracts/Market.sol":19208:19276  asset.safeTransferFrom(msg.sender, address(this), actualRepayAssets) */
              jump	// in
            tag_699:
                /* "contracts/Market.sol":18762:19281  function repayAtMaturity(... */
              swap5
              swap4
              pop
              pop
              pop
              pop
              jump	// out
                /* "contracts/Market.sol":49370:49441  function unpause() external onlyRole(PAUSER_ROLE) {... */
            tag_237:
                /* "contracts/Market.sol":1256:1280  keccak256("PAUSER_ROLE") */
              0x65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":2802:2818  _checkRole(role) */
              tag_701
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":2813:2817  role */
              dup2
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":2802:2812  _checkRole */
              tag_491
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":2802:2818  _checkRole(role) */
              jump	// in
            tag_701:
                /* "contracts/Market.sol":49426:49436  _unpause() */
              tag_703
                /* "contracts/Market.sol":49426:49434  _unpause */
              tag_704
                /* "contracts/Market.sol":49426:49436  _unpause() */
              jump	// in
            tag_703:
                /* "contracts/Market.sol":49370:49441  function unpause() external onlyRole(PAUSER_ROLE) {... */
              pop
              jump	// out
                /* "contracts/Market.sol":45690:45860  function setBackupFeeRate(uint256 backupFeeRate_) public onlyRole(DEFAULT_ADMIN_ROLE) {... */
            tag_244:
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":2369:2373  0x00 */
              0x00
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":2802:2818  _checkRole(role) */
              tag_707
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":2369:2373  0x00 */
              dup2
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":2802:2812  _checkRole */
              tag_491
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":2802:2818  _checkRole(role) */
              jump	// in
            tag_707:
                /* "contracts/Market.sol":45782:45795  backupFeeRate */
              0xd7
                /* "contracts/Market.sol":45782:45812  backupFeeRate = backupFeeRate_ */
              dup3
              swap1
              sstore
                /* "contracts/Market.sol":45823:45855  BackupFeeRateSet(backupFeeRate_) */
              mload(0x40)
                /* "#utility.yul":801:826   */
              dup3
              dup2
              mstore
                /* "contracts/Market.sol":45823:45855  BackupFeeRateSet(backupFeeRate_) */
              0x08b437f29bc93f50025290193a680338033c3fccb93cf0ef95788eba3f003e26
              swap1
                /* "#utility.yul":789:791   */
              0x20
                /* "#utility.yul":774:792   */
              add
                /* "contracts/Market.sol":45823:45855  BackupFeeRateSet(backupFeeRate_) */
              tag_499
                /* "#utility.yul":655:832   */
              jump
                /* "contracts/Market.sol":43431:43708  function previewRefund(uint256 shares) public view returns (uint256) {... */
            tag_251:
                /* "contracts/Market.sol":43523:43548  totalFloatingBorrowShares */
              sload(0xdf)
                /* "contracts/Market.sol":43491:43498  uint256 */
              0x00
              swap1
                /* "contracts/Market.sol":43628:43639  supply == 0 */
              dup1
              iszero
                /* "contracts/Market.sol":43628:43703  supply == 0 ? shares : shares.mulDivUp(totalFloatingBorrowAssets(), supply) */
              tag_508
              jumpi
                /* "contracts/Market.sol":43651:43703  shares.mulDivUp(totalFloatingBorrowAssets(), supply) */
              tag_509
                /* "contracts/Market.sol":43667:43694  totalFloatingBorrowAssets() */
              tag_713
                /* "contracts/Market.sol":43667:43692  totalFloatingBorrowAssets */
              tag_449
                /* "contracts/Market.sol":43667:43694  totalFloatingBorrowAssets() */
              jump	// in
            tag_713:
                /* "contracts/Market.sol":43651:43657  shares */
              dup5
              swap1
                /* "contracts/Market.sol":43696:43702  supply */
              dup4
                /* "contracts/Market.sol":43651:43666  shares.mulDivUp */
              tag_518
                /* "contracts/Market.sol":43651:43703  shares.mulDivUp(totalFloatingBorrowAssets(), supply) */
              jump	// in
                /* "contracts/Market.sol":23225:25790  function liquidate(... */
            tag_256:
                /* "contracts/Market.sol":23349:23369  uint256 repaidAssets */
              0x00
                /* "node_modules/@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol":1482:1501  _requireNotPaused() */
              tag_716
                /* "node_modules/@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol":1482:1499  _requireNotPaused */
              tag_540
                /* "node_modules/@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol":1482:1501  _requireNotPaused() */
              jump	// in
            tag_716:
              sub(shl(0xa0, 0x01), 0x01)
                /* "contracts/Market.sol":23381:23403  msg.sender == borrower */
              dup5
              and
                /* "contracts/Market.sol":23381:23391  msg.sender */
              caller
                /* "contracts/Market.sol":23381:23403  msg.sender == borrower */
              sub
                /* "contracts/Market.sol":23377:23429  if (msg.sender == borrower) revert SelfLiquidation() */
              tag_718
              jumpi
                /* "contracts/Market.sol":23412:23429  SelfLiquidation() */
              mload(0x40)
              shl(0xe0, 0x44511af1)
              dup2
              mstore
              0x04
              add
              mload(0x40)
              dup1
              swap2
              sub
              swap1
              revert
                /* "contracts/Market.sol":23377:23429  if (msg.sender == borrower) revert SelfLiquidation() */
            tag_718:
                /* "contracts/Market.sol":23448:23512  auditor.checkLiquidation(this, seizeMarket, borrower, maxAssets) */
              mload(0x40)
              shl(0xe3, 0x042dcf6b)
              dup2
              mstore
                /* "contracts/Market.sol":23473:23477  this */
              address
                /* "contracts/Market.sol":23448:23512  auditor.checkLiquidation(this, seizeMarket, borrower, maxAssets) */
              0x04
              dup3
              add
                /* "#utility.yul":15915:15949   */
              mstore
              sub(shl(0xa0, 0x01), 0x01)
                /* "#utility.yul":15985:16000   */
              dup4
              dup2
              and
                /* "#utility.yul":15965:15983   */
              0x24
              dup4
              add
                /* "#utility.yul":15958:16001   */
              mstore
                /* "#utility.yul":16037:16052   */
              dup6
              dup2
              and
                /* "#utility.yul":16017:16035   */
              0x44
              dup4
              add
                /* "#utility.yul":16010:16053   */
              mstore
                /* "#utility.yul":16069:16087   */
              0x64
              dup3
              add
                /* "#utility.yul":16062:16096   */
              dup6
              swap1
              mstore
                /* "contracts/Market.sol":23448:23455  auditor */
              immutable("0x2adb6ba13100982fae82a6c459fdc0b83ba757ca8251e42f5db6158bc4c7e480")
                /* "contracts/Market.sol":23448:23472  auditor.checkLiquidation */
              and
              swap1
              0x216e7b58
              swap1
                /* "#utility.yul":15849:15868   */
              0x84
              add
                /* "contracts/Market.sol":23448:23512  auditor.checkLiquidation(this, seizeMarket, borrower, maxAssets) */
              0x20
              mload(0x40)
              dup1
              dup4
              sub
              dup2
              dup7
              gas
              staticcall
              iszero
              dup1
              iszero
              tag_722
              jumpi
              returndatasize
              0x00
              dup1
              returndatacopy
              revert(0x00, returndatasize)
            tag_722:
              pop
              pop
              pop
              pop
              mload(0x40)
              returndatasize
              not(0x1f)
              0x1f
              dup3
              add
              and
              dup3
              add
              dup1
              0x40
              mstore
              pop
              dup2
              add
              swap1
              tag_723
              swap2
              swap1
              tag_554
              jump	// in
            tag_723:
                /* "contracts/Market.sol":23436:23512  maxAssets = auditor.checkLiquidation(this, seizeMarket, borrower, maxAssets) */
              swap3
              pop
                /* "contracts/Market.sol":23522:23531  maxAssets */
              dup3
                /* "contracts/Market.sol":23535:23536  0 */
              0x00
                /* "contracts/Market.sol":23522:23536  maxAssets == 0 */
              sub
                /* "contracts/Market.sol":23518:23556  if (maxAssets == 0) revert ZeroRepay() */
              tag_724
              jumpi
                /* "contracts/Market.sol":23545:23556  ZeroRepay() */
              mload(0x40)
              shl(0xe0, 0x685e9235)
              dup2
              mstore
              0x04
              add
              mload(0x40)
              dup1
              swap2
              sub
              swap1
              revert
                /* "contracts/Market.sol":23518:23556  if (maxAssets == 0) revert ZeroRepay() */
            tag_724:
              sub(shl(0xa0, 0x01), 0x01)
                /* "contracts/Market.sol":23589:23607  accounts[borrower] */
              dup5
              and
                /* "contracts/Market.sol":23563:23586  Account storage account */
              0x00
                /* "contracts/Market.sol":23589:23607  accounts[borrower] */
              swap1
              dup2
              mstore
                /* "contracts/Market.sol":23589:23597  accounts */
              0xd2
                /* "contracts/Market.sol":23589:23607  accounts[borrower] */
              0x20
              swap1
              dup2
              mstore
              0x40
              swap1
              swap2
              keccak256
                /* "contracts/Market.sol":23649:23669  account.fixedBorrows */
              0x01
              dup2
              add
              sload
                /* "contracts/Market.sol":23589:23607  accounts[borrower] */
              swap1
              swap2
                /* "contracts/Market.sol":23757:23779  packedMaturities >> 32 */
              dup2
              swap1
              shr
              swap1
                /* "contracts/Market.sol":23716:23729  (1 << 32) - 1 */
              0xffffffff
                /* "contracts/Market.sol":23696:23730  packedMaturities & ((1 << 32) - 1) */
              and
                /* "contracts/Market.sol":23787:24868  while (packedMaturities != 0 && maxAssets != 0) {... */
            tag_725:
                /* "contracts/Market.sol":23794:23815  packedMaturities != 0 */
              dup2
              iszero
              dup1
              iszero
              swap1
                /* "contracts/Market.sol":23794:23833  packedMaturities != 0 && maxAssets != 0 */
              tag_727
              jumpi
              pop
                /* "contracts/Market.sol":23819:23833  maxAssets != 0 */
              dup6
              iszero
              iszero
                /* "contracts/Market.sol":23794:23833  packedMaturities != 0 && maxAssets != 0 */
            tag_727:
                /* "contracts/Market.sol":23787:24868  while (packedMaturities != 0 && maxAssets != 0) {... */
              iszero
              tag_726
              jumpi
                /* "contracts/Market.sol":23868:23869  1 */
              0x01
                /* "contracts/Market.sol":23849:23869  packedMaturities & 1 */
              dup3
              and
                /* "contracts/Market.sol":23849:23874  packedMaturities & 1 != 0 */
              iszero
                /* "contracts/Market.sol":23845:24789  if (packedMaturities & 1 != 0) {... */
              tag_728
              jumpi
                /* "contracts/Market.sol":23888:23907  uint256 actualRepay */
              0x00
                /* "contracts/Market.sol":23941:23949  maturity */
              dup2
                /* "contracts/Market.sol":23923:23938  block.timestamp */
              timestamp
                /* "contracts/Market.sol":23923:23949  block.timestamp < maturity */
              lt
                /* "contracts/Market.sol":23919:24740  if (block.timestamp < maturity) {... */
              iszero
              tag_729
              jumpi
                /* "contracts/Market.sol":23979:24053  noTransferRepayAtMaturity(maturity, maxAssets, maxAssets, borrower, false) */
              tag_730
                /* "contracts/Market.sol":24005:24013  maturity */
              dup3
                /* "contracts/Market.sol":24015:24024  maxAssets */
              dup9
                /* "contracts/Market.sol":24026:24035  maxAssets */
              dup10
                /* "contracts/Market.sol":24037:24045  borrower */
              dup12
                /* "contracts/Market.sol":24047:24052  false */
              0x00
                /* "contracts/Market.sol":23979:24004  noTransferRepayAtMaturity */
              tag_697
                /* "contracts/Market.sol":23979:24053  noTransferRepayAtMaturity(maturity, maxAssets, maxAssets, borrower, false) */
              jump	// in
            tag_730:
                /* "contracts/Market.sol":23965:24053  actualRepay = noTransferRepayAtMaturity(maturity, maxAssets, maxAssets, borrower, false) */
              swap1
              pop
                /* "contracts/Market.sol":24067:24091  maxAssets -= actualRepay */
              tag_731
                /* "contracts/Market.sol":23965:24053  actualRepay = noTransferRepayAtMaturity(maturity, maxAssets, maxAssets, borrower, false) */
              dup2
                /* "contracts/Market.sol":24067:24091  maxAssets -= actualRepay */
              dup9
              tag_526
              jump	// in
            tag_731:
              swap7
              pop
                /* "contracts/Market.sol":23919:24740  if (block.timestamp < maturity) {... */
              jump(tag_732)
            tag_729:
                /* "contracts/Market.sol":24124:24140  uint256 position */
              0x00
                /* "contracts/Market.sol":24200:24230  fixedBorrowPositions[maturity] */
              dup3
              dup2
              mstore
                /* "contracts/Market.sol":24200:24220  fixedBorrowPositions */
              0xd0
                /* "contracts/Market.sol":24200:24230  fixedBorrowPositions[maturity] */
              0x20
              swap1
              dup2
              mstore
              0x40
              dup1
              dup4
              keccak256
              sub(shl(0xa0, 0x01), 0x01)
                /* "contracts/Market.sol":24200:24240  fixedBorrowPositions[maturity][borrower] */
              dup13
              and
              dup5
              mstore
              swap1
              swap2
              mstore
              dup2
              keccak256
                /* "contracts/Market.sol":24281:24286  p.fee */
              0x01
              dup2
              add
              sload
                /* "contracts/Market.sol":24267:24278  p.principal */
              dup2
              sload
                /* "contracts/Market.sol":24267:24286  p.principal + p.fee */
              tag_733
              swap2
                /* "contracts/Market.sol":24281:24286  p.fee */
              swap1
                /* "contracts/Market.sol":24267:24286  p.principal + p.fee */
              tag_496
              jump	// in
            tag_733:
                /* "contracts/Market.sol":24256:24286  position = p.principal + p.fee */
              swap2
              pop
                /* "contracts/Market.sol":24154:24301  {... */
              pop
                /* "contracts/Market.sol":24314:24326  uint256 debt */
              0x00
                /* "contracts/Market.sol":24340:24403  position.mulWadDown((block.timestamp - maturity) * penaltyRate) */
              tag_734
                /* "contracts/Market.sol":24391:24402  penaltyRate */
              sload(0xd6)
                /* "contracts/Market.sol":24379:24387  maturity */
              dup6
                /* "contracts/Market.sol":24361:24376  block.timestamp */
              timestamp
                /* "contracts/Market.sol":24361:24387  block.timestamp - maturity */
              tag_735
              swap2
              swap1
              tag_526
              jump	// in
            tag_735:
                /* "contracts/Market.sol":24360:24402  (block.timestamp - maturity) * penaltyRate */
              tag_736
              swap2
              swap1
              tag_528
              jump	// in
            tag_736:
                /* "contracts/Market.sol":24340:24348  position */
              dup4
              swap1
                /* "contracts/Market.sol":24340:24359  position.mulWadDown */
              tag_482
                /* "contracts/Market.sol":24340:24403  position.mulWadDown((block.timestamp - maturity) * penaltyRate) */
              jump	// in
            tag_734:
                /* "contracts/Market.sol":24329:24403  position + position.mulWadDown((block.timestamp - maturity) * penaltyRate) */
              tag_737
              swap1
                /* "contracts/Market.sol":24329:24337  position */
              dup4
                /* "contracts/Market.sol":24329:24403  position + position.mulWadDown((block.timestamp - maturity) * penaltyRate) */
              tag_496
              jump	// in
            tag_737:
                /* "contracts/Market.sol":24314:24403  uint256 debt = position + position.mulWadDown((block.timestamp - maturity) * penaltyRate) */
              swap1
              pop
                /* "contracts/Market.sol":24438:24447  maxAssets */
              dup9
                /* "contracts/Market.sol":24431:24435  debt */
              dup2
                /* "contracts/Market.sol":24431:24447  debt > maxAssets */
              gt
                /* "contracts/Market.sol":24431:24498  debt > maxAssets ? maxAssets.mulDivDown(position, debt) : maxAssets */
              tag_738
              jumpi
                /* "contracts/Market.sol":24489:24498  maxAssets */
              dup9
                /* "contracts/Market.sol":24431:24498  debt > maxAssets ? maxAssets.mulDivDown(position, debt) : maxAssets */
              jump(tag_740)
            tag_738:
                /* "contracts/Market.sol":24450:24486  maxAssets.mulDivDown(position, debt) */
              tag_740
                /* "contracts/Market.sol":24450:24459  maxAssets */
              dup10
                /* "contracts/Market.sol":24471:24479  position */
              dup4
                /* "contracts/Market.sol":24481:24485  debt */
              dup4
                /* "contracts/Market.sol":24450:24470  maxAssets.mulDivDown */
              tag_479
                /* "contracts/Market.sol":24450:24486  maxAssets.mulDivDown(position, debt) */
              jump	// in
            tag_740:
                /* "contracts/Market.sol":24417:24498  actualRepay = debt > maxAssets ? maxAssets.mulDivDown(position, debt) : maxAssets */
              swap3
              pop
                /* "contracts/Market.sol":24517:24528  actualRepay */
              dup3
                /* "contracts/Market.sol":24532:24533  0 */
              0x00
                /* "contracts/Market.sol":24517:24533  actualRepay == 0 */
              sub
                /* "contracts/Market.sol":24513:24728  if (actualRepay == 0) maxAssets = 0;... */
              tag_741
              jumpi
                /* "contracts/Market.sol":24547:24548  0 */
              0x00
                /* "contracts/Market.sol":24535:24548  maxAssets = 0 */
              swap9
              pop
                /* "contracts/Market.sol":24513:24728  if (actualRepay == 0) maxAssets = 0;... */
              jump(tag_742)
            tag_741:
                /* "contracts/Market.sol":24597:24673  noTransferRepayAtMaturity(maturity, actualRepay, maxAssets, borrower, false) */
              tag_743
                /* "contracts/Market.sol":24623:24631  maturity */
              dup5
                /* "contracts/Market.sol":24633:24644  actualRepay */
              dup5
                /* "contracts/Market.sol":24646:24655  maxAssets */
              dup12
                /* "contracts/Market.sol":24657:24665  borrower */
              dup14
                /* "contracts/Market.sol":24667:24672  false */
              0x00
                /* "contracts/Market.sol":24597:24622  noTransferRepayAtMaturity */
              tag_697
                /* "contracts/Market.sol":24597:24673  noTransferRepayAtMaturity(maturity, actualRepay, maxAssets, borrower, false) */
              jump	// in
            tag_743:
                /* "contracts/Market.sol":24583:24673  actualRepay = noTransferRepayAtMaturity(maturity, actualRepay, maxAssets, borrower, false) */
              swap3
              pop
                /* "contracts/Market.sol":24689:24713  maxAssets -= actualRepay */
              tag_744
                /* "contracts/Market.sol":24583:24673  actualRepay = noTransferRepayAtMaturity(maturity, actualRepay, maxAssets, borrower, false) */
              dup4
                /* "contracts/Market.sol":24689:24713  maxAssets -= actualRepay */
              dup11
              tag_526
              jump	// in
            tag_744:
              swap9
              pop
                /* "contracts/Market.sol":24513:24728  if (actualRepay == 0) maxAssets = 0;... */
            tag_742:
                /* "contracts/Market.sol":24110:24740  {... */
              pop
              pop
                /* "contracts/Market.sol":23919:24740  if (block.timestamp < maturity) {... */
            tag_732:
                /* "contracts/Market.sol":24751:24778  repaidAssets += actualRepay */
              tag_745
                /* "contracts/Market.sol":24767:24778  actualRepay */
              dup2
                /* "contracts/Market.sol":24751:24778  repaidAssets += actualRepay */
              dup7
              tag_496
              jump	// in
            tag_745:
              swap5
              pop
                /* "contracts/Market.sol":23876:24789  {... */
              pop
                /* "contracts/Market.sol":23845:24789  if (packedMaturities & 1 != 0) {... */
            tag_728:
                /* "contracts/Market.sol":24819:24820  1 */
              0x01
                /* "contracts/Market.sol":24798:24820  packedMaturities >>= 1 */
              swap2
              swap1
              swap2
              shr
              swap1
                /* "contracts/Market.sol":24830:24859  maturity += FixedLib.INTERVAL */
              tag_746
                /* "contracts/utils/FixedLib.sol":306:313  4 weeks */
              0x24ea00
                /* "contracts/Market.sol":24830:24859  maturity += FixedLib.INTERVAL */
              dup3
              tag_496
              jump	// in
            tag_746:
              swap1
              pop
                /* "contracts/Market.sol":23787:24868  while (packedMaturities != 0 && maxAssets != 0) {... */
              jump(tag_725)
            tag_726:
                /* "contracts/Market.sol":23614:24874  {... */
              pop
              pop
                /* "contracts/Market.sol":24896:24897  0 */
              0x00
                /* "contracts/Market.sol":24884:24893  maxAssets */
              dup5
                /* "contracts/Market.sol":24884:24897  maxAssets > 0 */
              gt
                /* "contracts/Market.sol":24884:24933  maxAssets > 0 && account.floatingBorrowShares > 0 */
              dup1
              iszero
              tag_747
              jumpi
              pop
                /* "contracts/Market.sol":24932:24933  0 */
              0x00
                /* "contracts/Market.sol":24901:24908  account */
              dup2
                /* "contracts/Market.sol":24901:24929  account.floatingBorrowShares */
              0x02
              add
              sload
                /* "contracts/Market.sol":24901:24933  account.floatingBorrowShares > 0 */
              gt
                /* "contracts/Market.sol":24884:24933  maxAssets > 0 && account.floatingBorrowShares > 0 */
            tag_747:
                /* "contracts/Market.sol":24880:25159  if (maxAssets > 0 && account.floatingBorrowShares > 0) {... */
              iszero
              tag_748
              jumpi
                /* "contracts/Market.sol":24943:24963  uint256 borrowShares */
              0x00
                /* "contracts/Market.sol":24966:24989  previewRepay(maxAssets) */
              tag_749
                /* "contracts/Market.sol":24979:24988  maxAssets */
              dup6
                /* "contracts/Market.sol":24966:24978  previewRepay */
              tag_394
                /* "contracts/Market.sol":24966:24989  previewRepay(maxAssets) */
              jump	// in
            tag_749:
                /* "contracts/Market.sol":24943:24989  uint256 borrowShares = previewRepay(maxAssets) */
              swap1
              pop
                /* "contracts/Market.sol":25001:25017  borrowShares > 0 */
              dup1
              iszero
                /* "contracts/Market.sol":24997:25153  if (borrowShares > 0) {... */
              tag_750
              jumpi
                /* "contracts/Market.sol":25030:25055  uint256 actualRepayAssets */
              0x00
                /* "contracts/Market.sol":25061:25101  noTransferRefund(borrowShares, borrower) */
              tag_751
                /* "contracts/Market.sol":25078:25090  borrowShares */
              dup3
                /* "contracts/Market.sol":25092:25100  borrower */
              dup9
                /* "contracts/Market.sol":25061:25077  noTransferRefund */
              tag_752
                /* "contracts/Market.sol":25061:25101  noTransferRefund(borrowShares, borrower) */
              jump	// in
            tag_751:
              pop
                /* "contracts/Market.sol":25029:25101  (uint256 actualRepayAssets, ) = noTransferRefund(borrowShares, borrower) */
              swap1
              pop
                /* "contracts/Market.sol":25111:25144  repaidAssets += actualRepayAssets */
              tag_753
                /* "contracts/Market.sol":25029:25101  (uint256 actualRepayAssets, ) = noTransferRefund(borrowShares, borrower) */
              dup2
                /* "contracts/Market.sol":25111:25144  repaidAssets += actualRepayAssets */
              dup6
              tag_496
              jump	// in
            tag_753:
              swap4
              pop
                /* "contracts/Market.sol":25019:25153  {... */
              pop
                /* "contracts/Market.sol":24997:25153  if (borrowShares > 0) {... */
            tag_750:
                /* "contracts/Market.sol":24935:25159  {... */
              pop
                /* "contracts/Market.sol":24880:25159  if (maxAssets > 0 && account.floatingBorrowShares > 0) {... */
            tag_748:
                /* "contracts/Market.sol":25238:25303  auditor.calculateSeize(this, seizeMarket, borrower, repaidAssets) */
              mload(0x40)
              shl(0xe0, 0x6e1b0031)
              dup2
              mstore
                /* "contracts/Market.sol":25261:25265  this */
              address
                /* "contracts/Market.sol":25238:25303  auditor.calculateSeize(this, seizeMarket, borrower, repaidAssets) */
              0x04
              dup3
              add
                /* "#utility.yul":15915:15949   */
              mstore
              sub(shl(0xa0, 0x01), 0x01)
                /* "#utility.yul":15985:16000   */
              dup5
              dup2
              and
                /* "#utility.yul":15965:15983   */
              0x24
              dup4
              add
                /* "#utility.yul":15958:16001   */
              mstore
                /* "#utility.yul":16037:16052   */
              dup7
              dup2
              and
                /* "#utility.yul":16017:16035   */
              0x44
              dup4
              add
                /* "#utility.yul":16010:16053   */
              mstore
                /* "#utility.yul":16069:16087   */
              0x64
              dup3
              add
                /* "#utility.yul":16062:16096   */
              dup5
              swap1
              mstore
                /* "contracts/Market.sol":25192:25213  uint256 lendersAssets */
              0x00
              swap2
              dup3
              swap2
                /* "contracts/Market.sol":25238:25245  auditor */
              immutable("0x2adb6ba13100982fae82a6c459fdc0b83ba757ca8251e42f5db6158bc4c7e480")
                /* "contracts/Market.sol":25238:25260  auditor.calculateSeize */
              and
              swap1
              0x6e1b0031
              swap1
                /* "#utility.yul":15849:15868   */
              0x84
              add
                /* "contracts/Market.sol":25238:25303  auditor.calculateSeize(this, seizeMarket, borrower, repaidAssets) */
              0x40
              dup1
              mload
              dup1
              dup4
              sub
              dup2
              dup7
              gas
              staticcall
              iszero
              dup1
              iszero
              tag_756
              jumpi
              returndatasize
              0x00
              dup1
              returndatacopy
              revert(0x00, returndatasize)
            tag_756:
              pop
              pop
              pop
              pop
              mload(0x40)
              returndatasize
              not(0x1f)
              0x1f
              dup3
              add
              and
              dup3
              add
              dup1
              0x40
              mstore
              pop
              dup2
              add
              swap1
              tag_757
              swap2
              swap1
              tag_758
              jump	// in
            tag_757:
                /* "contracts/Market.sol":25191:25303  (uint256 lendersAssets, uint256 seizeAssets) = auditor.calculateSeize(this, seizeMarket, borrower, repaidAssets) */
              swap2
              pop
              swap2
              pop
                /* "contracts/Market.sol":25332:25345  lendersAssets */
              dup2
                /* "contracts/Market.sol":25309:25328  earningsAccumulator */
              0xd5
              0x00
                /* "contracts/Market.sol":25309:25345  earningsAccumulator += lendersAssets */
              dup3
              dup3
              sload
              tag_759
              swap2
              swap1
              tag_496
              jump	// in
            tag_759:
              swap1
              swap2
              sstore
              pop
              pop
                /* "contracts/Market.sol":25388:25392  this */
              address
              sub(shl(0xa0, 0x01), 0x01)
                /* "contracts/Market.sol":25356:25393  address(seizeMarket) == address(this) */
              dup7
              and
              sub
                /* "contracts/Market.sol":25352:25564  if (address(seizeMarket) == address(this)) {... */
              tag_760
              jumpi
                /* "contracts/Market.sol":25403:25457  internalSeize(this, msg.sender, borrower, seizeAssets) */
              tag_761
                /* "contracts/Market.sol":25417:25421  this */
              address
                /* "contracts/Market.sol":25423:25433  msg.sender */
              caller
                /* "contracts/Market.sol":25435:25443  borrower */
              dup10
                /* "contracts/Market.sol":25445:25456  seizeAssets */
              dup5
                /* "contracts/Market.sol":25403:25416  internalSeize */
              tag_762
                /* "contracts/Market.sol":25403:25457  internalSeize(this, msg.sender, borrower, seizeAssets) */
              jump	// in
            tag_761:
                /* "contracts/Market.sol":25352:25564  if (address(seizeMarket) == address(this)) {... */
              jump(tag_769)
            tag_760:
                /* "contracts/Market.sol":25478:25530  seizeMarket.seize(msg.sender, borrower, seizeAssets) */
              mload(0x40)
              shl(0xe0, 0xb2a02ff1)
              dup2
              mstore
              sub(shl(0xa0, 0x01), 0x01)
                /* "contracts/Market.sol":25478:25495  seizeMarket.seize */
              dup7
              and
              swap1
              0xb2a02ff1
              swap1
                /* "contracts/Market.sol":25478:25530  seizeMarket.seize(msg.sender, borrower, seizeAssets) */
              tag_764
              swap1
                /* "contracts/Market.sol":25496:25506  msg.sender */
              caller
              swap1
                /* "contracts/Market.sol":25508:25516  borrower */
              dup12
              swap1
                /* "contracts/Market.sol":25518:25529  seizeAssets */
              dup7
              swap1
                /* "contracts/Market.sol":25478:25530  seizeMarket.seize(msg.sender, borrower, seizeAssets) */
              0x04
              add
              tag_621
              jump	// in
            tag_764:
              0x00
              mload(0x40)
              dup1
              dup4
              sub
              dup2
              0x00
              dup8
              dup1
              extcodesize
              iszero
              dup1
              iszero
              tag_766
              jumpi
              0x00
              dup1
              revert
            tag_766:
              pop
              gas
              call
              iszero
              dup1
              iszero
              tag_768
              jumpi
              returndatasize
              0x00
              dup1
              returndatacopy
              revert(0x00, returndatasize)
            tag_768:
              pop
              pop
              pop
              pop
                /* "contracts/Market.sol":25539:25557  emitMarketUpdate() */
              tag_769
                /* "contracts/Market.sol":25539:25555  emitMarketUpdate */
              tag_498
                /* "contracts/Market.sol":25539:25557  emitMarketUpdate() */
              jump	// in
            tag_769:
                /* "contracts/Market.sol":25575:25661  Liquidate(msg.sender, borrower, repaidAssets, lendersAssets, seizeMarket, seizeAssets) */
              0x40
              dup1
              mload
                /* "#utility.yul":7603:7628   */
              dup6
              dup2
              mstore
                /* "#utility.yul":7659:7661   */
              0x20
                /* "#utility.yul":7644:7662   */
              dup2
              add
                /* "#utility.yul":7637:7671   */
              dup5
              swap1
              mstore
                /* "#utility.yul":7687:7705   */
              swap1
              dup2
              add
                /* "#utility.yul":7680:7714   */
              dup3
              swap1
              mstore
              sub(shl(0xa0, 0x01), 0x01)
                /* "contracts/Market.sol":25575:25661  Liquidate(msg.sender, borrower, repaidAssets, lendersAssets, seizeMarket, seizeAssets) */
              dup1
              dup8
              and
              swap2
              swap1
              dup10
              and
              swap1
                /* "contracts/Market.sol":25585:25595  msg.sender */
              caller
              swap1
                /* "contracts/Market.sol":25575:25661  Liquidate(msg.sender, borrower, repaidAssets, lendersAssets, seizeMarket, seizeAssets) */
              0x67bb48f97d82192848c24158abf58ec614777328e19655e0a219652b773fd1db
              swap1
                /* "#utility.yul":7591:7593   */
              0x60
                /* "#utility.yul":7576:7594   */
              add
                /* "contracts/Market.sol":25575:25661  Liquidate(msg.sender, borrower, repaidAssets, lendersAssets, seizeMarket, seizeAssets) */
              mload(0x40)
              dup1
              swap2
              sub
              swap1
              log4
                /* "contracts/Market.sol":25668:25699  auditor.handleBadDebt(borrower) */
              mload(0x40)
              shl(0xe0, 0x11fd52e1)
              dup2
              mstore
              sub(shl(0xa0, 0x01), 0x01)
                /* "#utility.yul":5785:5817   */
              dup9
              dup2
              and
                /* "contracts/Market.sol":25668:25699  auditor.handleBadDebt(borrower) */
              0x04
              dup4
              add
                /* "#utility.yul":5767:5818   */
              mstore
                /* "contracts/Market.sol":25668:25675  auditor */
              immutable("0x2adb6ba13100982fae82a6c459fdc0b83ba757ca8251e42f5db6158bc4c7e480")
                /* "contracts/Market.sol":25668:25689  auditor.handleBadDebt */
              and
              swap1
              0x11fd52e1
              swap1
                /* "#utility.yul":5740:5758   */
              0x24
              add
                /* "contracts/Market.sol":25668:25699  auditor.handleBadDebt(borrower) */
              0x00
              mload(0x40)
              dup1
              dup4
              sub
              dup2
              0x00
              dup8
              dup1
              extcodesize
              iszero
              dup1
              iszero
              tag_772
              jumpi
              0x00
              dup1
              revert
            tag_772:
              pop
              gas
              call
              iszero
              dup1
              iszero
              tag_774
              jumpi
              returndatasize
              0x00
              dup1
              returndatacopy
              revert(0x00, returndatasize)
            tag_774:
              pop
              pop
              pop
              pop
                /* "contracts/Market.sol":25706:25785  asset.safeTransferFrom(msg.sender, address(this), repaidAssets + lendersAssets) */
              tag_775
                /* "contracts/Market.sol":25729:25739  msg.sender */
              caller
                /* "contracts/Market.sol":25749:25753  this */
              address
                /* "contracts/Market.sol":25771:25784  lendersAssets */
              dup5
                /* "contracts/Market.sol":25756:25768  repaidAssets */
              dup8
                /* "contracts/Market.sol":25756:25784  repaidAssets + lendersAssets */
              tag_776
              swap2
              swap1
              tag_496
              jump	// in
            tag_776:
              sub(shl(0xa0, 0x01), 0x01)
                /* "contracts/Market.sol":25706:25711  asset */
              immutable("0xa89f858efa0702d27b503f14d00e73a25115c8d5bdd25598ae4b376a61175436")
                /* "contracts/Market.sol":25706:25728  asset.safeTransferFrom */
              and
              swap3
                /* "contracts/Market.sol":25706:25785  asset.safeTransferFrom(msg.sender, address(this), repaidAssets + lendersAssets) */
              swap2
              swap1
                /* "contracts/Market.sol":25706:25728  asset.safeTransferFrom */
              tag_680
                /* "contracts/Market.sol":25706:25785  asset.safeTransferFrom(msg.sender, address(this), repaidAssets + lendersAssets) */
              jump	// in
            tag_775:
                /* "contracts/Market.sol":23371:25790  {... */
              pop
              pop
              pop
                /* "contracts/Market.sol":23225:25790  function liquidate(... */
              swap4
              swap3
              pop
              pop
              pop
              jump	// out
                /* "node_modules/solmate/src/mixins/ERC4626.sol":5362:5486  function previewRedeem(uint256 shares) public view virtual returns (uint256) {... */
            tag_260:
                /* "node_modules/solmate/src/mixins/ERC4626.sol":5430:5437  uint256 */
              0x00
                /* "node_modules/solmate/src/mixins/ERC4626.sol":5456:5479  convertToAssets(shares) */
              tag_487
                /* "node_modules/solmate/src/mixins/ERC4626.sol":5472:5478  shares */
              dup3
                /* "node_modules/solmate/src/mixins/ERC4626.sol":5456:5471  convertToAssets */
              tag_141
                /* "node_modules/solmate/src/mixins/ERC4626.sol":5456:5479  convertToAssets(shares) */
              jump	// in
                /* "contracts/Market.sol":46066:46271  function setDampSpeed(uint256 up, uint256 down) public onlyRole(DEFAULT_ADMIN_ROLE) {... */
            tag_273:
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":2369:2373  0x00 */
              0x00
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":2802:2818  _checkRole(role) */
              tag_781
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":2369:2373  0x00 */
              dup2
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":2802:2812  _checkRole */
              tag_491
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":2802:2818  _checkRole(role) */
              jump	// in
            tag_781:
                /* "contracts/Market.sol":46156:46185  updateFloatingAssetsAverage() */
              tag_783
                /* "contracts/Market.sol":46156:46183  updateFloatingAssetsAverage */
              tag_784
                /* "contracts/Market.sol":46156:46185  updateFloatingAssetsAverage() */
              jump	// in
            tag_783:
                /* "contracts/Market.sol":46191:46202  dampSpeedUp */
              0xd8
                /* "contracts/Market.sol":46191:46207  dampSpeedUp = up */
              dup4
              swap1
              sstore
                /* "contracts/Market.sol":46213:46226  dampSpeedDown */
              0xd9
                /* "contracts/Market.sol":46213:46233  dampSpeedDown = down */
              dup3
              swap1
              sstore
                /* "contracts/Market.sol":46244:46266  DampSpeedSet(up, down) */
              0x40
              dup1
              mload
                /* "#utility.yul":576:601   */
              dup5
              dup2
              mstore
                /* "#utility.yul":632:634   */
              0x20
                /* "#utility.yul":617:635   */
              dup2
              add
                /* "#utility.yul":610:644   */
              dup5
              swap1
              mstore
                /* "contracts/Market.sol":46244:46266  DampSpeedSet(up, down) */
              0xd09fee08a2915f9ac9a77197b21a3e275d34ec9542f569eb15b95ce8f7fe2808
              swap2
                /* "#utility.yul":549:567   */
              add
                /* "contracts/Market.sol":46244:46266  DampSpeedSet(up, down) */
              mload(0x40)
              dup1
              swap2
              sub
              swap1
              log1
                /* "contracts/Market.sol":46066:46271  function setDampSpeed(uint256 up, uint256 down) public onlyRole(DEFAULT_ADMIN_ROLE) {... */
              pop
              pop
              pop
              jump	// out
                /* "node_modules/solmate/src/mixins/ERC4626.sol":1537:2053  function deposit(uint256 assets, address receiver) public virtual returns (uint256 shares) {... */
            tag_293:
                /* "node_modules/solmate/src/mixins/ERC4626.sol":1612:1626  uint256 shares */
              0x00
                /* "node_modules/solmate/src/mixins/ERC4626.sol":1731:1753  previewDeposit(assets) */
              tag_787
                /* "node_modules/solmate/src/mixins/ERC4626.sol":1746:1752  assets */
              dup4
                /* "node_modules/solmate/src/mixins/ERC4626.sol":1731:1745  previewDeposit */
              tag_453
                /* "node_modules/solmate/src/mixins/ERC4626.sol":1731:1753  previewDeposit(assets) */
              jump	// in
            tag_787:
                /* "node_modules/solmate/src/mixins/ERC4626.sol":1722:1753  shares = previewDeposit(assets) */
              swap1
              pop
              dup1
                /* "node_modules/solmate/src/mixins/ERC4626.sol":1758:1759  0 */
              0x00
                /* "node_modules/solmate/src/mixins/ERC4626.sol":1721:1759  (shares = previewDeposit(assets)) != 0 */
              sub
                /* "node_modules/solmate/src/mixins/ERC4626.sol":1713:1775  require((shares = previewDeposit(assets)) != 0, "ZERO_SHARES") */
              tag_788
              jumpi
              0x00
              dup1
              revert
            tag_788:
                /* "node_modules/solmate/src/mixins/ERC4626.sol":1855:1912  asset.safeTransferFrom(msg.sender, address(this), assets) */
              tag_789
              sub(shl(0xa0, 0x01), 0x01)
                /* "node_modules/solmate/src/mixins/ERC4626.sol":1855:1860  asset */
              immutable("0xa89f858efa0702d27b503f14d00e73a25115c8d5bdd25598ae4b376a61175436")
                /* "node_modules/solmate/src/mixins/ERC4626.sol":1855:1877  asset.safeTransferFrom */
              and
                /* "node_modules/solmate/src/mixins/ERC4626.sol":1878:1888  msg.sender */
              caller
                /* "node_modules/solmate/src/mixins/ERC4626.sol":1898:1902  this */
              address
                /* "node_modules/solmate/src/mixins/ERC4626.sol":1905:1911  assets */
              dup7
                /* "node_modules/solmate/src/mixins/ERC4626.sol":1855:1877  asset.safeTransferFrom */
              tag_680
                /* "node_modules/solmate/src/mixins/ERC4626.sol":1855:1912  asset.safeTransferFrom(msg.sender, address(this), assets) */
              jump	// in
            tag_789:
                /* "node_modules/solmate/src/mixins/ERC4626.sol":1923:1946  _mint(receiver, shares) */
              tag_790
                /* "node_modules/solmate/src/mixins/ERC4626.sol":1929:1937  receiver */
              dup3
                /* "node_modules/solmate/src/mixins/ERC4626.sol":1939:1945  shares */
              dup3
                /* "node_modules/solmate/src/mixins/ERC4626.sol":1923:1928  _mint */
              tag_791
                /* "node_modules/solmate/src/mixins/ERC4626.sol":1923:1946  _mint(receiver, shares) */
              jump	// in
            tag_790:
                /* "node_modules/solmate/src/mixins/ERC4626.sol":1962:2007  Deposit(msg.sender, receiver, assets, shares) */
              0x40
              dup1
              mload
                /* "#utility.yul":576:601   */
              dup5
              dup2
              mstore
                /* "#utility.yul":632:634   */
              0x20
                /* "#utility.yul":617:635   */
              dup2
              add
                /* "#utility.yul":610:644   */
              dup4
              swap1
              mstore
              sub(shl(0xa0, 0x01), 0x01)
                /* "node_modules/solmate/src/mixins/ERC4626.sol":1962:2007  Deposit(msg.sender, receiver, assets, shares) */
              dup5
              and
              swap2
                /* "node_modules/solmate/src/mixins/ERC4626.sol":1970:1980  msg.sender */
              caller
              swap2
                /* "node_modules/solmate/src/mixins/ERC4626.sol":1962:2007  Deposit(msg.sender, receiver, assets, shares) */
              0xdcbc1c05240f31ff3ad067ef1ee35ce4997762752e3a095284754544f4c709d7
              swap2
                /* "#utility.yul":549:567   */
              add
                /* "node_modules/solmate/src/mixins/ERC4626.sol":1962:2007  Deposit(msg.sender, receiver, assets, shares) */
              mload(0x40)
              dup1
              swap2
              sub
              swap1
              log3
                /* "node_modules/solmate/src/mixins/ERC4626.sol":2018:2046  afterDeposit(assets, shares) */
              tag_487
                /* "node_modules/solmate/src/mixins/ERC4626.sol":2031:2037  assets */
              dup4
                /* "node_modules/solmate/src/mixins/ERC4626.sol":2039:2045  shares */
              dup3
                /* "node_modules/solmate/src/mixins/ERC4626.sol":2018:2030  afterDeposit */
              tag_794
                /* "node_modules/solmate/src/mixins/ERC4626.sol":2018:2046  afterDeposit(assets, shares) */
              jump	// in
                /* "contracts/Market.sol":42394:42671  function previewBorrow(uint256 assets) public view returns (uint256) {... */
            tag_305:
                /* "contracts/Market.sol":42486:42511  totalFloatingBorrowShares */
              sload(0xdf)
                /* "contracts/Market.sol":42454:42461  uint256 */
              0x00
              swap1
                /* "contracts/Market.sol":42591:42602  supply == 0 */
              dup1
              iszero
                /* "contracts/Market.sol":42591:42666  supply == 0 ? assets : assets.mulDivUp(supply, totalFloatingBorrowAssets()) */
              tag_508
              jumpi
                /* "contracts/Market.sol":42614:42666  assets.mulDivUp(supply, totalFloatingBorrowAssets()) */
              tag_509
                /* "contracts/Market.sol":42630:42636  supply */
              dup2
                /* "contracts/Market.sol":42638:42665  totalFloatingBorrowAssets() */
              tag_517
                /* "contracts/Market.sol":42638:42663  totalFloatingBorrowAssets */
              tag_449
                /* "contracts/Market.sol":42638:42665  totalFloatingBorrowAssets() */
              jump	// in
                /* "contracts/Market.sol":8326:8627  function refund(... */
            tag_309:
                /* "contracts/Market.sol":8426:8440  uint256 assets */
              0x00
                /* "contracts/Market.sol":8442:8462  uint256 actualShares */
              dup1
                /* "node_modules/@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol":1482:1501  _requireNotPaused() */
              tag_801
                /* "node_modules/@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol":1482:1499  _requireNotPaused */
              tag_540
                /* "node_modules/@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol":1482:1501  _requireNotPaused() */
              jump	// in
            tag_801:
                /* "contracts/Market.sol":8495:8535  noTransferRefund(borrowShares, borrower) */
              tag_803
                /* "contracts/Market.sol":8512:8524  borrowShares */
              dup5
                /* "contracts/Market.sol":8526:8534  borrower */
              dup5
                /* "contracts/Market.sol":8495:8511  noTransferRefund */
              tag_752
                /* "contracts/Market.sol":8495:8535  noTransferRefund(borrowShares, borrower) */
              jump	// in
            tag_803:
                /* "contracts/Market.sol":8470:8535  (assets, actualShares) = noTransferRefund(borrowShares, borrower) */
              swap1
              swap3
              pop
              swap1
              pop
                /* "contracts/Market.sol":8541:8559  emitMarketUpdate() */
              tag_804
                /* "contracts/Market.sol":8541:8557  emitMarketUpdate */
              tag_498
                /* "contracts/Market.sol":8541:8559  emitMarketUpdate() */
              jump	// in
            tag_804:
                /* "contracts/Market.sol":8565:8622  asset.safeTransferFrom(msg.sender, address(this), assets) */
              tag_805
              sub(shl(0xa0, 0x01), 0x01)
                /* "contracts/Market.sol":8565:8570  asset */
              immutable("0xa89f858efa0702d27b503f14d00e73a25115c8d5bdd25598ae4b376a61175436")
                /* "contracts/Market.sol":8565:8587  asset.safeTransferFrom */
              and
                /* "contracts/Market.sol":8588:8598  msg.sender */
              caller
                /* "contracts/Market.sol":8608:8612  this */
              address
                /* "contracts/Market.sol":8615:8621  assets */
              dup6
                /* "contracts/Market.sol":8565:8587  asset.safeTransferFrom */
              tag_680
                /* "contracts/Market.sol":8565:8622  asset.safeTransferFrom(msg.sender, address(this), assets) */
              jump	// in
            tag_805:
                /* "contracts/Market.sol":8326:8627  function refund(... */
              swap3
              pop
              swap3
              swap1
              pop
              jump	// out
                /* "contracts/Market.sol":49198:49265  function pause() external onlyRole(PAUSER_ROLE) {... */
            tag_316:
                /* "contracts/Market.sol":1256:1280  keccak256("PAUSER_ROLE") */
              0x65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":2802:2818  _checkRole(role) */
              tag_807
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":2813:2817  role */
              dup2
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":2802:2812  _checkRole */
              tag_491
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":2802:2818  _checkRole(role) */
              jump	// in
            tag_807:
                /* "contracts/Market.sol":49252:49260  _pause() */
              tag_703
                /* "contracts/Market.sol":49252:49258  _pause */
              tag_810
                /* "contracts/Market.sol":49252:49260  _pause() */
              jump	// in
                /* "contracts/Market.sol":46936:47256  function setInterestRateModel(InterestRateModel interestRateModel_) public onlyRole(DEFAULT_ADMIN_ROLE) {... */
            tag_323:
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":2369:2373  0x00 */
              0x00
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":2802:2818  _checkRole(role) */
              tag_812
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":2369:2373  0x00 */
              dup2
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":2802:2812  _checkRole */
              tag_491
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":2802:2818  _checkRole(role) */
              jump	// in
            tag_812:
                /* "contracts/Market.sol":47058:47075  interestRateModel */
              and(sub(shl(0xa0, 0x01), 0x01), sload(0xdb))
                /* "contracts/Market.sol":47050:47090  address(interestRateModel) != address(0) */
              iszero
                /* "contracts/Market.sol":47046:47131  if (address(interestRateModel) != address(0)) depositToTreasury(updateFloatingDebt()) */
              tag_815
              jumpi
                /* "contracts/Market.sol":47092:47131  depositToTreasury(updateFloatingDebt()) */
              tag_815
                /* "contracts/Market.sol":47110:47130  updateFloatingDebt() */
              tag_569
                /* "contracts/Market.sol":47110:47128  updateFloatingDebt */
              tag_570
                /* "contracts/Market.sol":47110:47130  updateFloatingDebt() */
              jump	// in
                /* "contracts/Market.sol":47092:47131  depositToTreasury(updateFloatingDebt()) */
            tag_815:
                /* "contracts/Market.sol":47138:47155  interestRateModel */
              0xdb
                /* "contracts/Market.sol":47138:47176  interestRateModel = interestRateModel_ */
              dup1
              sload
              not(sub(shl(0xa0, 0x01), 0x01))
              and
              sub(shl(0xa0, 0x01), 0x01)
              dup5
              and
              or
              swap1
              sstore
                /* "contracts/Market.sol":47182:47200  emitMarketUpdate() */
              tag_817
                /* "contracts/Market.sol":47182:47198  emitMarketUpdate */
              tag_498
                /* "contracts/Market.sol":47182:47200  emitMarketUpdate() */
              jump	// in
            tag_817:
                /* "contracts/Market.sol":47211:47251  InterestRateModelSet(interestRateModel_) */
              mload(0x40)
              sub(shl(0xa0, 0x01), 0x01)
              dup4
              and
              swap1
              0x7902cd1307c545e3f5782172612372bf997a93698917ced12b2f83d86e347d0c
              swap1
              0x00
              swap1
              log2
                /* "contracts/Market.sol":46936:47256  function setInterestRateModel(InterestRateModel interestRateModel_) public onlyRole(DEFAULT_ADMIN_ROLE) {... */
              pop
              pop
              jump	// out
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":3203:3348  function hasRole(bytes32 role, address account) public view virtual override returns (bool) {... */
            tag_332:
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":3289:3293  bool */
              0x00
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":3312:3324  _roles[role] */
              swap2
              dup3
              mstore
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":3312:3318  _roles */
              0x65
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":3312:3324  _roles[role] */
              0x20
              swap1
              dup2
              mstore
              0x40
              dup1
              dup5
              keccak256
              sub(shl(0xa0, 0x01), 0x01)
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":3312:3341  _roles[role].members[account] */
              swap4
              swap1
              swap4
              and
              dup5
              mstore
              swap2
              swap1
              mstore
              swap1
              keccak256
              sload
              0xff
              and
              swap1
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":3203:3348  function hasRole(bytes32 role, address account) public view virtual override returns (bool) {... */
              jump	// out
                /* "contracts/Market.sol":26036:27739  function clearBadDebt(address borrower) external {... */
            tag_336:
                /* "contracts/Market.sol":26095:26105  msg.sender */
              caller
              sub(shl(0xa0, 0x01), 0x01)
                /* "contracts/Market.sol":26117:26124  auditor */
              immutable("0x2adb6ba13100982fae82a6c459fdc0b83ba757ca8251e42f5db6158bc4c7e480")
                /* "contracts/Market.sol":26095:26125  msg.sender != address(auditor) */
              and
              eq
                /* "contracts/Market.sol":26091:26146  if (msg.sender != address(auditor)) revert NotAuditor() */
              tag_820
              jumpi
                /* "contracts/Market.sol":26134:26146  NotAuditor() */
              mload(0x40)
              shl(0xe2, 0x17568c8f)
              dup2
              mstore
              0x04
              add
              mload(0x40)
              dup1
              swap2
              sub
              swap1
              revert
                /* "contracts/Market.sol":26091:26146  if (msg.sender != address(auditor)) revert NotAuditor() */
            tag_820:
                /* "contracts/Market.sol":26171:26198  accrueAccumulatedEarnings() */
              tag_821
                /* "contracts/Market.sol":26171:26196  accrueAccumulatedEarnings */
              tag_494
                /* "contracts/Market.sol":26171:26198  accrueAccumulatedEarnings() */
              jump	// in
            tag_821:
                /* "contracts/Market.sol":26153:26167  floatingAssets */
              0xdd
              0x00
                /* "contracts/Market.sol":26153:26198  floatingAssets += accrueAccumulatedEarnings() */
              dup3
              dup3
              sload
              tag_822
              swap2
              swap1
              tag_496
              jump	// in
            tag_822:
              swap1
              swap2
              sstore
              pop
              pop
              sub(shl(0xa0, 0x01), 0x01)
                /* "contracts/Market.sol":26230:26248  accounts[borrower] */
              dup2
              and
                /* "contracts/Market.sol":26204:26227  Account storage account */
              0x00
                /* "contracts/Market.sol":26230:26248  accounts[borrower] */
              swap1
              dup2
              mstore
                /* "contracts/Market.sol":26230:26238  accounts */
              0xd2
                /* "contracts/Market.sol":26230:26248  accounts[borrower] */
              0x20
              swap1
              dup2
              mstore
              0x40
              dup3
              keccak256
                /* "contracts/Market.sol":26276:26295  earningsAccumulator */
              sload(0xd5)
                /* "contracts/Market.sol":26358:26378  account.fixedBorrows */
              0x01
              dup3
              add
              sload
                /* "contracts/Market.sol":26230:26248  accounts[borrower] */
              swap2
              swap4
                /* "contracts/Market.sol":26276:26295  earningsAccumulator */
              swap1
              swap3
                /* "contracts/Market.sol":26204:26227  Account storage account */
              swap1
              swap2
                /* "contracts/Market.sol":26462:26484  packedMaturities >> 32 */
              swap1
              dup2
              swap1
              shr
              swap1
                /* "contracts/Market.sol":26423:26436  (1 << 32) - 1 */
              0xffffffff
                /* "contracts/Market.sol":26403:26437  packedMaturities & ((1 << 32) - 1) */
              and
                /* "contracts/Market.sol":26490:27385  while (packedMaturities != 0) {... */
            tag_823:
                /* "contracts/Market.sol":26497:26518  packedMaturities != 0 */
              dup2
              iszero
                /* "contracts/Market.sol":26490:27385  while (packedMaturities != 0) {... */
              tag_824
              jumpi
                /* "contracts/Market.sol":26551:26552  1 */
              0x01
                /* "contracts/Market.sol":26532:26552  packedMaturities & 1 */
              dup3
              and
                /* "contracts/Market.sol":26532:26557  packedMaturities & 1 != 0 */
              iszero
                /* "contracts/Market.sol":26528:27312  if (packedMaturities & 1 != 0) {... */
              tag_825
              jumpi
                /* "contracts/Market.sol":26569:26603  FixedLib.Position storage position */
              0x00
                /* "contracts/Market.sol":26606:26636  fixedBorrowPositions[maturity] */
              dup2
              dup2
              mstore
                /* "contracts/Market.sol":26606:26626  fixedBorrowPositions */
              0xd0
                /* "contracts/Market.sol":26606:26636  fixedBorrowPositions[maturity] */
              0x20
              swap1
              dup2
              mstore
              0x40
              dup1
              dup4
              keccak256
              sub(shl(0xa0, 0x01), 0x01)
                /* "contracts/Market.sol":26606:26646  fixedBorrowPositions[maturity][borrower] */
              dup11
              and
              dup5
              mstore
              swap1
              swap2
              mstore
              dup2
              keccak256
                /* "contracts/Market.sol":26695:26707  position.fee */
              0x01
              dup2
              add
              sload
                /* "contracts/Market.sol":26674:26692  position.principal */
              dup2
              sload
                /* "contracts/Market.sol":26606:26646  fixedBorrowPositions[maturity][borrower] */
              swap2
              swap3
                /* "contracts/Market.sol":26569:26603  FixedLib.Position storage position */
              swap2
                /* "contracts/Market.sol":26674:26707  position.principal + position.fee */
              tag_826
              swap2
                /* "contracts/Market.sol":26695:26707  position.fee */
              swap1
                /* "contracts/Market.sol":26674:26707  position.principal + position.fee */
              tag_496
              jump	// in
            tag_826:
                /* "contracts/Market.sol":26656:26707  uint256 badDebt = position.principal + position.fee */
              swap1
              pop
                /* "contracts/Market.sol":26736:26743  badDebt */
              dup1
                /* "contracts/Market.sol":26721:26732  accumulator */
              dup7
                /* "contracts/Market.sol":26721:26743  accumulator >= badDebt */
              lt
                /* "contracts/Market.sol":26717:27304  if (accumulator >= badDebt) {... */
              tag_827
              jumpi
                /* "contracts/Market.sol":26798:26815  rewardsController */
              and(sub(shl(0xa0, 0x01), 0x01), sload(0xe3))
                /* "contracts/Market.sol":26831:26874  address(memRewardsController) != address(0) */
              dup1
              iszero
                /* "contracts/Market.sol":26827:26919  if (address(memRewardsController) != address(0)) memRewardsController.handleBorrow(borrower) */
              tag_828
              jumpi
                /* "contracts/Market.sol":26876:26919  memRewardsController.handleBorrow(borrower) */
              mload(0x40)
              shl(0xe0, 0x6c912dad)
              dup2
              mstore
              sub(shl(0xa0, 0x01), 0x01)
                /* "#utility.yul":5785:5817   */
              dup11
              dup2
              and
                /* "contracts/Market.sol":26876:26919  memRewardsController.handleBorrow(borrower) */
              0x04
              dup4
              add
                /* "#utility.yul":5767:5818   */
              mstore
                /* "contracts/Market.sol":26876:26909  memRewardsController.handleBorrow */
              dup3
              and
              swap1
              0x6c912dad
              swap1
                /* "#utility.yul":5740:5758   */
              0x24
              add
                /* "contracts/Market.sol":26876:26919  memRewardsController.handleBorrow(borrower) */
              0x00
              mload(0x40)
              dup1
              dup4
              sub
              dup2
              0x00
              dup8
              dup1
              extcodesize
              iszero
              dup1
              iszero
              tag_830
              jumpi
              0x00
              dup1
              revert
            tag_830:
              pop
              gas
              call
              iszero
              dup1
              iszero
              tag_832
              jumpi
              returndatasize
              0x00
              dup1
              returndatacopy
              revert(0x00, returndatasize)
            tag_832:
              pop
              pop
              pop
              pop
                /* "contracts/Market.sol":26827:26919  if (address(memRewardsController) != address(0)) memRewardsController.handleBorrow(borrower) */
            tag_828:
                /* "contracts/Market.sol":26931:26953  accumulator -= badDebt */
              tag_833
                /* "contracts/Market.sol":26946:26953  badDebt */
              dup3
                /* "contracts/Market.sol":26931:26953  accumulator -= badDebt */
              dup9
              tag_526
              jump	// in
            tag_833:
              swap7
              pop
                /* "contracts/Market.sol":26965:26988  totalBadDebt += badDebt */
              tag_834
                /* "contracts/Market.sol":26981:26988  badDebt */
              dup3
                /* "contracts/Market.sol":26965:26988  totalBadDebt += badDebt */
              dup8
              tag_496
              jump	// in
            tag_834:
                /* "contracts/Market.sol":27053:27071  position.principal */
              dup4
              sload
              0x00
                /* "contracts/Market.sol":27026:27046  fixedPools[maturity] */
              dup7
              dup2
              mstore
                /* "contracts/Market.sol":27026:27036  fixedPools */
              0xd1
                /* "contracts/Market.sol":27026:27046  fixedPools[maturity] */
              0x20
              mstore
              0x40
              swap1
              keccak256
                /* "contracts/Market.sol":26965:26988  totalBadDebt += badDebt */
              swap2
              swap8
              pop
                /* "contracts/Market.sol":27026:27072  fixedPools[maturity].repay(position.principal) */
              tag_835
              swap2
                /* "contracts/Market.sol":27026:27046  fixedPools[maturity] */
              swap1
                /* "contracts/Market.sol":27026:27052  fixedPools[maturity].repay */
              tag_836
                /* "contracts/Market.sol":27026:27072  fixedPools[maturity].repay(position.principal) */
              jump	// in
            tag_835:
                /* "contracts/Market.sol":27000:27022  floatingBackupBorrowed */
              0xd3
              0x00
                /* "contracts/Market.sol":27000:27072  floatingBackupBorrowed -= fixedPools[maturity].repay(position.principal) */
              dup3
              dup3
              sload
              tag_837
              swap2
              swap1
              tag_526
              jump	// in
            tag_837:
              swap1
              swap2
              sstore
              pop
              pop
                /* "contracts/Market.sol":27091:27121  fixedBorrowPositions[maturity] */
              0x00
              dup5
              dup2
              mstore
                /* "contracts/Market.sol":27091:27111  fixedBorrowPositions */
              0xd0
                /* "contracts/Market.sol":27091:27121  fixedBorrowPositions[maturity] */
              0x20
              swap1
              dup2
              mstore
              0x40
              dup1
              dup4
              keccak256
              sub(shl(0xa0, 0x01), 0x01)
                /* "contracts/Market.sol":27091:27131  fixedBorrowPositions[maturity][borrower] */
              dup14
              and
              dup5
              mstore
              swap1
              swap2
              mstore
              dup2
              keccak256
                /* "contracts/Market.sol":27084:27131  delete fixedBorrowPositions[maturity][borrower] */
              dup2
              dup2
              sstore
              0x01
              swap1
              dup2
              add
              swap2
              swap1
              swap2
              sstore
                /* "contracts/Market.sol":27166:27186  account.fixedBorrows */
              dup9
              add
              sload
                /* "contracts/Market.sol":27166:27210  account.fixedBorrows.clearMaturity(maturity) */
              tag_838
              swap1
                /* "contracts/Market.sol":27112:27120  maturity */
              dup6
                /* "contracts/Market.sol":27166:27200  account.fixedBorrows.clearMaturity */
              tag_839
                /* "contracts/Market.sol":27166:27210  account.fixedBorrows.clearMaturity(maturity) */
              jump	// in
            tag_838:
                /* "contracts/Market.sol":27143:27163  account.fixedBorrows */
              0x01
              dup10
              add
                /* "contracts/Market.sol":27143:27210  account.fixedBorrows = account.fixedBorrows.clearMaturity(maturity) */
              sstore
                /* "contracts/Market.sol":27228:27293  RepayAtMaturity(maturity, msg.sender, borrower, badDebt, badDebt) */
              0x40
              dup1
              mload
                /* "#utility.yul":576:601   */
              dup4
              dup2
              mstore
                /* "#utility.yul":632:634   */
              0x20
                /* "#utility.yul":617:635   */
              dup2
              add
                /* "#utility.yul":610:644   */
              dup5
              swap1
              mstore
              sub(shl(0xa0, 0x01), 0x01)
                /* "contracts/Market.sol":27228:27293  RepayAtMaturity(maturity, msg.sender, borrower, badDebt, badDebt) */
              dup12
              and
              swap2
                /* "contracts/Market.sol":27254:27264  msg.sender */
              caller
              swap2
                /* "contracts/Market.sol":27244:27252  maturity */
              dup8
              swap2
                /* "contracts/Market.sol":27228:27293  RepayAtMaturity(maturity, msg.sender, borrower, badDebt, badDebt) */
              0xf17fce321dd9fb005136a80c0bfb3789e455b7a70be9eb8922f1ad20a80d1a33
              swap2
                /* "#utility.yul":549:567   */
              add
                /* "contracts/Market.sol":27228:27293  RepayAtMaturity(maturity, msg.sender, borrower, badDebt, badDebt) */
              mload(0x40)
              dup1
              swap2
              sub
              swap1
              log4
                /* "contracts/Market.sol":26745:27304  {... */
              pop
                /* "contracts/Market.sol":26717:27304  if (accumulator >= badDebt) {... */
            tag_827:
                /* "contracts/Market.sol":26559:27312  {... */
              pop
              pop
                /* "contracts/Market.sol":26528:27312  if (packedMaturities & 1 != 0) {... */
            tag_825:
                /* "contracts/Market.sol":27340:27341  1 */
              0x01
                /* "contracts/Market.sol":27319:27341  packedMaturities >>= 1 */
              swap2
              swap1
              swap2
              shr
              swap1
                /* "contracts/Market.sol":27349:27378  maturity += FixedLib.INTERVAL */
              tag_841
                /* "contracts/utils/FixedLib.sol":306:313  4 weeks */
              0x24ea00
                /* "contracts/Market.sol":27349:27378  maturity += FixedLib.INTERVAL */
              dup3
              tag_496
              jump	// in
            tag_841:
              swap1
              pop
                /* "contracts/Market.sol":26490:27385  while (packedMaturities != 0) {... */
              jump(tag_823)
            tag_824:
                /* "contracts/Market.sol":27425:27426  0 */
              0x00
                /* "contracts/Market.sol":27394:27401  account */
              dup6
                /* "contracts/Market.sol":27394:27422  account.floatingBorrowShares */
              0x02
              add
              sload
                /* "contracts/Market.sol":27394:27426  account.floatingBorrowShares > 0 */
              gt
                /* "contracts/Market.sol":27394:27475  account.floatingBorrowShares > 0 && (accumulator = previewRepay(accumulator)) > 0 */
              dup1
              iszero
              tag_842
              jumpi
              pop
                /* "contracts/Market.sol":27474:27475  0 */
              0x00
                /* "contracts/Market.sol":27445:27470  previewRepay(accumulator) */
              tag_843
                /* "contracts/Market.sol":27458:27469  accumulator */
              dup6
                /* "contracts/Market.sol":27445:27457  previewRepay */
              tag_394
                /* "contracts/Market.sol":27445:27470  previewRepay(accumulator) */
              jump	// in
            tag_843:
                /* "contracts/Market.sol":27431:27470  accumulator = previewRepay(accumulator) */
              swap5
              pop
              dup5
                /* "contracts/Market.sol":27430:27475  (accumulator = previewRepay(accumulator)) > 0 */
              gt
                /* "contracts/Market.sol":27394:27475  account.floatingBorrowShares > 0 && (accumulator = previewRepay(accumulator)) > 0 */
            tag_842:
                /* "contracts/Market.sol":27390:27584  if (account.floatingBorrowShares > 0 && (accumulator = previewRepay(accumulator)) > 0) {... */
              iszero
              tag_844
              jumpi
                /* "contracts/Market.sol":27486:27501  uint256 badDebt */
              0x00
                /* "contracts/Market.sol":27507:27546  noTransferRefund(accumulator, borrower) */
              tag_845
                /* "contracts/Market.sol":27524:27535  accumulator */
              dup6
                /* "contracts/Market.sol":27537:27545  borrower */
              dup9
                /* "contracts/Market.sol":27507:27523  noTransferRefund */
              tag_752
                /* "contracts/Market.sol":27507:27546  noTransferRefund(accumulator, borrower) */
              jump	// in
            tag_845:
              pop
                /* "contracts/Market.sol":27485:27546  (uint256 badDebt, ) = noTransferRefund(accumulator, borrower) */
              swap1
              pop
                /* "contracts/Market.sol":27554:27577  totalBadDebt += badDebt */
              tag_846
                /* "contracts/Market.sol":27485:27546  (uint256 badDebt, ) = noTransferRefund(accumulator, borrower) */
              dup2
                /* "contracts/Market.sol":27554:27577  totalBadDebt += badDebt */
              dup6
              tag_496
              jump	// in
            tag_846:
              swap4
              pop
                /* "contracts/Market.sol":27477:27584  {... */
              pop
                /* "contracts/Market.sol":27390:27584  if (account.floatingBorrowShares > 0 && (accumulator = previewRepay(accumulator)) > 0) {... */
            tag_844:
                /* "contracts/Market.sol":27593:27609  totalBadDebt > 0 */
              dup3
              iszero
                /* "contracts/Market.sol":27589:27711  if (totalBadDebt > 0) {... */
              tag_847
              jumpi
                /* "contracts/Market.sol":27642:27654  totalBadDebt */
              dup3
                /* "contracts/Market.sol":27619:27638  earningsAccumulator */
              0xd5
              0x00
                /* "contracts/Market.sol":27619:27654  earningsAccumulator -= totalBadDebt */
              dup3
              dup3
              sload
              tag_848
              swap2
              swap1
              tag_526
              jump	// in
            tag_848:
              swap1
              swap2
              sstore
              pop
              pop
                /* "contracts/Market.sol":27667:27704  SpreadBadDebt(borrower, totalBadDebt) */
              mload(0x40)
                /* "#utility.yul":801:826   */
              dup4
              dup2
              mstore
              sub(shl(0xa0, 0x01), 0x01)
                /* "contracts/Market.sol":27667:27704  SpreadBadDebt(borrower, totalBadDebt) */
              dup8
              and
              swap1
              0xde0e3a281fa92ee953a13c5bd96dcaf07b10c6b9f42c65d0e3752c855caa6e7c
              swap1
                /* "#utility.yul":789:791   */
              0x20
                /* "#utility.yul":774:792   */
              add
                /* "contracts/Market.sol":27667:27704  SpreadBadDebt(borrower, totalBadDebt) */
              mload(0x40)
              dup1
              swap2
              sub
              swap1
              log2
                /* "contracts/Market.sol":27589:27711  if (totalBadDebt > 0) {... */
            tag_847:
                /* "contracts/Market.sol":27716:27734  emitMarketUpdate() */
              tag_850
                /* "contracts/Market.sol":27716:27732  emitMarketUpdate */
              tag_498
                /* "contracts/Market.sol":27716:27734  emitMarketUpdate() */
              jump	// in
            tag_850:
                /* "contracts/Market.sol":26085:27739  {... */
              pop
              pop
              pop
              pop
              pop
                /* "contracts/Market.sol":26036:27739  function clearBadDebt(address borrower) external {... */
              pop
              jump	// out
                /* "node_modules/solmate/src/mixins/ERC4626.sol":2059:2526  function mint(uint256 shares, address receiver) public virtual returns (uint256 assets) {... */
            tag_339:
                /* "node_modules/solmate/src/mixins/ERC4626.sol":2131:2145  uint256 assets */
              0x00
                /* "node_modules/solmate/src/mixins/ERC4626.sol":2166:2185  previewMint(shares) */
              tag_852
                /* "node_modules/solmate/src/mixins/ERC4626.sol":2178:2184  shares */
              dup4
                /* "node_modules/solmate/src/mixins/ERC4626.sol":2166:2177  previewMint */
              tag_377
                /* "node_modules/solmate/src/mixins/ERC4626.sol":2166:2185  previewMint(shares) */
              jump	// in
            tag_852:
                /* "node_modules/solmate/src/mixins/ERC4626.sol":2157:2185  assets = previewMint(shares) */
              swap1
              pop
                /* "node_modules/solmate/src/mixins/ERC4626.sol":2328:2385  asset.safeTransferFrom(msg.sender, address(this), assets) */
              tag_853
              sub(shl(0xa0, 0x01), 0x01)
                /* "node_modules/solmate/src/mixins/ERC4626.sol":2328:2333  asset */
              immutable("0xa89f858efa0702d27b503f14d00e73a25115c8d5bdd25598ae4b376a61175436")
                /* "node_modules/solmate/src/mixins/ERC4626.sol":2328:2350  asset.safeTransferFrom */
              and
                /* "node_modules/solmate/src/mixins/ERC4626.sol":2351:2361  msg.sender */
              caller
                /* "node_modules/solmate/src/mixins/ERC4626.sol":2371:2375  this */
              address
                /* "node_modules/solmate/src/mixins/ERC4626.sol":2157:2185  assets = previewMint(shares) */
              dup5
                /* "node_modules/solmate/src/mixins/ERC4626.sol":2328:2350  asset.safeTransferFrom */
              tag_680
                /* "node_modules/solmate/src/mixins/ERC4626.sol":2328:2385  asset.safeTransferFrom(msg.sender, address(this), assets) */
              jump	// in
            tag_853:
                /* "node_modules/solmate/src/mixins/ERC4626.sol":2396:2419  _mint(receiver, shares) */
              tag_854
                /* "node_modules/solmate/src/mixins/ERC4626.sol":2402:2410  receiver */
              dup3
                /* "node_modules/solmate/src/mixins/ERC4626.sol":2412:2418  shares */
              dup5
                /* "node_modules/solmate/src/mixins/ERC4626.sol":2396:2401  _mint */
              tag_791
                /* "node_modules/solmate/src/mixins/ERC4626.sol":2396:2419  _mint(receiver, shares) */
              jump	// in
            tag_854:
                /* "node_modules/solmate/src/mixins/ERC4626.sol":2435:2480  Deposit(msg.sender, receiver, assets, shares) */
              0x40
              dup1
              mload
                /* "#utility.yul":576:601   */
              dup3
              dup2
              mstore
                /* "#utility.yul":632:634   */
              0x20
                /* "#utility.yul":617:635   */
              dup2
              add
                /* "#utility.yul":610:644   */
              dup6
              swap1
              mstore
              sub(shl(0xa0, 0x01), 0x01)
                /* "node_modules/solmate/src/mixins/ERC4626.sol":2435:2480  Deposit(msg.sender, receiver, assets, shares) */
              dup5
              and
              swap2
                /* "node_modules/solmate/src/mixins/ERC4626.sol":2443:2453  msg.sender */
              caller
              swap2
                /* "node_modules/solmate/src/mixins/ERC4626.sol":2435:2480  Deposit(msg.sender, receiver, assets, shares) */
              0xdcbc1c05240f31ff3ad067ef1ee35ce4997762752e3a095284754544f4c709d7
              swap2
                /* "#utility.yul":549:567   */
              add
                /* "node_modules/solmate/src/mixins/ERC4626.sol":2435:2480  Deposit(msg.sender, receiver, assets, shares) */
              mload(0x40)
              dup1
              swap2
              sub
              swap1
              log3
                /* "node_modules/solmate/src/mixins/ERC4626.sol":2491:2519  afterDeposit(assets, shares) */
              tag_487
                /* "node_modules/solmate/src/mixins/ERC4626.sol":2504:2510  assets */
              dup2
                /* "node_modules/solmate/src/mixins/ERC4626.sol":2512:2518  shares */
              dup5
                /* "node_modules/solmate/src/mixins/ERC4626.sol":2491:2503  afterDeposit */
              tag_794
                /* "node_modules/solmate/src/mixins/ERC4626.sol":2491:2519  afterDeposit(assets, shares) */
              jump	// in
                /* "node_modules/solmate/src/tokens/ERC20.sol":1043:1063  string public symbol */
            tag_342:
              0xca
              dup1
              sload
              tag_501
              swap1
              tag_502
              jump	// in
                /* "contracts/Market.sol":4774:5799  function initialize(... */
            tag_347:
                /* "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":3268:3287  bool isTopLevelCall */
              0x00
                /* "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":3291:3304  _initializing */
              sload
              0x0100
              swap1
              div
              0xff
              and
                /* "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":3290:3304  !_initializing */
              iszero
              dup1
                /* "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":3336:3370  isTopLevelCall && _initialized < 1 */
              dup1
              iszero
              tag_863
              jumpi
              pop
                /* "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":3354:3366  _initialized */
              sload(0x00)
                /* "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":3369:3370  1 */
              0x01
                /* "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":3354:3366  _initialized */
              0xff
              swap1
              swap2
              and
                /* "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":3354:3370  _initialized < 1 */
              lt
                /* "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":3336:3370  isTopLevelCall && _initialized < 1 */
            tag_863:
                /* "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":3335:3443  (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1) */
              dup1
              tag_867
              jumpi
              pop
                /* "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":3415:3419  this */
              address
                /* "node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol":1476:1495  account.code.length */
              extcodesize
                /* "node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol":1476:1499  account.code.length > 0 */
              iszero
              dup1
              iszero
                /* "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":3376:3442  !AddressUpgradeable.isContract(address(this)) && _initialized == 1 */
              tag_867
              jumpi
              pop
                /* "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":3425:3437  _initialized */
              and(0xff, sload(0x00))
              0x01
                /* "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":3425:3442  _initialized == 1 */
              eq
                /* "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":3376:3442  !AddressUpgradeable.isContract(address(this)) && _initialized == 1 */
            tag_867:
                /* "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":3314:3515  require(... */
              tag_868
              jumpi
              0x00
              dup1
              revert
            tag_868:
                /* "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":3525:3537  _initialized */
              0x00
                /* "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":3525:3541  _initialized = 1 */
              dup1
              sload
              not(0xff)
              and
                /* "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":3540:3541  1 */
              0x01
                /* "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":3525:3541  _initialized = 1 */
              or
              swap1
              sstore
                /* "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":3551:3616  if (isTopLevelCall) {... */
              dup1
              iszero
              tag_869
              jumpi
                /* "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":3585:3598  _initializing */
              0x00
                /* "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":3585:3605  _initializing = true */
              dup1
              sload
              not(0xff00)
              and
              0x0100
              or
              swap1
              sstore
                /* "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":3551:3616  if (isTopLevelCall) {... */
            tag_869:
                /* "contracts/Market.sol":5076:5098  __AccessControl_init() */
              tag_871
                /* "contracts/Market.sol":5076:5096  __AccessControl_init */
              tag_872
                /* "contracts/Market.sol":5076:5098  __AccessControl_init() */
              jump	// in
            tag_871:
                /* "contracts/Market.sol":5104:5121  __Pausable_init() */
              tag_873
                /* "contracts/Market.sol":5104:5119  __Pausable_init */
              tag_874
                /* "contracts/Market.sol":5104:5121  __Pausable_init() */
              jump	// in
            tag_873:
                /* "contracts/Market.sol":5128:5153  string memory assetSymbol */
              0x00
                /* "contracts/Market.sol":5156:5161  asset */
              immutable("0xa89f858efa0702d27b503f14d00e73a25115c8d5bdd25598ae4b376a61175436")
              sub(shl(0xa0, 0x01), 0x01)
                /* "contracts/Market.sol":5156:5168  asset.symbol */
              and
              0x95d89b41
                /* "contracts/Market.sol":5156:5170  asset.symbol() */
              mload(0x40)
              dup2
              0xffffffff
              and
              0xe0
              shl
              dup2
              mstore
              0x04
              add
              0x00
              mload(0x40)
              dup1
              dup4
              sub
              dup2
              dup7
              gas
              staticcall
              iszero
              dup1
              iszero
              tag_876
              jumpi
              returndatasize
              0x00
              dup1
              returndatacopy
              revert(0x00, returndatasize)
            tag_876:
              pop
              pop
              pop
              pop
              mload(0x40)
              returndatasize
              0x00
              dup3
              returndatacopy
              0x1f
              returndatasize
              swap1
              dup2
              add
              not(0x1f)
              and
              dup3
              add
              0x40
              mstore
              tag_877
              swap2
              swap1
              dup2
              add
              swap1
              tag_878
              jump	// in
            tag_877:
                /* "contracts/Market.sol":5128:5170  string memory assetSymbol = asset.symbol() */
              swap1
              pop
                /* "contracts/Market.sol":5209:5220  assetSymbol */
              dup1
                /* "contracts/Market.sol":5183:5221  string.concat("exactly ", assetSymbol) */
              add(0x20, mload(0x40))
              tag_879
              swap2
              swap1
              tag_880
              jump	// in
            tag_879:
              mload(0x40)
              0x20
              dup2
              dup4
              sub
              sub
              dup2
              mstore
              swap1
              0x40
              mstore
                /* "contracts/Market.sol":5176:5180  name */
              0xc9
                /* "contracts/Market.sol":5176:5221  name = string.concat("exactly ", assetSymbol) */
              swap1
              dup2
              tag_881
              swap2
              swap1
              tag_882
              jump	// in
            tag_881:
              pop
                /* "contracts/Market.sol":5257:5268  assetSymbol */
              dup1
                /* "contracts/Market.sol":5236:5269  string.concat("exa", assetSymbol) */
              add(0x20, mload(0x40))
              tag_883
              swap2
              swap1
              tag_884
              jump	// in
            tag_883:
              mload(0x40)
              0x20
              dup2
              dup4
              sub
              sub
              dup2
              mstore
              swap1
              0x40
              mstore
                /* "contracts/Market.sol":5227:5233  symbol */
              0xca
                /* "contracts/Market.sol":5227:5269  symbol = string.concat("exa", assetSymbol) */
              swap1
              dup2
              tag_885
              swap2
              swap1
              tag_882
              jump	// in
            tag_885:
              pop
                /* "contracts/Market.sol":5275:5297  lastAccumulatorAccrual */
              0xda
                /* "contracts/Market.sol":5275:5323  lastAccumulatorAccrual = uint32(block.timestamp) */
              dup1
              sload
              not(0xffffffffffffffff00)
                /* "contracts/Market.sol":5329:5377  lastFloatingDebtUpdate = uint32(block.timestamp) */
              and
                /* "contracts/Market.sol":5275:5323  lastAccumulatorAccrual = uint32(block.timestamp) */
              0x0100
                /* "contracts/Market.sol":5307:5322  block.timestamp */
              timestamp
                /* "contracts/Market.sol":5275:5323  lastAccumulatorAccrual = uint32(block.timestamp) */
              0xffffffff
              and
              swap1
              dup2
              mul
              not(0xffffffff0000000000)
                /* "contracts/Market.sol":5329:5377  lastFloatingDebtUpdate = uint32(block.timestamp) */
              and
              swap2
              swap1
              swap2
              or
              shl(0x28, 0x01)
              dup3
              mul
              or
              not(shl(0x48, 0xffffffff))
                /* "contracts/Market.sol":5383:5426  lastAverageUpdate = uint32(block.timestamp) */
              and
              shl(0x48, 0x01)
              swap2
              swap1
              swap2
              mul
              or
              swap1
              sstore
                /* "contracts/Market.sol":5433:5475  _grantRole(DEFAULT_ADMIN_ROLE, msg.sender) */
              tag_886
              0x00
                /* "contracts/Market.sol":5464:5474  msg.sender */
              caller
                /* "contracts/Market.sol":5433:5443  _grantRole */
              tag_654
                /* "contracts/Market.sol":5433:5475  _grantRole(DEFAULT_ADMIN_ROLE, msg.sender) */
              jump	// in
            tag_886:
                /* "contracts/Market.sol":5482:5516  setMaxFuturePools(maxFuturePools_) */
              tag_887
                /* "contracts/Market.sol":5500:5515  maxFuturePools_ */
              dup11
                /* "contracts/Market.sol":5482:5499  setMaxFuturePools */
              tag_196
                /* "contracts/Market.sol":5482:5516  setMaxFuturePools(maxFuturePools_) */
              jump	// in
            tag_887:
                /* "contracts/Market.sol":5522:5590  setEarningsAccumulatorSmoothFactor(earningsAccumulatorSmoothFactor_) */
              tag_888
                /* "contracts/Market.sol":5557:5589  earningsAccumulatorSmoothFactor_ */
              dup10
                /* "contracts/Market.sol":5522:5556  setEarningsAccumulatorSmoothFactor */
              tag_130
                /* "contracts/Market.sol":5522:5590  setEarningsAccumulatorSmoothFactor(earningsAccumulatorSmoothFactor_) */
              jump	// in
            tag_888:
                /* "contracts/Market.sol":5596:5636  setInterestRateModel(interestRateModel_) */
              tag_889
                /* "contracts/Market.sol":5617:5635  interestRateModel_ */
              dup9
                /* "contracts/Market.sol":5596:5616  setInterestRateModel */
              tag_323
                /* "contracts/Market.sol":5596:5636  setInterestRateModel(interestRateModel_) */
              jump	// in
            tag_889:
                /* "contracts/Market.sol":5642:5670  setPenaltyRate(penaltyRate_) */
              tag_890
                /* "contracts/Market.sol":5657:5669  penaltyRate_ */
              dup8
                /* "contracts/Market.sol":5642:5656  setPenaltyRate */
              tag_357
                /* "contracts/Market.sol":5642:5670  setPenaltyRate(penaltyRate_) */
              jump	// in
            tag_890:
                /* "contracts/Market.sol":5676:5708  setBackupFeeRate(backupFeeRate_) */
              tag_891
                /* "contracts/Market.sol":5693:5707  backupFeeRate_ */
              dup7
                /* "contracts/Market.sol":5676:5692  setBackupFeeRate */
              tag_244
                /* "contracts/Market.sol":5676:5708  setBackupFeeRate(backupFeeRate_) */
              jump	// in
            tag_891:
                /* "contracts/Market.sol":5714:5746  setReserveFactor(reserveFactor_) */
              tag_892
                /* "contracts/Market.sol":5731:5745  reserveFactor_ */
              dup6
                /* "contracts/Market.sol":5714:5730  setReserveFactor */
              tag_441
                /* "contracts/Market.sol":5714:5746  setReserveFactor(reserveFactor_) */
              jump	// in
            tag_892:
                /* "contracts/Market.sol":5752:5794  setDampSpeed(dampSpeedUp_, dampSpeedDown_) */
              tag_893
                /* "contracts/Market.sol":5765:5777  dampSpeedUp_ */
              dup5
                /* "contracts/Market.sol":5779:5793  dampSpeedDown_ */
              dup5
                /* "contracts/Market.sol":5752:5764  setDampSpeed */
              tag_273
                /* "contracts/Market.sol":5752:5794  setDampSpeed(dampSpeedUp_, dampSpeedDown_) */
              jump	// in
            tag_893:
                /* "contracts/Market.sol":5070:5799  {... */
              pop
                /* "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":3640:3654  isTopLevelCall */
              dup1
                /* "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":3636:3735  if (isTopLevelCall) {... */
              iszero
              tag_894
              jumpi
                /* "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":3686:3691  false */
              0x00
                /* "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":3670:3691  _initializing = false */
              dup1
              sload
              not(0xff00)
              and
              swap1
              sstore
                /* "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":3710:3724  Initialized(1) */
              mload(0x40)
              0x01
                /* "#utility.yul":3007:3043   */
              dup2
              mstore
                /* "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":3710:3724  Initialized(1) */
              0x7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498
              swap1
                /* "#utility.yul":2995:2997   */
              0x20
                /* "#utility.yul":2980:2998   */
              add
                /* "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":3710:3724  Initialized(1) */
              mload(0x40)
              dup1
              swap2
              sub
              swap1
              log1
                /* "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":3636:3735  if (isTopLevelCall) {... */
            tag_894:
                /* "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":3258:3741  {... */
              pop
                /* "contracts/Market.sol":4774:5799  function initialize(... */
              pop
              pop
              pop
              pop
              pop
              pop
              pop
              pop
              jump	// out
                /* "contracts/Market.sol":15540:18313  function withdrawAtMaturity(... */
            tag_350:
                /* "contracts/Market.sol":15712:15736  uint256 assetsDiscounted */
              0x00
                /* "contracts/Market.sol":15748:15762  positionAssets */
              dup5
                /* "contracts/Market.sol":15766:15767  0 */
              0x00
                /* "contracts/Market.sol":15748:15767  positionAssets == 0 */
              sub
                /* "contracts/Market.sol":15744:15790  if (positionAssets == 0) revert ZeroWithdraw() */
              tag_898
              jumpi
                /* "contracts/Market.sol":15776:15790  ZeroWithdraw() */
              mload(0x40)
              shl(0xe0, 0xb8cb6219)
              dup2
              mstore
              0x04
              add
              mload(0x40)
              dup1
              swap2
              sub
              swap1
              revert
                /* "contracts/Market.sol":15744:15790  if (positionAssets == 0) revert ZeroWithdraw() */
            tag_898:
                /* "contracts/Market.sol":15856:15870  maxFuturePools */
              sload(0xda)
                /* "contracts/Market.sol":15822:15917  FixedLib.checkPoolState(maturity, maxFuturePools, FixedLib.State.VALID, FixedLib.State.MATURED) */
              tag_899
              swap1
                /* "contracts/Market.sol":15846:15854  maturity */
              dup8
              swap1
                /* "contracts/Market.sol":15856:15870  maxFuturePools */
              0xff
              and
                /* "contracts/Market.sol":15872:15892  FixedLib.State.VALID */
              0x03
                /* "contracts/Market.sol":15894:15916  FixedLib.State.MATURED */
              0x02
                /* "contracts/Market.sol":15822:15845  FixedLib.checkPoolState */
              tag_544
                /* "contracts/Market.sol":15822:15917  FixedLib.checkPoolState(maturity, maxFuturePools, FixedLib.State.VALID, FixedLib.State.MATURED) */
              jump	// in
            tag_899:
                /* "contracts/Market.sol":15924:15950  FixedLib.Pool storage pool */
              0x00
                /* "contracts/Market.sol":15953:15973  fixedPools[maturity] */
              dup7
              dup2
              mstore
                /* "contracts/Market.sol":15953:15963  fixedPools */
              0xd1
                /* "contracts/Market.sol":15953:15973  fixedPools[maturity] */
              0x20
              mstore
              0x40
              dup2
              keccak256
              swap1
                /* "contracts/Market.sol":16005:16034  pool.accrueEarnings(maturity) */
              tag_900
                /* "contracts/Market.sol":15953:15973  fixedPools[maturity] */
              dup3
                /* "contracts/Market.sol":15964:15972  maturity */
              dup10
                /* "contracts/Market.sol":16005:16024  pool.accrueEarnings */
              tag_546
                /* "contracts/Market.sol":16005:16034  pool.accrueEarnings(maturity) */
              jump	// in
            tag_900:
                /* "contracts/Market.sol":16041:16074  FixedLib.Position memory position */
              0x00
                /* "contracts/Market.sol":16077:16108  fixedDepositPositions[maturity] */
              dup10
              dup2
              mstore
                /* "contracts/Market.sol":16077:16098  fixedDepositPositions */
              0xcf
                /* "contracts/Market.sol":16077:16108  fixedDepositPositions[maturity] */
              0x20
              swap1
              dup2
              mstore
              0x40
              dup1
              dup4
              keccak256
              sub(shl(0xa0, 0x01), 0x01)
                /* "contracts/Market.sol":16077:16115  fixedDepositPositions[maturity][owner] */
              dup10
              and
              dup5
              mstore
              dup3
              mstore
              swap2
              dup3
              swap1
              keccak256
                /* "contracts/Market.sol":16041:16115  FixedLib.Position memory position = fixedDepositPositions[maturity][owner] */
              dup3
              mload
              dup1
              dup5
              add
              swap1
              swap4
              mstore
              dup1
              sload
              dup1
              dup5
              mstore
              0x01
              swap1
              swap2
              add
              sload
              swap2
              dup4
              add
              dup3
              swap1
              mstore
                /* "contracts/Market.sol":15980:16034  uint256 backupEarnings = pool.accrueEarnings(maturity) */
              swap3
              swap4
              pop
                /* "contracts/Market.sol":16041:16115  FixedLib.Position memory position = fixedDepositPositions[maturity][owner] */
              swap1
              swap2
                /* "contracts/Market.sol":16143:16176  position.principal + position.fee */
              tag_901
              swap2
                /* "contracts/Market.sol":16041:16115  FixedLib.Position memory position = fixedDepositPositions[maturity][owner] */
              swap1
                /* "contracts/Market.sol":16143:16176  position.principal + position.fee */
              tag_496
              jump	// in
            tag_901:
                /* "contracts/Market.sol":16126:16140  positionAssets */
              dup9
                /* "contracts/Market.sol":16126:16176  positionAssets > position.principal + position.fee */
              gt
                /* "contracts/Market.sol":16122:16228  if (positionAssets > position.principal + position.fee) positionAssets = position.principal + position.fee */
              iszero
              tag_902
              jumpi
                /* "contracts/Market.sol":16216:16228  position.fee */
              0x20
              dup2
              add
              mload
                /* "contracts/Market.sol":16195:16213  position.principal */
              dup2
              mload
                /* "contracts/Market.sol":16195:16228  position.principal + position.fee */
              tag_903
              swap2
                /* "contracts/Market.sol":16216:16228  position.fee */
              swap1
                /* "contracts/Market.sol":16195:16228  position.principal + position.fee */
              tag_496
              jump	// in
            tag_903:
                /* "contracts/Market.sol":16178:16228  positionAssets = position.principal + position.fee */
              swap8
              pop
                /* "contracts/Market.sol":16122:16228  if (positionAssets > position.principal + position.fee) positionAssets = position.principal + position.fee */
            tag_902:
                /* "contracts/Market.sol":16362:16370  maturity */
              dup9
                /* "contracts/Market.sol":16344:16359  block.timestamp */
              timestamp
                /* "contracts/Market.sol":16344:16370  block.timestamp < maturity */
              lt
                /* "contracts/Market.sol":16340:16713  if (block.timestamp < maturity) {... */
              iszero
              tag_904
              jumpi
                /* "contracts/Market.sol":16451:16468  interestRateModel */
              sload(0xdb)
                /* "contracts/Market.sol":16548:16561  pool.borrowed */
              dup4
              sload
                /* "contracts/Market.sol":16451:16468  interestRateModel */
              0x01
                /* "contracts/Market.sol":16575:16588  pool.supplied */
              dup6
              add
              sload
                /* "contracts/Market.sol":16399:16652  positionAssets.divWadDown(... */
              tag_905
              swap3
              sub(shl(0xa0, 0x01), 0x01)
                /* "contracts/Market.sol":16451:16468  interestRateModel */
              and
              swap2
                /* "contracts/Market.sol":16451:16484  interestRateModel.fixedBorrowRate */
              0xdf635f3d
              swap2
                /* "contracts/Market.sol":16498:16506  maturity */
              dup14
              swap2
                /* "contracts/Market.sol":16520:16534  positionAssets */
              dup14
              swap2
                /* "contracts/Market.sol":16602:16632  previewFloatingAssetsAverage() */
              tag_906
                /* "contracts/Market.sol":16602:16630  previewFloatingAssetsAverage */
              tag_161
                /* "contracts/Market.sol":16602:16632  previewFloatingAssetsAverage() */
              jump	// in
            tag_906:
                /* "contracts/Market.sol":16451:16644  interestRateModel.fixedBorrowRate(... */
              mload(0x40)
              not(sub(shl(0xe0, 0x01), 0x01))
              0xe0
              dup9
              swap1
              shl
              and
              dup2
              mstore
              0x04
              dup2
              add
                /* "#utility.yul":13753:13778   */
              swap6
              swap1
              swap6
              mstore
                /* "#utility.yul":13794:13812   */
              0x24
              dup6
              add
                /* "#utility.yul":13787:13821   */
              swap4
              swap1
              swap4
              mstore
                /* "#utility.yul":13837:13855   */
              0x44
              dup5
              add
                /* "#utility.yul":13830:13864   */
              swap2
              swap1
              swap2
              mstore
                /* "#utility.yul":13880:13898   */
              0x64
              dup4
              add
                /* "#utility.yul":13873:13907   */
              mstore
                /* "#utility.yul":13923:13942   */
              0x84
              dup3
              add
                /* "#utility.yul":13916:13951   */
              mstore
                /* "#utility.yul":13725:13744   */
              0xa4
              add
                /* "contracts/Market.sol":16451:16644  interestRateModel.fixedBorrowRate(... */
              0x20
              mload(0x40)
              dup1
              dup4
              sub
              dup2
              dup7
              gas
              staticcall
              iszero
              dup1
              iszero
              tag_909
              jumpi
              returndatasize
              0x00
              dup1
              returndatacopy
              revert(0x00, returndatasize)
            tag_909:
              pop
              pop
              pop
              pop
              mload(0x40)
              returndatasize
              not(0x1f)
              0x1f
              dup3
              add
              and
              dup3
              add
              dup1
              0x40
              mstore
              pop
              dup2
              add
              swap1
              tag_910
              swap2
              swap1
              tag_554
              jump	// in
            tag_910:
                /* "contracts/Market.sol":16434:16644  1e18 +... */
              tag_911
              swap1
                /* "contracts/Market.sol":16434:16438  1e18 */
              0x0de0b6b3a7640000
                /* "contracts/Market.sol":16434:16644  1e18 +... */
              tag_496
              jump	// in
            tag_911:
                /* "contracts/Market.sol":16399:16413  positionAssets */
              dup10
              swap1
                /* "contracts/Market.sol":16399:16424  positionAssets.divWadDown */
              tag_912
                /* "contracts/Market.sol":16399:16652  positionAssets.divWadDown(... */
              jump	// in
            tag_905:
                /* "contracts/Market.sol":16380:16652  assetsDiscounted = positionAssets.divWadDown(... */
              swap4
              pop
                /* "contracts/Market.sol":16340:16713  if (block.timestamp < maturity) {... */
              jump(tag_913)
            tag_904:
                /* "contracts/Market.sol":16692:16706  positionAssets */
              dup8
                /* "contracts/Market.sol":16673:16706  assetsDiscounted = positionAssets */
              swap4
              pop
                /* "contracts/Market.sol":16340:16713  if (block.timestamp < maturity) {... */
            tag_913:
                /* "contracts/Market.sol":16742:16759  minAssetsRequired */
              dup7
                /* "contracts/Market.sol":16723:16739  assetsDiscounted */
              dup5
                /* "contracts/Market.sol":16723:16759  assetsDiscounted < minAssetsRequired */
              lt
                /* "contracts/Market.sol":16719:16782  if (assetsDiscounted < minAssetsRequired) revert Disagreement() */
              iszero
              tag_914
              jumpi
                /* "contracts/Market.sol":16768:16782  Disagreement() */
              mload(0x40)
              shl(0xe2, 0x2c1b6b41)
              dup2
              mstore
              0x04
              add
              mload(0x40)
              dup1
              swap2
              sub
              swap1
              revert
                /* "contracts/Market.sol":16719:16782  if (assetsDiscounted < minAssetsRequired) revert Disagreement() */
            tag_914:
                /* "contracts/Market.sol":16789:16828  spendAllowance(owner, assetsDiscounted) */
              tag_915
                /* "contracts/Market.sol":16804:16809  owner */
              dup6
                /* "contracts/Market.sol":16811:16827  assetsDiscounted */
              dup6
                /* "contracts/Market.sol":16789:16803  spendAllowance */
              tag_563
                /* "contracts/Market.sol":16789:16828  spendAllowance(owner, assetsDiscounted) */
              jump	// in
            tag_915:
                /* "contracts/Market.sol":16989:17040  FixedLib.Position(position.principal, position.fee) */
              0x40
              dup1
              mload
              dup1
              dup3
              add
              swap1
              swap2
              mstore
                /* "contracts/Market.sol":17007:17025  position.principal */
              dup2
              mload
                /* "contracts/Market.sol":16989:17040  FixedLib.Position(position.principal, position.fee) */
              dup2
              mstore
              0x20
                /* "contracts/Market.sol":17027:17039  position.fee */
              dup1
              dup4
              add
              mload
                /* "contracts/Market.sol":16989:17040  FixedLib.Position(position.principal, position.fee) */
              swap1
              dup3
              add
              mstore
                /* "contracts/Market.sol":16895:16928  uint256 newFloatingBackupBorrowed */
              0x00
              swap1
                /* "contracts/Market.sol":16964:17096  pool.withdraw(... */
              tag_916
              swap1
                /* "contracts/Market.sol":16989:17076  FixedLib.Position(position.principal, position.fee).scaleProportionally(positionAssets) */
              tag_917
              swap1
                /* "contracts/Market.sol":17061:17075  positionAssets */
              dup12
                /* "contracts/Market.sol":16989:17060  FixedLib.Position(position.principal, position.fee).scaleProportionally */
              tag_918
                /* "contracts/Market.sol":16989:17076  FixedLib.Position(position.principal, position.fee).scaleProportionally(positionAssets) */
              jump	// in
            tag_917:
                /* "contracts/Market.sol":16989:17086  FixedLib.Position(position.principal, position.fee).scaleProportionally(positionAssets).principal */
              mload
                /* "contracts/Market.sol":16964:16968  pool */
              dup6
              swap1
                /* "contracts/Market.sol":16964:16977  pool.withdraw */
              tag_919
                /* "contracts/Market.sol":16964:17096  pool.withdraw(... */
              jump	// in
            tag_916:
                /* "contracts/Market.sol":16931:16953  floatingBackupBorrowed */
              sload(0xd3)
                /* "contracts/Market.sol":16931:17096  floatingBackupBorrowed +... */
              tag_920
              swap2
              swap1
              tag_496
              jump	// in
            tag_920:
                /* "contracts/Market.sol":16895:17096  uint256 newFloatingBackupBorrowed = floatingBackupBorrowed +... */
              swap1
              pop
                /* "contracts/Market.sol":17151:17165  floatingAssets */
              sload(0xdd)
                /* "contracts/Market.sol":17136:17148  floatingDebt */
              sload(0xd4)
                /* "contracts/Market.sol":17108:17133  newFloatingBackupBorrowed */
              dup3
                /* "contracts/Market.sol":17108:17148  newFloatingBackupBorrowed + floatingDebt */
              tag_921
              swap2
              swap1
              tag_496
              jump	// in
            tag_921:
                /* "contracts/Market.sol":17108:17165  newFloatingBackupBorrowed + floatingDebt > floatingAssets */
              gt
                /* "contracts/Market.sol":17104:17205  if (newFloatingBackupBorrowed + floatingDebt > floatingAssets) revert InsufficientProtocolLiquidity() */
              iszero
              tag_922
              jumpi
                /* "contracts/Market.sol":17174:17205  InsufficientProtocolLiquidity() */
              mload(0x40)
              shl(0xe3, 0x2d41ad)
              dup2
              mstore
              0x04
              add
              mload(0x40)
              dup1
              swap2
              sub
              swap1
              revert
                /* "contracts/Market.sol":17104:17205  if (newFloatingBackupBorrowed + floatingDebt > floatingAssets) revert InsufficientProtocolLiquidity() */
            tag_922:
                /* "contracts/Market.sol":17213:17235  floatingBackupBorrowed */
              0xd3
                /* "contracts/Market.sol":17213:17263  floatingBackupBorrowed = newFloatingBackupBorrowed */
              sstore
                /* "contracts/Market.sol":17338:17364  uint256 unassignedEarnings */
              0x00
              dup1
                /* "contracts/Market.sol":17395:17508  pool.distributeEarnings(... */
              tag_923
                /* "contracts/Market.sol":17426:17478  chargeTreasuryFee(positionAssets - assetsDiscounted) */
              tag_924
                /* "contracts/Market.sol":17444:17477  positionAssets - assetsDiscounted */
              tag_925
                /* "contracts/Market.sol":17461:17477  assetsDiscounted */
              dup9
                /* "contracts/Market.sol":17444:17458  positionAssets */
              dup14
                /* "contracts/Market.sol":17444:17477  positionAssets - assetsDiscounted */
              tag_526
              jump	// in
            tag_925:
                /* "contracts/Market.sol":17426:17443  chargeTreasuryFee */
              tag_582
                /* "contracts/Market.sol":17426:17478  chargeTreasuryFee(positionAssets - assetsDiscounted) */
              jump	// in
            tag_924:
                /* "contracts/Market.sol":17395:17418  pool.distributeEarnings */
              0x40
              dup1
              mload
              0x80
              dup2
              add
              dup3
              mstore
              dup9
              sload
              dup2
              mstore
              0x01
              dup10
              add
              sload
              0x20
              dup3
              add
              mstore
              0x02
              dup10
              add
              sload
              swap2
              dup2
              add
              swap2
              swap1
              swap2
              mstore
              0x03
              dup9
              add
              sload
              0x60
              dup3
              add
              mstore
              swap1
                /* "contracts/Market.sol":17486:17502  assetsDiscounted */
              dup9
                /* "contracts/Market.sol":17395:17418  pool.distributeEarnings */
              tag_583
                /* "contracts/Market.sol":17395:17508  pool.distributeEarnings(... */
              jump	// in
            tag_923:
                /* "contracts/Market.sol":17337:17508  (uint256 unassignedEarnings, uint256 newBackupEarnings) = pool.distributeEarnings(... */
              swap2
              pop
              swap2
              pop
                /* "contracts/Market.sol":17541:17559  unassignedEarnings */
              dup2
                /* "contracts/Market.sol":17514:17518  pool */
              dup6
                /* "contracts/Market.sol":17514:17537  pool.unassignedEarnings */
              0x02
              add
              0x00
                /* "contracts/Market.sol":17514:17559  pool.unassignedEarnings += unassignedEarnings */
              dup3
              dup3
              sload
              tag_926
              swap2
              swap1
              tag_496
              jump	// in
            tag_926:
              swap1
              swap2
              sstore
              pop
                /* "contracts/Market.sol":17565:17600  collectFreeLunch(newBackupEarnings) */
              tag_927
              swap1
              pop
                /* "contracts/Market.sol":17582:17599  newBackupEarnings */
              dup2
                /* "contracts/Market.sol":17565:17581  collectFreeLunch */
              tag_587
                /* "contracts/Market.sol":17565:17600  collectFreeLunch(newBackupEarnings) */
              jump	// in
            tag_927:
                /* "contracts/Market.sol":17658:17703  position.reduceProportionally(positionAssets) */
              tag_928
                /* "contracts/Market.sol":17658:17666  position */
              dup4
                /* "contracts/Market.sol":17688:17702  positionAssets */
              dup12
                /* "contracts/Market.sol":17658:17687  position.reduceProportionally */
              tag_929
                /* "contracts/Market.sol":17658:17703  position.reduceProportionally(positionAssets) */
              jump	// in
            tag_928:
              pop
                /* "contracts/Market.sol":17734:17746  position.fee */
              0x20
              dup4
              add
              mload
                /* "contracts/Market.sol":17713:17731  position.principal */
              dup4
              mload
                /* "contracts/Market.sol":17713:17746  position.principal | position.fee */
              or
                /* "contracts/Market.sol":17713:17731  position.principal */
              0x00
                /* "contracts/Market.sol":17713:17751  position.principal | position.fee == 0 */
              sub
                /* "contracts/Market.sol":17709:18051  if (position.principal | position.fee == 0) {... */
              tag_930
              jumpi
                /* "contracts/Market.sol":17768:17799  fixedDepositPositions[maturity] */
              0x00
              dup12
              dup2
              mstore
                /* "contracts/Market.sol":17768:17789  fixedDepositPositions */
              0xcf
                /* "contracts/Market.sol":17768:17799  fixedDepositPositions[maturity] */
              0x20
              swap1
              dup2
              mstore
              0x40
              dup1
              dup4
              keccak256
              sub(shl(0xa0, 0x01), 0x01)
                /* "contracts/Market.sol":17768:17806  fixedDepositPositions[maturity][owner] */
              dup12
              and
              dup5
              mstore
              dup3
              mstore
              dup1
              dup4
              keccak256
                /* "contracts/Market.sol":17761:17806  delete fixedDepositPositions[maturity][owner] */
              dup4
              dup2
              sstore
              0x01
              add
              dup4
              swap1
              sstore
                /* "contracts/Market.sol":17840:17848  accounts */
              0xd2
                /* "contracts/Market.sol":17840:17855  accounts[owner] */
              swap1
              swap2
              mstore
              swap1
              keccak256
                /* "contracts/Market.sol":17887:17908  account.fixedDeposits */
              dup1
              sload
                /* "contracts/Market.sol":17887:17932  account.fixedDeposits.clearMaturity(maturity) */
              tag_931
              swap1
                /* "contracts/Market.sol":17790:17798  maturity */
              dup14
                /* "contracts/Market.sol":17887:17922  account.fixedDeposits.clearMaturity */
              tag_839
                /* "contracts/Market.sol":17887:17932  account.fixedDeposits.clearMaturity(maturity) */
              jump	// in
            tag_931:
                /* "contracts/Market.sol":17863:17932  account.fixedDeposits = account.fixedDeposits.clearMaturity(maturity) */
              swap1
              sstore
                /* "contracts/Market.sol":17709:18051  if (position.principal | position.fee == 0) {... */
              jump(tag_932)
            tag_930:
                /* "contracts/Market.sol":17995:18026  fixedDepositPositions[maturity] */
              0x00
              dup12
              dup2
              mstore
                /* "contracts/Market.sol":17995:18016  fixedDepositPositions */
              0xcf
                /* "contracts/Market.sol":17995:18026  fixedDepositPositions[maturity] */
              0x20
              swap1
              dup2
              mstore
              0x40
              dup1
              dup4
              keccak256
              sub(shl(0xa0, 0x01), 0x01)
                /* "contracts/Market.sol":17995:18033  fixedDepositPositions[maturity][owner] */
              dup12
              and
              dup5
              mstore
              dup3
              mstore
              swap1
              swap2
              keccak256
                /* "contracts/Market.sol":17995:18044  fixedDepositPositions[maturity][owner] = position */
              dup5
              mload
              dup2
              sstore
              swap1
              dup5
              add
              mload
              0x01
              swap1
              swap2
              add
              sstore
                /* "contracts/Market.sol":17709:18051  if (position.principal | position.fee == 0) {... */
            tag_932:
                /* "contracts/Market.sol":18075:18089  backupEarnings */
              dup4
                /* "contracts/Market.sol":18057:18071  floatingAssets */
              0xdd
              0x00
                /* "contracts/Market.sol":18057:18089  floatingAssets += backupEarnings */
              dup3
              dup3
              sload
              tag_933
              swap2
              swap1
              tag_496
              jump	// in
            tag_933:
              swap1
              swap2
              sstore
              pop
              pop
                /* "contracts/Market.sol":18101:18192  WithdrawAtMaturity(maturity, msg.sender, receiver, owner, positionAssets, assetsDiscounted) */
              0x40
              dup1
              mload
                /* "contracts/Market.sol":18130:18140  msg.sender */
              caller
                /* "#utility.yul":14558:14609   */
              dup2
              mstore
                /* "#utility.yul":14640:14642   */
              0x20
                /* "#utility.yul":14625:14643   */
              dup2
              add
                /* "#utility.yul":14618:14652   */
              dup13
              swap1
              mstore
                /* "#utility.yul":14668:14686   */
              swap1
              dup2
              add
                /* "#utility.yul":14661:14695   */
              dup8
              swap1
              mstore
              sub(shl(0xa0, 0x01), 0x01)
                /* "contracts/Market.sol":18101:18192  WithdrawAtMaturity(maturity, msg.sender, receiver, owner, positionAssets, assetsDiscounted) */
              dup1
              dup10
              and
              swap2
              swap1
              dup11
              and
              swap1
                /* "contracts/Market.sol":18120:18128  maturity */
              dup14
              swap1
                /* "contracts/Market.sol":18101:18192  WithdrawAtMaturity(maturity, msg.sender, receiver, owner, positionAssets, assetsDiscounted) */
              0xe57dbac0e7c42ad5f3b0fadb9c065565377cf771054fca70d35c96e01f9ec53c
              swap1
                /* "#utility.yul":14546:14548   */
              0x60
                /* "#utility.yul":14531:14549   */
              add
                /* "contracts/Market.sol":18101:18192  WithdrawAtMaturity(maturity, msg.sender, receiver, owner, positionAssets, assetsDiscounted) */
              mload(0x40)
              dup1
              swap2
              sub
              swap1
              log4
                /* "contracts/Market.sol":18198:18216  emitMarketUpdate() */
              tag_935
                /* "contracts/Market.sol":18198:18214  emitMarketUpdate */
              tag_498
                /* "contracts/Market.sol":18198:18216  emitMarketUpdate() */
              jump	// in
            tag_935:
                /* "contracts/Market.sol":18222:18255  emitFixedEarningsUpdate(maturity) */
              tag_936
                /* "contracts/Market.sol":18246:18254  maturity */
              dup12
                /* "contracts/Market.sol":18222:18245  emitFixedEarningsUpdate */
              tag_595
                /* "contracts/Market.sol":18222:18255  emitFixedEarningsUpdate(maturity) */
              jump	// in
            tag_936:
                /* "contracts/Market.sol":18262:18308  asset.safeTransfer(receiver, assetsDiscounted) */
              tag_937
              sub(shl(0xa0, 0x01), 0x01)
                /* "contracts/Market.sol":18262:18267  asset */
              immutable("0xa89f858efa0702d27b503f14d00e73a25115c8d5bdd25598ae4b376a61175436")
                /* "contracts/Market.sol":18262:18280  asset.safeTransfer */
              and
                /* "contracts/Market.sol":18281:18289  receiver */
              dup10
                /* "contracts/Market.sol":18291:18307  assetsDiscounted */
              dup9
                /* "contracts/Market.sol":18262:18280  asset.safeTransfer */
              tag_602
                /* "contracts/Market.sol":18262:18308  asset.safeTransfer(receiver, assetsDiscounted) */
              jump	// in
            tag_937:
                /* "contracts/Market.sol":15738:18313  {... */
              pop
              pop
              pop
              pop
              pop
                /* "contracts/Market.sol":15540:18313  function withdrawAtMaturity(... */
              swap6
              swap5
              pop
              pop
              pop
              pop
              pop
              jump	// out
                /* "contracts/Market.sol":48135:48293  function setPenaltyRate(uint256 penaltyRate_) public onlyRole(DEFAULT_ADMIN_ROLE) {... */
            tag_357:
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":2369:2373  0x00 */
              0x00
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":2802:2818  _checkRole(role) */
              tag_939
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":2369:2373  0x00 */
              dup2
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":2802:2812  _checkRole */
              tag_491
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":2802:2818  _checkRole(role) */
              jump	// in
            tag_939:
                /* "contracts/Market.sol":48223:48234  penaltyRate */
              0xd6
                /* "contracts/Market.sol":48223:48249  penaltyRate = penaltyRate_ */
              dup3
              swap1
              sstore
                /* "contracts/Market.sol":48260:48288  PenaltyRateSet(penaltyRate_) */
              mload(0x40)
                /* "#utility.yul":801:826   */
              dup3
              dup2
              mstore
                /* "contracts/Market.sol":48260:48288  PenaltyRateSet(penaltyRate_) */
              0xdb0ebfb2503f7c16b45577ebbf6c7d6b99b6e8aaf6652b156e36d5d6654a3a5e
              swap1
                /* "#utility.yul":789:791   */
              0x20
                /* "#utility.yul":774:792   */
              add
                /* "contracts/Market.sol":48260:48288  PenaltyRateSet(penaltyRate_) */
              tag_499
                /* "#utility.yul":655:832   */
              jump
                /* "contracts/Market.sol":33450:33865  function transfer(address to, uint256 shares) public override returns (bool) {... */
            tag_366:
                /* "contracts/Market.sol":33521:33525  bool */
              0x00
                /* "contracts/Market.sol":33533:33540  auditor */
              immutable("0x2adb6ba13100982fae82a6c459fdc0b83ba757ca8251e42f5db6158bc4c7e480")
              sub(shl(0xa0, 0x01), 0x01)
                /* "contracts/Market.sol":33533:33555  auditor.checkShortfall */
              and
              0xa3883db5
                /* "contracts/Market.sol":33556:33560  this */
              address
                /* "contracts/Market.sol":33562:33572  msg.sender */
              caller
                /* "contracts/Market.sol":33574:33595  previewRedeem(shares) */
              tag_943
                /* "contracts/Market.sol":33588:33594  shares */
              dup7
                /* "contracts/Market.sol":33574:33587  previewRedeem */
              tag_260
                /* "contracts/Market.sol":33574:33595  previewRedeem(shares) */
              jump	// in
            tag_943:
                /* "contracts/Market.sol":33533:33596  auditor.checkShortfall(this, msg.sender, previewRedeem(shares)) */
              mload(0x40)
              dup5
              0xffffffff
              and
              0xe0
              shl
              dup2
              mstore
              0x04
              add
              tag_944
              swap4
              swap3
              swap2
              swap1
              tag_621
              jump	// in
            tag_944:
              0x00
              mload(0x40)
              dup1
              dup4
              sub
              dup2
              dup7
              dup1
              extcodesize
              iszero
              dup1
              iszero
              tag_945
              jumpi
              0x00
              dup1
              revert
            tag_945:
              pop
              gas
              staticcall
              iszero
              dup1
              iszero
              tag_947
              jumpi
              returndatasize
              0x00
              dup1
              returndatacopy
              revert(0x00, returndatasize)
            tag_947:
              pop
              pop
                /* "contracts/Market.sol":33643:33660  rewardsController */
              and(sub(shl(0xa0, 0x01), 0x01), sload(0xe3))
              swap2
              pop
              pop
                /* "contracts/Market.sol":33670:33713  address(memRewardsController) != address(0) */
              dup1
              iszero
                /* "contracts/Market.sol":33666:33822  if (address(memRewardsController) != address(0)) {... */
              tag_948
              jumpi
                /* "contracts/Market.sol":33723:33769  memRewardsController.handleDeposit(msg.sender) */
              mload(0x40)
              shl(0xe0, 0x0149e46f)
              dup2
              mstore
                /* "contracts/Market.sol":33758:33768  msg.sender */
              caller
                /* "contracts/Market.sol":33723:33769  memRewardsController.handleDeposit(msg.sender) */
              0x04
              dup3
              add
                /* "#utility.yul":5767:5818   */
              mstore
              sub(shl(0xa0, 0x01), 0x01)
                /* "contracts/Market.sol":33723:33757  memRewardsController.handleDeposit */
              dup3
              and
              swap1
              0x0149e46f
              swap1
                /* "#utility.yul":5740:5758   */
              0x24
              add
                /* "contracts/Market.sol":33723:33769  memRewardsController.handleDeposit(msg.sender) */
              0x00
              mload(0x40)
              dup1
              dup4
              sub
              dup2
              0x00
              dup8
              dup1
              extcodesize
              iszero
              dup1
              iszero
              tag_950
              jumpi
              0x00
              dup1
              revert
            tag_950:
              pop
              gas
              call
              iszero
              dup1
              iszero
              tag_952
              jumpi
              returndatasize
              0x00
              dup1
              returndatacopy
              revert(0x00, returndatasize)
            tag_952:
              pop
              pop
                /* "contracts/Market.sol":33777:33815  memRewardsController.handleDeposit(to) */
              mload(0x40)
              shl(0xe0, 0x0149e46f)
              dup2
              mstore
              sub(shl(0xa0, 0x01), 0x01)
                /* "#utility.yul":5785:5817   */
              dup8
              dup2
              and
                /* "contracts/Market.sol":33777:33815  memRewardsController.handleDeposit(to) */
              0x04
              dup4
              add
                /* "#utility.yul":5767:5818   */
              mstore
                /* "contracts/Market.sol":33777:33811  memRewardsController.handleDeposit */
              dup5
              and
              swap3
              pop
              0x0149e46f
              swap2
              pop
                /* "#utility.yul":5740:5758   */
              0x24
              add
                /* "contracts/Market.sol":33777:33815  memRewardsController.handleDeposit(to) */
              0x00
              mload(0x40)
              dup1
              dup4
              sub
              dup2
              0x00
              dup8
              dup1
              extcodesize
              iszero
              dup1
              iszero
              tag_954
              jumpi
              0x00
              dup1
              revert
            tag_954:
              pop
              gas
              call
              iszero
              dup1
              iszero
              tag_956
              jumpi
              returndatasize
              0x00
              dup1
              returndatacopy
              revert(0x00, returndatasize)
            tag_956:
              pop
              pop
              pop
              pop
                /* "contracts/Market.sol":33666:33822  if (address(memRewardsController) != address(0)) {... */
            tag_948:
                /* "contracts/Market.sol":33834:33860  super.transfer(to, shares) */
              tag_699
                /* "contracts/Market.sol":33849:33851  to */
              dup5
                /* "contracts/Market.sol":33853:33859  shares */
              dup5
                /* "contracts/Market.sol":33834:33848  super.transfer */
              tag_958
                /* "contracts/Market.sol":33834:33860  super.transfer(to, shares) */
              jump	// in
                /* "contracts/Market.sol":7622:7939  function repay(... */
            tag_370:
                /* "contracts/Market.sol":7715:7734  uint256 actualRepay */
              0x00
                /* "contracts/Market.sol":7736:7756  uint256 borrowShares */
              dup1
                /* "node_modules/@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol":1482:1501  _requireNotPaused() */
              tag_960
                /* "node_modules/@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol":1482:1499  _requireNotPaused */
              tag_540
                /* "node_modules/@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol":1482:1501  _requireNotPaused() */
              jump	// in
            tag_960:
                /* "contracts/Market.sol":7794:7842  noTransferRefund(previewRepay(assets), borrower) */
              tag_803
                /* "contracts/Market.sol":7811:7831  previewRepay(assets) */
              tag_963
                /* "contracts/Market.sol":7824:7830  assets */
              dup6
                /* "contracts/Market.sol":7811:7823  previewRepay */
              tag_394
                /* "contracts/Market.sol":7811:7831  previewRepay(assets) */
              jump	// in
            tag_963:
                /* "contracts/Market.sol":7833:7841  borrower */
              dup5
                /* "contracts/Market.sol":7794:7810  noTransferRefund */
              tag_752
                /* "contracts/Market.sol":7794:7842  noTransferRefund(previewRepay(assets), borrower) */
              jump	// in
                /* "contracts/Market.sol":28295:28461  function seize(address liquidator, address borrower, uint256 assets) external whenNotPaused {... */
            tag_374:
                /* "node_modules/@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol":1482:1501  _requireNotPaused() */
              tag_967
                /* "node_modules/@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol":1482:1499  _requireNotPaused */
              tag_540
                /* "node_modules/@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol":1482:1501  _requireNotPaused() */
              jump	// in
            tag_967:
                /* "contracts/Market.sol":28393:28456  internalSeize(Market(msg.sender), liquidator, borrower, assets) */
              tag_653
                /* "contracts/Market.sol":28414:28424  msg.sender */
              caller
                /* "contracts/Market.sol":28427:28437  liquidator */
              dup5
                /* "contracts/Market.sol":28439:28447  borrower */
              dup5
                /* "contracts/Market.sol":28449:28455  assets */
              dup5
                /* "contracts/Market.sol":28393:28406  internalSeize */
              tag_762
                /* "contracts/Market.sol":28393:28456  internalSeize(Market(msg.sender), liquidator, borrower, assets) */
              jump	// in
                /* "node_modules/solmate/src/mixins/ERC4626.sol":4844:5095  function previewMint(uint256 shares) public view virtual returns (uint256) {... */
            tag_377:
                /* "node_modules/solmate/src/mixins/ERC4626.sol":4946:4957  totalSupply */
              sload(0xcb)
                /* "node_modules/solmate/src/mixins/ERC4626.sol":4910:4917  uint256 */
              0x00
              swap1
                /* "node_modules/solmate/src/mixins/ERC4626.sol":5027:5038  supply == 0 */
              dup1
              iszero
                /* "node_modules/solmate/src/mixins/ERC4626.sol":5027:5088  supply == 0 ? shares : shares.mulDivUp(totalAssets(), supply) */
              tag_508
              jumpi
                /* "node_modules/solmate/src/mixins/ERC4626.sol":5050:5088  shares.mulDivUp(totalAssets(), supply) */
              tag_509
                /* "node_modules/solmate/src/mixins/ERC4626.sol":5066:5079  totalAssets() */
              tag_713
                /* "node_modules/solmate/src/mixins/ERC4626.sol":5066:5077  totalAssets */
              tag_118
                /* "node_modules/solmate/src/mixins/ERC4626.sol":5066:5079  totalAssets() */
              jump	// in
                /* "contracts/Market.sol":31575:31975  function withdraw(uint256 assets, address receiver, address owner) public override returns (uint256 shares) {... */
            tag_382:
                /* "contracts/Market.sol":31689:31732  auditor.checkShortfall(this, owner, assets) */
              mload(0x40)
              shl(0xe0, 0xa3883db5)
              dup2
              mstore
                /* "contracts/Market.sol":31667:31681  uint256 shares */
              0x00
              swap1
              sub(shl(0xa0, 0x01), 0x01)
                /* "contracts/Market.sol":31689:31696  auditor */
              immutable("0x2adb6ba13100982fae82a6c459fdc0b83ba757ca8251e42f5db6158bc4c7e480")
                /* "contracts/Market.sol":31689:31711  auditor.checkShortfall */
              and
              swap1
              0xa3883db5
              swap1
                /* "contracts/Market.sol":31689:31732  auditor.checkShortfall(this, owner, assets) */
              tag_976
              swap1
                /* "contracts/Market.sol":31712:31716  this */
              address
              swap1
                /* "contracts/Market.sol":31718:31723  owner */
              dup7
              swap1
                /* "contracts/Market.sol":31725:31731  assets */
              dup10
              swap1
                /* "contracts/Market.sol":31689:31732  auditor.checkShortfall(this, owner, assets) */
              0x04
              add
              tag_621
              jump	// in
            tag_976:
              0x00
              mload(0x40)
              dup1
              dup4
              sub
              dup2
              dup7
              dup1
              extcodesize
              iszero
              dup1
              iszero
              tag_977
              jumpi
              0x00
              dup1
              revert
            tag_977:
              pop
              gas
              staticcall
              iszero
              dup1
              iszero
              tag_979
              jumpi
              returndatasize
              0x00
              dup1
              returndatacopy
              revert(0x00, returndatasize)
            tag_979:
              pop
              pop
                /* "contracts/Market.sol":31779:31796  rewardsController */
              and(sub(shl(0xa0, 0x01), 0x01), sload(0xe3))
              swap2
              pop
              pop
                /* "contracts/Market.sol":31806:31849  address(memRewardsController) != address(0) */
              dup1
              iszero
                /* "contracts/Market.sol":31802:31892  if (address(memRewardsController) != address(0)) memRewardsController.handleDeposit(owner) */
              tag_980
              jumpi
                /* "contracts/Market.sol":31851:31892  memRewardsController.handleDeposit(owner) */
              mload(0x40)
              shl(0xe0, 0x0149e46f)
              dup2
              mstore
              sub(shl(0xa0, 0x01), 0x01)
                /* "#utility.yul":5785:5817   */
              dup5
              dup2
              and
                /* "contracts/Market.sol":31851:31892  memRewardsController.handleDeposit(owner) */
              0x04
              dup4
              add
                /* "#utility.yul":5767:5818   */
              mstore
                /* "contracts/Market.sol":31851:31885  memRewardsController.handleDeposit */
              dup3
              and
              swap1
              0x0149e46f
              swap1
                /* "#utility.yul":5740:5758   */
              0x24
              add
                /* "contracts/Market.sol":31851:31892  memRewardsController.handleDeposit(owner) */
              0x00
              mload(0x40)
              dup1
              dup4
              sub
              dup2
              0x00
              dup8
              dup1
              extcodesize
              iszero
              dup1
              iszero
              tag_982
              jumpi
              0x00
              dup1
              revert
            tag_982:
              pop
              gas
              call
              iszero
              dup1
              iszero
              tag_984
              jumpi
              returndatasize
              0x00
              dup1
              returndatacopy
              revert(0x00, returndatasize)
            tag_984:
              pop
              pop
              pop
              pop
                /* "contracts/Market.sol":31802:31892  if (address(memRewardsController) != address(0)) memRewardsController.handleDeposit(owner) */
            tag_980:
                /* "contracts/Market.sol":31907:31946  super.withdraw(assets, receiver, owner) */
              tag_985
                /* "contracts/Market.sol":31922:31928  assets */
              dup6
                /* "contracts/Market.sol":31930:31938  receiver */
              dup6
                /* "contracts/Market.sol":31940:31945  owner */
              dup6
                /* "contracts/Market.sol":31907:31921  super.withdraw */
              tag_986
                /* "contracts/Market.sol":31907:31946  super.withdraw(assets, receiver, owner) */
              jump	// in
            tag_985:
                /* "contracts/Market.sol":31898:31946  shares = super.withdraw(assets, receiver, owner) */
              swap2
              pop
                /* "contracts/Market.sol":31952:31970  emitMarketUpdate() */
              tag_987
                /* "contracts/Market.sol":31952:31968  emitMarketUpdate */
              tag_498
                /* "contracts/Market.sol":31952:31970  emitMarketUpdate() */
              jump	// in
            tag_987:
                /* "contracts/Market.sol":31683:31975  {... */
              pop
                /* "contracts/Market.sol":31575:31975  function withdraw(uint256 assets, address receiver, address owner) public override returns (uint256 shares) {... */
              swap4
              swap3
              pop
              pop
              pop
              jump	// out
                /* "contracts/Market.sol":32415:32826  function redeem(uint256 shares, address receiver, address owner) public override returns (uint256 assets) {... */
            tag_386:
                /* "contracts/Market.sol":32505:32519  uint256 assets */
              0x00
                /* "contracts/Market.sol":32527:32534  auditor */
              immutable("0x2adb6ba13100982fae82a6c459fdc0b83ba757ca8251e42f5db6158bc4c7e480")
              sub(shl(0xa0, 0x01), 0x01)
                /* "contracts/Market.sol":32527:32549  auditor.checkShortfall */
              and
              0xa3883db5
                /* "contracts/Market.sol":32550:32554  this */
              address
                /* "contracts/Market.sol":32556:32561  owner */
              dup5
                /* "contracts/Market.sol":32563:32584  previewRedeem(shares) */
              tag_989
                /* "contracts/Market.sol":32577:32583  shares */
              dup9
                /* "contracts/Market.sol":32563:32576  previewRedeem */
              tag_260
                /* "contracts/Market.sol":32563:32584  previewRedeem(shares) */
              jump	// in
            tag_989:
                /* "contracts/Market.sol":32527:32585  auditor.checkShortfall(this, owner, previewRedeem(shares)) */
              mload(0x40)
              dup5
              0xffffffff
              and
              0xe0
              shl
              dup2
              mstore
              0x04
              add
              tag_990
              swap4
              swap3
              swap2
              swap1
              tag_621
              jump	// in
            tag_990:
              0x00
              mload(0x40)
              dup1
              dup4
              sub
              dup2
              dup7
              dup1
              extcodesize
              iszero
              dup1
              iszero
              tag_991
              jumpi
              0x00
              dup1
              revert
            tag_991:
              pop
              gas
              staticcall
              iszero
              dup1
              iszero
              tag_993
              jumpi
              returndatasize
              0x00
              dup1
              returndatacopy
              revert(0x00, returndatasize)
            tag_993:
              pop
              pop
                /* "contracts/Market.sol":32632:32649  rewardsController */
              and(sub(shl(0xa0, 0x01), 0x01), sload(0xe3))
              swap2
              pop
              pop
                /* "contracts/Market.sol":32659:32702  address(memRewardsController) != address(0) */
              dup1
              iszero
                /* "contracts/Market.sol":32655:32745  if (address(memRewardsController) != address(0)) memRewardsController.handleDeposit(owner) */
              tag_994
              jumpi
                /* "contracts/Market.sol":32704:32745  memRewardsController.handleDeposit(owner) */
              mload(0x40)
              shl(0xe0, 0x0149e46f)
              dup2
              mstore
              sub(shl(0xa0, 0x01), 0x01)
                /* "#utility.yul":5785:5817   */
              dup5
              dup2
              and
                /* "contracts/Market.sol":32704:32745  memRewardsController.handleDeposit(owner) */
              0x04
              dup4
              add
                /* "#utility.yul":5767:5818   */
              mstore
                /* "contracts/Market.sol":32704:32738  memRewardsController.handleDeposit */
              dup3
              and
              swap1
              0x0149e46f
              swap1
                /* "#utility.yul":5740:5758   */
              0x24
              add
                /* "contracts/Market.sol":32704:32745  memRewardsController.handleDeposit(owner) */
              0x00
              mload(0x40)
              dup1
              dup4
              sub
              dup2
              0x00
              dup8
              dup1
              extcodesize
              iszero
              dup1
              iszero
              tag_996
              jumpi
              0x00
              dup1
              revert
            tag_996:
              pop
              gas
              call
              iszero
              dup1
              iszero
              tag_998
              jumpi
              returndatasize
              0x00
              dup1
              returndatacopy
              revert(0x00, returndatasize)
            tag_998:
              pop
              pop
              pop
              pop
                /* "contracts/Market.sol":32655:32745  if (address(memRewardsController) != address(0)) memRewardsController.handleDeposit(owner) */
            tag_994:
                /* "contracts/Market.sol":32760:32797  super.redeem(shares, receiver, owner) */
              tag_985
                /* "contracts/Market.sol":32773:32779  shares */
              dup6
                /* "contracts/Market.sol":32781:32789  receiver */
              dup6
                /* "contracts/Market.sol":32791:32796  owner */
              dup6
                /* "contracts/Market.sol":32760:32772  super.redeem */
              tag_1000
                /* "contracts/Market.sol":32760:32797  super.redeem(shares, receiver, owner) */
              jump	// in
                /* "contracts/Market.sol":47416:47620  function setRewardsController(RewardsController rewardsController_) public onlyRole(DEFAULT_ADMIN_ROLE) {... */
            tag_391:
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":2369:2373  0x00 */
              0x00
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":2802:2818  _checkRole(role) */
              tag_1003
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":2369:2373  0x00 */
              dup2
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":2802:2812  _checkRole */
              tag_491
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":2802:2818  _checkRole(role) */
              jump	// in
            tag_1003:
                /* "contracts/Market.sol":47526:47543  rewardsController */
              0xe3
                /* "contracts/Market.sol":47526:47564  rewardsController = rewardsController_ */
              dup1
              sload
              not(sub(shl(0xa0, 0x01), 0x01))
              and
              sub(shl(0xa0, 0x01), 0x01)
              dup5
              and
              swap1
              dup2
              or
              swap1
              swap2
              sstore
                /* "contracts/Market.sol":47575:47615  RewardsControllerSet(rewardsController_) */
              mload(0x40)
              0xbe945f1688d0c44e4727dde3ee4f1f52c5263e6213e3d6321cf7804cbe33be3c
              swap1
              0x00
              swap1
              log2
                /* "contracts/Market.sol":47416:47620  function setRewardsController(RewardsController rewardsController_) public onlyRole(DEFAULT_ADMIN_ROLE) {... */
              pop
              pop
              jump	// out
                /* "contracts/Market.sol":42914:43192  function previewRepay(uint256 assets) public view returns (uint256) {... */
            tag_394:
                /* "contracts/Market.sol":43005:43030  totalFloatingBorrowShares */
              sload(0xdf)
                /* "contracts/Market.sol":42973:42980  uint256 */
              0x00
              swap1
                /* "contracts/Market.sol":43110:43121  supply == 0 */
              dup1
              iszero
                /* "contracts/Market.sol":43110:43187  supply == 0 ? assets : assets.mulDivDown(supply, totalFloatingBorrowAssets()) */
              tag_508
              jumpi
                /* "contracts/Market.sol":43133:43187  assets.mulDivDown(supply, totalFloatingBorrowAssets()) */
              tag_509
                /* "contracts/Market.sol":43151:43157  supply */
              dup2
                /* "contracts/Market.sol":43159:43186  totalFloatingBorrowAssets() */
              tag_1008
                /* "contracts/Market.sol":43159:43184  totalFloatingBorrowAssets */
              tag_449
                /* "contracts/Market.sol":43159:43186  totalFloatingBorrowAssets() */
              jump	// in
            tag_1008:
                /* "contracts/Market.sol":43133:43139  assets */
              dup6
              swap2
                /* "contracts/Market.sol":43133:43187  assets.mulDivDown(supply, totalFloatingBorrowAssets()) */
              swap1
                /* "contracts/Market.sol":43133:43150  assets.mulDivDown */
              tag_479
                /* "contracts/Market.sol":43133:43187  assets.mulDivDown(supply, totalFloatingBorrowAssets()) */
              jump	// in
                /* "node_modules/solmate/src/mixins/ERC4626.sol":4187:4444  function convertToShares(uint256 assets) public view virtual returns (uint256) {... */
            tag_402:
                /* "node_modules/solmate/src/mixins/ERC4626.sol":4293:4304  totalSupply */
              sload(0xcb)
                /* "node_modules/solmate/src/mixins/ERC4626.sol":4257:4264  uint256 */
              0x00
              swap1
                /* "node_modules/solmate/src/mixins/ERC4626.sol":4374:4385  supply == 0 */
              dup1
              iszero
                /* "node_modules/solmate/src/mixins/ERC4626.sol":4374:4437  supply == 0 ? assets : assets.mulDivDown(supply, totalAssets()) */
              tag_508
              jumpi
                /* "node_modules/solmate/src/mixins/ERC4626.sol":4397:4437  assets.mulDivDown(supply, totalAssets()) */
              tag_509
                /* "node_modules/solmate/src/mixins/ERC4626.sol":4415:4421  supply */
              dup2
                /* "node_modules/solmate/src/mixins/ERC4626.sol":4423:4436  totalAssets() */
              tag_1008
                /* "node_modules/solmate/src/mixins/ERC4626.sol":4423:4434  totalAssets */
              tag_118
                /* "node_modules/solmate/src/mixins/ERC4626.sol":4423:4436  totalAssets() */
              jump	// in
                /* "node_modules/solmate/src/mixins/ERC4626.sol":5908:6039  function maxWithdraw(address owner) public view virtual returns (uint256) {... */
            tag_410:
              sub(shl(0xa0, 0x01), 0x01)
                /* "node_modules/solmate/src/mixins/ERC4626.sol":6015:6031  balanceOf[owner] */
              dup2
              and
                /* "node_modules/solmate/src/mixins/ERC4626.sol":5973:5980  uint256 */
              0x00
                /* "node_modules/solmate/src/mixins/ERC4626.sol":6015:6031  balanceOf[owner] */
              swap1
              dup2
              mstore
                /* "node_modules/solmate/src/mixins/ERC4626.sol":6015:6024  balanceOf */
              0xcc
                /* "node_modules/solmate/src/mixins/ERC4626.sol":6015:6031  balanceOf[owner] */
              0x20
              mstore
              0x40
              dup2
              keccak256
              sload
                /* "node_modules/solmate/src/mixins/ERC4626.sol":5999:6032  convertToAssets(balanceOf[owner]) */
              tag_487
              swap1
                /* "node_modules/solmate/src/mixins/ERC4626.sol":5999:6014  convertToAssets */
              tag_141
                /* "node_modules/solmate/src/mixins/ERC4626.sol":5999:6032  convertToAssets(balanceOf[owner]) */
              jump	// in
                /* "node_modules/solmate/src/tokens/ERC20.sol":3825:5308  function permit(... */
            tag_419:
                /* "node_modules/solmate/src/tokens/ERC20.sol":4044:4059  block.timestamp */
              timestamp
                /* "node_modules/solmate/src/tokens/ERC20.sol":4032:4040  deadline */
              dup5
                /* "node_modules/solmate/src/tokens/ERC20.sol":4032:4059  deadline >= block.timestamp */
              lt
              iszero
                /* "node_modules/solmate/src/tokens/ERC20.sol":4024:4087  require(deadline >= block.timestamp, "PERMIT_DEADLINE_EXPIRED") */
              tag_1019
              jumpi
              0x00
              dup1
              revert
            tag_1019:
                /* "node_modules/solmate/src/tokens/ERC20.sol":4252:4276  address recoveredAddress */
              0x00
                /* "node_modules/solmate/src/tokens/ERC20.sol":4279:5084  ecrecover(... */
              0x01
                /* "node_modules/solmate/src/tokens/ERC20.sol":4415:4433  DOMAIN_SEPARATOR() */
              tag_1020
                /* "node_modules/solmate/src/tokens/ERC20.sol":4415:4431  DOMAIN_SEPARATOR */
              tag_216
                /* "node_modules/solmate/src/tokens/ERC20.sol":4415:4433  DOMAIN_SEPARATOR() */
              jump	// in
            tag_1020:
              sub(shl(0xa0, 0x01), 0x01)
                /* "node_modules/solmate/src/tokens/ERC20.sol":4860:4873  nonces[owner] */
              dup11
              dup2
              and
              0x00
              dup2
              dup2
              mstore
                /* "node_modules/solmate/src/tokens/ERC20.sol":4860:4866  nonces */
              0xce
                /* "node_modules/solmate/src/tokens/ERC20.sol":4860:4873  nonces[owner] */
              0x20
              swap1
              dup2
              mstore
              0x40
              swap2
              dup3
              swap1
              keccak256
                /* "node_modules/solmate/src/tokens/ERC20.sol":4860:4875  nonces[owner]++ */
              dup1
              sload
              0x01
              dup2
              add
              swap1
              swap2
              sstore
                /* "node_modules/solmate/src/tokens/ERC20.sol":4498:4947  abi.encode(... */
              dup3
              mload
                /* "node_modules/solmate/src/tokens/ERC20.sol":4542:4707  keccak256(... */
              0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9
                /* "node_modules/solmate/src/tokens/ERC20.sol":4498:4947  abi.encode(... */
              dup2
              dup5
              add
                /* "#utility.yul":21320:21345   */
              mstore
                /* "#utility.yul":21399:21417   */
              dup1
              dup5
              add
                /* "#utility.yul":21392:21435   */
              swap5
              swap1
              swap5
              mstore
                /* "#utility.yul":21471:21486   */
              swap4
              dup14
              and
                /* "#utility.yul":21451:21469   */
              0x60
              dup5
              add
                /* "#utility.yul":21444:21487   */
              mstore
                /* "#utility.yul":21503:21521   */
              0x80
              dup4
              add
                /* "#utility.yul":21496:21530   */
              dup13
              swap1
              mstore
                /* "#utility.yul":21546:21565   */
              0xa0
              dup4
              add
                /* "#utility.yul":21539:21574   */
              swap4
              swap1
              swap4
              mstore
                /* "#utility.yul":21590:21609   */
              0xc0
              dup1
              dup4
              add
                /* "#utility.yul":21583:21618   */
              dup12
              swap1
              mstore
                /* "node_modules/solmate/src/tokens/ERC20.sol":4498:4947  abi.encode(... */
              dup2
              mload
              dup1
              dup5
              sub
              swap1
              swap2
              add
              dup2
              mstore
                /* "#utility.yul":21292:21311   */
              0xe0
              dup4
              add
                /* "node_modules/solmate/src/tokens/ERC20.sol":4498:4947  abi.encode(... */
              swap1
              swap2
              mstore
                /* "node_modules/solmate/src/tokens/ERC20.sol":4459:4973  keccak256(... */
              dup1
              mload
              swap3
              add
              swap2
              swap1
              swap2
              keccak256
              shl(0xf0, 0x1901)
                /* "node_modules/solmate/src/tokens/ERC20.sol":4337:4995  abi.encodePacked(... */
              0x0100
              dup4
              add
                /* "#utility.yul":21887:21914   */
              mstore
                /* "#utility.yul":21930:21941   */
              0x0102
              dup3
              add
                /* "#utility.yul":21923:21950   */
              swap3
              swap1
              swap3
              mstore
                /* "#utility.yul":21966:21978   */
              0x0122
              dup2
              add
                /* "#utility.yul":21959:21987   */
              swap2
              swap1
              swap2
              mstore
                /* "#utility.yul":22003:22015   */
              0x0142
              add
                /* "node_modules/solmate/src/tokens/ERC20.sol":4337:4995  abi.encodePacked(... */
              0x40
              dup1
              mload
              not(0x1f)
              dup2
              dup5
              sub
              add
              dup2
              mstore
              dup3
              dup3
              mstore
                /* "node_modules/solmate/src/tokens/ERC20.sol":4306:5013  keccak256(... */
              dup1
              mload
                /* "node_modules/solmate/src/tokens/ERC20.sol":4337:4995  abi.encodePacked(... */
              0x20
                /* "node_modules/solmate/src/tokens/ERC20.sol":4306:5013  keccak256(... */
              swap2
              dup3
              add
              keccak256
                /* "node_modules/solmate/src/tokens/ERC20.sol":4279:5084  ecrecover(... */
              0x00
              dup5
              mstore
              swap1
              dup4
              add
              dup1
              dup4
              mstore
                /* "#utility.yul":22253:22278   */
              mstore
                /* "#utility.yul":22326:22330   */
              0xff
                /* "#utility.yul":22314:22331   */
              dup8
              and
                /* "#utility.yul":22294:22312   */
              swap1
              dup3
              add
                /* "#utility.yul":22287:22332   */
              mstore
                /* "#utility.yul":22348:22366   */
              0x60
              dup2
              add
                /* "#utility.yul":22341:22375   */
              dup6
              swap1
              mstore
                /* "#utility.yul":22391:22409   */
              0x80
              dup2
              add
                /* "#utility.yul":22384:22418   */
              dup5
              swap1
              mstore
                /* "#utility.yul":22225:22244   */
              0xa0
              add
                /* "node_modules/solmate/src/tokens/ERC20.sol":4279:5084  ecrecover(... */
              0x20
              mload(0x40)
              0x20
              dup2
              sub
              swap1
              dup1
              dup5
              sub
              swap1
              dup6
              gas
              staticcall
              iszero
              dup1
              iszero
              tag_1028
              jumpi
              returndatasize
              0x00
              dup1
              returndatacopy
              revert(0x00, returndatasize)
            tag_1028:
              pop
              pop
              mload(add(not(0x1f), mload(0x40)))
              swap2
              pop
              pop
              sub(shl(0xa0, 0x01), 0x01)
                /* "node_modules/solmate/src/tokens/ERC20.sol":5107:5137  recoveredAddress != address(0) */
              dup2
              and
              iszero
              dup1
              iszero
              swap1
                /* "node_modules/solmate/src/tokens/ERC20.sol":5107:5166  recoveredAddress != address(0) && recoveredAddress == owner */
              tag_1029
              jumpi
              pop
                /* "node_modules/solmate/src/tokens/ERC20.sol":5161:5166  owner */
              dup8
              sub(shl(0xa0, 0x01), 0x01)
                /* "node_modules/solmate/src/tokens/ERC20.sol":5141:5166  recoveredAddress == owner */
              and
                /* "node_modules/solmate/src/tokens/ERC20.sol":5141:5157  recoveredAddress */
              dup2
              sub(shl(0xa0, 0x01), 0x01)
                /* "node_modules/solmate/src/tokens/ERC20.sol":5141:5166  recoveredAddress == owner */
              and
              eq
                /* "node_modules/solmate/src/tokens/ERC20.sol":5107:5166  recoveredAddress != address(0) && recoveredAddress == owner */
            tag_1029:
                /* "node_modules/solmate/src/tokens/ERC20.sol":5099:5185  require(recoveredAddress != address(0) && recoveredAddress == owner, "INVALID_SIGNER") */
              tag_1030
              jumpi
              0x00
              dup1
              revert
            tag_1030:
              sub(shl(0xa0, 0x01), 0x01)
                /* "node_modules/solmate/src/tokens/ERC20.sol":5200:5227  allowance[recoveredAddress] */
              swap1
              dup2
              and
              0x00
              swap1
              dup2
              mstore
                /* "node_modules/solmate/src/tokens/ERC20.sol":5200:5209  allowance */
              0xcd
                /* "node_modules/solmate/src/tokens/ERC20.sol":5200:5227  allowance[recoveredAddress] */
              0x20
              swap1
              dup2
              mstore
              0x40
              dup1
              dup4
              keccak256
                /* "node_modules/solmate/src/tokens/ERC20.sol":5200:5236  allowance[recoveredAddress][spender] */
              dup11
              dup6
              and
              dup1
              dup6
              mstore
              swap1
              dup4
              mstore
              swap3
              dup2
              swap1
              keccak256
                /* "node_modules/solmate/src/tokens/ERC20.sol":5200:5244  allowance[recoveredAddress][spender] = value */
              dup10
              swap1
              sstore
                /* "node_modules/solmate/src/tokens/ERC20.sol":5270:5301  Approval(owner, spender, value) */
              mload
                /* "#utility.yul":801:826   */
              dup9
              dup2
              mstore
                /* "node_modules/solmate/src/tokens/ERC20.sol":5200:5236  allowance[recoveredAddress][spender] */
              swap2
              swap3
                /* "node_modules/solmate/src/tokens/ERC20.sol":5270:5301  Approval(owner, spender, value) */
              dup11
              and
              swap2
              0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925
              swap2
                /* "#utility.yul":774:792   */
              add
                /* "node_modules/solmate/src/tokens/ERC20.sol":5270:5301  Approval(owner, spender, value) */
              mload(0x40)
              dup1
              swap2
              sub
              swap1
              log3
                /* "node_modules/solmate/src/tokens/ERC20.sol":3825:5308  function permit(... */
              pop
              pop
              pop
              pop
              pop
              pop
              pop
              jump	// out
                /* "contracts/Market.sol":6148:7233  function borrow(... */
            tag_422:
                /* "contracts/Market.sol":6264:6284  uint256 borrowShares */
              0x00
                /* "node_modules/@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol":1482:1501  _requireNotPaused() */
              tag_1033
                /* "node_modules/@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol":1482:1499  _requireNotPaused */
              tag_540
                /* "node_modules/@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol":1482:1501  _requireNotPaused() */
              jump	// in
            tag_1033:
                /* "contracts/Market.sol":6292:6324  spendAllowance(borrower, assets) */
              tag_1035
                /* "contracts/Market.sol":6307:6315  borrower */
              dup3
                /* "contracts/Market.sol":6317:6323  assets */
              dup6
                /* "contracts/Market.sol":6292:6306  spendAllowance */
              tag_563
                /* "contracts/Market.sol":6292:6324  spendAllowance(borrower, assets) */
              jump	// in
            tag_1035:
                /* "contracts/Market.sol":6372:6389  rewardsController */
              and(sub(shl(0xa0, 0x01), 0x01), sload(0xe3))
                /* "contracts/Market.sol":6399:6442  address(memRewardsController) != address(0) */
              dup1
              iszero
                /* "contracts/Market.sol":6395:6487  if (address(memRewardsController) != address(0)) memRewardsController.handleBorrow(borrower) */
              tag_1036
              jumpi
                /* "contracts/Market.sol":6444:6487  memRewardsController.handleBorrow(borrower) */
              mload(0x40)
              shl(0xe0, 0x6c912dad)
              dup2
              mstore
              sub(shl(0xa0, 0x01), 0x01)
                /* "#utility.yul":5785:5817   */
              dup5
              dup2
              and
                /* "contracts/Market.sol":6444:6487  memRewardsController.handleBorrow(borrower) */
              0x04
              dup4
              add
                /* "#utility.yul":5767:5818   */
              mstore
                /* "contracts/Market.sol":6444:6477  memRewardsController.handleBorrow */
              dup3
              and
              swap1
              0x6c912dad
              swap1
                /* "#utility.yul":5740:5758   */
              0x24
              add
                /* "contracts/Market.sol":6444:6487  memRewardsController.handleBorrow(borrower) */
              0x00
              mload(0x40)
              dup1
              dup4
              sub
              dup2
              0x00
              dup8
              dup1
              extcodesize
              iszero
              dup1
              iszero
              tag_1038
              jumpi
              0x00
              dup1
              revert
            tag_1038:
              pop
              gas
              call
              iszero
              dup1
              iszero
              tag_1040
              jumpi
              returndatasize
              0x00
              dup1
              returndatacopy
              revert(0x00, returndatasize)
            tag_1040:
              pop
              pop
              pop
              pop
                /* "contracts/Market.sol":6395:6487  if (address(memRewardsController) != address(0)) memRewardsController.handleBorrow(borrower) */
            tag_1036:
                /* "contracts/Market.sol":6494:6533  depositToTreasury(updateFloatingDebt()) */
              tag_1041
                /* "contracts/Market.sol":6512:6532  updateFloatingDebt() */
              tag_569
                /* "contracts/Market.sol":6512:6530  updateFloatingDebt */
              tag_570
                /* "contracts/Market.sol":6512:6532  updateFloatingDebt() */
              jump	// in
                /* "contracts/Market.sol":6494:6533  depositToTreasury(updateFloatingDebt()) */
            tag_1041:
                /* "contracts/Market.sol":6555:6576  previewBorrow(assets) */
              tag_1043
                /* "contracts/Market.sol":6569:6575  assets */
              dup6
                /* "contracts/Market.sol":6555:6568  previewBorrow */
              tag_305
                /* "contracts/Market.sol":6555:6576  previewBorrow(assets) */
              jump	// in
            tag_1043:
                /* "contracts/Market.sol":6540:6576  borrowShares = previewBorrow(assets) */
              swap2
              pop
                /* "contracts/Market.sol":6583:6606  uint256 newFloatingDebt */
              0x00
                /* "contracts/Market.sol":6624:6630  assets */
              dup6
                /* "contracts/Market.sol":6609:6621  floatingDebt */
              sload(0xd4)
                /* "contracts/Market.sol":6609:6630  floatingDebt + assets */
              tag_1044
              swap2
              swap1
              tag_496
              jump	// in
            tag_1044:
                /* "contracts/Market.sol":6636:6648  floatingDebt */
              0xd4
                /* "contracts/Market.sol":6636:6666  floatingDebt = newFloatingDebt */
              dup2
              swap1
              sstore
                /* "contracts/Market.sol":6871:6884  reserveFactor */
              sload(0xdc)
                /* "contracts/Market.sol":6636:6666  floatingDebt = newFloatingDebt */
              swap1
              swap2
              pop
                /* "contracts/Market.sol":6838:6885  floatingAssets.mulWadDown(1e18 - reserveFactor) */
              tag_1045
              swap1
                /* "contracts/Market.sol":6864:6884  1e18 - reserveFactor */
              tag_573
              swap1
              shl(0x80, 0x01)
                /* "contracts/Market.sol":6871:6884  reserveFactor */
              swap1
              div
              sub(shl(0x80, 0x01), 0x01)
              and
                /* "contracts/Market.sol":6864:6868  1e18 */
              0x0de0b6b3a7640000
                /* "contracts/Market.sol":6864:6884  1e18 - reserveFactor */
              tag_574
              jump	// in
                /* "contracts/Market.sol":6838:6885  floatingAssets.mulWadDown(1e18 - reserveFactor) */
            tag_1045:
                /* "contracts/Market.sol":6820:6835  newFloatingDebt */
              dup2
                /* "contracts/Market.sol":6795:6817  floatingBackupBorrowed */
              sload(0xd3)
                /* "contracts/Market.sol":6795:6835  floatingBackupBorrowed + newFloatingDebt */
              tag_1047
              swap2
              swap1
              tag_496
              jump	// in
            tag_1047:
                /* "contracts/Market.sol":6795:6885  floatingBackupBorrowed + newFloatingDebt > floatingAssets.mulWadDown(1e18 - reserveFactor) */
              gt
                /* "contracts/Market.sol":6791:6940  if (floatingBackupBorrowed + newFloatingDebt > floatingAssets.mulWadDown(1e18 - reserveFactor)) {... */
              iszero
              tag_1048
              jumpi
                /* "contracts/Market.sol":6902:6933  InsufficientProtocolLiquidity() */
              mload(0x40)
              shl(0xe3, 0x2d41ad)
              dup2
              mstore
              0x04
              add
              mload(0x40)
              dup1
              swap2
              sub
              swap1
              revert
                /* "contracts/Market.sol":6791:6940  if (floatingBackupBorrowed + newFloatingDebt > floatingAssets.mulWadDown(1e18 - reserveFactor)) {... */
            tag_1048:
                /* "contracts/Market.sol":6975:6987  borrowShares */
              dup3
                /* "contracts/Market.sol":6946:6971  totalFloatingBorrowShares */
              0xdf
              0x00
                /* "contracts/Market.sol":6946:6987  totalFloatingBorrowShares += borrowShares */
              dup3
              dup3
              sload
              tag_1049
              swap2
              swap1
              tag_496
              jump	// in
            tag_1049:
              swap1
              swap2
              sstore
              pop
              pop
              sub(shl(0xa0, 0x01), 0x01)
                /* "contracts/Market.sol":6993:7011  accounts[borrower] */
              dup5
              and
              0x00
              swap1
              dup2
              mstore
                /* "contracts/Market.sol":6993:7001  accounts */
              0xd2
                /* "contracts/Market.sol":6993:7011  accounts[borrower] */
              0x20
              mstore
              0x40
              dup2
              keccak256
                /* "contracts/Market.sol":6993:7032  accounts[borrower].floatingBorrowShares */
              0x02
              add
                /* "contracts/Market.sol":6993:7048  accounts[borrower].floatingBorrowShares += borrowShares */
              dup1
              sload
                /* "contracts/Market.sol":7036:7048  borrowShares */
              dup6
              swap3
                /* "contracts/Market.sol":6993:7011  accounts[borrower] */
              swap1
                /* "contracts/Market.sol":6993:7048  accounts[borrower].floatingBorrowShares += borrowShares */
              tag_1050
              swap1
                /* "contracts/Market.sol":7036:7048  borrowShares */
              dup5
              swap1
                /* "contracts/Market.sol":6993:7048  accounts[borrower].floatingBorrowShares += borrowShares */
              tag_496
              jump	// in
            tag_1050:
              swap1
              swap2
              sstore
              pop
              pop
                /* "contracts/Market.sol":7060:7120  Borrow(msg.sender, receiver, borrower, assets, borrowShares) */
              0x40
              dup1
              mload
                /* "#utility.yul":576:601   */
              dup8
              dup2
              mstore
                /* "#utility.yul":632:634   */
              0x20
                /* "#utility.yul":617:635   */
              dup2
              add
                /* "#utility.yul":610:644   */
              dup6
              swap1
              mstore
              sub(shl(0xa0, 0x01), 0x01)
                /* "contracts/Market.sol":7060:7120  Borrow(msg.sender, receiver, borrower, assets, borrowShares) */
              dup1
              dup8
              and
              swap3
              swap1
              dup9
              and
              swap2
                /* "contracts/Market.sol":7067:7077  msg.sender */
              caller
              swap2
                /* "contracts/Market.sol":7060:7120  Borrow(msg.sender, receiver, borrower, assets, borrowShares) */
              0x96558a334f4759f0e7c423d68c84721860bd8fbf94ddc4e55158ecb125ad04b5
              swap2
                /* "#utility.yul":549:567   */
              add
                /* "contracts/Market.sol":7060:7120  Borrow(msg.sender, receiver, borrower, assets, borrowShares) */
              mload(0x40)
              dup1
              swap2
              sub
              swap1
              log4
                /* "contracts/Market.sol":7126:7144  emitMarketUpdate() */
              tag_1052
                /* "contracts/Market.sol":7126:7142  emitMarketUpdate */
              tag_498
                /* "contracts/Market.sol":7126:7144  emitMarketUpdate() */
              jump	// in
            tag_1052:
                /* "contracts/Market.sol":7151:7186  auditor.checkBorrow(this, borrower) */
              mload(0x40)
              shl(0xe0, 0x7b9d8931)
              dup2
              mstore
                /* "contracts/Market.sol":7171:7175  this */
              address
                /* "contracts/Market.sol":7151:7186  auditor.checkBorrow(this, borrower) */
              0x04
              dup3
              add
                /* "#utility.yul":14933:14967   */
              mstore
              sub(shl(0xa0, 0x01), 0x01)
                /* "#utility.yul":15003:15018   */
              dup6
              dup2
              and
                /* "#utility.yul":14983:15001   */
              0x24
              dup4
              add
                /* "#utility.yul":14976:15019   */
              mstore
                /* "contracts/Market.sol":7151:7158  auditor */
              immutable("0x2adb6ba13100982fae82a6c459fdc0b83ba757ca8251e42f5db6158bc4c7e480")
                /* "contracts/Market.sol":7151:7170  auditor.checkBorrow */
              and
              swap1
              0x7b9d8931
              swap1
                /* "#utility.yul":14868:14886   */
              0x44
              add
                /* "contracts/Market.sol":7151:7186  auditor.checkBorrow(this, borrower) */
              0x00
              mload(0x40)
              dup1
              dup4
              sub
              dup2
              0x00
              dup8
              dup1
              extcodesize
              iszero
              dup1
              iszero
              tag_1054
              jumpi
              0x00
              dup1
              revert
            tag_1054:
              pop
              gas
              call
              iszero
              dup1
              iszero
              tag_1056
              jumpi
              returndatasize
              0x00
              dup1
              returndatacopy
              revert(0x00, returndatasize)
            tag_1056:
              pop
                /* "contracts/Market.sol":7192:7228  asset.safeTransfer(receiver, assets) */
              tag_1057
              swap3
              pop
              pop
              sub(shl(0xa0, 0x01), 0x01)
                /* "contracts/Market.sol":7192:7197  asset */
              immutable("0xa89f858efa0702d27b503f14d00e73a25115c8d5bdd25598ae4b376a61175436")
                /* "contracts/Market.sol":7192:7210  asset.safeTransfer */
              and
              swap1
              pop
                /* "contracts/Market.sol":7211:7219  receiver */
              dup7
                /* "contracts/Market.sol":7221:7227  assets */
              dup9
                /* "contracts/Market.sol":7192:7210  asset.safeTransfer */
              tag_602
                /* "contracts/Market.sol":7192:7228  asset.safeTransfer(receiver, assets) */
              jump	// in
            tag_1057:
                /* "contracts/Market.sol":6286:7233  {... */
              pop
              pop
                /* "contracts/Market.sol":6148:7233  function borrow(... */
              swap4
              swap3
              pop
              pop
              pop
              jump	// out
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":5558:5705  function revokeRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {... */
            tag_426:
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":4782:4789  bytes32 */
              0x00
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":4808:4820  _roles[role] */
              dup3
              dup2
              mstore
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":4808:4814  _roles */
              0x65
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":4808:4820  _roles[role] */
              0x20
              mstore
              0x40
              swap1
              keccak256
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":4808:4830  _roles[role].adminRole */
              0x01
              add
              sload
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":2802:2818  _checkRole(role) */
              tag_1060
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":2813:2817  role */
              dup2
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":2802:2812  _checkRole */
              tag_491
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":2802:2818  _checkRole(role) */
              jump	// in
            tag_1060:
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":5672:5698  _revokeRole(role, account) */
              tag_653
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":5684:5688  role */
              dup4
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":5690:5697  account */
              dup4
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":5672:5683  _revokeRole */
              tag_691
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":5672:5698  _revokeRole(role, account) */
              jump	// in
                /* "contracts/Market.sol":48462:48632  function setReserveFactor(uint128 reserveFactor_) public onlyRole(DEFAULT_ADMIN_ROLE) {... */
            tag_441:
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":2369:2373  0x00 */
              0x00
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":2802:2818  _checkRole(role) */
              tag_1065
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":2369:2373  0x00 */
              dup2
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":2802:2812  _checkRole */
              tag_491
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":2802:2818  _checkRole(role) */
              jump	// in
            tag_1065:
                /* "contracts/Market.sol":48554:48567  reserveFactor */
              0xdc
                /* "contracts/Market.sol":48554:48584  reserveFactor = reserveFactor_ */
              dup1
              sload
              sub(shl(0x80, 0x01), 0x01)
              swap1
              dup2
              and
              shl(0x80, 0x01)
              swap2
              dup6
              and
              swap2
              dup3
              mul
              or
              swap1
              swap2
              sstore
                /* "contracts/Market.sol":48595:48627  ReserveFactorSet(reserveFactor_) */
              mload(0x40)
                /* "#utility.yul":6199:6265   */
              swap1
              dup2
              mstore
                /* "contracts/Market.sol":48595:48627  ReserveFactorSet(reserveFactor_) */
              0xc197c4ec4c97f824717acfad017c2a16643adc8874798a0899da42c6b5ebf9bf
              swap1
                /* "#utility.yul":6187:6189   */
              0x20
                /* "#utility.yul":6172:6190   */
              add
                /* "contracts/Market.sol":48595:48627  ReserveFactorSet(reserveFactor_) */
              tag_499
                /* "#utility.yul":6053:6271   */
              jump
                /* "contracts/Market.sol":40439:40926  function totalFloatingBorrowAssets() public view returns (uint256) {... */
            tag_449:
                /* "contracts/Market.sol":40538:40550  floatingDebt */
              sload(0xd4)
                /* "contracts/Market.sol":40584:40598  floatingAssets */
              sload(0xdd)
                /* "contracts/Market.sol":40497:40504  uint256 */
              0x00
              swap2
                /* "contracts/Market.sol":40538:40550  floatingDebt */
              swap1
                /* "contracts/Market.sol":40497:40504  uint256 */
              dup3
                /* "contracts/Market.sol":40634:40655  memFloatingAssets > 0 */
              dup2
                /* "contracts/Market.sol":40634:40705  memFloatingAssets > 0 ? memFloatingDebt.divWadUp(memFloatingAssets) : 0 */
              tag_1069
              jumpi
                /* "contracts/Market.sol":40704:40705  0 */
              0x00
                /* "contracts/Market.sol":40634:40705  memFloatingAssets > 0 ? memFloatingDebt.divWadUp(memFloatingAssets) : 0 */
              jump(tag_1071)
            tag_1069:
                /* "contracts/Market.sol":40658:40701  memFloatingDebt.divWadUp(memFloatingAssets) */
              tag_1071
                /* "contracts/Market.sol":40658:40673  memFloatingDebt */
              dup4
                /* "contracts/Market.sol":40683:40700  memFloatingAssets */
              dup4
                /* "contracts/Market.sol":40658:40682  memFloatingDebt.divWadUp */
              tag_1072
                /* "contracts/Market.sol":40658:40701  memFloatingDebt.divWadUp(memFloatingAssets) */
              jump	// in
            tag_1071:
                /* "contracts/Market.sol":40844:40866  lastFloatingDebtUpdate */
              sload(0xda)
                /* "contracts/Market.sol":40604:40705  uint256 floatingUtilization = memFloatingAssets > 0 ? memFloatingDebt.divWadUp(memFloatingAssets) : 0 */
              swap1
              swap2
              pop
                /* "contracts/Market.sol":40711:40726  uint256 newDebt */
              0x00
              swap1
                /* "contracts/Market.sol":40729:40883  memFloatingDebt.mulWadDown(... */
              tag_1073
              swap1
                /* "contracts/Market.sol":40763:40877  interestRateModel.floatingRate(floatingUtilization).mulDivDown(block.timestamp - lastFloatingDebtUpdate, 365 days) */
              tag_536
              swap1
                /* "contracts/Market.sol":40826:40866  block.timestamp - lastFloatingDebtUpdate */
              tag_1075
              swap1
              shl(0x28, 0x01)
                /* "contracts/Market.sol":40844:40866  lastFloatingDebtUpdate */
              swap1
              div
              0xffffffff
              and
                /* "contracts/Market.sol":40826:40841  block.timestamp */
              timestamp
                /* "contracts/Market.sol":40826:40866  block.timestamp - lastFloatingDebtUpdate */
              tag_526
              jump	// in
            tag_1075:
                /* "contracts/Market.sol":40763:40780  interestRateModel */
              sload(0xdb)
                /* "contracts/Market.sol":40763:40814  interestRateModel.floatingRate(floatingUtilization) */
              mload(0x40)
              shl(0xe1, 0x42543a33)
              dup2
              mstore
              0x04
              dup2
              add
                /* "#utility.yul":801:826   */
              dup8
              swap1
              mstore
                /* "contracts/Market.sol":40868:40876  365 days */
              0x01e13380
              swap2
              sub(shl(0xa0, 0x01), 0x01)
                /* "contracts/Market.sol":40763:40780  interestRateModel */
              and
              swap1
                /* "contracts/Market.sol":40763:40793  interestRateModel.floatingRate */
              0x84a87466
              swap1
                /* "#utility.yul":774:792   */
              0x24
              add
                /* "contracts/Market.sol":40763:40814  interestRateModel.floatingRate(floatingUtilization) */
              0x20
              mload(0x40)
              dup1
              dup4
              sub
              dup2
              dup7
              gas
              staticcall
              iszero
              dup1
              iszero
              tag_1078
              jumpi
              returndatasize
              0x00
              dup1
              returndatacopy
              revert(0x00, returndatasize)
            tag_1078:
              pop
              pop
              pop
              pop
              mload(0x40)
              returndatasize
              not(0x1f)
              0x1f
              dup3
              add
              and
              dup3
              add
              dup1
              0x40
              mstore
              pop
              dup2
              add
              swap1
              tag_1079
              swap2
              swap1
              tag_554
              jump	// in
            tag_1079:
                /* "contracts/Market.sol":40763:40825  interestRateModel.floatingRate(floatingUtilization).mulDivDown */
              swap2
                /* "contracts/Market.sol":40763:40877  interestRateModel.floatingRate(floatingUtilization).mulDivDown(block.timestamp - lastFloatingDebtUpdate, 365 days) */
              swap1
                /* "contracts/Market.sol":40763:40825  interestRateModel.floatingRate(floatingUtilization).mulDivDown */
              tag_479
                /* "contracts/Market.sol":40763:40877  interestRateModel.floatingRate(floatingUtilization).mulDivDown(block.timestamp - lastFloatingDebtUpdate, 365 days) */
              jump	// in
                /* "contracts/Market.sol":40729:40883  memFloatingDebt.mulWadDown(... */
            tag_1073:
                /* "contracts/Market.sol":40711:40883  uint256 newDebt = memFloatingDebt.mulWadDown(... */
              swap1
              pop
                /* "contracts/Market.sol":40896:40921  memFloatingDebt + newDebt */
              tag_537
                /* "contracts/Market.sol":40711:40883  uint256 newDebt = memFloatingDebt.mulWadDown(... */
              dup2
                /* "contracts/Market.sol":40896:40911  memFloatingDebt */
              dup6
                /* "contracts/Market.sol":40896:40921  memFloatingDebt + newDebt */
              tag_496
              jump	// in
                /* "node_modules/solmate/src/mixins/ERC4626.sol":4713:4838  function previewDeposit(uint256 assets) public view virtual returns (uint256) {... */
            tag_453:
                /* "node_modules/solmate/src/mixins/ERC4626.sol":4782:4789  uint256 */
              0x00
                /* "node_modules/solmate/src/mixins/ERC4626.sol":4808:4831  convertToShares(assets) */
              tag_487
                /* "node_modules/solmate/src/mixins/ERC4626.sol":4824:4830  assets */
              dup3
                /* "node_modules/solmate/src/mixins/ERC4626.sol":4808:4823  convertToShares */
              tag_402
                /* "node_modules/solmate/src/mixins/ERC4626.sol":4808:4831  convertToShares(assets) */
              jump	// in
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":7741:8276  function mulDivDown(... */
            tag_479:
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":7947:7956  mul(x, y) */
              dup3
              dup3
              mul
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":8078:8097  iszero(denominator) */
              dup2
              iszero
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":8071:8098  iszero(iszero(denominator)) */
              iszero
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":8103:8112  iszero(x) */
              dup5
              iszero
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":8117:8126  div(z, x) */
              dup6
              dup4
              div
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":8114:8130  eq(div(z, x), y) */
              dup6
              eq
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":8100:8131  or(iszero(x), eq(div(z, x), y)) */
              or
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":8067:8132  and(iszero(iszero(denominator)), or(iszero(x), eq(div(z, x), y))) */
              and
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":8057:8178  if iszero(and(iszero(iszero(denominator)), or(iszero(x), eq(div(z, x), y)))) {... */
              tag_1084
              jumpi
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":8162:8163  0 */
              0x00
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":8159:8160  0 */
              dup1
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":8152:8164  revert(0, 0) */
              revert
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":8057:8178  if iszero(and(iszero(iszero(denominator)), or(iszero(x), eq(div(z, x), y)))) {... */
            tag_1084:
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":8241:8260  div(z, denominator) */
              div
              swap3
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":7741:8276  function mulDivDown(... */
              swap2
              pop
              pop
              jump	// out
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":540:704  function mulWadDown(uint256 x, uint256 y) internal pure returns (uint256) {... */
            tag_482:
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":605:612  uint256 */
              0x00
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":631:652  mulDivDown(x, y, WAD) */
              tag_511
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":642:643  x */
              dup4
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":645:646  y */
              dup4
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":491:495  1e18 */
              0x0de0b6b3a7640000
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":631:641  mulDivDown */
              tag_479
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":631:652  mulDivDown(x, y, WAD) */
              jump	// in
                /* "contracts/Market.sol":37671:38016  function accumulatedEarnings() internal view returns (uint256 earnings) {... */
            tag_484:
                /* "contracts/Market.sol":37785:37807  lastAccumulatorAccrual */
              sload(0xda)
                /* "contracts/Market.sol":37725:37741  uint256 earnings */
              0x00
              swap1
              dup2
              swap1
                /* "contracts/Market.sol":37767:37807  block.timestamp - lastAccumulatorAccrual */
              tag_1088
              swap1
                /* "contracts/Market.sol":37785:37807  lastAccumulatorAccrual */
              0x0100
              swap1
              div
              0xffffffff
              and
                /* "contracts/Market.sol":37767:37782  block.timestamp */
              timestamp
                /* "contracts/Market.sol":37767:37807  block.timestamp - lastAccumulatorAccrual */
              tag_526
              jump	// in
            tag_1088:
                /* "contracts/Market.sol":37749:37807  uint256 elapsed = block.timestamp - lastAccumulatorAccrual */
              swap1
              pop
                /* "contracts/Market.sol":37817:37824  elapsed */
              dup1
                /* "contracts/Market.sol":37828:37829  0 */
              0x00
                /* "contracts/Market.sol":37817:37829  elapsed == 0 */
              sub
                /* "contracts/Market.sol":37813:37839  if (elapsed == 0) return 0 */
              tag_1089
              jumpi
                /* "contracts/Market.sol":37838:37839  0 */
              0x00
                /* "contracts/Market.sol":37831:37839  return 0 */
              swap2
              pop
              pop
                /* "contracts/Market.sol":37671:38016  function accumulatedEarnings() internal view returns (uint256 earnings) {... */
              swap1
              jump	// out
                /* "contracts/Market.sol":37813:37839  if (elapsed == 0) return 0 */
            tag_1089:
                /* "contracts/Market.sol":37968:37982  maxFuturePools */
              sload(0xda)
                /* "contracts/Market.sol":37858:38011  earningsAccumulator.mulDivDown(... */
              tag_1090
              swap1
                /* "contracts/Market.sol":37898:37905  elapsed */
              dup3
              swap1
                /* "contracts/Market.sol":37925:38003  earningsAccumulatorSmoothFactor.mulWadDown(maxFuturePools * FixedLib.INTERVAL) */
              tag_1091
              swap1
                /* "contracts/Market.sol":37968:38002  maxFuturePools * FixedLib.INTERVAL */
              tag_1092
              swap1
                /* "contracts/utils/FixedLib.sol":306:313  4 weeks */
              0x24ea00
              swap1
                /* "contracts/Market.sol":37968:37982  maxFuturePools */
              0xff
              and
                /* "contracts/Market.sol":37968:38002  maxFuturePools * FixedLib.INTERVAL */
              tag_528
              jump	// in
            tag_1092:
                /* "contracts/Market.sol":37925:37956  earningsAccumulatorSmoothFactor */
              and(sub(shl(0x80, 0x01), 0x01), sload(0xdc))
              swap1
                /* "contracts/Market.sol":37925:37967  earningsAccumulatorSmoothFactor.mulWadDown */
              tag_482
                /* "contracts/Market.sol":37925:38003  earningsAccumulatorSmoothFactor.mulWadDown(maxFuturePools * FixedLib.INTERVAL) */
              jump	// in
            tag_1091:
                /* "contracts/Market.sol":37915:38003  elapsed + earningsAccumulatorSmoothFactor.mulWadDown(maxFuturePools * FixedLib.INTERVAL) */
              tag_1093
              swap1
                /* "contracts/Market.sol":37915:37922  elapsed */
              dup5
                /* "contracts/Market.sol":37915:38003  elapsed + earningsAccumulatorSmoothFactor.mulWadDown(maxFuturePools * FixedLib.INTERVAL) */
              tag_496
              jump	// in
            tag_1093:
                /* "contracts/Market.sol":37858:37877  earningsAccumulator */
              sload(0xd5)
              swap2
                /* "contracts/Market.sol":37858:38011  earningsAccumulator.mulDivDown(... */
              swap1
                /* "contracts/Market.sol":37858:37888  earningsAccumulator.mulDivDown */
              tag_479
                /* "contracts/Market.sol":37858:38011  earningsAccumulator.mulDivDown(... */
              jump	// in
            tag_1090:
                /* "contracts/Market.sol":37845:38011  return... */
              swap2
              pop
              pop
                /* "contracts/Market.sol":37671:38016  function accumulatedEarnings() internal view returns (uint256 earnings) {... */
              swap1
              jump	// out
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":3642:3745  function _checkRole(bytes32 role) internal view virtual {... */
            tag_491:
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":3708:3738  _checkRole(role, _msgSender()) */
              tag_703
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":3719:3723  role */
              dup2
                /* "node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":929:939  msg.sender */
              caller
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":3708:3718  _checkRole */
              tag_1098
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":3708:3738  _checkRole(role, _msgSender()) */
              jump	// in
                /* "contracts/Market.sol":38180:38434  function accrueAccumulatedEarnings() internal returns (uint256 earnings) {... */
            tag_494:
                /* "contracts/Market.sol":38235:38251  uint256 earnings */
              0x00
                /* "contracts/Market.sol":38270:38291  accumulatedEarnings() */
              tag_1100
                /* "contracts/Market.sol":38270:38289  accumulatedEarnings */
              tag_484
                /* "contracts/Market.sol":38270:38291  accumulatedEarnings() */
              jump	// in
            tag_1100:
                /* "contracts/Market.sol":38259:38291  earnings = accumulatedEarnings() */
              swap1
              pop
                /* "contracts/Market.sol":38321:38329  earnings */
              dup1
                /* "contracts/Market.sol":38298:38317  earningsAccumulator */
              0xd5
              0x00
                /* "contracts/Market.sol":38298:38329  earningsAccumulator -= earnings */
              dup3
              dup3
              sload
              tag_1101
              swap2
              swap1
              tag_526
              jump	// in
            tag_1101:
              swap1
              swap2
              sstore
              pop
              pop
                /* "contracts/Market.sol":38335:38357  lastAccumulatorAccrual */
              0xda
                /* "contracts/Market.sol":38335:38383  lastAccumulatorAccrual = uint32(block.timestamp) */
              dup1
              sload
              not(0xffffffff00)
              and
              0x0100
                /* "contracts/Market.sol":38367:38382  block.timestamp */
              timestamp
                /* "contracts/Market.sol":38335:38383  lastAccumulatorAccrual = uint32(block.timestamp) */
              0xffffffff
              dup2
              and
              swap2
              swap1
              swap2
              mul
              swap2
              swap1
              swap2
              or
              swap1
              swap2
              sstore
                /* "contracts/Market.sol":38394:38429  AccumulatorAccrual(block.timestamp) */
              mload(0x40)
                /* "#utility.yul":801:826   */
              swap1
              dup2
              mstore
                /* "contracts/Market.sol":38394:38429  AccumulatorAccrual(block.timestamp) */
              0xe24d78f24f27ad7740c08c83f439e4c144df201bfd8f5c4c93e3e0898248b1bb
              swap1
                /* "#utility.yul":789:791   */
              0x20
                /* "#utility.yul":774:792   */
              add
                /* "contracts/Market.sol":38394:38429  AccumulatorAccrual(block.timestamp) */
              mload(0x40)
              dup1
              swap2
              sub
              swap1
              log1
                /* "contracts/Market.sol":38180:38434  function accrueAccumulatedEarnings() internal returns (uint256 earnings) {... */
              swap1
              jump	// out
                /* "contracts/Market.sol":44979:45194  function emitMarketUpdate() internal {... */
            tag_498:
                /* "contracts/Market.sol":45070:45081  totalSupply */
              sload(0xcb)
                /* "contracts/Market.sol":45089:45103  floatingAssets */
              sload(0xdd)
                /* "contracts/Market.sol":45111:45136  totalFloatingBorrowShares */
              sload(0xdf)
                /* "contracts/Market.sol":45144:45156  floatingDebt */
              sload(0xd4)
                /* "contracts/Market.sol":45164:45183  earningsAccumulator */
              sload(0xd5)
                /* "contracts/Market.sol":45027:45189  MarketUpdate(... */
              0x40
              dup1
              mload
                /* "contracts/Market.sol":45047:45062  block.timestamp */
              timestamp
                /* "#utility.yul":22716:22741   */
              dup2
              mstore
                /* "#utility.yul":22772:22774   */
              0x20
                /* "#utility.yul":22757:22775   */
              dup2
              add
                /* "#utility.yul":22750:22784   */
              swap7
              swap1
              swap7
              mstore
                /* "#utility.yul":22800:22818   */
              dup6
              add
                /* "#utility.yul":22793:22827   */
              swap4
              swap1
              swap4
              mstore
                /* "#utility.yul":22858:22860   */
              0x60
                /* "#utility.yul":22843:22861   */
              dup5
              add
                /* "#utility.yul":22836:22870   */
              swap2
              swap1
              swap2
              mstore
                /* "#utility.yul":22901:22904   */
              0x80
                /* "#utility.yul":22886:22905   */
              dup4
              add
                /* "#utility.yul":22879:22914   */
              mstore
                /* "#utility.yul":22945:22948   */
              0xa0
                /* "#utility.yul":22930:22949   */
              dup3
              add
                /* "#utility.yul":22923:22958   */
              mstore
                /* "contracts/Market.sol":45027:45189  MarketUpdate(... */
              0x7a71b92e3ef471c5ad18359e076f3df1c563d92e9ea1e33aa4761dbbc9b7ae40
              swap1
                /* "#utility.yul":22703:22706   */
              0xc0
                /* "#utility.yul":22688:22707   */
              add
                /* "contracts/Market.sol":45027:45189  MarketUpdate(... */
            tag_1104:
              mload(0x40)
              dup1
              swap2
              sub
              swap1
              log1
                /* "contracts/Market.sol":44979:45194  function emitMarketUpdate() internal {... */
              jump	// out
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":8282:9034  function mulDivUp(... */
            tag_518:
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":8486:8495  mul(x, y) */
              dup3
              dup3
              mul
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":8617:8636  iszero(denominator) */
              dup2
              iszero
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":8610:8637  iszero(iszero(denominator)) */
              iszero
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":8642:8651  iszero(x) */
              dup5
              iszero
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":8656:8665  div(z, x) */
              dup6
              dup4
              div
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":8653:8669  eq(div(z, x), y) */
              dup6
              eq
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":8639:8670  or(iszero(x), eq(div(z, x), y)) */
              or
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":8606:8671  and(iszero(iszero(denominator)), or(iszero(x), eq(div(z, x), y))) */
              and
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":8596:8717  if iszero(and(iszero(iszero(denominator)), or(iszero(x), eq(div(z, x), y)))) {... */
              tag_1107
              jumpi
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":8701:8702  0 */
              0x00
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":8698:8699  0 */
              dup1
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":8691:8703  revert(0, 0) */
              revert
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":8596:8717  if iszero(and(iszero(iszero(denominator)), or(iszero(x), eq(div(z, x), y)))) {... */
            tag_1107:
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":9015:9016  1 */
              0x01
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":9001:9012  denominator */
              dup3
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":8997:8998  1 */
              0x01
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":8994:8995  z */
              dup4
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":8990:8999  sub(z, 1) */
              sub
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":8986:9013  div(sub(z, 1), denominator) */
              div
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":8982:9017  add(div(sub(z, 1), denominator), 1) */
              add
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":8977:8978  z */
              dup2
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":8970:8979  iszero(z) */
              iszero
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":8963:8980  iszero(iszero(z)) */
              iszero
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":8959:9018  mul(iszero(iszero(z)), add(div(sub(z, 1), denominator), 1)) */
              mul
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":8954:9018  z := mul(iszero(iszero(z)), add(div(sub(z, 1), denominator), 1)) */
              swap1
              pop
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":8282:9034  function mulDivUp(... */
              swap4
              swap3
              pop
              pop
              pop
              jump	// out
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":1487:4590  function expWad(int256 x) internal pure returns (int256 r) {... */
            tag_531:
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":1536:1544  int256 r */
              0x00
              not(0x0248ce36a70cb26b3e)
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":1713:1714  x */
              dup3
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":1713:1739  x <= -42139678854452767551 */
              sgt
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":1709:1749  if (x <= -42139678854452767551) return 0 */
              tag_1109
              jumpi
              pop
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":1748:1749  0 */
              0x00
              swap2
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":1487:4590  function expWad(int256 x) internal pure returns (int256 r) {... */
              swap1
              pop
              jump	// out
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":1709:1749  if (x <= -42139678854452767551) return 0 */
            tag_1109:
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":1948:1969  135305999368893231589 */
              0x0755bf798b4a1bf1e5
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":1943:1944  x */
              dup3
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":1943:1969  x >= 135305999368893231589 */
              slt
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":1939:1993  if (x >= 135305999368893231589) revert("EXP_OVERFLOW") */
              tag_1110
              jumpi
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":1971:1993  revert("EXP_OVERFLOW") */
              0x00
              dup1
              revert
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":1939:1993  if (x >= 135305999368893231589) revert("EXP_OVERFLOW") */
            tag_1110:
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":2266:2271  5**18 */
              0x03782dace9d9
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":2260:2262  78 */
              0x4e
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":2255:2262  x << 78 */
              dup4
              swap1
              shl
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":2254:2271  (x << 78) / 5**18 */
              sdiv
              swap2
              pop
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":2535:2543  int256 k */
              0x00
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":2601:2603  96 */
              0x60
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":2559:2588  54916777467707473351141471128 */
              0xb17217f7d1cf79abc9e3b398
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":2548:2555  x << 96 */
              dup5
              dup3
              shl
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":2547:2588  (x << 96) / 54916777467707473351141471128 */
              sdiv
              shl(0x5f, 0x01)
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":2547:2596  (x << 96) / 54916777467707473351141471128 + 2**95 */
              add
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":2546:2603  ((x << 96) / 54916777467707473351141471128 + 2**95) >> 96 */
              swap1
              sar
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":2629:2658  54916777467707473351141471128 */
              0xb17217f7d1cf79abc9e3b398
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":2625:2658  k * 54916777467707473351141471128 */
              dup2
              mul
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":2621:2658  x - k * 54916777467707473351141471128 */
              swap1
              swap4
              sub
              not(0x240c330e9fb2d9cbaf0fd5aafb)
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":3300:3335  x - 2855989394907223263936484059900 */
              dup2
              add
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":3355:3360  q * x */
              dup2
              mul
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":2935:2937  96 */
              0x60
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":3354:3367  (q * x) >> 96 */
              swap1
              dup2
              sar
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":3371:3403  50020603652535783019961831881945 */
              0x0277594991cfc85f6e2461837cd9
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":3353:3403  ((q * x) >> 96) + 50020603652535783019961831881945 */
              add
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":3423:3428  q * x */
              dup3
              mul
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":3422:3435  (q * x) >> 96 */
              dup2
              sar
              not(0x1a521255e34f6a5061b25ef1c9c3)
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":3421:3472  ((q * x) >> 96) - 533845033583426703283633433725380 */
              add
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":3492:3497  q * x */
              dup3
              mul
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":3491:3504  (q * x) >> 96 */
              dup2
              sar
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":3508:3542  3604857256930695427073651918091429 */
              0xb1bbb201f443cf962f1a1d3db4a5
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":3490:3542  ((q * x) >> 96) + 3604857256930695427073651918091429 */
              add
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":3562:3567  q * x */
              dup3
              mul
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":3561:3574  (q * x) >> 96 */
              dup2
              sar
              not(0x02c72388d9f74f51a9331fed693f14)
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":3560:3613  ((q * x) >> 96) - 14423608567350463180887372962807573 */
              add
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":3633:3638  q * x */
              dup3
              mul
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":3632:3645  (q * x) >> 96 */
              dup2
              sar
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":3649:3684  26449188498355588339934803723976023 */
              0x05180bb14799ab47a8a8cb2a527d57
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":3631:3684  ((q * x) >> 96) + 26449188498355588339934803723976023 */
              add
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":2941:2973  57155421227552351082224309758442 */
              0x02d16720577bd19bf614176fe9ea
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":2874:2905  1346386616545796478920950773328 */
              0x10fe68e7fd37d0007b713f7650
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":2870:2905  x + 1346386616545796478920950773328 */
              dup5
              add
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":2925:2930  y * x */
              dup5
              mul
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":2924:2937  (y * x) >> 96 */
              dup4
              sar
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":2923:2973  ((y * x) >> 96) + 57155421227552351082224309758442 */
              swap1
              dup2
              add
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":2998:3003  y + x */
              swap1
              dup5
              add
              not(0x01d3967ed30fc4f89c02bab57081)
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":2998:3038  y + x - 94201549194550492254356042504812 */
              add
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":3058:3063  p * y */
              mul
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":3057:3070  (p * y) >> 96 */
              swap1
              swap2
              sar
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":3074:3109  28719021644029726153956944680412240 */
              0x0587f503bb6ea29d25fcb740196450
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":3056:3109  ((p * y) >> 96) + 28719021644029726153956944680412240 */
              add
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":3127:3132  p * x */
              swap1
              swap2
              mul
              shl(0x62, 0x360d7aeea093263ecc6e0ecb2917)
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":3127:3177  p * x + (4385272521454847904659076985693276 << 96) */
              add
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":4002:4012  sdiv(p, q) */
              sdiv
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":4502:4551  3822833074963236453042738258902158003155416615667 */
              0x029d9dc38563c32e5c2f6dc192ee70ef65f9978af3
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":4489:4551  uint256(r) * 3822833074963236453042738258902158003155416615667 */
              mul
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":4564:4567  195 */
              0xc3
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":4564:4571  195 - k */
              swap4
              swap1
              swap4
              sub
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":4488:4572  (uint256(r) * 3822833074963236453042738258902158003155416615667) >> uint256(195 - k) */
              swap3
              swap1
              swap3
              shr
              swap3
              swap2
              pop
              pop
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":1487:4590  function expWad(int256 x) internal pure returns (int256 r) {... */
              jump	// out
                /* "node_modules/@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol":2010:2116  function _requireNotPaused() internal view virtual {... */
            tag_540:
                /* "node_modules/@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol":1928:1935  _paused */
              and(0xff, sload(0x97))
                /* "node_modules/@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol":2079:2088  !paused() */
              iszero
                /* "node_modules/@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol":2071:2109  require(!paused(), "Pausable: paused") */
              tag_1117
              jumpi
              0x00
              dup1
              revert
            tag_1117:
                /* "node_modules/@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol":2010:2116  function _requireNotPaused() internal view virtual {... */
              jump	// out
                /* "contracts/utils/FixedLib.sol":10370:11097  function checkPoolState(uint256 maturity, uint8 maxPools, State requiredState, State alternativeState) internal view {... */
            tag_544:
                /* "contracts/utils/FixedLib.sol":10493:10504  State state */
              0x00
                /* "contracts/utils/FixedLib.sol":10514:10533  maturity % INTERVAL */
              tag_1119
                /* "contracts/utils/FixedLib.sol":306:313  4 weeks */
              0x24ea00
                /* "contracts/utils/FixedLib.sol":10514:10522  maturity */
              dup7
                /* "contracts/utils/FixedLib.sol":10514:10533  maturity % INTERVAL */
              tag_1120
              jump	// in
            tag_1119:
                /* "contracts/utils/FixedLib.sol":10514:10538  maturity % INTERVAL != 0 */
              iszero
                /* "contracts/utils/FixedLib.sol":10510:10822  if (maturity % INTERVAL != 0) {... */
              tag_1121
              jumpi
              pop
                /* "contracts/utils/FixedLib.sol":10556:10569  State.INVALID */
              0x01
                /* "contracts/utils/FixedLib.sol":10510:10822  if (maturity % INTERVAL != 0) {... */
              jump(tag_1130)
            tag_1121:
                /* "contracts/utils/FixedLib.sol":10598:10613  block.timestamp */
              timestamp
                /* "contracts/utils/FixedLib.sol":10586:10594  maturity */
              dup6
                /* "contracts/utils/FixedLib.sol":10586:10613  maturity <= block.timestamp */
              gt
                /* "contracts/utils/FixedLib.sol":10582:10822  if (maturity <= block.timestamp) {... */
              tag_1123
              jumpi
              pop
                /* "contracts/utils/FixedLib.sol":10631:10644  State.MATURED */
              0x02
                /* "contracts/utils/FixedLib.sol":10582:10822  if (maturity <= block.timestamp) {... */
              jump(tag_1130)
            tag_1123:
                /* "contracts/utils/FixedLib.sol":10722:10741  INTERVAL * maxPools */
              tag_1125
              0xff
              dup6
              and
                /* "contracts/utils/FixedLib.sol":306:313  4 weeks */
              0x24ea00
                /* "contracts/utils/FixedLib.sol":10722:10741  INTERVAL * maxPools */
              tag_528
              jump	// in
            tag_1125:
                /* "contracts/utils/FixedLib.sol":10691:10717  block.timestamp % INTERVAL */
              tag_1126
                /* "contracts/utils/FixedLib.sol":306:313  4 weeks */
              0x24ea00
                /* "contracts/utils/FixedLib.sol":10691:10706  block.timestamp */
              timestamp
                /* "contracts/utils/FixedLib.sol":10691:10717  block.timestamp % INTERVAL */
              tag_1120
              jump	// in
            tag_1126:
                /* "contracts/utils/FixedLib.sol":10672:10718  block.timestamp - (block.timestamp % INTERVAL) */
              tag_1127
              swap1
                /* "contracts/utils/FixedLib.sol":10672:10687  block.timestamp */
              timestamp
                /* "contracts/utils/FixedLib.sol":10672:10718  block.timestamp - (block.timestamp % INTERVAL) */
              tag_526
              jump	// in
            tag_1127:
                /* "contracts/utils/FixedLib.sol":10672:10742  block.timestamp - (block.timestamp % INTERVAL) + (INTERVAL * maxPools) */
              tag_1128
              swap2
              swap1
              tag_496
              jump	// in
            tag_1128:
                /* "contracts/utils/FixedLib.sol":10661:10669  maturity */
              dup6
                /* "contracts/utils/FixedLib.sol":10661:10742  maturity > block.timestamp - (block.timestamp % INTERVAL) + (INTERVAL * maxPools) */
              gt
                /* "contracts/utils/FixedLib.sol":10657:10822  if (maturity > block.timestamp - (block.timestamp % INTERVAL) + (INTERVAL * maxPools)) {... */
              iszero
              tag_1129
              jumpi
              pop
                /* "contracts/utils/FixedLib.sol":10760:10775  State.NOT_READY */
              0x04
                /* "contracts/utils/FixedLib.sol":10657:10822  if (maturity > block.timestamp - (block.timestamp % INTERVAL) + (INTERVAL * maxPools)) {... */
              jump(tag_1130)
            tag_1129:
              pop
                /* "contracts/utils/FixedLib.sol":10804:10815  State.VALID */
              0x03
                /* "contracts/utils/FixedLib.sol":10657:10822  if (maturity > block.timestamp - (block.timestamp % INTERVAL) + (INTERVAL * maxPools)) {... */
            tag_1130:
                /* "contracts/utils/FixedLib.sol":10841:10854  requiredState */
              dup3
                /* "contracts/utils/FixedLib.sol":10832:10854  state != requiredState */
              0x04
              dup2
              gt
              iszero
              tag_1132
              jumpi
              tag_1132
              tag_1133
              jump	// in
            tag_1132:
                /* "contracts/utils/FixedLib.sol":10832:10837  state */
              dup2
                /* "contracts/utils/FixedLib.sol":10832:10854  state != requiredState */
              0x04
              dup2
              gt
              iszero
              tag_1135
              jumpi
              tag_1135
              tag_1133
              jump	// in
            tag_1135:
              eq
              iszero
                /* "contracts/utils/FixedLib.sol":10832:10883  state != requiredState && state != alternativeState */
              dup1
              iszero
              tag_1136
              jumpi
              pop
                /* "contracts/utils/FixedLib.sol":10867:10883  alternativeState */
              dup2
                /* "contracts/utils/FixedLib.sol":10858:10883  state != alternativeState */
              0x04
              dup2
              gt
              iszero
              tag_1138
              jumpi
              tag_1138
              tag_1133
              jump	// in
            tag_1138:
                /* "contracts/utils/FixedLib.sol":10858:10863  state */
              dup2
                /* "contracts/utils/FixedLib.sol":10858:10883  state != alternativeState */
              0x04
              dup2
              gt
              iszero
              tag_1140
              jumpi
              tag_1140
              tag_1133
              jump	// in
            tag_1140:
              eq
              iszero
                /* "contracts/utils/FixedLib.sol":10832:10883  state != requiredState && state != alternativeState */
            tag_1136:
                /* "contracts/utils/FixedLib.sol":10828:11093  if (state != requiredState && state != alternativeState) {... */
              iszero
              tag_1141
              jumpi
                /* "contracts/utils/FixedLib.sol":10917:10927  State.NONE */
              0x00
                /* "contracts/utils/FixedLib.sol":10897:10913  alternativeState */
              dup3
                /* "contracts/utils/FixedLib.sol":10897:10927  alternativeState == State.NONE */
              0x04
              dup2
              gt
              iszero
              tag_1145
              jumpi
              tag_1145
              tag_1133
              jump	// in
            tag_1145:
              sub
                /* "contracts/utils/FixedLib.sol":10893:10990  if (alternativeState == State.NONE) revert UnmatchedPoolState(uint8(state), uint8(requiredState)) */
              tag_1146
              jumpi
                /* "contracts/utils/FixedLib.sol":10961:10966  state */
              dup1
                /* "contracts/utils/FixedLib.sol":10955:10967  uint8(state) */
              0x04
              dup2
              gt
              iszero
              tag_1148
              jumpi
              tag_1148
              tag_1133
              jump	// in
            tag_1148:
                /* "contracts/utils/FixedLib.sol":10975:10988  requiredState */
              dup4
                /* "contracts/utils/FixedLib.sol":10969:10989  uint8(requiredState) */
              0x04
              dup2
              gt
              iszero
              tag_1150
              jumpi
              tag_1150
              tag_1133
              jump	// in
            tag_1150:
                /* "contracts/utils/FixedLib.sol":10936:10990  UnmatchedPoolState(uint8(state), uint8(requiredState)) */
              mload(0x40)
              shl(0xe1, 0x1a71301d)
              dup2
              mstore
                /* "#utility.yul":23414:23418   */
              0xff
                /* "#utility.yul":23402:23419   */
              swap3
              dup4
              and
                /* "contracts/utils/FixedLib.sol":10936:10990  UnmatchedPoolState(uint8(state), uint8(requiredState)) */
              0x04
              dup3
              add
                /* "#utility.yul":23384:23420   */
              mstore
                /* "#utility.yul":23456:23473   */
              swap2
              and
                /* "#utility.yul":23436:23454   */
              0x24
              dup3
              add
                /* "#utility.yul":23429:23474   */
              mstore
                /* "#utility.yul":23357:23375   */
              0x44
              add
                /* "contracts/utils/FixedLib.sol":10936:10990  UnmatchedPoolState(uint8(state), uint8(requiredState)) */
            tag_1151:
              mload(0x40)
              dup1
              swap2
              sub
              swap1
              revert
                /* "contracts/utils/FixedLib.sol":10893:10990  if (alternativeState == State.NONE) revert UnmatchedPoolState(uint8(state), uint8(requiredState)) */
            tag_1146:
                /* "contracts/utils/FixedLib.sol":11032:11037  state */
              dup1
                /* "contracts/utils/FixedLib.sol":11026:11038  uint8(state) */
              0x04
              dup2
              gt
              iszero
              tag_1154
              jumpi
              tag_1154
              tag_1133
              jump	// in
            tag_1154:
                /* "contracts/utils/FixedLib.sol":11046:11059  requiredState */
              dup4
                /* "contracts/utils/FixedLib.sol":11040:11060  uint8(requiredState) */
              0x04
              dup2
              gt
              iszero
              tag_1156
              jumpi
              tag_1156
              tag_1133
              jump	// in
            tag_1156:
                /* "contracts/utils/FixedLib.sol":11068:11084  alternativeState */
              dup4
                /* "contracts/utils/FixedLib.sol":11062:11085  uint8(alternativeState) */
              0x04
              dup2
              gt
              iszero
              tag_1158
              jumpi
              tag_1158
              tag_1133
              jump	// in
            tag_1158:
                /* "contracts/utils/FixedLib.sol":11006:11086  UnmatchedPoolStates(uint8(state), uint8(requiredState), uint8(alternativeState)) */
              mload(0x40)
              shl(0xe0, 0x7f2cef99)
              dup2
              mstore
                /* "#utility.yul":23705:23709   */
              0xff
                /* "#utility.yul":23693:23710   */
              swap4
              dup5
              and
                /* "contracts/utils/FixedLib.sol":11006:11086  UnmatchedPoolStates(uint8(state), uint8(requiredState), uint8(alternativeState)) */
              0x04
              dup3
              add
                /* "#utility.yul":23675:23711   */
              mstore
                /* "#utility.yul":23747:23764   */
              swap2
              dup4
              and
                /* "#utility.yul":23727:23745   */
              0x24
              dup4
              add
                /* "#utility.yul":23720:23765   */
              mstore
                /* "#utility.yul":23801:23818   */
              swap1
              swap2
              and
                /* "#utility.yul":23781:23799   */
              0x44
              dup3
              add
                /* "#utility.yul":23774:23819   */
              mstore
                /* "#utility.yul":23648:23666   */
              0x64
              add
                /* "contracts/utils/FixedLib.sol":11006:11086  UnmatchedPoolStates(uint8(state), uint8(requiredState), uint8(alternativeState)) */
              tag_1151
                /* "#utility.yul":23485:23825   */
              jump
                /* "contracts/utils/FixedLib.sol":10828:11093  if (state != requiredState && state != alternativeState) {... */
            tag_1141:
                /* "contracts/utils/FixedLib.sol":10487:11097  {... */
              pop
                /* "contracts/utils/FixedLib.sol":10370:11097  function checkPoolState(uint256 maturity, uint8 maxPools, State requiredState, State alternativeState) internal view {... */
              pop
              pop
              pop
              pop
              jump	// out
                /* "contracts/utils/FixedLib.sol":4257:4933  function accrueEarnings(Pool storage pool, uint256 maturity) internal returns (uint256 backupEarnings) {... */
            tag_546:
                /* "contracts/utils/FixedLib.sol":4388:4404  pool.lastAccrual */
              0x03
              dup3
              add
              sload
                /* "contracts/utils/FixedLib.sol":4336:4358  uint256 backupEarnings */
              0x00
              swap1
                /* "contracts/utils/FixedLib.sol":4415:4430  block.timestamp */
              timestamp
                /* "contracts/utils/FixedLib.sol":4415:4441  block.timestamp < maturity */
              dup4
              gt
                /* "contracts/utils/FixedLib.sol":4411:4929  if (block.timestamp < maturity) {... */
              iszero
              tag_1162
              jumpi
                /* "contracts/utils/FixedLib.sol":4480:4503  pool.unassignedEarnings */
              0x02
              dup5
              add
              sload
                /* "contracts/utils/FixedLib.sol":4530:4545  block.timestamp */
              timestamp
                /* "contracts/utils/FixedLib.sol":4511:4527  pool.lastAccrual */
              0x03
              dup7
              add
                /* "contracts/utils/FixedLib.sol":4511:4545  pool.lastAccrual = block.timestamp */
              dup2
              swap1
              sstore
                /* "contracts/utils/FixedLib.sol":4570:4654  unassignedEarnings.mulDivDown(block.timestamp - lastAccrual, maturity - lastAccrual) */
              tag_1163
              swap1
                /* "contracts/utils/FixedLib.sol":4600:4629  block.timestamp - lastAccrual */
              tag_1164
              swap1
                /* "contracts/utils/FixedLib.sol":4618:4629  lastAccrual */
              dup5
              swap1
                /* "contracts/utils/FixedLib.sol":4600:4629  block.timestamp - lastAccrual */
              tag_526
              jump	// in
            tag_1164:
                /* "contracts/utils/FixedLib.sol":4631:4653  maturity - lastAccrual */
              tag_1165
                /* "contracts/utils/FixedLib.sol":4642:4653  lastAccrual */
              dup5
                /* "contracts/utils/FixedLib.sol":4631:4639  maturity */
              dup8
                /* "contracts/utils/FixedLib.sol":4631:4653  maturity - lastAccrual */
              tag_526
              jump	// in
            tag_1165:
                /* "contracts/utils/FixedLib.sol":4570:4588  unassignedEarnings */
              dup4
              swap2
                /* "contracts/utils/FixedLib.sol":4570:4654  unassignedEarnings.mulDivDown(block.timestamp - lastAccrual, maturity - lastAccrual) */
              swap1
                /* "contracts/utils/FixedLib.sol":4570:4599  unassignedEarnings.mulDivDown */
              tag_479
                /* "contracts/utils/FixedLib.sol":4570:4654  unassignedEarnings.mulDivDown(block.timestamp - lastAccrual, maturity - lastAccrual) */
              jump	// in
            tag_1163:
                /* "contracts/utils/FixedLib.sol":4553:4654  backupEarnings = unassignedEarnings.mulDivDown(block.timestamp - lastAccrual, maturity - lastAccrual) */
              swap3
              pop
                /* "contracts/utils/FixedLib.sol":4688:4723  unassignedEarnings - backupEarnings */
              tag_1166
                /* "contracts/utils/FixedLib.sol":4553:4654  backupEarnings = unassignedEarnings.mulDivDown(block.timestamp - lastAccrual, maturity - lastAccrual) */
              dup4
                /* "contracts/utils/FixedLib.sol":4688:4706  unassignedEarnings */
              dup3
                /* "contracts/utils/FixedLib.sol":4688:4723  unassignedEarnings - backupEarnings */
              tag_526
              jump	// in
            tag_1166:
                /* "contracts/utils/FixedLib.sol":4662:4685  pool.unassignedEarnings */
              0x02
              dup7
              add
                /* "contracts/utils/FixedLib.sol":4662:4723  pool.unassignedEarnings = unassignedEarnings - backupEarnings */
              sstore
              pop
                /* "contracts/utils/FixedLib.sol":4411:4929  if (block.timestamp < maturity) {... */
              jump(tag_1169)
            tag_1162:
                /* "contracts/utils/FixedLib.sol":4755:4763  maturity */
              dup3
                /* "contracts/utils/FixedLib.sol":4740:4751  lastAccrual */
              dup2
                /* "contracts/utils/FixedLib.sol":4740:4763  lastAccrual == maturity */
              sub
                /* "contracts/utils/FixedLib.sol":4736:4929  if (lastAccrual == maturity) {... */
              tag_1168
              jumpi
                /* "contracts/utils/FixedLib.sol":4790:4791  0 */
              0x00
                /* "contracts/utils/FixedLib.sol":4773:4791  backupEarnings = 0 */
              swap2
              pop
                /* "contracts/utils/FixedLib.sol":4736:4929  if (lastAccrual == maturity) {... */
              jump(tag_1169)
            tag_1168:
                /* "contracts/utils/FixedLib.sol":4812:4828  pool.lastAccrual */
              0x03
              dup5
              add
                /* "contracts/utils/FixedLib.sol":4812:4839  pool.lastAccrual = maturity */
              dup4
              swap1
              sstore
                /* "contracts/utils/FixedLib.sol":4864:4887  pool.unassignedEarnings */
              0x02
              dup5
              add
              dup1
              sload
                /* "contracts/utils/FixedLib.sol":4921:4922  0 */
              0x00
                /* "contracts/utils/FixedLib.sol":4895:4922  pool.unassignedEarnings = 0 */
              swap1
              swap2
              sstore
                /* "contracts/utils/FixedLib.sol":4864:4887  pool.unassignedEarnings */
              swap2
              pop
                /* "contracts/utils/FixedLib.sol":4736:4929  if (lastAccrual == maturity) {... */
            tag_1169:
                /* "contracts/utils/FixedLib.sol":4360:4933  {... */
              pop
                /* "contracts/utils/FixedLib.sol":4257:4933  function accrueEarnings(Pool storage pool, uint256 maturity) internal returns (uint256 backupEarnings) {... */
              swap3
              swap2
              pop
              pop
              jump	// out
                /* "contracts/Market.sol":43925:44236  function spendAllowance(address account, uint256 assets) internal {... */
            tag_563:
                /* "contracts/Market.sol":44001:44011  msg.sender */
              caller
              sub(shl(0xa0, 0x01), 0x01)
                /* "contracts/Market.sol":44001:44022  msg.sender != account */
              dup4
              and
              eq
                /* "contracts/Market.sol":43997:44232  if (msg.sender != account) {... */
              tag_690
              jumpi
              sub(shl(0xa0, 0x01), 0x01)
                /* "contracts/Market.sol":44050:44068  allowance[account] */
              dup3
              and
                /* "contracts/Market.sol":44032:44047  uint256 allowed */
              0x00
                /* "contracts/Market.sol":44050:44068  allowance[account] */
              swap1
              dup2
              mstore
                /* "contracts/Market.sol":44050:44059  allowance */
              0xcd
                /* "contracts/Market.sol":44050:44068  allowance[account] */
              0x20
              swap1
              dup2
              mstore
              0x40
              dup1
              dup4
              keccak256
                /* "contracts/Market.sol":44069:44079  msg.sender */
              caller
                /* "contracts/Market.sol":44050:44080  allowance[account][msg.sender] */
              dup5
              mstore
              swap1
              swap2
              mstore
              swap1
              keccak256
              sload
              not(0x00)
                /* "contracts/Market.sol":44129:44157  allowed != type(uint256).max */
              dup2
              eq
                /* "contracts/Market.sol":44125:44225  if (allowed != type(uint256).max) allowance[account][msg.sender] = allowed - previewWithdraw(assets) */
              tag_653
              jumpi
                /* "contracts/Market.sol":44202:44225  previewWithdraw(assets) */
              tag_1173
                /* "contracts/Market.sol":44218:44224  assets */
              dup3
                /* "contracts/Market.sol":44202:44217  previewWithdraw */
              tag_150
                /* "contracts/Market.sol":44202:44225  previewWithdraw(assets) */
              jump	// in
            tag_1173:
                /* "contracts/Market.sol":44192:44225  allowed - previewWithdraw(assets) */
              tag_1174
              swap1
                /* "contracts/Market.sol":44192:44199  allowed */
              dup3
                /* "contracts/Market.sol":44192:44225  allowed - previewWithdraw(assets) */
              tag_526
              jump	// in
            tag_1174:
              sub(shl(0xa0, 0x01), 0x01)
                /* "contracts/Market.sol":44159:44177  allowance[account] */
              dup5
              and
              0x00
              swap1
              dup2
              mstore
                /* "contracts/Market.sol":44159:44168  allowance */
              0xcd
                /* "contracts/Market.sol":44159:44177  allowance[account] */
              0x20
              swap1
              dup2
              mstore
              0x40
              dup1
              dup4
              keccak256
                /* "contracts/Market.sol":44178:44188  msg.sender */
              caller
                /* "contracts/Market.sol":44159:44189  allowance[account][msg.sender] */
              dup5
              mstore
              swap1
              swap2
              mstore
              swap1
              keccak256
                /* "contracts/Market.sol":44159:44225  allowance[account][msg.sender] = allowed - previewWithdraw(assets) */
              sstore
                /* "contracts/Market.sol":44024:44232  {... */
              pop
                /* "contracts/Market.sol":43925:44236  function spendAllowance(address account, uint256 assets) internal {... */
              pop
              pop
              jump	// out
                /* "contracts/utils/FixedLib.sol":2905:3221  function borrow(Pool storage pool, uint256 amount) internal returns (uint256 backupDebtAddition) {... */
            tag_565:
                /* "contracts/utils/FixedLib.sol":3027:3040  pool.borrowed */
              dup2
              sload
                /* "contracts/utils/FixedLib.sol":2974:3000  uint256 backupDebtAddition */
              0x00
              swap1
              dup2
                /* "contracts/utils/FixedLib.sol":3068:3085  borrowed + amount */
              tag_1176
                /* "contracts/utils/FixedLib.sol":3079:3085  amount */
              dup5
                /* "contracts/utils/FixedLib.sol":3027:3040  pool.borrowed */
              dup4
                /* "contracts/utils/FixedLib.sol":3068:3085  borrowed + amount */
              tag_496
              jump	// in
            tag_1176:
                /* "contracts/utils/FixedLib.sol":3046:3085  uint256 newBorrowed = borrowed + amount */
              swap1
              pop
                /* "contracts/utils/FixedLib.sol":3127:3183  Math.min(Math.max(borrowed, pool.supplied), newBorrowed) */
              tag_1177
                /* "contracts/utils/FixedLib.sol":3136:3169  Math.max(borrowed, pool.supplied) */
              tag_1178
                /* "contracts/utils/FixedLib.sol":3145:3153  borrowed */
              dup4
                /* "contracts/utils/FixedLib.sol":3155:3159  pool */
              dup8
                /* "contracts/utils/FixedLib.sol":3155:3168  pool.supplied */
              0x01
              add
              sload
                /* "contracts/utils/FixedLib.sol":3136:3144  Math.max */
              tag_1179
                /* "contracts/utils/FixedLib.sol":3136:3169  Math.max(borrowed, pool.supplied) */
              jump	// in
            tag_1178:
                /* "contracts/utils/FixedLib.sol":3171:3182  newBorrowed */
              dup3
                /* "contracts/utils/FixedLib.sol":3127:3135  Math.min */
              tag_1180
                /* "contracts/utils/FixedLib.sol":3127:3183  Math.min(Math.max(borrowed, pool.supplied), newBorrowed) */
              jump	// in
            tag_1177:
                /* "contracts/utils/FixedLib.sol":3113:3183  newBorrowed - Math.min(Math.max(borrowed, pool.supplied), newBorrowed) */
              tag_1181
              swap1
                /* "contracts/utils/FixedLib.sol":3113:3124  newBorrowed */
              dup3
                /* "contracts/utils/FixedLib.sol":3113:3183  newBorrowed - Math.min(Math.max(borrowed, pool.supplied), newBorrowed) */
              tag_526
              jump	// in
            tag_1181:
                /* "contracts/utils/FixedLib.sol":3189:3216  pool.borrowed = newBorrowed */
              swap5
              sstore
              pop
                /* "contracts/utils/FixedLib.sol":3092:3183  backupDebtAddition = newBorrowed - Math.min(Math.max(borrowed, pool.supplied), newBorrowed) */
              swap2
              swap3
                /* "contracts/utils/FixedLib.sol":2905:3221  function borrow(Pool storage pool, uint256 amount) internal returns (uint256 backupDebtAddition) {... */
              swap2
              pop
              pop
              jump	// out
                /* "contracts/Market.sol":39495:40255  function updateFloatingDebt() internal returns (uint256 treasuryFee) {... */
            tag_570:
                /* "contracts/Market.sol":39596:39608  floatingDebt */
              sload(0xd4)
                /* "contracts/Market.sol":39642:39656  floatingAssets */
              sload(0xdd)
                /* "contracts/Market.sol":39543:39562  uint256 treasuryFee */
              0x00
              swap2
                /* "contracts/Market.sol":39596:39608  floatingDebt */
              swap1
                /* "contracts/Market.sol":39543:39562  uint256 treasuryFee */
              dup3
                /* "contracts/Market.sol":39692:39713  memFloatingAssets > 0 */
              dup2
                /* "contracts/Market.sol":39692:39763  memFloatingAssets > 0 ? memFloatingDebt.divWadUp(memFloatingAssets) : 0 */
              tag_1183
              jumpi
                /* "contracts/Market.sol":39762:39763  0 */
              0x00
                /* "contracts/Market.sol":39692:39763  memFloatingAssets > 0 ? memFloatingDebt.divWadUp(memFloatingAssets) : 0 */
              jump(tag_1185)
            tag_1183:
                /* "contracts/Market.sol":39716:39759  memFloatingDebt.divWadUp(memFloatingAssets) */
              tag_1185
                /* "contracts/Market.sol":39716:39731  memFloatingDebt */
              dup4
                /* "contracts/Market.sol":39741:39758  memFloatingAssets */
              dup4
                /* "contracts/Market.sol":39716:39740  memFloatingDebt.divWadUp */
              tag_1072
                /* "contracts/Market.sol":39716:39759  memFloatingDebt.divWadUp(memFloatingAssets) */
              jump	// in
            tag_1185:
                /* "contracts/Market.sol":39902:39924  lastFloatingDebtUpdate */
              sload(0xda)
                /* "contracts/Market.sol":39662:39763  uint256 floatingUtilization = memFloatingAssets > 0 ? memFloatingDebt.divWadUp(memFloatingAssets) : 0 */
              swap1
              swap2
              pop
                /* "contracts/Market.sol":39769:39784  uint256 newDebt */
              0x00
              swap1
                /* "contracts/Market.sol":39787:39941  memFloatingDebt.mulWadDown(... */
              tag_1186
              swap1
                /* "contracts/Market.sol":39821:39935  interestRateModel.floatingRate(floatingUtilization).mulDivDown(block.timestamp - lastFloatingDebtUpdate, 365 days) */
              tag_536
              swap1
                /* "contracts/Market.sol":39884:39924  block.timestamp - lastFloatingDebtUpdate */
              tag_1075
              swap1
              shl(0x28, 0x01)
                /* "contracts/Market.sol":39902:39924  lastFloatingDebtUpdate */
              swap1
              div
              0xffffffff
              and
                /* "contracts/Market.sol":39884:39899  block.timestamp */
              timestamp
                /* "contracts/Market.sol":39884:39924  block.timestamp - lastFloatingDebtUpdate */
              tag_526
              jump	// in
                /* "contracts/Market.sol":39787:39941  memFloatingDebt.mulWadDown(... */
            tag_1186:
                /* "contracts/Market.sol":39769:39941  uint256 newDebt = memFloatingDebt.mulWadDown(... */
              swap1
              pop
                /* "contracts/Market.sol":39948:39974  memFloatingDebt += newDebt */
              tag_1193
                /* "contracts/Market.sol":39769:39941  uint256 newDebt = memFloatingDebt.mulWadDown(... */
              dup2
                /* "contracts/Market.sol":39948:39974  memFloatingDebt += newDebt */
              dup6
              tag_496
              jump	// in
            tag_1193:
              swap4
              pop
                /* "contracts/Market.sol":39994:40029  newDebt.mulWadDown(treasuryFeeRate) */
              tag_1194
                /* "contracts/Market.sol":40013:40028  treasuryFeeRate */
              sload(0xe2)
                /* "contracts/Market.sol":39994:40001  newDebt */
              dup3
                /* "contracts/Market.sol":39994:40012  newDebt.mulWadDown */
              tag_482
              swap1
                /* "contracts/Market.sol":39994:40029  newDebt.mulWadDown(treasuryFeeRate) */
              swap2
              swap1
              0xffffffff
              and
              jump	// in
            tag_1194:
                /* "contracts/Market.sol":39980:40029  treasuryFee = newDebt.mulWadDown(treasuryFeeRate) */
              swap5
              pop
              dup5
                /* "contracts/Market.sol":40052:40079  memFloatingAssets + newDebt */
              tag_1195
                /* "contracts/Market.sol":40072:40079  newDebt */
              dup3
                /* "contracts/Market.sol":40052:40069  memFloatingAssets */
              dup6
                /* "contracts/Market.sol":40052:40079  memFloatingAssets + newDebt */
              tag_496
              jump	// in
            tag_1195:
                /* "contracts/Market.sol":40052:40093  memFloatingAssets + newDebt - treasuryFee */
              tag_1196
              swap2
              swap1
              tag_526
              jump	// in
            tag_1196:
                /* "contracts/Market.sol":40035:40049  floatingAssets */
              0xdd
                /* "contracts/Market.sol":40035:40093  floatingAssets = memFloatingAssets + newDebt - treasuryFee */
              sstore
                /* "contracts/Market.sol":40099:40111  floatingDebt */
              0xd4
                /* "contracts/Market.sol":40099:40129  floatingDebt = memFloatingDebt */
              dup5
              swap1
              sstore
                /* "contracts/Market.sol":40135:40157  lastFloatingDebtUpdate */
              0xda
                /* "contracts/Market.sol":40135:40183  lastFloatingDebtUpdate = uint32(block.timestamp) */
              dup1
              sload
              not(0xffffffff0000000000)
              and
              shl(0x28, 0x01)
                /* "contracts/Market.sol":40167:40182  block.timestamp */
              timestamp
                /* "contracts/Market.sol":40135:40183  lastFloatingDebtUpdate = uint32(block.timestamp) */
              0xffffffff
              dup2
              and
              swap2
              swap1
              swap2
              mul
              swap2
              swap1
              swap2
              or
              swap1
              swap2
              sstore
                /* "contracts/Market.sol":40194:40250  FloatingDebtUpdate(block.timestamp, floatingUtilization) */
              0x40
              dup1
              mload
                /* "#utility.yul":576:601   */
              swap2
              dup3
              mstore
                /* "#utility.yul":632:634   */
              0x20
                /* "#utility.yul":617:635   */
              dup3
              add
                /* "#utility.yul":610:644   */
              dup5
              swap1
              mstore
                /* "contracts/Market.sol":40194:40250  FloatingDebtUpdate(block.timestamp, floatingUtilization) */
              0x582b129106eba35020853cdae92ceb413a0227befcce433b67b23a630219b35f
              swap2
                /* "#utility.yul":549:567   */
              add
                /* "contracts/Market.sol":40194:40250  FloatingDebtUpdate(block.timestamp, floatingUtilization) */
              mload(0x40)
              dup1
              swap2
              sub
              swap1
              log1
                /* "contracts/Market.sol":39564:40255  {... */
              pop
              pop
              pop
              pop
                /* "contracts/Market.sol":39495:40255  function updateFloatingDebt() internal returns (uint256 treasuryFee) {... */
              swap1
              jump	// out
                /* "contracts/Market.sol":37346:37498  function depositToTreasury(uint256 fee) internal {... */
            tag_571:
                /* "contracts/Market.sol":37405:37412  fee > 0 */
              dup1
              iszero
                /* "contracts/Market.sol":37401:37494  if (fee > 0) {... */
              tag_703
              jumpi
                /* "contracts/Market.sol":37428:37436  treasury */
              sload(0xe1)
                /* "contracts/Market.sol":37422:37458  _mint(treasury, previewDeposit(fee)) */
              tag_1200
              swap1
              sub(shl(0xa0, 0x01), 0x01)
                /* "contracts/Market.sol":37428:37436  treasury */
              and
                /* "contracts/Market.sol":37438:37457  previewDeposit(fee) */
              tag_1201
                /* "contracts/Market.sol":37453:37456  fee */
              dup4
                /* "contracts/Market.sol":37438:37452  previewDeposit */
              tag_453
                /* "contracts/Market.sol":37438:37457  previewDeposit(fee) */
              jump	// in
            tag_1201:
                /* "contracts/Market.sol":37422:37427  _mint */
              tag_791
                /* "contracts/Market.sol":37422:37458  _mint(treasury, previewDeposit(fee)) */
              jump	// in
            tag_1200:
                /* "contracts/Market.sol":37484:37487  fee */
              dup1
                /* "contracts/Market.sol":37466:37480  floatingAssets */
              0xdd
              0x00
                /* "contracts/Market.sol":37466:37487  floatingAssets += fee */
              dup3
              dup3
              sload
              tag_1202
              swap2
              swap1
              tag_496
              jump	// in
            tag_1202:
              swap1
              swap2
              sstore
              pop
              pop
                /* "contracts/Market.sol":37346:37498  function depositToTreasury(uint256 fee) internal {... */
              pop
              jump	// out
                /* "contracts/utils/FixedLib.sol":7869:8767  function setMaturity(uint256 encoded, uint256 maturity) internal pure returns (uint256) {... */
            tag_579:
                /* "contracts/utils/FixedLib.sol":7948:7955  uint256 */
              0x00
                /* "contracts/utils/FixedLib.sol":8045:8052  encoded */
              dup3
                /* "contracts/utils/FixedLib.sol":8056:8057  0 */
              0x00
                /* "contracts/utils/FixedLib.sol":8045:8057  encoded == 0 */
              sub
                /* "contracts/utils/FixedLib.sol":8041:8086  if (encoded == 0) return maturity | (1 << 32) */
              tag_1204
              jumpi
              pop
                /* "contracts/utils/FixedLib.sol":8078:8085  1 << 32 */
              0x0100000000
                /* "contracts/utils/FixedLib.sol":8066:8086  maturity | (1 << 32) */
              dup2
              or
                /* "contracts/utils/FixedLib.sol":8059:8086  return maturity | (1 << 32) */
              jump(tag_487)
                /* "contracts/utils/FixedLib.sol":8041:8086  if (encoded == 0) return maturity | (1 << 32) */
            tag_1204:
                /* "contracts/utils/FixedLib.sol":8127:8140  (1 << 32) - 1 */
              0xffffffff
                /* "contracts/utils/FixedLib.sol":8116:8141  encoded & ((1 << 32) - 1) */
              dup4
              and
                /* "contracts/utils/FixedLib.sol":8151:8174  maturity < baseMaturity */
              dup1
              dup4
              lt
                /* "contracts/utils/FixedLib.sol":8147:8763  if (maturity < baseMaturity) {... */
              iszero
              tag_1205
              jumpi
                /* "contracts/utils/FixedLib.sol":8373:8386  uint256 range */
              0x00
                /* "contracts/utils/FixedLib.sol":306:313  4 weeks */
              0x24ea00
                /* "contracts/utils/FixedLib.sol":8390:8413  baseMaturity - maturity */
              tag_1206
                /* "contracts/utils/FixedLib.sol":8405:8413  maturity */
              dup6
                /* "contracts/utils/FixedLib.sol":8390:8402  baseMaturity */
              dup5
                /* "contracts/utils/FixedLib.sol":8390:8413  baseMaturity - maturity */
              tag_526
              jump	// in
            tag_1206:
                /* "contracts/utils/FixedLib.sol":8389:8425  (baseMaturity - maturity) / INTERVAL */
              tag_1207
              swap2
              swap1
              tag_1208
              jump	// in
            tag_1207:
                /* "contracts/utils/FixedLib.sol":8373:8425  uint256 range = (baseMaturity - maturity) / INTERVAL */
              swap1
              pop
                /* "contracts/utils/FixedLib.sol":8449:8460  256 - range */
              tag_1209
                /* "contracts/utils/FixedLib.sol":8373:8425  uint256 range = (baseMaturity - maturity) / INTERVAL */
              dup2
                /* "contracts/utils/FixedLib.sol":8449:8452  256 */
              0x0100
                /* "contracts/utils/FixedLib.sol":8449:8460  256 - range */
              tag_526
              jump	// in
            tag_1209:
                /* "contracts/utils/FixedLib.sol":8437:8461  encoded >> (256 - range) */
              dup6
              swap1
              shr
                /* "contracts/utils/FixedLib.sol":8437:8466  encoded >> (256 - range) != 0 */
              iszero
                /* "contracts/utils/FixedLib.sol":8433:8493  if (encoded >> (256 - range) != 0) revert MaturityOverflow() */
              tag_1210
              jumpi
                /* "contracts/utils/FixedLib.sol":8475:8493  MaturityOverflow() */
              mload(0x40)
              shl(0xe2, 0x293cc41f)
              dup2
              mstore
              0x04
              add
              mload(0x40)
              dup1
              swap2
              sub
              swap1
              revert
                /* "contracts/utils/FixedLib.sol":8433:8493  if (encoded >> (256 - range) != 0) revert MaturityOverflow() */
            tag_1210:
                /* "contracts/utils/FixedLib.sol":8532:8542  32 + range */
              tag_1211
                /* "contracts/utils/FixedLib.sol":8537:8542  range */
              dup2
                /* "contracts/utils/FixedLib.sol":8532:8534  32 */
              0x20
                /* "contracts/utils/FixedLib.sol":8532:8542  32 + range */
              tag_496
              jump	// in
            tag_1211:
                /* "contracts/utils/FixedLib.sol":8524:8526  32 */
              0x20
                /* "contracts/utils/FixedLib.sol":8513:8520  encoded */
              dup7
                /* "contracts/utils/FixedLib.sol":8513:8526  encoded >> 32 */
              swap1
              shr
                /* "contracts/utils/FixedLib.sol":8512:8543  (encoded >> 32) << (32 + range) */
              swap1
              shl
                /* "contracts/utils/FixedLib.sol":8501:8544  encoded = ((encoded >> 32) << (32 + range)) */
              swap5
              pop
                /* "contracts/utils/FixedLib.sol":8570:8577  encoded */
              dup5
                /* "contracts/utils/FixedLib.sol":8559:8567  maturity */
              dup5
                /* "contracts/utils/FixedLib.sol":8559:8577  maturity | encoded */
              or
                /* "contracts/utils/FixedLib.sol":8581:8588  1 << 32 */
              0x0100000000
                /* "contracts/utils/FixedLib.sol":8559:8589  maturity | encoded | (1 << 32) */
              or
                /* "contracts/utils/FixedLib.sol":8552:8589  return maturity | encoded | (1 << 32) */
              swap3
              pop
              pop
              pop
              jump(tag_487)
                /* "contracts/utils/FixedLib.sol":8147:8763  if (maturity < baseMaturity) {... */
            tag_1205:
                /* "contracts/utils/FixedLib.sol":8610:8623  uint256 range */
              0x00
                /* "contracts/utils/FixedLib.sol":306:313  4 weeks */
              0x24ea00
                /* "contracts/utils/FixedLib.sol":8627:8650  maturity - baseMaturity */
              tag_1213
                /* "contracts/utils/FixedLib.sol":8638:8650  baseMaturity */
              dup4
                /* "contracts/utils/FixedLib.sol":8627:8635  maturity */
              dup7
                /* "contracts/utils/FixedLib.sol":8627:8650  maturity - baseMaturity */
              tag_526
              jump	// in
            tag_1213:
                /* "contracts/utils/FixedLib.sol":8626:8662  (maturity - baseMaturity) / INTERVAL */
              tag_1214
              swap2
              swap1
              tag_1208
              jump	// in
            tag_1214:
                /* "contracts/utils/FixedLib.sol":8610:8662  uint256 range = (maturity - baseMaturity) / INTERVAL */
              swap1
              pop
                /* "contracts/utils/FixedLib.sol":8682:8685  223 */
              0xdf
                /* "contracts/utils/FixedLib.sol":8674:8679  range */
              dup2
                /* "contracts/utils/FixedLib.sol":8674:8685  range > 223 */
              gt
                /* "contracts/utils/FixedLib.sol":8670:8712  if (range > 223) revert MaturityOverflow() */
              iszero
              tag_1215
              jumpi
                /* "contracts/utils/FixedLib.sol":8694:8712  MaturityOverflow() */
              mload(0x40)
              shl(0xe2, 0x293cc41f)
              dup2
              mstore
              0x04
              add
              mload(0x40)
              dup1
              swap2
              sub
              swap1
              revert
                /* "contracts/utils/FixedLib.sol":8670:8712  if (range > 223) revert MaturityOverflow() */
            tag_1215:
                /* "contracts/utils/FixedLib.sol":8744:8754  32 + range */
              tag_1216
                /* "contracts/utils/FixedLib.sol":8749:8754  range */
              dup2
                /* "contracts/utils/FixedLib.sol":8744:8746  32 */
              0x20
                /* "contracts/utils/FixedLib.sol":8744:8754  32 + range */
              tag_496
              jump	// in
            tag_1216:
                /* "contracts/utils/FixedLib.sol":8738:8739  1 */
              0x01
                /* "contracts/utils/FixedLib.sol":8738:8755  1 << (32 + range) */
              swap1
              shl
                /* "contracts/utils/FixedLib.sol":8727:8734  encoded */
              dup6
                /* "contracts/utils/FixedLib.sol":8727:8756  encoded | (1 << (32 + range)) */
              or
                /* "contracts/utils/FixedLib.sol":8720:8756  return encoded | (1 << (32 + range)) */
              swap3
              pop
              pop
              pop
              jump(tag_487)
                /* "contracts/Market.sol":36656:36844  function chargeTreasuryFee(uint256 earnings) internal returns (uint256) {... */
            tag_582:
                /* "contracts/Market.sol":36719:36726  uint256 */
              0x00
                /* "contracts/Market.sol":36734:36745  uint256 fee */
              dup1
                /* "contracts/Market.sol":36748:36784  earnings.mulWadDown(treasuryFeeRate) */
              tag_1218
                /* "contracts/Market.sol":36768:36783  treasuryFeeRate */
              sload(0xe2)
                /* "contracts/Market.sol":36748:36756  earnings */
              dup5
                /* "contracts/Market.sol":36748:36767  earnings.mulWadDown */
              tag_482
              swap1
                /* "contracts/Market.sol":36748:36784  earnings.mulWadDown(treasuryFeeRate) */
              swap2
              swap1
              0xffffffff
              and
              jump	// in
            tag_1218:
                /* "contracts/Market.sol":36734:36784  uint256 fee = earnings.mulWadDown(treasuryFeeRate) */
              swap1
              pop
                /* "contracts/Market.sol":36790:36812  depositToTreasury(fee) */
              tag_1219
                /* "contracts/Market.sol":36808:36811  fee */
              dup2
                /* "contracts/Market.sol":36790:36807  depositToTreasury */
              tag_571
                /* "contracts/Market.sol":36790:36812  depositToTreasury(fee) */
              jump	// in
            tag_1219:
                /* "contracts/Market.sol":36825:36839  earnings - fee */
              tag_511
                /* "contracts/Market.sol":36836:36839  fee */
              dup2
                /* "contracts/Market.sol":36825:36833  earnings */
              dup5
                /* "contracts/Market.sol":36825:36839  earnings - fee */
              tag_526
              jump	// in
                /* "contracts/utils/FixedLib.sol":7177:7564  function distributeEarnings(... */
            tag_583:
                /* "contracts/utils/FixedLib.sol":7302:7328  uint256 unassignedEarnings */
              0x00
              dup1
                /* "contracts/utils/FixedLib.sol":7377:7394  borrowAmount == 0 */
              dup3
              iszero
                /* "contracts/utils/FixedLib.sol":7377:7507  borrowAmount == 0... */
              tag_1222
              jumpi
                /* "contracts/utils/FixedLib.sol":7413:7507  earnings.mulDivDown(borrowAmount - Math.min(backupSupplied(pool), borrowAmount), borrowAmount) */
              tag_1223
                /* "contracts/utils/FixedLib.sol":7448:7492  Math.min(backupSupplied(pool), borrowAmount) */
              tag_1224
                /* "contracts/utils/FixedLib.sol":7457:7477  backupSupplied(pool) */
              tag_1225
                /* "contracts/utils/FixedLib.sol":7472:7476  pool */
              dup8
                /* "contracts/utils/FixedLib.sol":7457:7471  backupSupplied */
              tag_1226
                /* "contracts/utils/FixedLib.sol":7457:7477  backupSupplied(pool) */
              jump	// in
            tag_1225:
                /* "contracts/utils/FixedLib.sol":7479:7491  borrowAmount */
              dup6
                /* "contracts/utils/FixedLib.sol":7448:7456  Math.min */
              tag_1180
                /* "contracts/utils/FixedLib.sol":7448:7492  Math.min(backupSupplied(pool), borrowAmount) */
              jump	// in
            tag_1224:
                /* "contracts/utils/FixedLib.sol":7433:7492  borrowAmount - Math.min(backupSupplied(pool), borrowAmount) */
              tag_1227
              swap1
                /* "contracts/utils/FixedLib.sol":7433:7445  borrowAmount */
              dup6
                /* "contracts/utils/FixedLib.sol":7433:7492  borrowAmount - Math.min(backupSupplied(pool), borrowAmount) */
              tag_526
              jump	// in
            tag_1227:
                /* "contracts/utils/FixedLib.sol":7413:7421  earnings */
              dup6
              swap1
                /* "contracts/utils/FixedLib.sol":7494:7506  borrowAmount */
              dup6
                /* "contracts/utils/FixedLib.sol":7413:7432  earnings.mulDivDown */
              tag_479
                /* "contracts/utils/FixedLib.sol":7413:7507  earnings.mulDivDown(borrowAmount - Math.min(backupSupplied(pool), borrowAmount), borrowAmount) */
              jump	// in
            tag_1223:
                /* "contracts/utils/FixedLib.sol":7377:7507  borrowAmount == 0... */
              jump(tag_1228)
            tag_1222:
                /* "contracts/utils/FixedLib.sol":7403:7404  0 */
              0x00
                /* "contracts/utils/FixedLib.sol":7377:7507  borrowAmount == 0... */
            tag_1228:
                /* "contracts/utils/FixedLib.sol":7360:7507  backupEarnings = borrowAmount == 0... */
              swap1
              pop
                /* "contracts/utils/FixedLib.sol":7534:7559  earnings - backupEarnings */
              tag_1229
                /* "contracts/utils/FixedLib.sol":7360:7507  backupEarnings = borrowAmount == 0... */
              dup2
                /* "contracts/utils/FixedLib.sol":7534:7542  earnings */
              dup6
                /* "contracts/utils/FixedLib.sol":7534:7559  earnings - backupEarnings */
              tag_526
              jump	// in
            tag_1229:
                /* "contracts/utils/FixedLib.sol":7513:7559  unassignedEarnings = earnings - backupEarnings */
              swap2
              pop
                /* "contracts/utils/FixedLib.sol":7177:7564  function distributeEarnings(... */
              swap4
              pop
              swap4
              swap2
              pop
              pop
              jump	// out
                /* "contracts/Market.sol":37002:37216  function collectFreeLunch(uint256 earnings) internal {... */
            tag_587:
                /* "contracts/Market.sol":37065:37073  earnings */
              dup1
                /* "contracts/Market.sol":37077:37078  0 */
              0x00
                /* "contracts/Market.sol":37065:37078  earnings == 0 */
              sub
                /* "contracts/Market.sol":37061:37087  if (earnings == 0) return; */
              tag_1231
              jumpi
                /* "contracts/Market.sol":37002:37216  function collectFreeLunch(uint256 earnings) internal {... */
              pop
              jump	// out
                /* "contracts/Market.sol":37061:37087  if (earnings == 0) return; */
            tag_1231:
                /* "contracts/Market.sol":37097:37112  treasuryFeeRate */
              sload(0xe2)
                /* "contracts/Market.sol":37097:37116  treasuryFeeRate > 0 */
              iszero
                /* "contracts/Market.sol":37093:37212  if (treasuryFeeRate > 0) {... */
              tag_1232
              jumpi
                /* "contracts/Market.sol":37126:37153  depositToTreasury(earnings) */
              tag_703
                /* "contracts/Market.sol":37144:37152  earnings */
              dup2
                /* "contracts/Market.sol":37126:37143  depositToTreasury */
              tag_571
                /* "contracts/Market.sol":37126:37153  depositToTreasury(earnings) */
              jump	// in
                /* "contracts/Market.sol":37093:37212  if (treasuryFeeRate > 0) {... */
            tag_1232:
                /* "contracts/Market.sol":37197:37205  earnings */
              dup1
                /* "contracts/Market.sol":37174:37193  earningsAccumulator */
              0xd5
              0x00
                /* "contracts/Market.sol":37174:37205  earningsAccumulator += earnings */
              dup3
              dup3
              sload
              tag_1202
              swap2
              swap1
              tag_496
              jump	// in
                /* "contracts/Market.sol":45301:45464  function emitFixedEarningsUpdate(uint256 maturity) internal {... */
            tag_595:
                /* "contracts/Market.sol":45419:45439  fixedPools[maturity] */
              0x00
              dup2
              dup2
              mstore
                /* "contracts/Market.sol":45419:45429  fixedPools */
              0xd1
                /* "contracts/Market.sol":45419:45439  fixedPools[maturity] */
              0x20
              swap1
              dup2
              mstore
              0x40
              swap2
              dup3
              swap1
              keccak256
                /* "contracts/Market.sol":45419:45458  fixedPools[maturity].unassignedEarnings */
              0x02
              add
              sload
                /* "contracts/Market.sol":45372:45459  FixedEarningsUpdate(block.timestamp, maturity, fixedPools[maturity].unassignedEarnings) */
              dup3
              mload
                /* "contracts/Market.sol":45392:45407  block.timestamp */
              timestamp
                /* "#utility.yul":576:601   */
              dup2
              mstore
                /* "#utility.yul":617:635   */
              swap2
              dup3
              add
                /* "#utility.yul":610:644   */
              mstore
                /* "contracts/Market.sol":45419:45439  fixedPools[maturity] */
              dup3
              swap2
                /* "contracts/Market.sol":45372:45459  FixedEarningsUpdate(block.timestamp, maturity, fixedPools[maturity].unassignedEarnings) */
              0xa2e6044136bec58e0605f40ac11a7bf87f1a8bdf3e2588b11b2cfae5acd9109f
              swap2
                /* "#utility.yul":549:567   */
              add
                /* "contracts/Market.sol":45372:45459  FixedEarningsUpdate(block.timestamp, maturity, fixedPools[maturity].unassignedEarnings) */
              mload(0x40)
              dup1
              swap2
              sub
              swap1
              log2
                /* "contracts/Market.sol":45301:45464  function emitFixedEarningsUpdate(uint256 maturity) internal {... */
              pop
              jump	// out
                /* "node_modules/solmate/src/utils/SafeTransferLib.sol":2616:4026  function safeTransfer(... */
            tag_602:
                /* "node_modules/solmate/src/utils/SafeTransferLib.sol":2728:2740  bool success */
              0x00
                /* "node_modules/solmate/src/utils/SafeTransferLib.sol":2880:2884  0x40 */
              0x40
                /* "node_modules/solmate/src/utils/SafeTransferLib.sol":2874:2885  mload(0x40) */
              mload
              shl(0xe0, 0xa9059cbb)
                /* "node_modules/solmate/src/utils/SafeTransferLib.sol":3003:3004  0 */
              0x00
                /* "node_modules/solmate/src/utils/SafeTransferLib.sol":2996:3073  mstore(0, 0xa9059cbb00000000000000000000000000000000000000000000000000000000) */
              mstore
                /* "node_modules/solmate/src/utils/SafeTransferLib.sol":3096:3098  to */
              dup4
                /* "node_modules/solmate/src/utils/SafeTransferLib.sol":3093:3094  4 */
              0x04
                /* "node_modules/solmate/src/utils/SafeTransferLib.sol":3086:3099  mstore(4, to) */
              mstore
                /* "node_modules/solmate/src/utils/SafeTransferLib.sol":3152:3158  amount */
              dup3
                /* "node_modules/solmate/src/utils/SafeTransferLib.sol":3148:3150  36 */
              0x24
                /* "node_modules/solmate/src/utils/SafeTransferLib.sol":3141:3159  mstore(36, amount) */
              mstore
                /* "node_modules/solmate/src/utils/SafeTransferLib.sol":3820:3822  32 */
              0x20
                /* "node_modules/solmate/src/utils/SafeTransferLib.sol":3817:3818  0 */
              0x00
                /* "node_modules/solmate/src/utils/SafeTransferLib.sol":3813:3815  68 */
              0x44
                /* "node_modules/solmate/src/utils/SafeTransferLib.sol":3810:3811  0 */
              0x00
                /* "node_modules/solmate/src/utils/SafeTransferLib.sol":3807:3808  0 */
              dup1
                /* "node_modules/solmate/src/utils/SafeTransferLib.sol":3800:3805  token */
              dup10
                /* "node_modules/solmate/src/utils/SafeTransferLib.sol":3793:3798  gas() */
              gas
                /* "node_modules/solmate/src/utils/SafeTransferLib.sol":3788:3823  call(gas(), token, 0, 0, 68, 0, 32) */
              call
                /* "node_modules/solmate/src/utils/SafeTransferLib.sol":3475:3491  returndatasize() */
              returndatasize
                /* "node_modules/solmate/src/utils/SafeTransferLib.sol":3468:3492  iszero(returndatasize()) */
              iszero
                /* "node_modules/solmate/src/utils/SafeTransferLib.sol":3462:3464  31 */
              0x1f
                /* "node_modules/solmate/src/utils/SafeTransferLib.sol":3444:3460  returndatasize() */
              returndatasize
                /* "node_modules/solmate/src/utils/SafeTransferLib.sol":3441:3465  gt(returndatasize(), 31) */
              gt
                /* "node_modules/solmate/src/utils/SafeTransferLib.sol":3437:3438  1 */
              0x01
                /* "node_modules/solmate/src/utils/SafeTransferLib.sol":3433:3434  0 */
              0x00
                /* "node_modules/solmate/src/utils/SafeTransferLib.sol":3427:3435  mload(0) */
              mload
                /* "node_modules/solmate/src/utils/SafeTransferLib.sol":3424:3439  eq(mload(0), 1) */
              eq
                /* "node_modules/solmate/src/utils/SafeTransferLib.sol":3420:3466  and(eq(mload(0), 1), gt(returndatasize(), 31)) */
              and
                /* "node_modules/solmate/src/utils/SafeTransferLib.sol":3417:3493  or(and(eq(mload(0), 1), gt(returndatasize(), 31)), iszero(returndatasize())) */
              or
                /* "node_modules/solmate/src/utils/SafeTransferLib.sol":3217:3837  and(... */
              and
                /* "node_modules/solmate/src/utils/SafeTransferLib.sol":3206:3837  success := and(... */
              swap2
              pop
                /* "node_modules/solmate/src/utils/SafeTransferLib.sol":3864:3865  0 */
              0x00
                /* "node_modules/solmate/src/utils/SafeTransferLib.sol":3858:3862  0x60 */
              0x60
                /* "node_modules/solmate/src/utils/SafeTransferLib.sol":3851:3866  mstore(0x60, 0) */
              mstore
                /* "node_modules/solmate/src/utils/SafeTransferLib.sol":3926:3936  memPointer */
              dup1
                /* "node_modules/solmate/src/utils/SafeTransferLib.sol":3920:3924  0x40 */
              0x40
                /* "node_modules/solmate/src/utils/SafeTransferLib.sol":3913:3937  mstore(0x40, memPointer) */
              mstore
              pop
                /* "node_modules/solmate/src/utils/SafeTransferLib.sol":3992:3999  success */
              dup1
                /* "node_modules/solmate/src/utils/SafeTransferLib.sol":3984:4019  require(success, "TRANSFER_FAILED") */
              tag_1239
              jumpi
              0x00
              dup1
              revert
            tag_1239:
                /* "node_modules/solmate/src/utils/SafeTransferLib.sol":2718:4026  {... */
              pop
                /* "node_modules/solmate/src/utils/SafeTransferLib.sol":2616:4026  function safeTransfer(... */
              pop
              pop
              pop
              jump	// out
                /* "node_modules/solmate/src/tokens/ERC20.sol":3044:3636  function transferFrom(... */
            tag_635:
              sub(shl(0xa0, 0x01), 0x01)
                /* "node_modules/solmate/src/tokens/ERC20.sol":3196:3211  allowance[from] */
              dup4
              and
                /* "node_modules/solmate/src/tokens/ERC20.sol":3162:3166  bool */
              0x00
                /* "node_modules/solmate/src/tokens/ERC20.sol":3196:3211  allowance[from] */
              swap1
              dup2
              mstore
                /* "node_modules/solmate/src/tokens/ERC20.sol":3196:3205  allowance */
              0xcd
                /* "node_modules/solmate/src/tokens/ERC20.sol":3196:3211  allowance[from] */
              0x20
              swap1
              dup2
              mstore
              0x40
              dup1
              dup4
              keccak256
                /* "node_modules/solmate/src/tokens/ERC20.sol":3212:3222  msg.sender */
              caller
                /* "node_modules/solmate/src/tokens/ERC20.sol":3196:3223  allowance[from][msg.sender] */
              dup5
              mstore
              swap1
              swap2
              mstore
              dup2
              keccak256
              sload
              not(0x00)
                /* "node_modules/solmate/src/tokens/ERC20.sol":3274:3302  allowed != type(uint256).max */
              dup2
              eq
                /* "node_modules/solmate/src/tokens/ERC20.sol":3270:3350  if (allowed != type(uint256).max) allowance[from][msg.sender] = allowed - amount */
              tag_1241
              jumpi
                /* "node_modules/solmate/src/tokens/ERC20.sol":3334:3350  allowed - amount */
              tag_1242
                /* "node_modules/solmate/src/tokens/ERC20.sol":3344:3350  amount */
              dup4
                /* "node_modules/solmate/src/tokens/ERC20.sol":3334:3341  allowed */
              dup3
                /* "node_modules/solmate/src/tokens/ERC20.sol":3334:3350  allowed - amount */
              tag_526
              jump	// in
            tag_1242:
              sub(shl(0xa0, 0x01), 0x01)
                /* "node_modules/solmate/src/tokens/ERC20.sol":3304:3319  allowance[from] */
              dup7
              and
              0x00
              swap1
              dup2
              mstore
                /* "node_modules/solmate/src/tokens/ERC20.sol":3304:3313  allowance */
              0xcd
                /* "node_modules/solmate/src/tokens/ERC20.sol":3304:3319  allowance[from] */
              0x20
              swap1
              dup2
              mstore
              0x40
              dup1
              dup4
              keccak256
                /* "node_modules/solmate/src/tokens/ERC20.sol":3320:3330  msg.sender */
              caller
                /* "node_modules/solmate/src/tokens/ERC20.sol":3304:3331  allowance[from][msg.sender] */
              dup5
              mstore
              swap1
              swap2
              mstore
              swap1
              keccak256
                /* "node_modules/solmate/src/tokens/ERC20.sol":3304:3350  allowance[from][msg.sender] = allowed - amount */
              sstore
                /* "node_modules/solmate/src/tokens/ERC20.sol":3270:3350  if (allowed != type(uint256).max) allowance[from][msg.sender] = allowed - amount */
            tag_1241:
              sub(shl(0xa0, 0x01), 0x01)
                /* "node_modules/solmate/src/tokens/ERC20.sol":3361:3376  balanceOf[from] */
              dup6
              and
              0x00
              swap1
              dup2
              mstore
                /* "node_modules/solmate/src/tokens/ERC20.sol":3361:3370  balanceOf */
              0xcc
                /* "node_modules/solmate/src/tokens/ERC20.sol":3361:3376  balanceOf[from] */
              0x20
              mstore
              0x40
              dup2
              keccak256
                /* "node_modules/solmate/src/tokens/ERC20.sol":3361:3386  balanceOf[from] -= amount */
              dup1
              sload
                /* "node_modules/solmate/src/tokens/ERC20.sol":3380:3386  amount */
              dup6
              swap3
                /* "node_modules/solmate/src/tokens/ERC20.sol":3361:3376  balanceOf[from] */
              swap1
                /* "node_modules/solmate/src/tokens/ERC20.sol":3361:3386  balanceOf[from] -= amount */
              tag_1243
              swap1
                /* "node_modules/solmate/src/tokens/ERC20.sol":3380:3386  amount */
              dup5
              swap1
                /* "node_modules/solmate/src/tokens/ERC20.sol":3361:3386  balanceOf[from] -= amount */
              tag_526
              jump	// in
            tag_1243:
              swap1
              swap2
              sstore
              pop
              pop
              sub(shl(0xa0, 0x01), 0x01)
                /* "node_modules/solmate/src/tokens/ERC20.sol":3532:3545  balanceOf[to] */
              dup1
              dup6
              and
              0x00
              dup2
              dup2
              mstore
                /* "node_modules/solmate/src/tokens/ERC20.sol":3532:3541  balanceOf */
              0xcc
                /* "node_modules/solmate/src/tokens/ERC20.sol":3532:3545  balanceOf[to] */
              0x20
              mstore
              0x40
              swap1
              dup2
              swap1
              keccak256
                /* "node_modules/solmate/src/tokens/ERC20.sol":3532:3555  balanceOf[to] += amount */
              dup1
              sload
              dup8
              add
              swap1
              sstore
                /* "node_modules/solmate/src/tokens/ERC20.sol":3581:3607  Transfer(from, to, amount) */
              mload
                /* "node_modules/solmate/src/tokens/ERC20.sol":3532:3545  balanceOf[to] */
              swap1
              swap2
                /* "node_modules/solmate/src/tokens/ERC20.sol":3581:3607  Transfer(from, to, amount) */
              dup8
              and
              swap1
              0x00
              dup1
              mload
              0x20
              data_ada389e1fc24a8587c776340efb91b36e675792ab631816100d55df0b5cf3cbc
              dup4
              codecopy
              dup2
              mload
              swap2
              mstore
              swap1
              tag_1244
              swap1
                /* "node_modules/solmate/src/tokens/ERC20.sol":3549:3555  amount */
              dup8
                /* "#utility.yul":801:826   */
              dup2
              mstore
                /* "#utility.yul":789:791   */
              0x20
                /* "#utility.yul":774:792   */
              add
              swap1
                /* "#utility.yul":655:832   */
              jump
                /* "node_modules/solmate/src/tokens/ERC20.sol":3581:3607  Transfer(from, to, amount) */
            tag_1244:
              mload(0x40)
              dup1
              swap2
              sub
              swap1
              log3
              pop
                /* "node_modules/solmate/src/tokens/ERC20.sol":3625:3629  true */
              0x01
              swap5
                /* "node_modules/solmate/src/tokens/ERC20.sol":3044:3636  function transferFrom(... */
              swap4
              pop
              pop
              pop
              pop
              jump	// out
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":7791:8024  function _grantRole(bytes32 role, address account) internal virtual {... */
            tag_654:
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":7874:7896  hasRole(role, account) */
              tag_1246
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":7882:7886  role */
              dup3
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":7888:7895  account */
              dup3
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":7874:7881  hasRole */
              tag_332
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":7874:7896  hasRole(role, account) */
              jump	// in
            tag_1246:
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":7869:8018  if (!hasRole(role, account)) {... */
              tag_690
              jumpi
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":7912:7924  _roles[role] */
              0x00
              dup3
              dup2
              mstore
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":7912:7918  _roles */
              0x65
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":7912:7924  _roles[role] */
              0x20
              swap1
              dup2
              mstore
              0x40
              dup1
              dup4
              keccak256
              sub(shl(0xa0, 0x01), 0x01)
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":7912:7941  _roles[role].members[account] */
              dup6
              and
              dup5
              mstore
              swap1
              swap2
              mstore
              swap1
              keccak256
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":7912:7948  _roles[role].members[account] = true */
              dup1
              sload
              not(0xff)
              and
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":7944:7948  true */
              0x01
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":7912:7948  _roles[role].members[account] = true */
              or
              swap1
              sstore
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":7994:8006  _msgSender() */
              tag_1248
                /* "node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":929:939  msg.sender */
              caller
              swap1
                /* "node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":850:946  function _msgSender() internal view virtual returns (address) {... */
              jump
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":7994:8006  _msgSender() */
            tag_1248:
              sub(shl(0xa0, 0x01), 0x01)
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":7967:8007  RoleGranted(role, account, _msgSender()) */
              and
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":7985:7992  account */
              dup2
              sub(shl(0xa0, 0x01), 0x01)
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":7967:8007  RoleGranted(role, account, _msgSender()) */
              and
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":7979:7983  role */
              dup4
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":7967:8007  RoleGranted(role, account, _msgSender()) */
              0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d
              mload(0x40)
              mload(0x40)
              dup1
              swap2
              sub
              swap1
              log4
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":7791:8024  function _grantRole(bytes32 role, address account) internal virtual {... */
              pop
              pop
              jump	// out
                /* "contracts/utils/FixedLib.sol":813:1251  function calculateDeposit(... */
            tag_662:
                /* "contracts/utils/FixedLib.sol":935:948  uint256 yield */
              0x00
                /* "contracts/utils/FixedLib.sol":950:967  uint256 backupFee */
              dup1
                /* "contracts/utils/FixedLib.sol":975:1000  uint256 memBackupSupplied */
              0x00
                /* "contracts/utils/FixedLib.sol":1003:1023  backupSupplied(pool) */
              tag_1250
                /* "contracts/utils/FixedLib.sol":1018:1022  pool */
              dup7
                /* "contracts/utils/FixedLib.sol":1003:1017  backupSupplied */
              tag_1226
                /* "contracts/utils/FixedLib.sol":1003:1023  backupSupplied(pool) */
              jump	// in
            tag_1250:
                /* "contracts/utils/FixedLib.sol":975:1023  uint256 memBackupSupplied = backupSupplied(pool) */
              swap1
              pop
                /* "contracts/utils/FixedLib.sol":1033:1055  memBackupSupplied != 0 */
              dup1
              iszero
                /* "contracts/utils/FixedLib.sol":1029:1247  if (memBackupSupplied != 0) {... */
              tag_1251
              jumpi
                /* "contracts/utils/FixedLib.sol":1073:1163  pool.unassignedEarnings.mulDivDown(Math.min(amount, memBackupSupplied), memBackupSupplied) */
              tag_1252
                /* "contracts/utils/FixedLib.sol":1108:1143  Math.min(amount, memBackupSupplied) */
              tag_1253
                /* "contracts/utils/FixedLib.sol":1117:1123  amount */
              dup7
                /* "contracts/utils/FixedLib.sol":1125:1142  memBackupSupplied */
              dup4
                /* "contracts/utils/FixedLib.sol":1108:1116  Math.min */
              tag_1180
                /* "contracts/utils/FixedLib.sol":1108:1143  Math.min(amount, memBackupSupplied) */
              jump	// in
            tag_1253:
                /* "contracts/utils/FixedLib.sol":1073:1096  pool.unassignedEarnings */
              0x40
              dup9
              add
              mload
              swap1
                /* "contracts/utils/FixedLib.sol":1145:1162  memBackupSupplied */
              dup4
                /* "contracts/utils/FixedLib.sol":1073:1107  pool.unassignedEarnings.mulDivDown */
              tag_479
                /* "contracts/utils/FixedLib.sol":1073:1163  pool.unassignedEarnings.mulDivDown(Math.min(amount, memBackupSupplied), memBackupSupplied) */
              jump	// in
            tag_1252:
                /* "contracts/utils/FixedLib.sol":1065:1163  yield = pool.unassignedEarnings.mulDivDown(Math.min(amount, memBackupSupplied), memBackupSupplied) */
              swap3
              pop
                /* "contracts/utils/FixedLib.sol":1183:1214  yield.mulWadDown(backupFeeRate) */
              tag_1254
                /* "contracts/utils/FixedLib.sol":1065:1163  yield = pool.unassignedEarnings.mulDivDown(Math.min(amount, memBackupSupplied), memBackupSupplied) */
              dup4
                /* "contracts/utils/FixedLib.sol":1200:1213  backupFeeRate */
              dup6
                /* "contracts/utils/FixedLib.sol":1183:1199  yield.mulWadDown */
              tag_482
                /* "contracts/utils/FixedLib.sol":1183:1214  yield.mulWadDown(backupFeeRate) */
              jump	// in
            tag_1254:
                /* "contracts/utils/FixedLib.sol":1171:1214  backupFee = yield.mulWadDown(backupFeeRate) */
              swap2
              pop
                /* "contracts/utils/FixedLib.sol":1222:1240  yield -= backupFee */
              tag_1255
                /* "contracts/utils/FixedLib.sol":1171:1214  backupFee = yield.mulWadDown(backupFeeRate) */
              dup3
                /* "contracts/utils/FixedLib.sol":1222:1240  yield -= backupFee */
              dup5
              tag_526
              jump	// in
            tag_1255:
              swap3
              pop
                /* "contracts/utils/FixedLib.sol":1029:1247  if (memBackupSupplied != 0) {... */
            tag_1251:
                /* "contracts/utils/FixedLib.sol":969:1251  {... */
              pop
                /* "contracts/utils/FixedLib.sol":813:1251  function calculateDeposit(... */
              swap4
              pop
              swap4
              swap2
              pop
              pop
              jump	// out
                /* "contracts/utils/FixedLib.sol":1580:1884  function deposit(Pool storage pool, uint256 amount) internal returns (uint256 backupDebtReduction) {... */
            tag_666:
                /* "contracts/utils/FixedLib.sol":1704:1717  pool.borrowed */
              dup2
              sload
                /* "contracts/utils/FixedLib.sol":1742:1755  pool.supplied */
              0x01
              dup4
              add
              sload
                /* "contracts/utils/FixedLib.sol":1650:1677  uint256 backupDebtReduction */
              0x00
              swap2
                /* "contracts/utils/FixedLib.sol":1704:1717  pool.borrowed */
              swap1
                /* "contracts/utils/FixedLib.sol":1777:1794  supplied + amount */
              tag_1257
                /* "contracts/utils/FixedLib.sol":1788:1794  amount */
              dup5
                /* "contracts/utils/FixedLib.sol":1742:1755  pool.supplied */
              dup3
                /* "contracts/utils/FixedLib.sol":1777:1794  supplied + amount */
              tag_496
              jump	// in
            tag_1257:
                /* "contracts/utils/FixedLib.sol":1761:1774  pool.supplied */
              0x01
              dup7
              add
                /* "contracts/utils/FixedLib.sol":1761:1794  pool.supplied = supplied + amount */
              sstore
                /* "contracts/utils/FixedLib.sol":1822:1879  Math.min(borrowed - Math.min(borrowed, supplied), amount) */
              tag_634
                /* "contracts/utils/FixedLib.sol":1842:1870  Math.min(borrowed, supplied) */
              tag_1259
                /* "contracts/utils/FixedLib.sol":1851:1859  borrowed */
              dup4
                /* "contracts/utils/FixedLib.sol":1861:1869  supplied */
              dup4
                /* "contracts/utils/FixedLib.sol":1842:1850  Math.min */
              tag_1180
                /* "contracts/utils/FixedLib.sol":1842:1870  Math.min(borrowed, supplied) */
              jump	// in
            tag_1259:
                /* "contracts/utils/FixedLib.sol":1831:1870  borrowed - Math.min(borrowed, supplied) */
              tag_1225
              swap1
                /* "contracts/utils/FixedLib.sol":1831:1839  borrowed */
              dup5
                /* "contracts/utils/FixedLib.sol":1831:1870  borrowed - Math.min(borrowed, supplied) */
              tag_526
              jump	// in
                /* "node_modules/solmate/src/utils/SafeTransferLib.sol":1107:2610  function safeTransferFrom(... */
            tag_680:
                /* "node_modules/solmate/src/utils/SafeTransferLib.sol":1245:1257  bool success */
              0x00
                /* "node_modules/solmate/src/utils/SafeTransferLib.sol":1397:1401  0x40 */
              0x40
                /* "node_modules/solmate/src/utils/SafeTransferLib.sol":1391:1402  mload(0x40) */
              mload
              shl(0xe0, 0x23b872dd)
                /* "node_modules/solmate/src/utils/SafeTransferLib.sol":1520:1521  0 */
              0x00
                /* "node_modules/solmate/src/utils/SafeTransferLib.sol":1513:1590  mstore(0, 0x23b872dd00000000000000000000000000000000000000000000000000000000) */
              mstore
                /* "node_modules/solmate/src/utils/SafeTransferLib.sol":1613:1617  from */
              dup5
                /* "node_modules/solmate/src/utils/SafeTransferLib.sol":1610:1611  4 */
              0x04
                /* "node_modules/solmate/src/utils/SafeTransferLib.sol":1603:1618  mstore(4, from) */
              mstore
                /* "node_modules/solmate/src/utils/SafeTransferLib.sol":1673:1675  to */
              dup4
                /* "node_modules/solmate/src/utils/SafeTransferLib.sol":1669:1671  36 */
              0x24
                /* "node_modules/solmate/src/utils/SafeTransferLib.sol":1662:1676  mstore(36, to) */
              mstore
                /* "node_modules/solmate/src/utils/SafeTransferLib.sol":1729:1735  amount */
              dup3
                /* "node_modules/solmate/src/utils/SafeTransferLib.sol":1725:1727  68 */
              0x44
                /* "node_modules/solmate/src/utils/SafeTransferLib.sol":1718:1736  mstore(68, amount) */
              mstore
                /* "node_modules/solmate/src/utils/SafeTransferLib.sol":2399:2401  32 */
              0x20
                /* "node_modules/solmate/src/utils/SafeTransferLib.sol":2396:2397  0 */
              0x00
                /* "node_modules/solmate/src/utils/SafeTransferLib.sol":2391:2394  100 */
              0x64
                /* "node_modules/solmate/src/utils/SafeTransferLib.sol":2388:2389  0 */
              0x00
                /* "node_modules/solmate/src/utils/SafeTransferLib.sol":2385:2386  0 */
              dup1
                /* "node_modules/solmate/src/utils/SafeTransferLib.sol":2378:2383  token */
              dup11
                /* "node_modules/solmate/src/utils/SafeTransferLib.sol":2371:2376  gas() */
              gas
                /* "node_modules/solmate/src/utils/SafeTransferLib.sol":2366:2402  call(gas(), token, 0, 0, 100, 0, 32) */
              call
                /* "node_modules/solmate/src/utils/SafeTransferLib.sol":2052:2068  returndatasize() */
              returndatasize
                /* "node_modules/solmate/src/utils/SafeTransferLib.sol":2045:2069  iszero(returndatasize()) */
              iszero
                /* "node_modules/solmate/src/utils/SafeTransferLib.sol":2039:2041  31 */
              0x1f
                /* "node_modules/solmate/src/utils/SafeTransferLib.sol":2021:2037  returndatasize() */
              returndatasize
                /* "node_modules/solmate/src/utils/SafeTransferLib.sol":2018:2042  gt(returndatasize(), 31) */
              gt
                /* "node_modules/solmate/src/utils/SafeTransferLib.sol":2014:2015  1 */
              0x01
                /* "node_modules/solmate/src/utils/SafeTransferLib.sol":2010:2011  0 */
              0x00
                /* "node_modules/solmate/src/utils/SafeTransferLib.sol":2004:2012  mload(0) */
              mload
                /* "node_modules/solmate/src/utils/SafeTransferLib.sol":2001:2016  eq(mload(0), 1) */
              eq
                /* "node_modules/solmate/src/utils/SafeTransferLib.sol":1997:2043  and(eq(mload(0), 1), gt(returndatasize(), 31)) */
              and
                /* "node_modules/solmate/src/utils/SafeTransferLib.sol":1994:2070  or(and(eq(mload(0), 1), gt(returndatasize(), 31)), iszero(returndatasize())) */
              or
                /* "node_modules/solmate/src/utils/SafeTransferLib.sol":1794:2416  and(... */
              and
                /* "node_modules/solmate/src/utils/SafeTransferLib.sol":1783:2416  success := and(... */
              swap2
              pop
                /* "node_modules/solmate/src/utils/SafeTransferLib.sol":2443:2444  0 */
              0x00
                /* "node_modules/solmate/src/utils/SafeTransferLib.sol":2437:2441  0x60 */
              0x60
                /* "node_modules/solmate/src/utils/SafeTransferLib.sol":2430:2445  mstore(0x60, 0) */
              mstore
                /* "node_modules/solmate/src/utils/SafeTransferLib.sol":2505:2515  memPointer */
              dup1
                /* "node_modules/solmate/src/utils/SafeTransferLib.sol":2499:2503  0x40 */
              0x40
                /* "node_modules/solmate/src/utils/SafeTransferLib.sol":2492:2516  mstore(0x40, memPointer) */
              mstore
              pop
                /* "node_modules/solmate/src/utils/SafeTransferLib.sol":2571:2578  success */
              dup1
                /* "node_modules/solmate/src/utils/SafeTransferLib.sol":2563:2603  require(success, "TRANSFER_FROM_FAILED") */
              tag_1141
              jumpi
              0x00
              dup1
              revert
                /* "node_modules/solmate/src/tokens/ERC20.sol":5497:5943  function computeDomainSeparator() internal view virtual returns (bytes32) {... */
            tag_684:
                /* "node_modules/solmate/src/tokens/ERC20.sol":5562:5569  bytes32 */
              0x00
                /* "node_modules/solmate/src/tokens/ERC20.sol":5659:5754  keccak256("EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)") */
              0x8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f
                /* "node_modules/solmate/src/tokens/ERC20.sol":5792:5796  name */
              0xc9
                /* "node_modules/solmate/src/tokens/ERC20.sol":5776:5798  keccak256(bytes(name)) */
              mload(0x40)
              tag_1264
              swap2
              swap1
              tag_1265
              jump	// in
            tag_1264:
              0x40
              dup1
              mload
              swap2
              dup3
              swap1
              sub
              dup3
              keccak256
                /* "node_modules/solmate/src/tokens/ERC20.sol":5627:5922  abi.encode(... */
              0x20
              dup4
              add
                /* "#utility.yul":25063:25088   */
              swap4
              swap1
              swap4
              mstore
                /* "#utility.yul":25104:25122   */
              dup2
              add
                /* "#utility.yul":25097:25131   */
              swap2
              swap1
              swap2
              mstore
                /* "node_modules/solmate/src/tokens/ERC20.sol":5820:5834  keccak256("1") */
              0xc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6
                /* "#utility.yul":25147:25165   */
              0x60
              dup3
              add
                /* "#utility.yul":25140:25174   */
              mstore
                /* "node_modules/solmate/src/tokens/ERC20.sol":5856:5869  block.chainid */
              chainid
                /* "#utility.yul":25190:25208   */
              0x80
              dup3
              add
                /* "#utility.yul":25183:25217   */
              mstore
                /* "node_modules/solmate/src/tokens/ERC20.sol":5899:5903  this */
              address
                /* "#utility.yul":25233:25252   */
              0xa0
              dup3
              add
                /* "#utility.yul":25226:25287   */
              mstore
                /* "#utility.yul":25035:25054   */
              0xc0
              add
                /* "node_modules/solmate/src/tokens/ERC20.sol":5627:5922  abi.encode(... */
              mload(0x40)
              0x20
              dup2
              dup4
              sub
              sub
              dup2
              mstore
              swap1
              0x40
              mstore
                /* "node_modules/solmate/src/tokens/ERC20.sol":5600:5936  keccak256(... */
              dup1
              mload
              swap1
              0x20
              add
              keccak256
                /* "node_modules/solmate/src/tokens/ERC20.sol":5581:5936  return... */
              swap1
              pop
                /* "node_modules/solmate/src/tokens/ERC20.sol":5497:5943  function computeDomainSeparator() internal view virtual returns (bytes32) {... */
              swap1
              jump	// out
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":8195:8429  function _revokeRole(bytes32 role, address account) internal virtual {... */
            tag_691:
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":8278:8300  hasRole(role, account) */
              tag_1270
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":8286:8290  role */
              dup3
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":8292:8299  account */
              dup3
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":8278:8285  hasRole */
              tag_332
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":8278:8300  hasRole(role, account) */
              jump	// in
            tag_1270:
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":8274:8423  if (hasRole(role, account)) {... */
              iszero
              tag_690
              jumpi
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":8348:8353  false */
              0x00
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":8316:8328  _roles[role] */
              dup3
              dup2
              mstore
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":8316:8322  _roles */
              0x65
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":8316:8328  _roles[role] */
              0x20
              swap1
              dup2
              mstore
              0x40
              dup1
              dup4
              keccak256
              sub(shl(0xa0, 0x01), 0x01)
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":8316:8345  _roles[role].members[account] */
              dup6
              and
              dup1
              dup6
              mstore
              swap3
              mstore
              dup1
              dup4
              keccak256
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":8316:8353  _roles[role].members[account] = false */
              dup1
              sload
              not(0xff)
              and
              swap1
              sstore
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":8372:8412  RoleRevoked(role, account, _msgSender()) */
              mload
                /* "node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":929:939  msg.sender */
              caller
              swap3
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":8316:8328  _roles[role] */
              dup6
              swap2
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":8372:8412  RoleRevoked(role, account, _msgSender()) */
              0xf6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b
              swap2
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":8348:8353  false */
              swap1
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":8372:8412  RoleRevoked(role, account, _msgSender()) */
              log4
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":8195:8429  function _revokeRole(bytes32 role, address account) internal virtual {... */
              pop
              pop
              jump	// out
                /* "contracts/Market.sol":19842:22595  function noTransferRepayAtMaturity(... */
            tag_697:
                /* "contracts/Market.sol":20016:20041  uint256 actualRepayAssets */
              0x00
                /* "contracts/Market.sol":20053:20067  positionAssets */
              dup5
                /* "contracts/Market.sol":20071:20072  0 */
              0x00
                /* "contracts/Market.sol":20053:20072  positionAssets == 0 */
              sub
                /* "contracts/Market.sol":20049:20092  if (positionAssets == 0) revert ZeroRepay() */
              tag_1274
              jumpi
                /* "contracts/Market.sol":20081:20092  ZeroRepay() */
              mload(0x40)
              shl(0xe0, 0x685e9235)
              dup2
              mstore
              0x04
              add
              mload(0x40)
              dup1
              swap2
              sub
              swap1
              revert
                /* "contracts/Market.sol":20049:20092  if (positionAssets == 0) revert ZeroRepay() */
            tag_1274:
                /* "contracts/Market.sol":20099:20125  FixedLib.Pool storage pool */
              0x00
                /* "contracts/Market.sol":20128:20148  fixedPools[maturity] */
              dup7
              dup2
              mstore
                /* "contracts/Market.sol":20128:20138  fixedPools */
              0xd1
                /* "contracts/Market.sol":20128:20148  fixedPools[maturity] */
              0x20
              mstore
              0x40
              dup2
              keccak256
              swap1
                /* "contracts/Market.sol":20180:20209  pool.accrueEarnings(maturity) */
              tag_1275
                /* "contracts/Market.sol":20128:20148  fixedPools[maturity] */
              dup3
                /* "contracts/Market.sol":20139:20147  maturity */
              dup10
                /* "contracts/Market.sol":20180:20199  pool.accrueEarnings */
              tag_546
                /* "contracts/Market.sol":20180:20209  pool.accrueEarnings(maturity) */
              jump	// in
            tag_1275:
                /* "contracts/Market.sol":20216:20249  FixedLib.Position memory position */
              0x00
                /* "contracts/Market.sol":20252:20282  fixedBorrowPositions[maturity] */
              dup10
              dup2
              mstore
                /* "contracts/Market.sol":20252:20272  fixedBorrowPositions */
              0xd0
                /* "contracts/Market.sol":20252:20282  fixedBorrowPositions[maturity] */
              0x20
              swap1
              dup2
              mstore
              0x40
              dup1
              dup4
              keccak256
              sub(shl(0xa0, 0x01), 0x01)
                /* "contracts/Market.sol":20252:20292  fixedBorrowPositions[maturity][borrower] */
              dup11
              and
              dup5
              mstore
              dup3
              mstore
              dup1
              dup4
              keccak256
                /* "contracts/Market.sol":20216:20292  FixedLib.Position memory position = fixedBorrowPositions[maturity][borrower] */
              dup2
              mload
              dup1
              dup4
              add
              swap1
              swap3
              mstore
              dup1
              sload
              dup1
              dup4
              mstore
              0x01
              swap1
              swap2
              add
              sload
              swap3
              dup3
              add
              dup4
              swap1
              mstore
                /* "contracts/Market.sol":20155:20209  uint256 backupEarnings = pool.accrueEarnings(maturity) */
              swap4
              swap5
              pop
                /* "contracts/Market.sol":20216:20292  FixedLib.Position memory position = fixedBorrowPositions[maturity][borrower] */
              swap3
                /* "contracts/Market.sol":20321:20380  Math.min(positionAssets, position.principal + position.fee) */
              tag_1276
              swap2
                /* "contracts/Market.sol":20330:20344  positionAssets */
              dup12
              swap2
                /* "contracts/Market.sol":20346:20379  position.principal + position.fee */
              tag_1277
              swap2
                /* "contracts/Market.sol":20216:20292  FixedLib.Position memory position = fixedBorrowPositions[maturity][borrower] */
              swap1
                /* "contracts/Market.sol":20346:20379  position.principal + position.fee */
              tag_496
              jump	// in
            tag_1277:
                /* "contracts/Market.sol":20321:20329  Math.min */
              tag_1180
                /* "contracts/Market.sol":20321:20380  Math.min(positionAssets, position.principal + position.fee) */
              jump	// in
            tag_1276:
                /* "contracts/Market.sol":20414:20472  FixedLib... */
              0x40
              dup1
              mload
              dup1
              dup3
              add
              swap1
              swap2
              mstore
                /* "contracts/Market.sol":20439:20457  position.principal */
              dup4
              mload
                /* "contracts/Market.sol":20414:20472  FixedLib... */
              dup2
              mstore
              0x20
                /* "contracts/Market.sol":20459:20471  position.fee */
              dup1
              dup6
              add
              mload
                /* "contracts/Market.sol":20414:20472  FixedLib... */
              swap1
              dup3
              add
              mstore
                /* "contracts/Market.sol":20299:20380  uint256 debtCovered = Math.min(positionAssets, position.principal + position.fee) */
              swap1
              swap2
              pop
                /* "contracts/Market.sol":20387:20411  uint256 principalCovered */
              0x00
              swap1
                /* "contracts/Market.sol":20414:20512  FixedLib... */
              tag_1279
              swap1
                /* "contracts/Market.sol":20299:20380  uint256 debtCovered = Math.min(positionAssets, position.principal + position.fee) */
              dup4
                /* "contracts/Market.sol":20414:20499  FixedLib... */
              tag_918
                /* "contracts/Market.sol":20414:20512  FixedLib... */
              jump	// in
            tag_1279:
                /* "contracts/Market.sol":20414:20529  FixedLib... */
              mload
                /* "contracts/Market.sol":20577:20594  rewardsController */
              sload(0xe3)
                /* "contracts/Market.sol":20414:20529  FixedLib... */
              swap1
              swap2
              pop
              sub(shl(0xa0, 0x01), 0x01)
                /* "contracts/Market.sol":20577:20594  rewardsController */
              and
                /* "contracts/Market.sol":20604:20647  address(memRewardsController) != address(0) */
              dup1
              iszero
                /* "contracts/Market.sol":20600:20692  if (address(memRewardsController) != address(0)) memRewardsController.handleBorrow(borrower) */
              tag_1280
              jumpi
                /* "contracts/Market.sol":20649:20692  memRewardsController.handleBorrow(borrower) */
              mload(0x40)
              shl(0xe0, 0x6c912dad)
              dup2
              mstore
              sub(shl(0xa0, 0x01), 0x01)
                /* "#utility.yul":5785:5817   */
              dup11
              dup2
              and
                /* "contracts/Market.sol":20649:20692  memRewardsController.handleBorrow(borrower) */
              0x04
              dup4
              add
                /* "#utility.yul":5767:5818   */
              mstore
                /* "contracts/Market.sol":20649:20682  memRewardsController.handleBorrow */
              dup3
              and
              swap1
              0x6c912dad
              swap1
                /* "#utility.yul":5740:5758   */
              0x24
              add
                /* "contracts/Market.sol":20649:20692  memRewardsController.handleBorrow(borrower) */
              0x00
              mload(0x40)
              dup1
              dup4
              sub
              dup2
              0x00
              dup8
              dup1
              extcodesize
              iszero
              dup1
              iszero
              tag_1282
              jumpi
              0x00
              dup1
              revert
            tag_1282:
              pop
              gas
              call
              iszero
              dup1
              iszero
              tag_1284
              jumpi
              returndatasize
              0x00
              dup1
              returndatacopy
              revert(0x00, returndatasize)
            tag_1284:
              pop
              pop
              pop
              pop
                /* "contracts/Market.sol":20600:20692  if (address(memRewardsController) != address(0)) memRewardsController.handleBorrow(borrower) */
            tag_1280:
                /* "contracts/Market.sol":20791:20799  maturity */
              dup12
                /* "contracts/Market.sol":20773:20788  block.timestamp */
              timestamp
                /* "contracts/Market.sol":20773:20799  block.timestamp < maturity */
              lt
                /* "contracts/Market.sol":20769:21707  if (block.timestamp < maturity) {... */
              iszero
              tag_1285
              jumpi
                /* "contracts/Market.sol":20813:20824  canDiscount */
              dup8
                /* "contracts/Market.sol":20809:21463  if (canDiscount) {... */
              iszero
              tag_1286
              jumpi
                /* "contracts/Market.sol":21006:21019  backupFeeRate */
              sload(0xd7)
                /* "contracts/Market.sol":20966:20987  pool.calculateDeposit */
              0x40
              dup1
              mload
              0x80
              dup2
              add
              dup3
              mstore
              dup9
              sload
              dup2
              mstore
              0x01
              dup10
              add
              sload
              0x20
              dup3
              add
              mstore
              0x02
              dup10
              add
              sload
              swap2
              dup2
              add
              swap2
              swap1
              swap2
              mstore
              0x03
              dup9
              add
              sload
              0x60
              dup3
              add
              mstore
                /* "contracts/Market.sol":20924:20943  uint256 discountFee */
              0x00
              swap2
              dup3
              swap2
                /* "contracts/Market.sol":20966:21020  pool.calculateDeposit(principalCovered, backupFeeRate) */
              tag_1287
              swap2
                /* "contracts/Market.sol":20988:21004  principalCovered */
              dup7
              swap1
                /* "contracts/Market.sol":20966:20987  pool.calculateDeposit */
              tag_662
                /* "contracts/Market.sol":20966:21020  pool.calculateDeposit(principalCovered, backupFeeRate) */
              jump	// in
            tag_1287:
                /* "contracts/Market.sol":20923:21020  (uint256 discountFee, uint256 backupFee) = pool.calculateDeposit(principalCovered, backupFeeRate) */
              swap1
              swap3
              pop
              swap1
              pop
                /* "contracts/Market.sol":21109:21132  discountFee + backupFee */
              tag_1288
                /* "contracts/Market.sol":20923:21020  (uint256 discountFee, uint256 backupFee) = pool.calculateDeposit(principalCovered, backupFeeRate) */
              dup2
              dup4
                /* "contracts/Market.sol":21109:21132  discountFee + backupFee */
              tag_496
              jump	// in
            tag_1288:
                /* "contracts/Market.sol":21082:21086  pool */
              dup9
                /* "contracts/Market.sol":21082:21105  pool.unassignedEarnings */
              0x02
              add
              0x00
                /* "contracts/Market.sol":21082:21132  pool.unassignedEarnings -= discountFee + backupFee */
              dup3
              dup3
              sload
              tag_1289
              swap2
              swap1
              tag_526
              jump	// in
            tag_1289:
              swap3
              pop
              pop
              dup2
              swap1
              sstore
              pop
                /* "contracts/Market.sol":21253:21262  backupFee */
              dup1
                /* "contracts/Market.sol":21230:21249  earningsAccumulator */
              0xd5
              0x00
                /* "contracts/Market.sol":21230:21262  earningsAccumulator += backupFee */
              dup3
              dup3
              sload
              tag_1290
              swap2
              swap1
              tag_496
              jump	// in
            tag_1290:
              swap1
              swap2
              sstore
              pop
                /* "contracts/Market.sol":21373:21398  debtCovered - discountFee */
              tag_1291
              swap1
              pop
                /* "contracts/Market.sol":21387:21398  discountFee */
              dup3
                /* "contracts/Market.sol":21373:21384  debtCovered */
              dup7
                /* "contracts/Market.sol":21373:21398  debtCovered - discountFee */
              tag_526
              jump	// in
            tag_1291:
                /* "contracts/Market.sol":21353:21398  actualRepayAssets = debtCovered - discountFee */
              swap9
              pop
                /* "contracts/Market.sol":20826:21407  {... */
              pop
              pop
                /* "contracts/Market.sol":20769:21707  if (block.timestamp < maturity) {... */
              jump(tag_1293)
                /* "contracts/Market.sol":20809:21463  if (canDiscount) {... */
            tag_1286:
                /* "contracts/Market.sol":21443:21454  debtCovered */
              dup3
                /* "contracts/Market.sol":21423:21454  actualRepayAssets = debtCovered */
              swap7
              pop
                /* "contracts/Market.sol":20769:21707  if (block.timestamp < maturity) {... */
              jump(tag_1293)
            tag_1285:
                /* "contracts/Market.sol":21571:21582  penaltyRate */
              sload(0xd6)
                /* "contracts/Market.sol":21517:21583  debtCovered.mulWadDown((block.timestamp - maturity) * penaltyRate) */
              tag_1294
              swap1
                /* "contracts/Market.sol":21541:21567  block.timestamp - maturity */
              tag_1295
                /* "contracts/Market.sol":21559:21567  maturity */
              dup15
                /* "contracts/Market.sol":21541:21556  block.timestamp */
              timestamp
                /* "contracts/Market.sol":21541:21567  block.timestamp - maturity */
              tag_526
              jump	// in
            tag_1295:
                /* "contracts/Market.sol":21540:21582  (block.timestamp - maturity) * penaltyRate */
              tag_1296
              swap2
              swap1
              tag_528
              jump	// in
            tag_1296:
                /* "contracts/Market.sol":21517:21528  debtCovered */
              dup5
              swap1
                /* "contracts/Market.sol":21517:21539  debtCovered.mulWadDown */
              tag_482
                /* "contracts/Market.sol":21517:21583  debtCovered.mulWadDown((block.timestamp - maturity) * penaltyRate) */
              jump	// in
            tag_1294:
                /* "contracts/Market.sol":21503:21583  debtCovered + debtCovered.mulWadDown((block.timestamp - maturity) * penaltyRate) */
              tag_1297
              swap1
                /* "contracts/Market.sol":21503:21514  debtCovered */
              dup5
                /* "contracts/Market.sol":21503:21583  debtCovered + debtCovered.mulWadDown((block.timestamp - maturity) * penaltyRate) */
              tag_496
              jump	// in
            tag_1297:
                /* "contracts/Market.sol":21483:21583  actualRepayAssets = debtCovered + debtCovered.mulWadDown((block.timestamp - maturity) * penaltyRate) */
              swap7
              pop
                /* "contracts/Market.sol":21669:21700  actualRepayAssets - debtCovered */
              tag_1298
                /* "contracts/Market.sol":21689:21700  debtCovered */
              dup4
                /* "contracts/Market.sol":21483:21583  actualRepayAssets = debtCovered + debtCovered.mulWadDown((block.timestamp - maturity) * penaltyRate) */
              dup9
                /* "contracts/Market.sol":21669:21700  actualRepayAssets - debtCovered */
              tag_526
              jump	// in
            tag_1298:
                /* "contracts/Market.sol":21646:21665  earningsAccumulator */
              0xd5
              0x00
                /* "contracts/Market.sol":21646:21700  earningsAccumulator += actualRepayAssets - debtCovered */
              dup3
              dup3
              sload
              tag_1299
              swap2
              swap1
              tag_496
              jump	// in
            tag_1299:
              swap1
              swap2
              sstore
              pop
              pop
                /* "contracts/Market.sol":20769:21707  if (block.timestamp < maturity) {... */
            tag_1293:
                /* "contracts/Market.sol":21803:21812  maxAssets */
              dup10
                /* "contracts/Market.sol":21783:21800  actualRepayAssets */
              dup8
                /* "contracts/Market.sol":21783:21812  actualRepayAssets > maxAssets */
              gt
                /* "contracts/Market.sol":21779:21835  if (actualRepayAssets > maxAssets) revert Disagreement() */
              iszero
              tag_1300
              jumpi
                /* "contracts/Market.sol":21821:21835  Disagreement() */
              mload(0x40)
              shl(0xe2, 0x2c1b6b41)
              dup2
              mstore
              0x04
              add
              mload(0x40)
              dup1
              swap2
              sub
              swap1
              revert
                /* "contracts/Market.sol":21779:21835  if (actualRepayAssets > maxAssets) revert Disagreement() */
            tag_1300:
                /* "contracts/Market.sol":21957:21985  pool.repay(principalCovered) */
              tag_1301
                /* "contracts/Market.sol":21957:21961  pool */
              dup7
                /* "contracts/Market.sol":21968:21984  principalCovered */
              dup4
                /* "contracts/Market.sol":21957:21967  pool.repay */
              tag_836
                /* "contracts/Market.sol":21957:21985  pool.repay(principalCovered) */
              jump	// in
            tag_1301:
                /* "contracts/Market.sol":21931:21953  floatingBackupBorrowed */
              0xd3
              0x00
                /* "contracts/Market.sol":21931:21985  floatingBackupBorrowed -= pool.repay(principalCovered) */
              dup3
              dup3
              sload
              tag_1302
              swap2
              swap1
              tag_526
              jump	// in
            tag_1302:
              swap1
              swap2
              sstore
              pop
                /* "contracts/Market.sol":22027:22069  position.reduceProportionally(debtCovered) */
              tag_1303
              swap1
              pop
                /* "contracts/Market.sol":22027:22035  position */
              dup5
                /* "contracts/Market.sol":22057:22068  debtCovered */
              dup5
                /* "contracts/Market.sol":22027:22056  position.reduceProportionally */
              tag_929
                /* "contracts/Market.sol":22027:22069  position.reduceProportionally(debtCovered) */
              jump	// in
            tag_1303:
              pop
                /* "contracts/Market.sol":22100:22112  position.fee */
              0x20
              dup5
              add
              mload
                /* "contracts/Market.sol":22079:22097  position.principal */
              dup5
              mload
                /* "contracts/Market.sol":22079:22112  position.principal | position.fee */
              or
                /* "contracts/Market.sol":22079:22097  position.principal */
              0x00
                /* "contracts/Market.sol":22079:22117  position.principal | position.fee == 0 */
              sub
                /* "contracts/Market.sol":22075:22422  if (position.principal | position.fee == 0) {... */
              tag_1304
              jumpi
                /* "contracts/Market.sol":22134:22164  fixedBorrowPositions[maturity] */
              0x00
              dup13
              dup2
              mstore
                /* "contracts/Market.sol":22134:22154  fixedBorrowPositions */
              0xd0
                /* "contracts/Market.sol":22134:22164  fixedBorrowPositions[maturity] */
              0x20
              swap1
              dup2
              mstore
              0x40
              dup1
              dup4
              keccak256
              sub(shl(0xa0, 0x01), 0x01)
                /* "contracts/Market.sol":22134:22174  fixedBorrowPositions[maturity][borrower] */
              dup14
              and
              dup5
              mstore
              dup3
              mstore
              dup1
              dup4
              keccak256
                /* "contracts/Market.sol":22127:22174  delete fixedBorrowPositions[maturity][borrower] */
              dup4
              dup2
              sstore
              0x01
              swap1
              dup2
              add
              dup5
              swap1
              sstore
                /* "contracts/Market.sol":22208:22216  accounts */
              0xd2
                /* "contracts/Market.sol":22208:22226  accounts[borrower] */
              swap1
              swap3
              mstore
              swap1
              swap2
              keccak256
                /* "contracts/Market.sol":22257:22277  account.fixedBorrows */
              swap1
              dup2
              add
              sload
                /* "contracts/Market.sol":22257:22301  account.fixedBorrows.clearMaturity(maturity) */
              tag_1305
              swap1
                /* "contracts/Market.sol":22155:22163  maturity */
              dup15
                /* "contracts/Market.sol":22257:22291  account.fixedBorrows.clearMaturity */
              tag_839
                /* "contracts/Market.sol":22257:22301  account.fixedBorrows.clearMaturity(maturity) */
              jump	// in
            tag_1305:
                /* "contracts/Market.sol":22234:22254  account.fixedBorrows */
              0x01
              swap1
              swap2
              add
                /* "contracts/Market.sol":22234:22301  account.fixedBorrows = account.fixedBorrows.clearMaturity(maturity) */
              sstore
                /* "contracts/Market.sol":22075:22422  if (position.principal | position.fee == 0) {... */
              jump(tag_1306)
            tag_1304:
                /* "contracts/Market.sol":22364:22394  fixedBorrowPositions[maturity] */
              0x00
              dup13
              dup2
              mstore
                /* "contracts/Market.sol":22364:22384  fixedBorrowPositions */
              0xd0
                /* "contracts/Market.sol":22364:22394  fixedBorrowPositions[maturity] */
              0x20
              swap1
              dup2
              mstore
              0x40
              dup1
              dup4
              keccak256
              sub(shl(0xa0, 0x01), 0x01)
                /* "contracts/Market.sol":22364:22404  fixedBorrowPositions[maturity][borrower] */
              dup14
              and
              dup5
              mstore
              dup3
              mstore
              swap1
              swap2
              keccak256
                /* "contracts/Market.sol":22364:22415  fixedBorrowPositions[maturity][borrower] = position */
              dup6
              mload
              dup2
              sstore
              swap1
              dup6
              add
              mload
              0x01
              swap1
              swap2
              add
              sstore
                /* "contracts/Market.sol":22075:22422  if (position.principal | position.fee == 0) {... */
            tag_1306:
                /* "contracts/Market.sol":22446:22460  backupEarnings */
              dup5
                /* "contracts/Market.sol":22428:22442  floatingAssets */
              0xdd
              0x00
                /* "contracts/Market.sol":22428:22460  floatingAssets += backupEarnings */
              dup3
              dup3
              sload
              tag_1307
              swap2
              swap1
              tag_496
              jump	// in
            tag_1307:
              swap1
              swap2
              sstore
              pop
              pop
                /* "contracts/Market.sol":22472:22551  RepayAtMaturity(maturity, msg.sender, borrower, actualRepayAssets, debtCovered) */
              0x40
              dup1
              mload
                /* "#utility.yul":576:601   */
              dup9
              dup2
              mstore
                /* "#utility.yul":632:634   */
              0x20
                /* "#utility.yul":617:635   */
              dup2
              add
                /* "#utility.yul":610:644   */
              dup6
              swap1
              mstore
              sub(shl(0xa0, 0x01), 0x01)
                /* "contracts/Market.sol":22472:22551  RepayAtMaturity(maturity, msg.sender, borrower, actualRepayAssets, debtCovered) */
              dup12
              and
              swap2
                /* "contracts/Market.sol":22498:22508  msg.sender */
              caller
              swap2
                /* "contracts/Market.sol":22488:22496  maturity */
              dup16
              swap2
                /* "contracts/Market.sol":22472:22551  RepayAtMaturity(maturity, msg.sender, borrower, actualRepayAssets, debtCovered) */
              0xf17fce321dd9fb005136a80c0bfb3789e455b7a70be9eb8922f1ad20a80d1a33
              swap2
                /* "#utility.yul":549:567   */
              add
                /* "contracts/Market.sol":22472:22551  RepayAtMaturity(maturity, msg.sender, borrower, actualRepayAssets, debtCovered) */
              mload(0x40)
              dup1
              swap2
              sub
              swap1
              log4
                /* "contracts/Market.sol":22557:22590  emitFixedEarningsUpdate(maturity) */
              tag_1309
                /* "contracts/Market.sol":22581:22589  maturity */
              dup13
                /* "contracts/Market.sol":22557:22580  emitFixedEarningsUpdate */
              tag_595
                /* "contracts/Market.sol":22557:22590  emitFixedEarningsUpdate(maturity) */
              jump	// in
            tag_1309:
                /* "contracts/Market.sol":20043:22595  {... */
              pop
              pop
              pop
              pop
              pop
              pop
                /* "contracts/Market.sol":19842:22595  function noTransferRepayAtMaturity(... */
              swap6
              swap5
              pop
              pop
              pop
              pop
              pop
              jump	// out
                /* "node_modules/@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol":2676:2793  function _unpause() internal virtual whenPaused {... */
            tag_704:
                /* "node_modules/@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol":1729:1745  _requirePaused() */
              tag_1311
                /* "node_modules/@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol":1729:1743  _requirePaused */
              tag_1312
                /* "node_modules/@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol":1729:1745  _requirePaused() */
              jump	// in
            tag_1311:
                /* "node_modules/@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol":2734:2741  _paused */
              0x97
                /* "node_modules/@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol":2734:2749  _paused = false */
              dup1
              sload
              not(0xff)
              and
              swap1
              sstore
                /* "node_modules/@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol":2764:2786  Unpaused(_msgSender()) */
              0x5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa
                /* "node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":929:939  msg.sender */
              caller
                /* "node_modules/@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol":2773:2785  _msgSender() */
            tag_1314:
                /* "node_modules/@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol":2764:2786  Unpaused(_msgSender()) */
              mload(0x40)
              sub(shl(0xa0, 0x01), 0x01)
                /* "#utility.yul":5785:5817   */
              swap1
              swap2
              and
                /* "#utility.yul":5767:5818   */
              dup2
              mstore
                /* "#utility.yul":5755:5757   */
              0x20
                /* "#utility.yul":5740:5758   */
              add
                /* "node_modules/@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol":2764:2786  Unpaused(_msgSender()) */
              tag_1104
                /* "#utility.yul":5606:5824   */
              jump
                /* "contracts/Market.sol":9048:9865  function noTransferRefund(... */
            tag_752:
                /* "contracts/Market.sol":9229:9246  rewardsController */
              sload(0xe3)
                /* "contracts/Market.sol":9144:9158  uint256 assets */
              0x00
              swap1
              dup2
              swap1
              sub(shl(0xa0, 0x01), 0x01)
                /* "contracts/Market.sol":9229:9246  rewardsController */
              and
                /* "contracts/Market.sol":9256:9299  address(memRewardsController) != address(0) */
              dup1
              iszero
                /* "contracts/Market.sol":9252:9344  if (address(memRewardsController) != address(0)) memRewardsController.handleBorrow(borrower) */
              tag_1317
              jumpi
                /* "contracts/Market.sol":9301:9344  memRewardsController.handleBorrow(borrower) */
              mload(0x40)
              shl(0xe0, 0x6c912dad)
              dup2
              mstore
              sub(shl(0xa0, 0x01), 0x01)
                /* "#utility.yul":5785:5817   */
              dup6
              dup2
              and
                /* "contracts/Market.sol":9301:9344  memRewardsController.handleBorrow(borrower) */
              0x04
              dup4
              add
                /* "#utility.yul":5767:5818   */
              mstore
                /* "contracts/Market.sol":9301:9334  memRewardsController.handleBorrow */
              dup3
              and
              swap1
              0x6c912dad
              swap1
                /* "#utility.yul":5740:5758   */
              0x24
              add
                /* "contracts/Market.sol":9301:9344  memRewardsController.handleBorrow(borrower) */
              0x00
              mload(0x40)
              dup1
              dup4
              sub
              dup2
              0x00
              dup8
              dup1
              extcodesize
              iszero
              dup1
              iszero
              tag_1319
              jumpi
              0x00
              dup1
              revert
            tag_1319:
              pop
              gas
              call
              iszero
              dup1
              iszero
              tag_1321
              jumpi
              returndatasize
              0x00
              dup1
              returndatacopy
              revert(0x00, returndatasize)
            tag_1321:
              pop
              pop
              pop
              pop
                /* "contracts/Market.sol":9252:9344  if (address(memRewardsController) != address(0)) memRewardsController.handleBorrow(borrower) */
            tag_1317:
                /* "contracts/Market.sol":9351:9390  depositToTreasury(updateFloatingDebt()) */
              tag_1322
                /* "contracts/Market.sol":9369:9389  updateFloatingDebt() */
              tag_569
                /* "contracts/Market.sol":9369:9387  updateFloatingDebt */
              tag_570
                /* "contracts/Market.sol":9369:9389  updateFloatingDebt() */
              jump	// in
                /* "contracts/Market.sol":9351:9390  depositToTreasury(updateFloatingDebt()) */
            tag_1322:
              sub(shl(0xa0, 0x01), 0x01)
                /* "contracts/Market.sol":9422:9440  accounts[borrower] */
              dup5
              and
                /* "contracts/Market.sol":9396:9419  Account storage account */
              0x00
                /* "contracts/Market.sol":9422:9440  accounts[borrower] */
              swap1
              dup2
              mstore
                /* "contracts/Market.sol":9422:9430  accounts */
              0xd2
                /* "contracts/Market.sol":9422:9440  accounts[borrower] */
              0x20
              mstore
              0x40
              swap1
              keccak256
                /* "contracts/Market.sol":9476:9504  account.floatingBorrowShares */
              0x02
              dup2
              add
              sload
                /* "contracts/Market.sol":9525:9568  Math.min(borrowShares, accountBorrowShares) */
              tag_1324
                /* "contracts/Market.sol":9534:9546  borrowShares */
              dup8
                /* "contracts/Market.sol":9476:9504  account.floatingBorrowShares */
              dup3
                /* "contracts/Market.sol":9525:9533  Math.min */
              tag_1180
                /* "contracts/Market.sol":9525:9568  Math.min(borrowShares, accountBorrowShares) */
              jump	// in
            tag_1324:
                /* "contracts/Market.sol":9510:9568  actualShares = Math.min(borrowShares, accountBorrowShares) */
              swap4
              pop
                /* "contracts/Market.sol":9583:9610  previewRefund(actualShares) */
              tag_1325
                /* "contracts/Market.sol":9597:9609  actualShares */
              dup5
                /* "contracts/Market.sol":9583:9596  previewRefund */
              tag_251
                /* "contracts/Market.sol":9583:9610  previewRefund(actualShares) */
              jump	// in
            tag_1325:
                /* "contracts/Market.sol":9574:9610  assets = previewRefund(actualShares) */
              swap5
              pop
                /* "contracts/Market.sol":9621:9627  assets */
              dup5
                /* "contracts/Market.sol":9631:9632  0 */
              0x00
                /* "contracts/Market.sol":9621:9632  assets == 0 */
              sub
                /* "contracts/Market.sol":9617:9652  if (assets == 0) revert ZeroRepay() */
              tag_1326
              jumpi
                /* "contracts/Market.sol":9641:9652  ZeroRepay() */
              mload(0x40)
              shl(0xe0, 0x685e9235)
              dup2
              mstore
              0x04
              add
              mload(0x40)
              dup1
              swap2
              sub
              swap1
              revert
                /* "contracts/Market.sol":9617:9652  if (assets == 0) revert ZeroRepay() */
            tag_1326:
                /* "contracts/Market.sol":9675:9681  assets */
              dup5
                /* "contracts/Market.sol":9659:9671  floatingDebt */
              0xd4
              0x00
                /* "contracts/Market.sol":9659:9681  floatingDebt -= assets */
              dup3
              dup3
              sload
              tag_1327
              swap2
              swap1
              tag_526
              jump	// in
            tag_1327:
              swap1
              swap2
              sstore
              pop
                /* "contracts/Market.sol":9718:9752  accountBorrowShares - actualShares */
              tag_1328
              swap1
              pop
                /* "contracts/Market.sol":9740:9752  actualShares */
              dup5
                /* "contracts/Market.sol":9718:9737  accountBorrowShares */
              dup3
                /* "contracts/Market.sol":9718:9752  accountBorrowShares - actualShares */
              tag_526
              jump	// in
            tag_1328:
                /* "contracts/Market.sol":9687:9694  account */
              dup3
                /* "contracts/Market.sol":9687:9715  account.floatingBorrowShares */
              0x02
              add
                /* "contracts/Market.sol":9687:9752  account.floatingBorrowShares = accountBorrowShares - actualShares */
              dup2
              swap1
              sstore
              pop
                /* "contracts/Market.sol":9787:9799  actualShares */
              dup4
                /* "contracts/Market.sol":9758:9783  totalFloatingBorrowShares */
              0xdf
              0x00
                /* "contracts/Market.sol":9758:9799  totalFloatingBorrowShares -= actualShares */
              dup3
              dup3
              sload
              tag_1329
              swap2
              swap1
              tag_526
              jump	// in
            tag_1329:
              swap1
              swap2
              sstore
              pop
              pop
                /* "contracts/Market.sol":9811:9860  Repay(msg.sender, borrower, assets, actualShares) */
              0x40
              dup1
              mload
                /* "#utility.yul":576:601   */
              dup7
              dup2
              mstore
                /* "#utility.yul":632:634   */
              0x20
                /* "#utility.yul":617:635   */
              dup2
              add
                /* "#utility.yul":610:644   */
              dup7
              swap1
              mstore
              sub(shl(0xa0, 0x01), 0x01)
                /* "contracts/Market.sol":9811:9860  Repay(msg.sender, borrower, assets, actualShares) */
              dup9
              and
              swap2
                /* "contracts/Market.sol":9817:9827  msg.sender */
              caller
              swap2
                /* "contracts/Market.sol":9811:9860  Repay(msg.sender, borrower, assets, actualShares) */
              0xe4a1ae657f49cb1fb1c7d3a94ae6093565c4c8c0e03de488f79c377c3c3a24e0
              swap2
                /* "#utility.yul":549:567   */
              add
                /* "contracts/Market.sol":9811:9860  Repay(msg.sender, borrower, assets, actualShares) */
              mload(0x40)
              dup1
              swap2
              sub
              swap1
              log3
                /* "contracts/Market.sol":9182:9865  {... */
              pop
              pop
              pop
                /* "contracts/Market.sol":9048:9865  function noTransferRefund(... */
              swap3
              pop
              swap3
              swap1
              pop
              jump	// out
                /* "contracts/Market.sol":29142:29826  function internalSeize(Market seizeMarket, address liquidator, address borrower, uint256 assets) internal {... */
            tag_762:
                /* "contracts/Market.sol":29258:29264  assets */
              dup1
                /* "contracts/Market.sol":29268:29269  0 */
              0x00
                /* "contracts/Market.sol":29258:29269  assets == 0 */
              sub
                /* "contracts/Market.sol":29254:29292  if (assets == 0) revert ZeroWithdraw() */
              tag_1332
              jumpi
                /* "contracts/Market.sol":29278:29292  ZeroWithdraw() */
              mload(0x40)
              shl(0xe0, 0xb8cb6219)
              dup2
              mstore
              0x04
              add
              mload(0x40)
              dup1
              swap2
              sub
              swap1
              revert
                /* "contracts/Market.sol":29254:29292  if (assets == 0) revert ZeroWithdraw() */
            tag_1332:
                /* "contracts/Market.sol":29325:29362  auditor.checkSeize(seizeMarket, this) */
              mload(0x40)
              shl(0xe5, 0x070b7739)
              dup2
              mstore
              sub(shl(0xa0, 0x01), 0x01)
                /* "#utility.yul":14951:14966   */
              dup6
              dup2
              and
                /* "contracts/Market.sol":29325:29362  auditor.checkSeize(seizeMarket, this) */
              0x04
              dup4
              add
                /* "#utility.yul":14933:14967   */
              mstore
                /* "contracts/Market.sol":29357:29361  this */
              address
                /* "#utility.yul":14983:15001   */
              0x24
              dup4
              add
                /* "#utility.yul":14976:15019   */
              mstore
                /* "contracts/Market.sol":29325:29332  auditor */
              immutable("0x2adb6ba13100982fae82a6c459fdc0b83ba757ca8251e42f5db6158bc4c7e480")
                /* "contracts/Market.sol":29325:29343  auditor.checkSeize */
              and
              swap1
              0xe16ee720
              swap1
                /* "#utility.yul":14868:14886   */
              0x44
              add
                /* "contracts/Market.sol":29325:29362  auditor.checkSeize(seizeMarket, this) */
              0x00
              mload(0x40)
              dup1
              dup4
              sub
              dup2
              dup7
              dup1
              extcodesize
              iszero
              dup1
              iszero
              tag_1335
              jumpi
              0x00
              dup1
              revert
            tag_1335:
              pop
              gas
              staticcall
              iszero
              dup1
              iszero
              tag_1337
              jumpi
              returndatasize
              0x00
              dup1
              returndatacopy
              revert(0x00, returndatasize)
            tag_1337:
              pop
              pop
                /* "contracts/Market.sol":29410:29427  rewardsController */
              and(sub(shl(0xa0, 0x01), 0x01), sload(0xe3))
              swap2
              pop
              pop
                /* "contracts/Market.sol":29437:29480  address(memRewardsController) != address(0) */
              dup1
              iszero
                /* "contracts/Market.sol":29433:29526  if (address(memRewardsController) != address(0)) memRewardsController.handleDeposit(borrower) */
              tag_1338
              jumpi
                /* "contracts/Market.sol":29482:29526  memRewardsController.handleDeposit(borrower) */
              mload(0x40)
              shl(0xe0, 0x0149e46f)
              dup2
              mstore
              sub(shl(0xa0, 0x01), 0x01)
                /* "#utility.yul":5785:5817   */
              dup5
              dup2
              and
                /* "contracts/Market.sol":29482:29526  memRewardsController.handleDeposit(borrower) */
              0x04
              dup4
              add
                /* "#utility.yul":5767:5818   */
              mstore
                /* "contracts/Market.sol":29482:29516  memRewardsController.handleDeposit */
              dup3
              and
              swap1
              0x0149e46f
              swap1
                /* "#utility.yul":5740:5758   */
              0x24
              add
                /* "contracts/Market.sol":29482:29526  memRewardsController.handleDeposit(borrower) */
              0x00
              mload(0x40)
              dup1
              dup4
              sub
              dup2
              0x00
              dup8
              dup1
              extcodesize
              iszero
              dup1
              iszero
              tag_1340
              jumpi
              0x00
              dup1
              revert
            tag_1340:
              pop
              gas
              call
              iszero
              dup1
              iszero
              tag_1342
              jumpi
              returndatasize
              0x00
              dup1
              returndatacopy
              revert(0x00, returndatasize)
            tag_1342:
              pop
              pop
              pop
              pop
                /* "contracts/Market.sol":29433:29526  if (address(memRewardsController) != address(0)) memRewardsController.handleDeposit(borrower) */
            tag_1338:
                /* "contracts/Market.sol":29532:29546  uint256 shares */
              0x00
                /* "contracts/Market.sol":29549:29572  previewWithdraw(assets) */
              tag_1343
                /* "contracts/Market.sol":29565:29571  assets */
              dup4
                /* "contracts/Market.sol":29549:29564  previewWithdraw */
              tag_150
                /* "contracts/Market.sol":29549:29572  previewWithdraw(assets) */
              jump	// in
            tag_1343:
                /* "contracts/Market.sol":29532:29572  uint256 shares = previewWithdraw(assets) */
              swap1
              pop
                /* "contracts/Market.sol":29578:29608  beforeWithdraw(assets, shares) */
              tag_1344
                /* "contracts/Market.sol":29593:29599  assets */
              dup4
                /* "contracts/Market.sol":29601:29607  shares */
              dup3
                /* "contracts/Market.sol":29578:29592  beforeWithdraw */
              tag_1345
                /* "contracts/Market.sol":29578:29608  beforeWithdraw(assets, shares) */
              jump	// in
            tag_1344:
                /* "contracts/Market.sol":29614:29637  _burn(borrower, shares) */
              tag_1346
                /* "contracts/Market.sol":29620:29628  borrower */
              dup5
                /* "contracts/Market.sol":29630:29636  shares */
              dup3
                /* "contracts/Market.sol":29614:29619  _burn */
              tag_1347
                /* "contracts/Market.sol":29614:29637  _burn(borrower, shares) */
              jump	// in
            tag_1346:
                /* "contracts/Market.sol":29648:29706  Withdraw(msg.sender, liquidator, borrower, assets, shares) */
              0x40
              dup1
              mload
                /* "#utility.yul":576:601   */
              dup5
              dup2
              mstore
                /* "#utility.yul":632:634   */
              0x20
                /* "#utility.yul":617:635   */
              dup2
              add
                /* "#utility.yul":610:644   */
              dup4
              swap1
              mstore
              sub(shl(0xa0, 0x01), 0x01)
                /* "contracts/Market.sol":29648:29706  Withdraw(msg.sender, liquidator, borrower, assets, shares) */
              dup1
              dup8
              and
              swap3
              swap1
              dup9
              and
              swap2
                /* "contracts/Market.sol":29657:29667  msg.sender */
              caller
              swap2
                /* "contracts/Market.sol":29648:29706  Withdraw(msg.sender, liquidator, borrower, assets, shares) */
              0xfbde797d201c681b91056529119e0b02407c7bb96a4a2c75c01fc9667232c8db
              swap2
                /* "#utility.yul":549:567   */
              add
                /* "contracts/Market.sol":29648:29706  Withdraw(msg.sender, liquidator, borrower, assets, shares) */
              mload(0x40)
              dup1
              swap2
              sub
              swap1
              log4
                /* "contracts/Market.sol":29735:29743  borrower */
              dup4
              sub(shl(0xa0, 0x01), 0x01)
                /* "contracts/Market.sol":29717:29752  Seize(liquidator, borrower, assets) */
              and
                /* "contracts/Market.sol":29723:29733  liquidator */
              dup6
              sub(shl(0xa0, 0x01), 0x01)
                /* "contracts/Market.sol":29717:29752  Seize(liquidator, borrower, assets) */
              and
              0x9e2db63c5a9dc5d08222447d76570029e4f2f3074c8aa4f1c511fa658506c710
                /* "contracts/Market.sol":29745:29751  assets */
              dup6
                /* "contracts/Market.sol":29717:29752  Seize(liquidator, borrower, assets) */
              mload(0x40)
              tag_1349
              swap2
                /* "#utility.yul":801:826   */
              dup2
              mstore
                /* "#utility.yul":789:791   */
              0x20
                /* "#utility.yul":774:792   */
              add
              swap1
                /* "#utility.yul":655:832   */
              jump
                /* "contracts/Market.sol":29717:29752  Seize(liquidator, borrower, assets) */
            tag_1349:
              mload(0x40)
              dup1
              swap2
              sub
              swap1
              log3
                /* "contracts/Market.sol":29758:29776  emitMarketUpdate() */
              tag_1350
                /* "contracts/Market.sol":29758:29774  emitMarketUpdate */
              tag_498
                /* "contracts/Market.sol":29758:29776  emitMarketUpdate() */
              jump	// in
            tag_1350:
                /* "contracts/Market.sol":29783:29821  asset.safeTransfer(liquidator, assets) */
              tag_850
              sub(shl(0xa0, 0x01), 0x01)
                /* "contracts/Market.sol":29783:29788  asset */
              immutable("0xa89f858efa0702d27b503f14d00e73a25115c8d5bdd25598ae4b376a61175436")
                /* "contracts/Market.sol":29783:29801  asset.safeTransfer */
              and
                /* "contracts/Market.sol":29802:29812  liquidator */
              dup7
                /* "contracts/Market.sol":29814:29820  assets */
              dup6
                /* "contracts/Market.sol":29783:29801  asset.safeTransfer */
              tag_602
                /* "contracts/Market.sol":29783:29821  asset.safeTransfer(liquidator, assets) */
              jump	// in
                /* "contracts/Market.sol":38489:38651  function updateFloatingAssetsAverage() internal {... */
            tag_784:
                /* "contracts/Market.sol":38567:38597  previewFloatingAssetsAverage() */
              tag_1353
                /* "contracts/Market.sol":38567:38595  previewFloatingAssetsAverage */
              tag_161
                /* "contracts/Market.sol":38567:38597  previewFloatingAssetsAverage() */
              jump	// in
            tag_1353:
                /* "contracts/Market.sol":38543:38564  floatingAssetsAverage */
              0xde
                /* "contracts/Market.sol":38543:38597  floatingAssetsAverage = previewFloatingAssetsAverage() */
              sstore
                /* "contracts/Market.sol":38603:38620  lastAverageUpdate */
              0xda
                /* "contracts/Market.sol":38603:38646  lastAverageUpdate = uint32(block.timestamp) */
              dup1
              sload
              not(shl(0x48, 0xffffffff))
              and
              shl(0x48, 0x01)
                /* "contracts/Market.sol":38630:38645  block.timestamp */
              timestamp
                /* "contracts/Market.sol":38603:38646  lastAverageUpdate = uint32(block.timestamp) */
              0xffffffff
              and
              mul
              or
              swap1
              sstore
                /* "contracts/Market.sol":38489:38651  function updateFloatingAssetsAverage() internal {... */
              jump	// out
                /* "contracts/Market.sol":32830:33082  function _mint(address to, uint256 amount) internal override {... */
            tag_791:
                /* "contracts/Market.sol":32938:32955  rewardsController */
              and(sub(shl(0xa0, 0x01), 0x01), sload(0xe3))
                /* "contracts/Market.sol":32965:33008  address(memRewardsController) != address(0) */
              dup1
              iszero
                /* "contracts/Market.sol":32961:33048  if (address(memRewardsController) != address(0)) memRewardsController.handleDeposit(to) */
              tag_1355
              jumpi
                /* "contracts/Market.sol":33010:33048  memRewardsController.handleDeposit(to) */
              mload(0x40)
              shl(0xe0, 0x0149e46f)
              dup2
              mstore
              sub(shl(0xa0, 0x01), 0x01)
                /* "#utility.yul":5785:5817   */
              dup5
              dup2
              and
                /* "contracts/Market.sol":33010:33048  memRewardsController.handleDeposit(to) */
              0x04
              dup4
              add
                /* "#utility.yul":5767:5818   */
              mstore
                /* "contracts/Market.sol":33010:33044  memRewardsController.handleDeposit */
              dup3
              and
              swap1
              0x0149e46f
              swap1
                /* "#utility.yul":5740:5758   */
              0x24
              add
                /* "contracts/Market.sol":33010:33048  memRewardsController.handleDeposit(to) */
              0x00
              mload(0x40)
              dup1
              dup4
              sub
              dup2
              0x00
              dup8
              dup1
              extcodesize
              iszero
              dup1
              iszero
              tag_1357
              jumpi
              0x00
              dup1
              revert
            tag_1357:
              pop
              gas
              call
              iszero
              dup1
              iszero
              tag_1359
              jumpi
              returndatasize
              0x00
              dup1
              returndatacopy
              revert(0x00, returndatasize)
            tag_1359:
              pop
              pop
              pop
              pop
                /* "contracts/Market.sol":32961:33048  if (address(memRewardsController) != address(0)) memRewardsController.handleDeposit(to) */
            tag_1355:
                /* "contracts/Market.sol":33054:33077  super._mint(to, amount) */
              tag_653
                /* "contracts/Market.sol":33066:33068  to */
              dup4
                /* "contracts/Market.sol":33070:33076  amount */
              dup4
                /* "contracts/Market.sol":33054:33065  super._mint */
              tag_1361
                /* "contracts/Market.sol":33054:33077  super._mint(to, amount) */
              jump	// in
                /* "contracts/Market.sol":30828:31148  function afterDeposit(uint256 assets, uint256) internal override whenNotPaused {... */
            tag_794:
                /* "node_modules/@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol":1482:1501  _requireNotPaused() */
              tag_1363
                /* "node_modules/@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol":1482:1499  _requireNotPaused */
              tag_540
                /* "node_modules/@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol":1482:1501  _requireNotPaused() */
              jump	// in
            tag_1363:
                /* "contracts/Market.sol":30913:30942  updateFloatingAssetsAverage() */
              tag_1365
                /* "contracts/Market.sol":30913:30940  updateFloatingAssetsAverage */
              tag_784
                /* "contracts/Market.sol":30913:30942  updateFloatingAssetsAverage() */
              jump	// in
            tag_1365:
                /* "contracts/Market.sol":30948:30967  uint256 treasuryFee */
              0x00
                /* "contracts/Market.sol":30970:30990  updateFloatingDebt() */
              tag_1366
                /* "contracts/Market.sol":30970:30988  updateFloatingDebt */
              tag_570
                /* "contracts/Market.sol":30970:30990  updateFloatingDebt() */
              jump	// in
            tag_1366:
                /* "contracts/Market.sol":30948:30990  uint256 treasuryFee = updateFloatingDebt() */
              swap1
              pop
                /* "contracts/Market.sol":30996:31012  uint256 earnings */
              0x00
                /* "contracts/Market.sol":31015:31042  accrueAccumulatedEarnings() */
              tag_1367
                /* "contracts/Market.sol":31015:31040  accrueAccumulatedEarnings */
              tag_494
                /* "contracts/Market.sol":31015:31042  accrueAccumulatedEarnings() */
              jump	// in
            tag_1367:
                /* "contracts/Market.sol":30996:31042  uint256 earnings = accrueAccumulatedEarnings() */
              swap1
              pop
                /* "contracts/Market.sol":31066:31083  earnings + assets */
              tag_1368
                /* "contracts/Market.sol":31077:31083  assets */
              dup5
                /* "contracts/Market.sol":30996:31042  uint256 earnings = accrueAccumulatedEarnings() */
              dup3
                /* "contracts/Market.sol":31066:31083  earnings + assets */
              tag_496
              jump	// in
            tag_1368:
                /* "contracts/Market.sol":31048:31062  floatingAssets */
              0xdd
              0x00
                /* "contracts/Market.sol":31048:31083  floatingAssets += earnings + assets */
              dup3
              dup3
              sload
              tag_1369
              swap2
              swap1
              tag_496
              jump	// in
            tag_1369:
              swap1
              swap2
              sstore
              pop
                /* "contracts/Market.sol":31089:31119  depositToTreasury(treasuryFee) */
              tag_1370
              swap1
              pop
                /* "contracts/Market.sol":31107:31118  treasuryFee */
              dup3
                /* "contracts/Market.sol":31089:31106  depositToTreasury */
              tag_571
                /* "contracts/Market.sol":31089:31119  depositToTreasury(treasuryFee) */
              jump	// in
            tag_1370:
                /* "contracts/Market.sol":31125:31143  emitMarketUpdate() */
              tag_1239
                /* "contracts/Market.sol":31125:31141  emitMarketUpdate */
              tag_498
                /* "contracts/Market.sol":31125:31143  emitMarketUpdate() */
              jump	// in
                /* "node_modules/@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol":2429:2544  function _pause() internal virtual whenNotPaused {... */
            tag_810:
                /* "node_modules/@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol":1482:1501  _requireNotPaused() */
              tag_1373
                /* "node_modules/@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol":1482:1499  _requireNotPaused */
              tag_540
                /* "node_modules/@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol":1482:1501  _requireNotPaused() */
              jump	// in
            tag_1373:
                /* "node_modules/@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol":2488:2495  _paused */
              0x97
                /* "node_modules/@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol":2488:2502  _paused = true */
              dup1
              sload
              not(0xff)
              and
                /* "node_modules/@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol":2498:2502  true */
              0x01
                /* "node_modules/@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol":2488:2502  _paused = true */
              or
              swap1
              sstore
                /* "node_modules/@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol":2517:2537  Paused(_msgSender()) */
              0x62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258
                /* "node_modules/@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol":2524:2536  _msgSender() */
              tag_1314
                /* "node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":929:939  msg.sender */
              caller
              swap1
                /* "node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":850:946  function _msgSender() internal view virtual returns (address) {... */
              jump
                /* "contracts/utils/FixedLib.sol":2229:2531  function repay(Pool storage pool, uint256 amount) internal returns (uint256 backupDebtReduction) {... */
            tag_836:
                /* "contracts/utils/FixedLib.sol":2351:2364  pool.borrowed */
              dup2
              sload
                /* "contracts/utils/FixedLib.sol":2389:2402  pool.supplied */
              0x01
              dup4
              add
              sload
                /* "contracts/utils/FixedLib.sol":2297:2324  uint256 backupDebtReduction */
              0x00
              swap2
                /* "contracts/utils/FixedLib.sol":2351:2364  pool.borrowed */
              swap1
                /* "contracts/utils/FixedLib.sol":2424:2441  borrowed - amount */
              tag_1378
                /* "contracts/utils/FixedLib.sol":2435:2441  amount */
              dup5
                /* "contracts/utils/FixedLib.sol":2351:2364  pool.borrowed */
              dup4
                /* "contracts/utils/FixedLib.sol":2424:2441  borrowed - amount */
              tag_526
              jump	// in
            tag_1378:
                /* "contracts/utils/FixedLib.sol":2408:2441  pool.borrowed = borrowed - amount */
              dup6
              sstore
                /* "contracts/utils/FixedLib.sol":2469:2526  Math.min(borrowed - Math.min(borrowed, supplied), amount) */
              tag_634
                /* "contracts/utils/FixedLib.sol":2489:2517  Math.min(borrowed, supplied) */
              tag_1259
                /* "contracts/utils/FixedLib.sol":2498:2506  borrowed */
              dup4
                /* "contracts/utils/FixedLib.sol":2508:2516  supplied */
              dup4
                /* "contracts/utils/FixedLib.sol":2489:2497  Math.min */
              tag_1180
                /* "contracts/utils/FixedLib.sol":2489:2517  Math.min(borrowed, supplied) */
              jump	// in
                /* "contracts/utils/FixedLib.sol":9030:9817  function clearMaturity(uint256 encoded, uint256 maturity) internal pure returns (uint256) {... */
            tag_839:
                /* "contracts/utils/FixedLib.sol":9111:9118  uint256 */
              0x00
                /* "contracts/utils/FixedLib.sol":9130:9142  encoded == 0 */
              dup3
              iszero
              dup1
                /* "contracts/utils/FixedLib.sol":9130:9177  encoded == 0 || encoded == maturity | (1 << 32) */
              tag_1383
              jumpi
              pop
                /* "contracts/utils/FixedLib.sol":9157:9165  maturity */
              dup2
                /* "contracts/utils/FixedLib.sol":9169:9176  1 << 32 */
              0x0100000000
                /* "contracts/utils/FixedLib.sol":9157:9177  maturity | (1 << 32) */
              or
                /* "contracts/utils/FixedLib.sol":9146:9153  encoded */
              dup4
                /* "contracts/utils/FixedLib.sol":9146:9177  encoded == maturity | (1 << 32) */
              eq
                /* "contracts/utils/FixedLib.sol":9130:9177  encoded == 0 || encoded == maturity | (1 << 32) */
            tag_1383:
                /* "contracts/utils/FixedLib.sol":9126:9187  if (encoded == 0 || encoded == maturity | (1 << 32)) return 0 */
              iszero
              tag_1384
              jumpi
              pop
                /* "contracts/utils/FixedLib.sol":9186:9187  0 */
              0x00
                /* "contracts/utils/FixedLib.sol":9179:9187  return 0 */
              jump(tag_487)
                /* "contracts/utils/FixedLib.sol":9126:9187  if (encoded == 0 || encoded == maturity | (1 << 32)) return 0 */
            tag_1384:
                /* "contracts/utils/FixedLib.sol":9228:9241  (1 << 32) - 1 */
              0xffffffff
                /* "contracts/utils/FixedLib.sol":9217:9242  encoded & ((1 << 32) - 1) */
              dup4
              and
                /* "contracts/utils/FixedLib.sol":9304:9328  maturity == baseMaturity */
              dup1
              dup4
              sub
                /* "contracts/utils/FixedLib.sol":9300:9813  if (maturity == baseMaturity) {... */
              tag_1385
              jumpi
                /* "contracts/utils/FixedLib.sol":9415:9417  33 */
              0x21
                /* "contracts/utils/FixedLib.sol":9404:9417  encoded >> 33 */
              dup5
              swap1
              shr
                /* "contracts/utils/FixedLib.sol":9441:9442  1 */
              0x01
                /* "contracts/utils/FixedLib.sol":9450:9571  while ((packed & 1) == 0 && packed != 0) {... */
            tag_1386:
                /* "contracts/utils/FixedLib.sol":9467:9468  1 */
              0x01
                /* "contracts/utils/FixedLib.sol":9458:9468  packed & 1 */
              dup3
              and
                /* "contracts/utils/FixedLib.sol":9457:9474  (packed & 1) == 0 */
              iszero
                /* "contracts/utils/FixedLib.sol":9457:9489  (packed & 1) == 0 && packed != 0 */
              dup1
              iszero
              tag_1388
              jumpi
              pop
                /* "contracts/utils/FixedLib.sol":9478:9489  packed != 0 */
              dup2
              iszero
              iszero
                /* "contracts/utils/FixedLib.sol":9457:9489  (packed & 1) == 0 && packed != 0 */
            tag_1388:
                /* "contracts/utils/FixedLib.sol":9450:9571  while ((packed & 1) == 0 && packed != 0) {... */
              iszero
              tag_1387
              jumpi
                /* "contracts/utils/FixedLib.sol":9523:9530  ++range */
              0x01
                /* "contracts/utils/FixedLib.sol":9550:9562  packed >>= 1 */
              swap2
              dup3
              shr
              swap2
                /* "contracts/utils/FixedLib.sol":9523:9530  ++range */
              add
                /* "contracts/utils/FixedLib.sol":9450:9571  while ((packed & 1) == 0 && packed != 0) {... */
              jump(tag_1386)
            tag_1387:
                /* "contracts/utils/FixedLib.sol":9618:9620  32 */
              0x20
                /* "contracts/utils/FixedLib.sol":9602:9612  32 + range */
              tag_1389
                /* "contracts/utils/FixedLib.sol":9607:9612  range */
              dup3
                /* "contracts/utils/FixedLib.sol":9618:9620  32 */
              dup3
                /* "contracts/utils/FixedLib.sol":9602:9612  32 + range */
              tag_496
              jump	// in
            tag_1389:
                /* "contracts/utils/FixedLib.sol":9590:9613  encoded >> (32 + range) */
              swap7
              swap1
              swap7
              shr
                /* "contracts/utils/FixedLib.sol":9589:9620  (encoded >> (32 + range)) << 32 */
              swap1
              swap6
              shl
              swap5
              dup6
                /* "contracts/utils/FixedLib.sol":9649:9665  range * INTERVAL */
              tag_1390
                /* "contracts/utils/FixedLib.sol":306:313  4 weeks */
              0x24ea00
                /* "contracts/utils/FixedLib.sol":9649:9654  range */
              dup4
                /* "contracts/utils/FixedLib.sol":9649:9665  range * INTERVAL */
              tag_528
              jump	// in
            tag_1390:
                /* "contracts/utils/FixedLib.sol":9637:9666  maturity + (range * INTERVAL) */
              tag_1391
              swap1
                /* "contracts/utils/FixedLib.sol":9637:9645  maturity */
              dup8
                /* "contracts/utils/FixedLib.sol":9637:9666  maturity + (range * INTERVAL) */
              tag_496
              jump	// in
            tag_1391:
                /* "contracts/utils/FixedLib.sol":9636:9677  (maturity + (range * INTERVAL)) | encoded */
              or
                /* "contracts/utils/FixedLib.sol":9629:9677  return (maturity + (range * INTERVAL)) | encoded */
              swap4
              pop
              pop
              pop
              pop
              jump(tag_487)
                /* "contracts/utils/FixedLib.sol":9300:9813  if (maturity == baseMaturity) {... */
            tag_1385:
                /* "contracts/utils/FixedLib.sol":306:313  4 weeks */
              0x24ea00
                /* "contracts/utils/FixedLib.sol":9768:9791  maturity - baseMaturity */
              tag_1393
                /* "contracts/utils/FixedLib.sol":9779:9791  baseMaturity */
              dup3
                /* "contracts/utils/FixedLib.sol":9768:9776  maturity */
              dup6
                /* "contracts/utils/FixedLib.sol":9768:9791  maturity - baseMaturity */
              tag_526
              jump	// in
            tag_1393:
                /* "contracts/utils/FixedLib.sol":9767:9803  (maturity - baseMaturity) / INTERVAL */
              tag_1394
              swap2
              swap1
              tag_1208
              jump	// in
            tag_1394:
                /* "contracts/utils/FixedLib.sol":9761:9804  32 + ((maturity - baseMaturity) / INTERVAL) */
              tag_1395
              swap1
                /* "contracts/utils/FixedLib.sol":9761:9763  32 */
              0x20
                /* "contracts/utils/FixedLib.sol":9761:9804  32 + ((maturity - baseMaturity) / INTERVAL) */
              tag_496
              jump	// in
            tag_1395:
                /* "contracts/utils/FixedLib.sol":9755:9756  1 */
              0x01
                /* "contracts/utils/FixedLib.sol":9755:9805  1 << (32 + ((maturity - baseMaturity) / INTERVAL)) */
              swap1
              shl
                /* "contracts/utils/FixedLib.sol":9753:9806  ~(1 << (32 + ((maturity - baseMaturity) / INTERVAL))) */
              not
                /* "contracts/utils/FixedLib.sol":9743:9750  encoded */
              dup5
                /* "contracts/utils/FixedLib.sol":9743:9806  encoded & ~(1 << (32 + ((maturity - baseMaturity) / INTERVAL))) */
              and
                /* "contracts/utils/FixedLib.sol":9736:9806  return encoded & ~(1 << (32 + ((maturity - baseMaturity) / INTERVAL))) */
              swap2
              pop
              pop
              jump(tag_487)
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":2025:2090  function __AccessControl_init() internal onlyInitializing {... */
            tag_872:
                /* "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":5363:5376  _initializing */
              sload(0x00)
              0x0100
              swap1
              div
              0xff
              and
                /* "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":5355:5424  require(_initializing, "Initializable: contract is not initializing") */
              tag_1117
              jumpi
              0x00
              dup1
              revert
                /* "node_modules/@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol":1063:1160  function __Pausable_init() internal onlyInitializing {... */
            tag_874:
                /* "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":5363:5376  _initializing */
              sload(0x00)
              0x0100
              swap1
              div
              0xff
              and
                /* "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":5355:5424  require(_initializing, "Initializable: contract is not initializing") */
              tag_1401
              jumpi
              0x00
              dup1
              revert
            tag_1401:
                /* "node_modules/@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol":1126:1153  __Pausable_init_unchained() */
              tag_1117
                /* "node_modules/@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol":1126:1151  __Pausable_init_unchained */
              tag_1404
                /* "node_modules/@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol":1126:1153  __Pausable_init_unchained() */
              jump	// in
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":874:1038  function divWadDown(uint256 x, uint256 y) internal pure returns (uint256) {... */
            tag_912:
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":939:946  uint256 */
              0x00
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":965:986  mulDivDown(x, WAD, y) */
              tag_511
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":976:977  x */
              dup4
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":491:495  1e18 */
              0x0de0b6b3a7640000
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":984:985  y */
              dup5
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":965:975  mulDivDown */
              tag_479
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":965:986  mulDivDown(x, WAD, y) */
              jump	// in
                /* "contracts/utils/FixedLib.sol":5708:6018  function scaleProportionally(Position memory position, uint256 amount) internal pure returns (Position memory) {... */
            tag_918:
              0x40
              dup1
              mload
              dup1
              dup3
              add
              swap1
              swap2
              mstore
              0x00
              dup1
              dup3
              mstore
              0x20
              dup3
              add
              mstore
                /* "contracts/utils/FixedLib.sol":5863:5881  position.principal */
              dup3
              mload
                /* "contracts/utils/FixedLib.sol":5904:5916  position.fee */
              0x20
              dup5
              add
              mload
                /* "contracts/utils/FixedLib.sol":5825:5842  uint256 principal */
              0x00
              swap2
                /* "contracts/utils/FixedLib.sol":5845:5917  amount.mulDivDown(position.principal, position.principal + position.fee) */
              tag_1410
              swap2
                /* "contracts/utils/FixedLib.sol":5883:5916  position.principal + position.fee */
              tag_1008
              swap1
                /* "contracts/utils/FixedLib.sol":5863:5881  position.principal */
              dup3
                /* "contracts/utils/FixedLib.sol":5883:5916  position.principal + position.fee */
              tag_496
              jump	// in
                /* "contracts/utils/FixedLib.sol":5845:5917  amount.mulDivDown(position.principal, position.principal + position.fee) */
            tag_1410:
                /* "contracts/utils/FixedLib.sol":5923:5953  position.principal = principal */
              dup1
              dup6
              mstore
                /* "contracts/utils/FixedLib.sol":5825:5917  uint256 principal = amount.mulDivDown(position.principal, position.principal + position.fee) */
              swap1
              pop
                /* "contracts/utils/FixedLib.sol":5974:5992  amount - principal */
              tag_1412
                /* "contracts/utils/FixedLib.sol":5825:5917  uint256 principal = amount.mulDivDown(position.principal, position.principal + position.fee) */
              dup2
                /* "contracts/utils/FixedLib.sol":5974:5980  amount */
              dup5
                /* "contracts/utils/FixedLib.sol":5974:5992  amount - principal */
              tag_526
              jump	// in
            tag_1412:
                /* "contracts/utils/FixedLib.sol":5959:5971  position.fee */
              0x20
              dup6
              add
                /* "contracts/utils/FixedLib.sol":5959:5992  position.fee = amount - principal */
              mstore
              pop
                /* "contracts/utils/FixedLib.sol":5959:5971  position.fee */
              swap2
              swap3
                /* "contracts/utils/FixedLib.sol":5708:6018  function scaleProportionally(Position memory position, uint256 amount) internal pure returns (Position memory) {... */
              swap2
              pop
              pop
              jump	// out
                /* "contracts/utils/FixedLib.sol":3589:3951  function withdraw(Pool storage pool, uint256 amountToDiscount) internal returns (uint256 backupDebtAddition) {... */
            tag_919:
                /* "contracts/utils/FixedLib.sol":3723:3736  pool.borrowed */
              dup2
              sload
                /* "contracts/utils/FixedLib.sol":3761:3774  pool.supplied */
              0x01
              dup4
              add
              sload
                /* "contracts/utils/FixedLib.sol":3670:3696  uint256 backupDebtAddition */
              0x00
              swap2
                /* "contracts/utils/FixedLib.sol":3723:3736  pool.borrowed */
              swap1
                /* "contracts/utils/FixedLib.sol":3670:3696  uint256 backupDebtAddition */
              dup3
                /* "contracts/utils/FixedLib.sol":3800:3827  supplied - amountToDiscount */
              tag_1414
                /* "contracts/utils/FixedLib.sol":3811:3827  amountToDiscount */
              dup6
                /* "contracts/utils/FixedLib.sol":3761:3774  pool.supplied */
              dup4
                /* "contracts/utils/FixedLib.sol":3800:3827  supplied - amountToDiscount */
              tag_526
              jump	// in
            tag_1414:
                /* "contracts/utils/FixedLib.sol":3780:3827  uint256 newSupply = supplied - amountToDiscount */
              swap1
              pop
                /* "contracts/utils/FixedLib.sol":3886:3915  Math.min(newSupply, borrowed) */
              tag_1415
                /* "contracts/utils/FixedLib.sol":3895:3904  newSupply */
              dup2
                /* "contracts/utils/FixedLib.sol":3906:3914  borrowed */
              dup5
                /* "contracts/utils/FixedLib.sol":3886:3894  Math.min */
              tag_1180
                /* "contracts/utils/FixedLib.sol":3886:3915  Math.min(newSupply, borrowed) */
              jump	// in
            tag_1415:
                /* "contracts/utils/FixedLib.sol":3855:3883  Math.min(supplied, borrowed) */
              tag_1416
                /* "contracts/utils/FixedLib.sol":3864:3872  supplied */
              dup4
                /* "contracts/utils/FixedLib.sol":3874:3882  borrowed */
              dup6
                /* "contracts/utils/FixedLib.sol":3855:3863  Math.min */
              tag_1180
                /* "contracts/utils/FixedLib.sol":3855:3883  Math.min(supplied, borrowed) */
              jump	// in
            tag_1416:
                /* "contracts/utils/FixedLib.sol":3855:3915  Math.min(supplied, borrowed) - Math.min(newSupply, borrowed) */
              tag_1417
              swap2
              swap1
              tag_526
              jump	// in
            tag_1417:
                /* "contracts/utils/FixedLib.sol":3921:3934  pool.supplied */
              0x01
              swap1
              swap7
              add
                /* "contracts/utils/FixedLib.sol":3921:3946  pool.supplied = newSupply */
              sstore
              pop
                /* "contracts/utils/FixedLib.sol":3834:3915  backupDebtAddition = Math.min(supplied, borrowed) - Math.min(newSupply, borrowed) */
              swap3
              swap4
                /* "contracts/utils/FixedLib.sol":3589:3951  function withdraw(Pool storage pool, uint256 amountToDiscount) internal returns (uint256 backupDebtAddition) {... */
              swap3
              pop
              pop
              pop
              jump	// out
                /* "contracts/utils/FixedLib.sol":6336:6745  function reduceProportionally(Position memory position, uint256 amount) internal pure returns (Position memory) {... */
            tag_929:
              0x40
              dup1
              mload
              dup1
              dup3
              add
              swap1
              swap2
              mstore
              0x00
              dup1
              dup3
              mstore
              0x20
              dup3
              add
              mstore
                /* "contracts/utils/FixedLib.sol":6500:6512  position.fee */
              0x20
              dup4
              add
              mload
                /* "contracts/utils/FixedLib.sol":6479:6497  position.principal */
              dup4
              mload
                /* "contracts/utils/FixedLib.sol":6454:6476  uint256 positionAssets */
              0x00
              swap2
                /* "contracts/utils/FixedLib.sol":6479:6512  position.principal + position.fee */
              tag_1420
              swap2
              tag_496
              jump	// in
            tag_1420:
                /* "contracts/utils/FixedLib.sol":6454:6512  uint256 positionAssets = position.principal + position.fee */
              swap1
              pop
                /* "contracts/utils/FixedLib.sol":6518:6543  uint256 newPositionAssets */
              0x00
                /* "contracts/utils/FixedLib.sol":6546:6569  positionAssets - amount */
              tag_1421
                /* "contracts/utils/FixedLib.sol":6563:6569  amount */
              dup5
                /* "contracts/utils/FixedLib.sol":6454:6512  uint256 positionAssets = position.principal + position.fee */
              dup4
                /* "contracts/utils/FixedLib.sol":6546:6569  positionAssets - amount */
              tag_526
              jump	// in
            tag_1421:
                /* "contracts/utils/FixedLib.sol":6625:6643  position.principal */
              dup6
              mload
                /* "contracts/utils/FixedLib.sol":6518:6569  uint256 newPositionAssets = positionAssets - amount */
              swap1
              swap2
              pop
                /* "contracts/utils/FixedLib.sol":6596:6660  newPositionAssets.mulDivDown(position.principal, positionAssets) */
              tag_1422
              swap1
                /* "contracts/utils/FixedLib.sol":6518:6569  uint256 newPositionAssets = positionAssets - amount */
              dup3
              swap1
                /* "contracts/utils/FixedLib.sol":6645:6659  positionAssets */
              dup5
                /* "contracts/utils/FixedLib.sol":6596:6624  newPositionAssets.mulDivDown */
              tag_479
                /* "contracts/utils/FixedLib.sol":6596:6660  newPositionAssets.mulDivDown(position.principal, positionAssets) */
              jump	// in
            tag_1422:
                /* "contracts/utils/FixedLib.sol":6575:6660  position.principal = newPositionAssets.mulDivDown(position.principal, positionAssets) */
              dup1
              dup7
              mstore
                /* "contracts/utils/FixedLib.sol":6681:6719  newPositionAssets - position.principal */
              tag_1423
              swap1
                /* "contracts/utils/FixedLib.sol":6681:6698  newPositionAssets */
              dup3
                /* "contracts/utils/FixedLib.sol":6681:6719  newPositionAssets - position.principal */
              tag_526
              jump	// in
            tag_1423:
                /* "contracts/utils/FixedLib.sol":6666:6678  position.fee */
              0x20
              dup7
              add
                /* "contracts/utils/FixedLib.sol":6666:6719  position.fee = newPositionAssets - position.principal */
              mstore
              pop
                /* "contracts/utils/FixedLib.sol":6666:6678  position.fee */
              swap3
              swap4
                /* "contracts/utils/FixedLib.sol":6336:6745  function reduceProportionally(Position memory position, uint256 amount) internal pure returns (Position memory) {... */
              swap3
              pop
              pop
              pop
              jump	// out
                /* "node_modules/solmate/src/tokens/ERC20.sol":2665:3038  function transfer(address to, uint256 amount) public virtual returns (bool) {... */
            tag_958:
                /* "node_modules/solmate/src/tokens/ERC20.sol":2761:2771  msg.sender */
              caller
                /* "node_modules/solmate/src/tokens/ERC20.sol":2735:2739  bool */
              0x00
                /* "node_modules/solmate/src/tokens/ERC20.sol":2751:2772  balanceOf[msg.sender] */
              swap1
              dup2
              mstore
                /* "node_modules/solmate/src/tokens/ERC20.sol":2751:2760  balanceOf */
              0xcc
                /* "node_modules/solmate/src/tokens/ERC20.sol":2751:2772  balanceOf[msg.sender] */
              0x20
              mstore
              0x40
              dup2
              keccak256
                /* "node_modules/solmate/src/tokens/ERC20.sol":2751:2782  balanceOf[msg.sender] -= amount */
              dup1
              sload
                /* "node_modules/solmate/src/tokens/ERC20.sol":2776:2782  amount */
              dup4
              swap2
                /* "node_modules/solmate/src/tokens/ERC20.sol":2751:2772  balanceOf[msg.sender] */
              swap1
                /* "node_modules/solmate/src/tokens/ERC20.sol":2735:2739  bool */
              dup4
              swap1
                /* "node_modules/solmate/src/tokens/ERC20.sol":2751:2782  balanceOf[msg.sender] -= amount */
              tag_1425
              swap1
                /* "node_modules/solmate/src/tokens/ERC20.sol":2776:2782  amount */
              dup5
              swap1
                /* "node_modules/solmate/src/tokens/ERC20.sol":2751:2782  balanceOf[msg.sender] -= amount */
              tag_526
              jump	// in
            tag_1425:
              swap1
              swap2
              sstore
              pop
              pop
              sub(shl(0xa0, 0x01), 0x01)
                /* "node_modules/solmate/src/tokens/ERC20.sol":2928:2941  balanceOf[to] */
              dup4
              and
              0x00
              dup2
              dup2
              mstore
                /* "node_modules/solmate/src/tokens/ERC20.sol":2928:2937  balanceOf */
              0xcc
                /* "node_modules/solmate/src/tokens/ERC20.sol":2928:2941  balanceOf[to] */
              0x20
              mstore
              0x40
              swap1
              dup2
              swap1
              keccak256
                /* "node_modules/solmate/src/tokens/ERC20.sol":2928:2951  balanceOf[to] += amount */
              dup1
              sload
              dup6
              add
              swap1
              sstore
                /* "node_modules/solmate/src/tokens/ERC20.sol":2977:3009  Transfer(msg.sender, to, amount) */
              mload
                /* "node_modules/solmate/src/tokens/ERC20.sol":2986:2996  msg.sender */
              caller
              swap1
              0x00
              dup1
              mload
              0x20
              data_ada389e1fc24a8587c776340efb91b36e675792ab631816100d55df0b5cf3cbc
              dup4
              codecopy
              dup2
              mload
              swap2
              mstore
                /* "node_modules/solmate/src/tokens/ERC20.sol":2977:3009  Transfer(msg.sender, to, amount) */
              swap1
              tag_513
              swap1
                /* "node_modules/solmate/src/tokens/ERC20.sol":2945:2951  amount */
              dup7
                /* "#utility.yul":801:826   */
              dup2
              mstore
                /* "#utility.yul":789:791   */
              0x20
                /* "#utility.yul":774:792   */
              add
              swap1
                /* "#utility.yul":655:832   */
              jump
                /* "node_modules/solmate/src/mixins/ERC4626.sol":2532:3211  function withdraw(... */
            tag_986:
                /* "node_modules/solmate/src/mixins/ERC4626.sol":2653:2667  uint256 shares */
              0x00
                /* "node_modules/solmate/src/mixins/ERC4626.sol":2688:2711  previewWithdraw(assets) */
              tag_1428
                /* "node_modules/solmate/src/mixins/ERC4626.sol":2704:2710  assets */
              dup5
                /* "node_modules/solmate/src/mixins/ERC4626.sol":2688:2703  previewWithdraw */
              tag_150
                /* "node_modules/solmate/src/mixins/ERC4626.sol":2688:2711  previewWithdraw(assets) */
              jump	// in
            tag_1428:
                /* "node_modules/solmate/src/mixins/ERC4626.sol":2679:2711  shares = previewWithdraw(assets) */
              swap1
              pop
                /* "node_modules/solmate/src/mixins/ERC4626.sol":2793:2803  msg.sender */
              caller
              sub(shl(0xa0, 0x01), 0x01)
                /* "node_modules/solmate/src/mixins/ERC4626.sol":2793:2812  msg.sender != owner */
              dup4
              and
              eq
                /* "node_modules/solmate/src/mixins/ERC4626.sol":2789:3017  if (msg.sender != owner) {... */
              tag_1429
              jumpi
              sub(shl(0xa0, 0x01), 0x01)
                /* "node_modules/solmate/src/mixins/ERC4626.sol":2846:2862  allowance[owner] */
              dup3
              and
                /* "node_modules/solmate/src/mixins/ERC4626.sol":2828:2843  uint256 allowed */
              0x00
                /* "node_modules/solmate/src/mixins/ERC4626.sol":2846:2862  allowance[owner] */
              swap1
              dup2
              mstore
                /* "node_modules/solmate/src/mixins/ERC4626.sol":2846:2855  allowance */
              0xcd
                /* "node_modules/solmate/src/mixins/ERC4626.sol":2846:2862  allowance[owner] */
              0x20
              swap1
              dup2
              mstore
              0x40
              dup1
              dup4
              keccak256
                /* "node_modules/solmate/src/mixins/ERC4626.sol":2863:2873  msg.sender */
              caller
                /* "node_modules/solmate/src/mixins/ERC4626.sol":2846:2874  allowance[owner][msg.sender] */
              dup5
              mstore
              swap1
              swap2
              mstore
              swap1
              keccak256
              sload
              not(0x00)
                /* "node_modules/solmate/src/mixins/ERC4626.sol":2929:2957  allowed != type(uint256).max */
              dup2
              eq
                /* "node_modules/solmate/src/mixins/ERC4626.sol":2925:3006  if (allowed != type(uint256).max) allowance[owner][msg.sender] = allowed - shares */
              tag_1430
              jumpi
                /* "node_modules/solmate/src/mixins/ERC4626.sol":2990:3006  allowed - shares */
              tag_1431
                /* "node_modules/solmate/src/mixins/ERC4626.sol":3000:3006  shares */
              dup3
                /* "node_modules/solmate/src/mixins/ERC4626.sol":2990:2997  allowed */
              dup3
                /* "node_modules/solmate/src/mixins/ERC4626.sol":2990:3006  allowed - shares */
              tag_526
              jump	// in
            tag_1431:
              sub(shl(0xa0, 0x01), 0x01)
                /* "node_modules/solmate/src/mixins/ERC4626.sol":2959:2975  allowance[owner] */
              dup5
              and
              0x00
              swap1
              dup2
              mstore
                /* "node_modules/solmate/src/mixins/ERC4626.sol":2959:2968  allowance */
              0xcd
                /* "node_modules/solmate/src/mixins/ERC4626.sol":2959:2975  allowance[owner] */
              0x20
              swap1
              dup2
              mstore
              0x40
              dup1
              dup4
              keccak256
                /* "node_modules/solmate/src/mixins/ERC4626.sol":2976:2986  msg.sender */
              caller
                /* "node_modules/solmate/src/mixins/ERC4626.sol":2959:2987  allowance[owner][msg.sender] */
              dup5
              mstore
              swap1
              swap2
              mstore
              swap1
              keccak256
                /* "node_modules/solmate/src/mixins/ERC4626.sol":2959:3006  allowance[owner][msg.sender] = allowed - shares */
              sstore
                /* "node_modules/solmate/src/mixins/ERC4626.sol":2925:3006  if (allowed != type(uint256).max) allowance[owner][msg.sender] = allowed - shares */
            tag_1430:
                /* "node_modules/solmate/src/mixins/ERC4626.sol":2814:3017  {... */
              pop
                /* "node_modules/solmate/src/mixins/ERC4626.sol":2789:3017  if (msg.sender != owner) {... */
            tag_1429:
                /* "node_modules/solmate/src/mixins/ERC4626.sol":3027:3057  beforeWithdraw(assets, shares) */
              tag_1432
                /* "node_modules/solmate/src/mixins/ERC4626.sol":3042:3048  assets */
              dup5
                /* "node_modules/solmate/src/mixins/ERC4626.sol":3050:3056  shares */
              dup3
                /* "node_modules/solmate/src/mixins/ERC4626.sol":3027:3041  beforeWithdraw */
              tag_1345
                /* "node_modules/solmate/src/mixins/ERC4626.sol":3027:3057  beforeWithdraw(assets, shares) */
              jump	// in
            tag_1432:
                /* "node_modules/solmate/src/mixins/ERC4626.sol":3068:3088  _burn(owner, shares) */
              tag_1433
                /* "node_modules/solmate/src/mixins/ERC4626.sol":3074:3079  owner */
              dup3
                /* "node_modules/solmate/src/mixins/ERC4626.sol":3081:3087  shares */
              dup3
                /* "node_modules/solmate/src/mixins/ERC4626.sol":3068:3073  _burn */
              tag_1347
                /* "node_modules/solmate/src/mixins/ERC4626.sol":3068:3088  _burn(owner, shares) */
              jump	// in
            tag_1433:
                /* "node_modules/solmate/src/mixins/ERC4626.sol":3104:3157  Withdraw(msg.sender, receiver, owner, assets, shares) */
              0x40
              dup1
              mload
                /* "#utility.yul":576:601   */
              dup6
              dup2
              mstore
                /* "#utility.yul":632:634   */
              0x20
                /* "#utility.yul":617:635   */
              dup2
              add
                /* "#utility.yul":610:644   */
              dup4
              swap1
              mstore
              sub(shl(0xa0, 0x01), 0x01)
                /* "node_modules/solmate/src/mixins/ERC4626.sol":3104:3157  Withdraw(msg.sender, receiver, owner, assets, shares) */
              dup1
              dup6
              and
              swap3
              swap1
              dup7
              and
              swap2
                /* "node_modules/solmate/src/mixins/ERC4626.sol":3113:3123  msg.sender */
              caller
              swap2
                /* "node_modules/solmate/src/mixins/ERC4626.sol":3104:3157  Withdraw(msg.sender, receiver, owner, assets, shares) */
              0xfbde797d201c681b91056529119e0b02407c7bb96a4a2c75c01fc9667232c8db
              swap2
                /* "#utility.yul":549:567   */
              add
                /* "node_modules/solmate/src/mixins/ERC4626.sol":3104:3157  Withdraw(msg.sender, receiver, owner, assets, shares) */
              mload(0x40)
              dup1
              swap2
              sub
              swap1
              log4
                /* "node_modules/solmate/src/mixins/ERC4626.sol":3168:3204  asset.safeTransfer(receiver, assets) */
              tag_511
              sub(shl(0xa0, 0x01), 0x01)
                /* "node_modules/solmate/src/mixins/ERC4626.sol":3168:3173  asset */
              immutable("0xa89f858efa0702d27b503f14d00e73a25115c8d5bdd25598ae4b376a61175436")
                /* "node_modules/solmate/src/mixins/ERC4626.sol":3168:3186  asset.safeTransfer */
              and
                /* "node_modules/solmate/src/mixins/ERC4626.sol":3187:3195  receiver */
              dup5
                /* "node_modules/solmate/src/mixins/ERC4626.sol":3197:3203  assets */
              dup7
                /* "node_modules/solmate/src/mixins/ERC4626.sol":3168:3186  asset.safeTransfer */
              tag_602
                /* "node_modules/solmate/src/mixins/ERC4626.sol":3168:3204  asset.safeTransfer(receiver, assets) */
              jump	// in
                /* "node_modules/solmate/src/mixins/ERC4626.sol":3217:3930  function redeem(... */
            tag_1000:
                /* "node_modules/solmate/src/mixins/ERC4626.sol":3336:3350  uint256 assets */
              0x00
                /* "node_modules/solmate/src/mixins/ERC4626.sol":3366:3376  msg.sender */
              caller
              sub(shl(0xa0, 0x01), 0x01)
                /* "node_modules/solmate/src/mixins/ERC4626.sol":3366:3385  msg.sender != owner */
              dup4
              and
              eq
                /* "node_modules/solmate/src/mixins/ERC4626.sol":3362:3590  if (msg.sender != owner) {... */
              tag_1437
              jumpi
              sub(shl(0xa0, 0x01), 0x01)
                /* "node_modules/solmate/src/mixins/ERC4626.sol":3419:3435  allowance[owner] */
              dup3
              and
                /* "node_modules/solmate/src/mixins/ERC4626.sol":3401:3416  uint256 allowed */
              0x00
                /* "node_modules/solmate/src/mixins/ERC4626.sol":3419:3435  allowance[owner] */
              swap1
              dup2
              mstore
                /* "node_modules/solmate/src/mixins/ERC4626.sol":3419:3428  allowance */
              0xcd
                /* "node_modules/solmate/src/mixins/ERC4626.sol":3419:3435  allowance[owner] */
              0x20
              swap1
              dup2
              mstore
              0x40
              dup1
              dup4
              keccak256
                /* "node_modules/solmate/src/mixins/ERC4626.sol":3436:3446  msg.sender */
              caller
                /* "node_modules/solmate/src/mixins/ERC4626.sol":3419:3447  allowance[owner][msg.sender] */
              dup5
              mstore
              swap1
              swap2
              mstore
              swap1
              keccak256
              sload
              not(0x00)
                /* "node_modules/solmate/src/mixins/ERC4626.sol":3502:3530  allowed != type(uint256).max */
              dup2
              eq
                /* "node_modules/solmate/src/mixins/ERC4626.sol":3498:3579  if (allowed != type(uint256).max) allowance[owner][msg.sender] = allowed - shares */
              tag_1438
              jumpi
                /* "node_modules/solmate/src/mixins/ERC4626.sol":3563:3579  allowed - shares */
              tag_1439
                /* "node_modules/solmate/src/mixins/ERC4626.sol":3573:3579  shares */
              dup6
                /* "node_modules/solmate/src/mixins/ERC4626.sol":3563:3570  allowed */
              dup3
                /* "node_modules/solmate/src/mixins/ERC4626.sol":3563:3579  allowed - shares */
              tag_526
              jump	// in
            tag_1439:
              sub(shl(0xa0, 0x01), 0x01)
                /* "node_modules/solmate/src/mixins/ERC4626.sol":3532:3548  allowance[owner] */
              dup5
              and
              0x00
              swap1
              dup2
              mstore
                /* "node_modules/solmate/src/mixins/ERC4626.sol":3532:3541  allowance */
              0xcd
                /* "node_modules/solmate/src/mixins/ERC4626.sol":3532:3548  allowance[owner] */
              0x20
              swap1
              dup2
              mstore
              0x40
              dup1
              dup4
              keccak256
                /* "node_modules/solmate/src/mixins/ERC4626.sol":3549:3559  msg.sender */
              caller
                /* "node_modules/solmate/src/mixins/ERC4626.sol":3532:3560  allowance[owner][msg.sender] */
              dup5
              mstore
              swap1
              swap2
              mstore
              swap1
              keccak256
                /* "node_modules/solmate/src/mixins/ERC4626.sol":3532:3579  allowance[owner][msg.sender] = allowed - shares */
              sstore
                /* "node_modules/solmate/src/mixins/ERC4626.sol":3498:3579  if (allowed != type(uint256).max) allowance[owner][msg.sender] = allowed - shares */
            tag_1438:
                /* "node_modules/solmate/src/mixins/ERC4626.sol":3387:3590  {... */
              pop
                /* "node_modules/solmate/src/mixins/ERC4626.sol":3362:3590  if (msg.sender != owner) {... */
            tag_1437:
                /* "node_modules/solmate/src/mixins/ERC4626.sol":3692:3713  previewRedeem(shares) */
              tag_1440
                /* "node_modules/solmate/src/mixins/ERC4626.sol":3706:3712  shares */
              dup5
                /* "node_modules/solmate/src/mixins/ERC4626.sol":3692:3705  previewRedeem */
              tag_260
                /* "node_modules/solmate/src/mixins/ERC4626.sol":3692:3713  previewRedeem(shares) */
              jump	// in
            tag_1440:
                /* "node_modules/solmate/src/mixins/ERC4626.sol":3683:3713  assets = previewRedeem(shares) */
              swap1
              pop
              dup1
                /* "node_modules/solmate/src/mixins/ERC4626.sol":3718:3719  0 */
              0x00
                /* "node_modules/solmate/src/mixins/ERC4626.sol":3682:3719  (assets = previewRedeem(shares)) != 0 */
              sub
                /* "node_modules/solmate/src/mixins/ERC4626.sol":3674:3735  require((assets = previewRedeem(shares)) != 0, "ZERO_ASSETS") */
              tag_1441
              jumpi
              0x00
              dup1
              revert
            tag_1441:
                /* "node_modules/solmate/src/mixins/ERC4626.sol":3746:3776  beforeWithdraw(assets, shares) */
              tag_1442
                /* "node_modules/solmate/src/mixins/ERC4626.sol":3761:3767  assets */
              dup2
                /* "node_modules/solmate/src/mixins/ERC4626.sol":3769:3775  shares */
              dup6
                /* "node_modules/solmate/src/mixins/ERC4626.sol":3746:3760  beforeWithdraw */
              tag_1345
                /* "node_modules/solmate/src/mixins/ERC4626.sol":3746:3776  beforeWithdraw(assets, shares) */
              jump	// in
            tag_1442:
                /* "node_modules/solmate/src/mixins/ERC4626.sol":3787:3807  _burn(owner, shares) */
              tag_1443
                /* "node_modules/solmate/src/mixins/ERC4626.sol":3793:3798  owner */
              dup3
                /* "node_modules/solmate/src/mixins/ERC4626.sol":3800:3806  shares */
              dup6
                /* "node_modules/solmate/src/mixins/ERC4626.sol":3787:3792  _burn */
              tag_1347
                /* "node_modules/solmate/src/mixins/ERC4626.sol":3787:3807  _burn(owner, shares) */
              jump	// in
            tag_1443:
                /* "node_modules/solmate/src/mixins/ERC4626.sol":3823:3876  Withdraw(msg.sender, receiver, owner, assets, shares) */
              0x40
              dup1
              mload
                /* "#utility.yul":576:601   */
              dup3
              dup2
              mstore
                /* "#utility.yul":632:634   */
              0x20
                /* "#utility.yul":617:635   */
              dup2
              add
                /* "#utility.yul":610:644   */
              dup7
              swap1
              mstore
              sub(shl(0xa0, 0x01), 0x01)
                /* "node_modules/solmate/src/mixins/ERC4626.sol":3823:3876  Withdraw(msg.sender, receiver, owner, assets, shares) */
              dup1
              dup6
              and
              swap3
              swap1
              dup7
              and
              swap2
                /* "node_modules/solmate/src/mixins/ERC4626.sol":3832:3842  msg.sender */
              caller
              swap2
                /* "node_modules/solmate/src/mixins/ERC4626.sol":3823:3876  Withdraw(msg.sender, receiver, owner, assets, shares) */
              0xfbde797d201c681b91056529119e0b02407c7bb96a4a2c75c01fc9667232c8db
              swap2
                /* "#utility.yul":549:567   */
              add
                /* "node_modules/solmate/src/mixins/ERC4626.sol":3823:3876  Withdraw(msg.sender, receiver, owner, assets, shares) */
              mload(0x40)
              dup1
              swap2
              sub
              swap1
              log4
                /* "node_modules/solmate/src/mixins/ERC4626.sol":3887:3923  asset.safeTransfer(receiver, assets) */
              tag_511
              sub(shl(0xa0, 0x01), 0x01)
                /* "node_modules/solmate/src/mixins/ERC4626.sol":3887:3892  asset */
              immutable("0xa89f858efa0702d27b503f14d00e73a25115c8d5bdd25598ae4b376a61175436")
                /* "node_modules/solmate/src/mixins/ERC4626.sol":3887:3905  asset.safeTransfer */
              and
                /* "node_modules/solmate/src/mixins/ERC4626.sol":3906:3914  receiver */
              dup5
                /* "node_modules/solmate/src/mixins/ERC4626.sol":3916:3922  assets */
              dup4
                /* "node_modules/solmate/src/mixins/ERC4626.sol":3887:3905  asset.safeTransfer */
              tag_602
                /* "node_modules/solmate/src/mixins/ERC4626.sol":3887:3923  asset.safeTransfer(receiver, assets) */
              jump	// in
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":1044:1202  function divWadUp(uint256 x, uint256 y) internal pure returns (uint256) {... */
            tag_1072:
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":1107:1114  uint256 */
              0x00
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":1133:1152  mulDivUp(x, WAD, y) */
              tag_511
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":1142:1143  x */
              dup4
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":491:495  1e18 */
              0x0de0b6b3a7640000
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":1150:1151  y */
              dup5
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":1133:1141  mulDivUp */
              tag_518
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":1133:1152  mulDivUp(x, WAD, y) */
              jump	// in
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":4026:4527  function _checkRole(bytes32 role, address account) internal view virtual {... */
            tag_1098:
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":4114:4136  hasRole(role, account) */
              tag_1449
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":4122:4126  role */
              dup3
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":4128:4135  account */
              dup3
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":4114:4121  hasRole */
              tag_332
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":4114:4136  hasRole(role, account) */
              jump	// in
            tag_1449:
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":4109:4521  if (!hasRole(role, account)) {... */
              tag_690
              jumpi
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":4297:4336  StringsUpgradeable.toHexString(account) */
              tag_1451
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":4328:4335  account */
              dup2
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":4297:4327  StringsUpgradeable.toHexString */
              tag_1452
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":4297:4336  StringsUpgradeable.toHexString(account) */
              jump	// in
            tag_1451:
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":4407:4456  StringsUpgradeable.toHexString(uint256(role), 32) */
              tag_1453
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":4446:4450  role */
              dup4
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":4453:4455  32 */
              0x20
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":4407:4437  StringsUpgradeable.toHexString */
              tag_1454
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":4407:4456  StringsUpgradeable.toHexString(uint256(role), 32) */
              jump	// in
            tag_1453:
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":4204:4478  abi.encodePacked(... */
              add(0x20, mload(0x40))
              tag_1455
              swap3
              swap2
              swap1
              tag_1456
              jump	// in
            tag_1455:
              mload(0x40)
              0x20
              dup2
              dup4
              sub
              sub
              dup2
              mstore
              swap1
              0x40
              mstore
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":4152:4510  revert(... */
              0x00
              dup1
              revert
                /* "node_modules/@openzeppelin/contracts/utils/math/Math.sol":413:517  function max(uint256 a, uint256 b) internal pure returns (uint256) {... */
            tag_1179:
                /* "node_modules/@openzeppelin/contracts/utils/math/Math.sol":471:478  uint256 */
              0x00
                /* "node_modules/@openzeppelin/contracts/utils/math/Math.sol":501:502  b */
              dup2
                /* "node_modules/@openzeppelin/contracts/utils/math/Math.sol":497:498  a */
              dup4
                /* "node_modules/@openzeppelin/contracts/utils/math/Math.sol":497:502  a > b */
              gt
                /* "node_modules/@openzeppelin/contracts/utils/math/Math.sol":497:510  a > b ? a : b */
              tag_1458
              jumpi
                /* "node_modules/@openzeppelin/contracts/utils/math/Math.sol":509:510  b */
              dup2
                /* "node_modules/@openzeppelin/contracts/utils/math/Math.sol":497:510  a > b ? a : b */
              jump(tag_511)
            tag_1458:
              pop
                /* "node_modules/@openzeppelin/contracts/utils/math/Math.sol":505:506  a */
              swap1
              swap2
                /* "node_modules/@openzeppelin/contracts/utils/math/Math.sol":413:517  function max(uint256 a, uint256 b) internal pure returns (uint256) {... */
              swap1
              pop
              jump	// out
                /* "node_modules/@openzeppelin/contracts/utils/math/Math.sol":588:692  function min(uint256 a, uint256 b) internal pure returns (uint256) {... */
            tag_1180:
                /* "node_modules/@openzeppelin/contracts/utils/math/Math.sol":646:653  uint256 */
              0x00
                /* "node_modules/@openzeppelin/contracts/utils/math/Math.sol":676:677  b */
              dup2
                /* "node_modules/@openzeppelin/contracts/utils/math/Math.sol":672:673  a */
              dup4
                /* "node_modules/@openzeppelin/contracts/utils/math/Math.sol":672:677  a < b */
              lt
                /* "node_modules/@openzeppelin/contracts/utils/math/Math.sol":672:685  a < b ? a : b */
              tag_1458
              jumpi
                /* "node_modules/@openzeppelin/contracts/utils/math/Math.sol":684:685  b */
              dup2
                /* "node_modules/@openzeppelin/contracts/utils/math/Math.sol":672:685  a < b ? a : b */
              jump(tag_511)
                /* "contracts/utils/FixedLib.sol":5122:5329  function backupSupplied(Pool memory pool) internal pure returns (uint256) {... */
            tag_1226:
                /* "contracts/utils/FixedLib.sol":5221:5234  pool.borrowed */
              dup1
              mload
                /* "contracts/utils/FixedLib.sol":5259:5272  pool.supplied */
              0x20
              dup3
              add
              mload
                /* "contracts/utils/FixedLib.sol":5187:5194  uint256 */
              0x00
              swap2
                /* "contracts/utils/FixedLib.sol":5221:5234  pool.borrowed */
              swap1
                /* "contracts/utils/FixedLib.sol":5296:5324  Math.min(borrowed, supplied) */
              tag_1464
                /* "contracts/utils/FixedLib.sol":5221:5234  pool.borrowed */
              dup3
                /* "contracts/utils/FixedLib.sol":5259:5272  pool.supplied */
              dup3
                /* "contracts/utils/FixedLib.sol":5296:5304  Math.min */
              tag_1180
                /* "contracts/utils/FixedLib.sol":5296:5324  Math.min(borrowed, supplied) */
              jump	// in
            tag_1464:
                /* "contracts/utils/FixedLib.sol":5285:5324  borrowed - Math.min(borrowed, supplied) */
              tag_699
              swap1
                /* "contracts/utils/FixedLib.sol":5285:5293  borrowed */
              dup4
                /* "contracts/utils/FixedLib.sol":5285:5324  borrowed - Math.min(borrowed, supplied) */
              tag_526
              jump	// in
                /* "node_modules/@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol":2188:2294  function _requirePaused() internal view virtual {... */
            tag_1312:
                /* "node_modules/@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol":1928:1935  _paused */
              and(0xff, sload(0x97))
                /* "node_modules/@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol":2246:2287  require(paused(), "Pausable: not paused") */
              tag_1117
              jumpi
              0x00
              dup1
              revert
                /* "contracts/Market.sol":30122:30629  function beforeWithdraw(uint256 assets, uint256) internal override {... */
            tag_1345:
                /* "contracts/Market.sol":30195:30224  updateFloatingAssetsAverage() */
              tag_1473
                /* "contracts/Market.sol":30195:30222  updateFloatingAssetsAverage */
              tag_784
                /* "contracts/Market.sol":30195:30224  updateFloatingAssetsAverage() */
              jump	// in
            tag_1473:
                /* "contracts/Market.sol":30230:30269  depositToTreasury(updateFloatingDebt()) */
              tag_1474
                /* "contracts/Market.sol":30248:30268  updateFloatingDebt() */
              tag_569
                /* "contracts/Market.sol":30248:30266  updateFloatingDebt */
              tag_570
                /* "contracts/Market.sol":30248:30268  updateFloatingDebt() */
              jump	// in
                /* "contracts/Market.sol":30230:30269  depositToTreasury(updateFloatingDebt()) */
            tag_1474:
                /* "contracts/Market.sol":30275:30291  uint256 earnings */
              0x00
                /* "contracts/Market.sol":30294:30321  accrueAccumulatedEarnings() */
              tag_1476
                /* "contracts/Market.sol":30294:30319  accrueAccumulatedEarnings */
              tag_494
                /* "contracts/Market.sol":30294:30321  accrueAccumulatedEarnings() */
              jump	// in
            tag_1476:
                /* "contracts/Market.sol":30275:30321  uint256 earnings = accrueAccumulatedEarnings() */
              swap1
              pop
                /* "contracts/Market.sol":30327:30352  uint256 newFloatingAssets */
              0x00
                /* "contracts/Market.sol":30383:30389  assets */
              dup4
                /* "contracts/Market.sol":30372:30380  earnings */
              dup3
                /* "contracts/Market.sol":30355:30369  floatingAssets */
              sload(0xdd)
                /* "contracts/Market.sol":30355:30380  floatingAssets + earnings */
              tag_1477
              swap2
              swap1
              tag_496
              jump	// in
            tag_1477:
                /* "contracts/Market.sol":30355:30389  floatingAssets + earnings - assets */
              tag_1478
              swap2
              swap1
              tag_526
              jump	// in
            tag_1478:
                /* "contracts/Market.sol":30327:30389  uint256 newFloatingAssets = floatingAssets + earnings - assets */
              swap1
              pop
                /* "contracts/Market.sol":30527:30544  newFloatingAssets */
              dup1
                /* "contracts/Market.sol":30512:30524  floatingDebt */
              sload(0xd4)
                /* "contracts/Market.sol":30487:30509  floatingBackupBorrowed */
              sload(0xd3)
                /* "contracts/Market.sol":30487:30524  floatingBackupBorrowed + floatingDebt */
              tag_1479
              swap2
              swap1
              tag_496
              jump	// in
            tag_1479:
                /* "contracts/Market.sol":30487:30544  floatingBackupBorrowed + floatingDebt > newFloatingAssets */
              gt
                /* "contracts/Market.sol":30483:30584  if (floatingBackupBorrowed + floatingDebt > newFloatingAssets) revert InsufficientProtocolLiquidity() */
              iszero
              tag_1480
              jumpi
                /* "contracts/Market.sol":30553:30584  InsufficientProtocolLiquidity() */
              mload(0x40)
              shl(0xe3, 0x2d41ad)
              dup2
              mstore
              0x04
              add
              mload(0x40)
              dup1
              swap2
              sub
              swap1
              revert
                /* "contracts/Market.sol":30483:30584  if (floatingBackupBorrowed + floatingDebt > newFloatingAssets) revert InsufficientProtocolLiquidity() */
            tag_1480:
                /* "contracts/Market.sol":30590:30604  floatingAssets */
              0xdd
                /* "contracts/Market.sol":30590:30624  floatingAssets = newFloatingAssets */
              sstore
              pop
              pop
              pop
                /* "contracts/Market.sol":30122:30629  function beforeWithdraw(uint256 assets, uint256) internal override {... */
              jump	// out
                /* "node_modules/solmate/src/tokens/ERC20.sol":6468:6796  function _burn(address from, uint256 amount) internal virtual {... */
            tag_1347:
              sub(shl(0xa0, 0x01), 0x01)
                /* "node_modules/solmate/src/tokens/ERC20.sol":6540:6555  balanceOf[from] */
              dup3
              and
              0x00
              swap1
              dup2
              mstore
                /* "node_modules/solmate/src/tokens/ERC20.sol":6540:6549  balanceOf */
              0xcc
                /* "node_modules/solmate/src/tokens/ERC20.sol":6540:6555  balanceOf[from] */
              0x20
              mstore
              0x40
              dup2
              keccak256
                /* "node_modules/solmate/src/tokens/ERC20.sol":6540:6565  balanceOf[from] -= amount */
              dup1
              sload
                /* "node_modules/solmate/src/tokens/ERC20.sol":6559:6565  amount */
              dup4
              swap3
                /* "node_modules/solmate/src/tokens/ERC20.sol":6540:6555  balanceOf[from] */
              swap1
                /* "node_modules/solmate/src/tokens/ERC20.sol":6540:6565  balanceOf[from] -= amount */
              tag_1482
              swap1
                /* "node_modules/solmate/src/tokens/ERC20.sol":6559:6565  amount */
              dup5
              swap1
                /* "node_modules/solmate/src/tokens/ERC20.sol":6540:6565  balanceOf[from] -= amount */
              tag_526
              jump	// in
            tag_1482:
              swap1
              swap2
              sstore
              pop
              pop
                /* "node_modules/solmate/src/tokens/ERC20.sol":6708:6719  totalSupply */
              0xcb
                /* "node_modules/solmate/src/tokens/ERC20.sol":6708:6729  totalSupply -= amount */
              dup1
              sload
              dup3
              swap1
              sub
              swap1
              sstore
                /* "node_modules/solmate/src/tokens/ERC20.sol":6755:6789  Transfer(from, address(0), amount) */
              mload(0x40)
                /* "#utility.yul":801:826   */
              dup2
              dup2
              mstore
              0x00
              swap1
              sub(shl(0xa0, 0x01), 0x01)
                /* "node_modules/solmate/src/tokens/ERC20.sol":6755:6789  Transfer(from, address(0), amount) */
              dup5
              and
              swap1
              0x00
              dup1
              mload
              0x20
              data_ada389e1fc24a8587c776340efb91b36e675792ab631816100d55df0b5cf3cbc
              dup4
              codecopy
              dup2
              mload
              swap2
              mstore
              swap1
                /* "#utility.yul":789:791   */
              0x20
                /* "#utility.yul":774:792   */
              add
                /* "node_modules/solmate/src/tokens/ERC20.sol":6755:6789  Transfer(from, address(0), amount) */
            tag_1483:
              mload(0x40)
              dup1
              swap2
              sub
              swap1
              log3
                /* "node_modules/solmate/src/tokens/ERC20.sol":6468:6796  function _burn(address from, uint256 amount) internal virtual {... */
              pop
              pop
              jump	// out
                /* "node_modules/solmate/src/tokens/ERC20.sol":6137:6462  function _mint(address to, uint256 amount) internal virtual {... */
            tag_1361:
                /* "node_modules/solmate/src/tokens/ERC20.sol":6222:6228  amount */
              dup1
                /* "node_modules/solmate/src/tokens/ERC20.sol":6207:6218  totalSupply */
              0xcb
              0x00
                /* "node_modules/solmate/src/tokens/ERC20.sol":6207:6228  totalSupply += amount */
              dup3
              dup3
              sload
              tag_1485
              swap2
              swap1
              tag_496
              jump	// in
            tag_1485:
              swap1
              swap2
              sstore
              pop
              pop
              sub(shl(0xa0, 0x01), 0x01)
                /* "node_modules/solmate/src/tokens/ERC20.sol":6374:6387  balanceOf[to] */
              dup3
              and
              0x00
              dup2
              dup2
              mstore
                /* "node_modules/solmate/src/tokens/ERC20.sol":6374:6383  balanceOf */
              0xcc
                /* "node_modules/solmate/src/tokens/ERC20.sol":6374:6387  balanceOf[to] */
              0x20
              swap1
              dup2
              mstore
              0x40
              dup1
              dup4
              keccak256
                /* "node_modules/solmate/src/tokens/ERC20.sol":6374:6397  balanceOf[to] += amount */
              dup1
              sload
              dup7
              add
              swap1
              sstore
                /* "node_modules/solmate/src/tokens/ERC20.sol":6423:6455  Transfer(address(0), to, amount) */
              mload
                /* "#utility.yul":801:826   */
              dup5
              dup2
              mstore
              0x00
              dup1
              mload
              0x20
              data_ada389e1fc24a8587c776340efb91b36e675792ab631816100d55df0b5cf3cbc
              dup4
              codecopy
              dup2
              mload
              swap2
              mstore
                /* "node_modules/solmate/src/tokens/ERC20.sol":6423:6455  Transfer(address(0), to, amount) */
              swap2
                /* "#utility.yul":774:792   */
              add
                /* "node_modules/solmate/src/tokens/ERC20.sol":6423:6455  Transfer(address(0), to, amount) */
              tag_1483
                /* "#utility.yul":655:832   */
              jump
                /* "node_modules/@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol":1166:1261  function __Pausable_init_unchained() internal onlyInitializing {... */
            tag_1404:
                /* "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":5363:5376  _initializing */
              sload(0x00)
              0x0100
              swap1
              div
              0xff
              and
                /* "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":5355:5424  require(_initializing, "Initializable: contract is not initializing") */
              tag_1488
              jumpi
              0x00
              dup1
              revert
            tag_1488:
                /* "node_modules/@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol":1239:1246  _paused */
              0x97
                /* "node_modules/@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol":1239:1254  _paused = false */
              dup1
              sload
              not(0xff)
              and
              swap1
              sstore
                /* "node_modules/@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol":1166:1261  function __Pausable_init_unchained() internal onlyInitializing {... */
              jump	// out
                /* "node_modules/@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol":2146:2295  function toHexString(address addr) internal pure returns (string memory) {... */
            tag_1452:
                /* "node_modules/@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol":2204:2217  string memory */
              0x60
                /* "node_modules/@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol":2236:2288  toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH) */
              tag_487
              sub(shl(0xa0, 0x01), 0x01)
                /* "node_modules/@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol":2248:2270  uint256(uint160(addr)) */
              dup4
              and
                /* "node_modules/@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol":333:335  20 */
              0x14
                /* "node_modules/@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol":1557:1994  function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {... */
            tag_1454:
                /* "node_modules/@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol":1632:1645  string memory */
              0x60
                /* "node_modules/@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol":1657:1676  bytes memory buffer */
              0x00
                /* "node_modules/@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol":1689:1699  2 * length */
              tag_1493
                /* "node_modules/@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol":1693:1699  length */
              dup4
                /* "node_modules/@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol":1689:1690  2 */
              0x02
                /* "node_modules/@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol":1689:1699  2 * length */
              tag_528
              jump	// in
            tag_1493:
                /* "node_modules/@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol":1689:1703  2 * length + 2 */
              tag_1494
              swap1
                /* "node_modules/@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol":1702:1703  2 */
              0x02
                /* "node_modules/@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol":1689:1703  2 * length + 2 */
              tag_496
              jump	// in
            tag_1494:
                /* "node_modules/@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol":1679:1704  new bytes(2 * length + 2) */
              0xffffffffffffffff
              dup2
              gt
              iszero
              tag_1496
              jumpi
              tag_1496
              tag_1497
              jump	// in
            tag_1496:
              mload(0x40)
              swap1
              dup1
              dup3
              mstore
              dup1
              0x1f
              add
              not(0x1f)
              and
              0x20
              add
              dup3
              add
              0x40
              mstore
              dup1
              iszero
              tag_1498
              jumpi
              0x20
              dup3
              add
              dup2
              dup1
              calldatasize
              dup4
              calldatacopy
              add
              swap1
              pop
            tag_1498:
              pop
                /* "node_modules/@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol":1657:1704  bytes memory buffer = new bytes(2 * length + 2) */
              swap1
              pop
              shl(0xfc, 0x03)
                /* "node_modules/@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol":1714:1720  buffer */
              dup2
                /* "node_modules/@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol":1721:1722  0 */
              0x00
                /* "node_modules/@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol":1714:1723  buffer[0] */
              dup2
              mload
              dup2
              lt
              tag_1500
              jumpi
              tag_1500
              tag_1501
              jump	// in
            tag_1500:
              0x20
              add
              add
                /* "node_modules/@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol":1714:1729  buffer[0] = "0" */
              swap1
              not(sub(shl(0xf8, 0x01), 0x01))
              and
              swap1
              dup2
              0x00
              byte
              swap1
              mstore8
              pop
              shl(0xfb, 0x0f)
                /* "node_modules/@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol":1739:1745  buffer */
              dup2
                /* "node_modules/@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol":1746:1747  1 */
              0x01
                /* "node_modules/@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol":1739:1748  buffer[1] */
              dup2
              mload
              dup2
              lt
              tag_1503
              jumpi
              tag_1503
              tag_1501
              jump	// in
            tag_1503:
              0x20
              add
              add
                /* "node_modules/@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol":1739:1754  buffer[1] = "x" */
              swap1
              not(sub(shl(0xf8, 0x01), 0x01))
              and
              swap1
              dup2
              0x00
              byte
              swap1
              mstore8
              pop
                /* "node_modules/@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol":1769:1778  uint256 i */
              0x00
                /* "node_modules/@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol":1781:1791  2 * length */
              tag_1507
                /* "node_modules/@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol":1785:1791  length */
              dup5
                /* "node_modules/@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol":1781:1782  2 */
              0x02
                /* "node_modules/@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol":1781:1791  2 * length */
              tag_528
              jump	// in
            tag_1507:
                /* "node_modules/@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol":1781:1795  2 * length + 1 */
              tag_1508
              swap1
                /* "node_modules/@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol":1794:1795  1 */
              0x01
                /* "node_modules/@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol":1781:1795  2 * length + 1 */
              tag_496
              jump	// in
            tag_1508:
                /* "node_modules/@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol":1769:1795  uint256 i = 2 * length + 1 */
              swap1
              pop
                /* "node_modules/@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol":1764:1892  for (uint256 i = 2 * length + 1; i > 1; --i) {... */
            tag_1504:
                /* "node_modules/@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol":1801:1802  1 */
              0x01
                /* "node_modules/@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol":1797:1798  i */
              dup2
                /* "node_modules/@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol":1797:1802  i > 1 */
              gt
                /* "node_modules/@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol":1764:1892  for (uint256 i = 2 * length + 1; i > 1; --i) {... */
              iszero
              tag_1505
              jumpi
              shl(0x81, 0x181899199a1a9b1b9c1cb0b131b232b3)
                /* "node_modules/@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol":1844:1849  value */
              dup6
                /* "node_modules/@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol":1852:1855  0xf */
              0x0f
                /* "node_modules/@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol":1844:1855  value & 0xf */
              and
                /* "node_modules/@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol":1835:1856  _SYMBOLS[value & 0xf] */
              0x10
              dup2
              lt
              tag_1510
              jumpi
              tag_1510
              tag_1501
              jump	// in
            tag_1510:
              byte
              0xf8
              shl
                /* "node_modules/@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol":1823:1829  buffer */
              dup3
                /* "node_modules/@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol":1830:1831  i */
              dup3
                /* "node_modules/@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol":1823:1832  buffer[i] */
              dup2
              mload
              dup2
              lt
              tag_1512
              jumpi
              tag_1512
              tag_1501
              jump	// in
            tag_1512:
              0x20
              add
              add
                /* "node_modules/@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol":1823:1856  buffer[i] = _SYMBOLS[value & 0xf] */
              swap1
              not(sub(shl(0xf8, 0x01), 0x01))
              and
              swap1
              dup2
              0x00
              byte
              swap1
              mstore8
              pop
                /* "node_modules/@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol":1880:1881  4 */
              0x04
                /* "node_modules/@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol":1870:1881  value >>= 4 */
              swap5
              swap1
              swap5
              shr
              swap4
                /* "node_modules/@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol":1804:1807  --i */
              tag_1513
              dup2
              tag_1514
              jump	// in
            tag_1513:
              swap1
              pop
                /* "node_modules/@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol":1764:1892  for (uint256 i = 2 * length + 1; i > 1; --i) {... */
              jump(tag_1504)
            tag_1505:
              pop
                /* "node_modules/@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol":1909:1919  value == 0 */
              dup4
              iszero
                /* "node_modules/@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol":1901:1956  require(value == 0, "Strings: hex length insufficient") */
              tag_511
              jumpi
              0x00
              dup1
              revert
                /* "#utility.yul":14:145   */
            tag_1516:
              sub(shl(0xa0, 0x01), 0x01)
                /* "#utility.yul":89:120   */
              dup2
              and
                /* "#utility.yul":79:121   */
              dup2
              eq
                /* "#utility.yul":69:139   */
              tag_703
              jumpi
                /* "#utility.yul":135:136   */
              0x00
                /* "#utility.yul":132:133   */
              dup1
                /* "#utility.yul":125:137   */
              revert
                /* "#utility.yul":150:397   */
            tag_113:
                /* "#utility.yul":209:215   */
              0x00
                /* "#utility.yul":262:264   */
              0x20
                /* "#utility.yul":250:259   */
              dup3
                /* "#utility.yul":241:248   */
              dup5
                /* "#utility.yul":237:260   */
              sub
                /* "#utility.yul":233:265   */
              slt
                /* "#utility.yul":230:282   */
              iszero
              tag_1528
              jumpi
                /* "#utility.yul":278:279   */
              0x00
                /* "#utility.yul":275:276   */
              dup1
                /* "#utility.yul":268:280   */
              revert
                /* "#utility.yul":230:282   */
            tag_1528:
                /* "#utility.yul":317:326   */
              dup2
                /* "#utility.yul":304:327   */
              calldataload
                /* "#utility.yul":336:367   */
              tag_511
                /* "#utility.yul":361:366   */
              dup2
                /* "#utility.yul":336:367   */
              tag_1516
              jump	// in
                /* "#utility.yul":837:1123   */
            tag_123:
                /* "#utility.yul":895:901   */
              0x00
                /* "#utility.yul":948:950   */
              0x20
                /* "#utility.yul":936:945   */
              dup3
                /* "#utility.yul":927:934   */
              dup5
                /* "#utility.yul":923:946   */
              sub
                /* "#utility.yul":919:951   */
              slt
                /* "#utility.yul":916:968   */
              iszero
              tag_1533
              jumpi
                /* "#utility.yul":964:965   */
              0x00
                /* "#utility.yul":961:962   */
              dup1
                /* "#utility.yul":954:966   */
              revert
                /* "#utility.yul":916:968   */
            tag_1533:
                /* "#utility.yul":990:1013   */
              dup2
              calldataload
              not(sub(shl(0xe0, 0x01), 0x01))
                /* "#utility.yul":1042:1074   */
              dup2
              and
                /* "#utility.yul":1032:1075   */
              dup2
              eq
                /* "#utility.yul":1022:1093   */
              tag_511
              jumpi
                /* "#utility.yul":1089:1090   */
              0x00
                /* "#utility.yul":1086:1087   */
              dup1
                /* "#utility.yul":1079:1091   */
              revert
                /* "#utility.yul":1320:1508   */
            tag_1517:
                /* "#utility.yul":1388:1408   */
              dup1
              calldataload
              sub(shl(0x80, 0x01), 0x01)
                /* "#utility.yul":1437:1483   */
              dup2
              and
                /* "#utility.yul":1427:1484   */
              dup2
              eq
                /* "#utility.yul":1417:1502   */
              tag_1537
              jumpi
                /* "#utility.yul":1498:1499   */
              0x00
                /* "#utility.yul":1495:1496   */
              dup1
                /* "#utility.yul":1488:1500   */
              revert
                /* "#utility.yul":1417:1502   */
            tag_1537:
                /* "#utility.yul":1320:1508   */
              swap2
              swap1
              pop
              jump	// out
                /* "#utility.yul":1513:1699   */
            tag_129:
                /* "#utility.yul":1572:1578   */
              0x00
                /* "#utility.yul":1625:1627   */
              0x20
                /* "#utility.yul":1613:1622   */
              dup3
                /* "#utility.yul":1604:1611   */
              dup5
                /* "#utility.yul":1600:1623   */
              sub
                /* "#utility.yul":1596:1628   */
              slt
                /* "#utility.yul":1593:1645   */
              iszero
              tag_1539
              jumpi
                /* "#utility.yul":1641:1642   */
              0x00
                /* "#utility.yul":1638:1639   */
              dup1
                /* "#utility.yul":1631:1643   */
              revert
                /* "#utility.yul":1593:1645   */
            tag_1539:
                /* "#utility.yul":1664:1693   */
              tag_511
                /* "#utility.yul":1683:1692   */
              dup3
                /* "#utility.yul":1664:1693   */
              tag_1517
              jump	// in
                /* "#utility.yul":1704:1954   */
            tag_1518:
                /* "#utility.yul":1789:1790   */
              0x00
                /* "#utility.yul":1799:1912   */
            tag_1542:
                /* "#utility.yul":1813:1819   */
              dup4
                /* "#utility.yul":1810:1811   */
              dup2
                /* "#utility.yul":1807:1820   */
              lt
                /* "#utility.yul":1799:1912   */
              iszero
              tag_1544
              jumpi
                /* "#utility.yul":1889:1900   */
              dup2
              dup2
              add
                /* "#utility.yul":1883:1901   */
              mload
                /* "#utility.yul":1870:1881   */
              dup4
              dup3
              add
                /* "#utility.yul":1863:1902   */
              mstore
                /* "#utility.yul":1835:1837   */
              0x20
                /* "#utility.yul":1828:1838   */
              add
                /* "#utility.yul":1799:1912   */
              jump(tag_1542)
            tag_1544:
              pop
              pop
                /* "#utility.yul":1946:1947   */
              0x00
                /* "#utility.yul":1928:1944   */
              swap2
              add
                /* "#utility.yul":1921:1948   */
              mstore
                /* "#utility.yul":1704:1954   */
              jump	// out
                /* "#utility.yul":1959:2355   */
            tag_137:
                /* "#utility.yul":2108:2110   */
              0x20
                /* "#utility.yul":2097:2106   */
              dup2
                /* "#utility.yul":2090:2111   */
              mstore
                /* "#utility.yul":2071:2075   */
              0x00
                /* "#utility.yul":2140:2146   */
              dup3
                /* "#utility.yul":2134:2147   */
              mload
                /* "#utility.yul":2183:2189   */
              dup1
                /* "#utility.yul":2178:2180   */
              0x20
                /* "#utility.yul":2167:2176   */
              dup5
                /* "#utility.yul":2163:2181   */
              add
                /* "#utility.yul":2156:2190   */
              mstore
                /* "#utility.yul":2199:2278   */
              tag_1546
                /* "#utility.yul":2271:2277   */
              dup2
                /* "#utility.yul":2266:2268   */
              0x40
                /* "#utility.yul":2255:2264   */
              dup6
                /* "#utility.yul":2251:2269   */
              add
                /* "#utility.yul":2246:2248   */
              0x20
                /* "#utility.yul":2238:2244   */
              dup8
                /* "#utility.yul":2234:2249   */
              add
                /* "#utility.yul":2199:2278   */
              tag_1518
              jump	// in
            tag_1546:
                /* "#utility.yul":2339:2341   */
              0x1f
                /* "#utility.yul":2318:2333   */
              add
              not(0x1f)
                /* "#utility.yul":2314:2343   */
              and
                /* "#utility.yul":2299:2344   */
              swap2
              swap1
              swap2
              add
                /* "#utility.yul":2346:2348   */
              0x40
                /* "#utility.yul":2295:2349   */
              add
              swap3
                /* "#utility.yul":1959:2355   */
              swap2
              pop
              pop
              jump	// out
                /* "#utility.yul":2360:2540   */
            tag_140:
                /* "#utility.yul":2419:2425   */
              0x00
                /* "#utility.yul":2472:2474   */
              0x20
                /* "#utility.yul":2460:2469   */
              dup3
                /* "#utility.yul":2451:2458   */
              dup5
                /* "#utility.yul":2447:2470   */
              sub
                /* "#utility.yul":2443:2475   */
              slt
                /* "#utility.yul":2440:2492   */
              iszero
              tag_1548
              jumpi
                /* "#utility.yul":2488:2489   */
              0x00
                /* "#utility.yul":2485:2486   */
              dup1
                /* "#utility.yul":2478:2490   */
              revert
                /* "#utility.yul":2440:2492   */
            tag_1548:
              pop
                /* "#utility.yul":2511:2534   */
              calldataload
              swap2
                /* "#utility.yul":2360:2540   */
              swap1
              pop
              jump	// out
                /* "#utility.yul":2545:2860   */
            tag_145:
                /* "#utility.yul":2613:2619   */
              0x00
                /* "#utility.yul":2621:2627   */
              dup1
                /* "#utility.yul":2674:2676   */
              0x40
                /* "#utility.yul":2662:2671   */
              dup4
                /* "#utility.yul":2653:2660   */
              dup6
                /* "#utility.yul":2649:2672   */
              sub
                /* "#utility.yul":2645:2677   */
              slt
                /* "#utility.yul":2642:2694   */
              iszero
              tag_1550
              jumpi
                /* "#utility.yul":2690:2691   */
              0x00
                /* "#utility.yul":2687:2688   */
              dup1
                /* "#utility.yul":2680:2692   */
              revert
                /* "#utility.yul":2642:2694   */
            tag_1550:
                /* "#utility.yul":2729:2738   */
              dup3
                /* "#utility.yul":2716:2739   */
              calldataload
                /* "#utility.yul":2748:2779   */
              tag_1551
                /* "#utility.yul":2773:2778   */
              dup2
                /* "#utility.yul":2748:2779   */
              tag_1516
              jump	// in
            tag_1551:
                /* "#utility.yul":2798:2803   */
              swap5
                /* "#utility.yul":2850:2852   */
              0x20
                /* "#utility.yul":2835:2853   */
              swap4
              swap1
              swap4
              add
                /* "#utility.yul":2822:2854   */
              calldataload
              swap4
              pop
              pop
              pop
                /* "#utility.yul":2545:2860   */
              jump	// out
                /* "#utility.yul":3054:3648   */
            tag_168:
                /* "#utility.yul":3149:3155   */
              0x00
                /* "#utility.yul":3157:3163   */
              dup1
                /* "#utility.yul":3165:3171   */
              0x00
                /* "#utility.yul":3173:3179   */
              dup1
                /* "#utility.yul":3181:3187   */
              0x00
                /* "#utility.yul":3234:3237   */
              0xa0
                /* "#utility.yul":3222:3231   */
              dup7
                /* "#utility.yul":3213:3220   */
              dup9
                /* "#utility.yul":3209:3232   */
              sub
                /* "#utility.yul":3205:3238   */
              slt
                /* "#utility.yul":3202:3255   */
              iszero
              tag_1554
              jumpi
                /* "#utility.yul":3251:3252   */
              0x00
                /* "#utility.yul":3248:3249   */
              dup1
                /* "#utility.yul":3241:3253   */
              revert
                /* "#utility.yul":3202:3255   */
            tag_1554:
                /* "#utility.yul":3287:3296   */
              dup6
                /* "#utility.yul":3274:3297   */
              calldataload
                /* "#utility.yul":3264:3297   */
              swap5
              pop
                /* "#utility.yul":3344:3346   */
              0x20
                /* "#utility.yul":3333:3342   */
              dup7
                /* "#utility.yul":3329:3347   */
              add
                /* "#utility.yul":3316:3348   */
              calldataload
                /* "#utility.yul":3306:3348   */
              swap4
              pop
                /* "#utility.yul":3395:3397   */
              0x40
                /* "#utility.yul":3384:3393   */
              dup7
                /* "#utility.yul":3380:3398   */
              add
                /* "#utility.yul":3367:3399   */
              calldataload
                /* "#utility.yul":3357:3399   */
              swap3
              pop
                /* "#utility.yul":3449:3451   */
              0x60
                /* "#utility.yul":3438:3447   */
              dup7
                /* "#utility.yul":3434:3452   */
              add
                /* "#utility.yul":3421:3453   */
              calldataload
                /* "#utility.yul":3462:3493   */
              tag_1555
                /* "#utility.yul":3487:3492   */
              dup2
                /* "#utility.yul":3462:3493   */
              tag_1516
              jump	// in
            tag_1555:
                /* "#utility.yul":3512:3517   */
              swap2
              pop
                /* "#utility.yul":3569:3572   */
              0x80
                /* "#utility.yul":3554:3573   */
              dup7
              add
                /* "#utility.yul":3541:3574   */
              calldataload
                /* "#utility.yul":3583:3616   */
              tag_1556
                /* "#utility.yul":3541:3574   */
              dup2
                /* "#utility.yul":3583:3616   */
              tag_1516
              jump	// in
            tag_1556:
                /* "#utility.yul":3635:3642   */
              dup1
                /* "#utility.yul":3625:3642   */
              swap2
              pop
              pop
                /* "#utility.yul":3054:3648   */
              swap3
              swap6
              pop
              swap3
              swap6
              swap1
              swap4
              pop
              jump	// out
                /* "#utility.yul":3653:4109   */
            tag_180:
                /* "#utility.yul":3730:3736   */
              0x00
                /* "#utility.yul":3738:3744   */
              dup1
                /* "#utility.yul":3746:3752   */
              0x00
                /* "#utility.yul":3799:3801   */
              0x60
                /* "#utility.yul":3787:3796   */
              dup5
                /* "#utility.yul":3778:3785   */
              dup7
                /* "#utility.yul":3774:3797   */
              sub
                /* "#utility.yul":3770:3802   */
              slt
                /* "#utility.yul":3767:3819   */
              iszero
              tag_1558
              jumpi
                /* "#utility.yul":3815:3816   */
              0x00
                /* "#utility.yul":3812:3813   */
              dup1
                /* "#utility.yul":3805:3817   */
              revert
                /* "#utility.yul":3767:3819   */
            tag_1558:
                /* "#utility.yul":3854:3863   */
              dup4
                /* "#utility.yul":3841:3864   */
              calldataload
                /* "#utility.yul":3873:3904   */
              tag_1559
                /* "#utility.yul":3898:3903   */
              dup2
                /* "#utility.yul":3873:3904   */
              tag_1516
              jump	// in
            tag_1559:
                /* "#utility.yul":3923:3928   */
              swap3
              pop
                /* "#utility.yul":3980:3982   */
              0x20
                /* "#utility.yul":3965:3983   */
              dup5
              add
                /* "#utility.yul":3952:3984   */
              calldataload
                /* "#utility.yul":3993:4026   */
              tag_1560
                /* "#utility.yul":3952:3984   */
              dup2
                /* "#utility.yul":3993:4026   */
              tag_1516
              jump	// in
            tag_1560:
                /* "#utility.yul":3653:4109   */
              swap3
              swap6
                /* "#utility.yul":4045:4052   */
              swap3
              swap5
              pop
              pop
              pop
                /* "#utility.yul":4099:4101   */
              0x40
                /* "#utility.yul":4084:4102   */
              swap2
              swap1
              swap2
              add
                /* "#utility.yul":4071:4103   */
              calldataload
              swap1
                /* "#utility.yul":3653:4109   */
              jump	// out
                /* "#utility.yul":4481:4637   */
            tag_1519:
                /* "#utility.yul":4547:4567   */
              dup1
              calldataload
                /* "#utility.yul":4607:4611   */
              0xff
                /* "#utility.yul":4596:4612   */
              dup2
              and
                /* "#utility.yul":4586:4613   */
              dup2
              eq
                /* "#utility.yul":4576:4631   */
              tag_1537
              jumpi
                /* "#utility.yul":4627:4628   */
              0x00
                /* "#utility.yul":4624:4625   */
              dup1
                /* "#utility.yul":4617:4629   */
              revert
                /* "#utility.yul":4642:4824   */
            tag_195:
                /* "#utility.yul":4699:4705   */
              0x00
                /* "#utility.yul":4752:4754   */
              0x20
                /* "#utility.yul":4740:4749   */
              dup3
                /* "#utility.yul":4731:4738   */
              dup5
                /* "#utility.yul":4727:4750   */
              sub
                /* "#utility.yul":4723:4755   */
              slt
                /* "#utility.yul":4720:4772   */
              iszero
              tag_1567
              jumpi
                /* "#utility.yul":4768:4769   */
              0x00
                /* "#utility.yul":4765:4766   */
              dup1
                /* "#utility.yul":4758:4770   */
              revert
                /* "#utility.yul":4720:4772   */
            tag_1567:
                /* "#utility.yul":4791:4818   */
              tag_511
                /* "#utility.yul":4808:4817   */
              dup3
                /* "#utility.yul":4791:4818   */
              tag_1519
              jump	// in
                /* "#utility.yul":4829:5144   */
            tag_205:
                /* "#utility.yul":4897:4903   */
              0x00
                /* "#utility.yul":4905:4911   */
              dup1
                /* "#utility.yul":4958:4960   */
              0x40
                /* "#utility.yul":4946:4955   */
              dup4
                /* "#utility.yul":4937:4944   */
              dup6
                /* "#utility.yul":4933:4956   */
              sub
                /* "#utility.yul":4929:4961   */
              slt
                /* "#utility.yul":4926:4978   */
              iszero
              tag_1570
              jumpi
                /* "#utility.yul":4974:4975   */
              0x00
                /* "#utility.yul":4971:4972   */
              dup1
                /* "#utility.yul":4964:4976   */
              revert
                /* "#utility.yul":4926:4978   */
            tag_1570:
                /* "#utility.yul":5010:5019   */
              dup3
                /* "#utility.yul":4997:5020   */
              calldataload
                /* "#utility.yul":4987:5020   */
              swap2
              pop
                /* "#utility.yul":5070:5072   */
              0x20
                /* "#utility.yul":5059:5068   */
              dup4
                /* "#utility.yul":5055:5073   */
              add
                /* "#utility.yul":5042:5074   */
              calldataload
                /* "#utility.yul":5083:5114   */
              tag_1571
                /* "#utility.yul":5108:5113   */
              dup2
                /* "#utility.yul":5083:5114   */
              tag_1516
              jump	// in
            tag_1571:
                /* "#utility.yul":5133:5138   */
              dup1
                /* "#utility.yul":5123:5138   */
              swap2
              pop
              pop
                /* "#utility.yul":4829:5144   */
              swap3
              pop
              swap3
              swap1
              pop
              jump	// out
                /* "#utility.yul":5149:5601   */
            tag_212:
                /* "#utility.yul":5235:5241   */
              0x00
                /* "#utility.yul":5243:5249   */
              dup1
                /* "#utility.yul":5251:5257   */
              0x00
                /* "#utility.yul":5259:5265   */
              dup1
                /* "#utility.yul":5312:5315   */
              0x80
                /* "#utility.yul":5300:5309   */
              dup6
                /* "#utility.yul":5291:5298   */
              dup8
                /* "#utility.yul":5287:5310   */
              sub
                /* "#utility.yul":5283:5316   */
              slt
                /* "#utility.yul":5280:5333   */
              iszero
              tag_1573
              jumpi
                /* "#utility.yul":5329:5330   */
              0x00
                /* "#utility.yul":5326:5327   */
              dup1
                /* "#utility.yul":5319:5331   */
              revert
                /* "#utility.yul":5280:5333   */
            tag_1573:
                /* "#utility.yul":5365:5374   */
              dup5
                /* "#utility.yul":5352:5375   */
              calldataload
                /* "#utility.yul":5342:5375   */
              swap4
              pop
                /* "#utility.yul":5422:5424   */
              0x20
                /* "#utility.yul":5411:5420   */
              dup6
                /* "#utility.yul":5407:5425   */
              add
                /* "#utility.yul":5394:5426   */
              calldataload
                /* "#utility.yul":5384:5426   */
              swap3
              pop
                /* "#utility.yul":5473:5475   */
              0x40
                /* "#utility.yul":5462:5471   */
              dup6
                /* "#utility.yul":5458:5476   */
              add
                /* "#utility.yul":5445:5477   */
              calldataload
                /* "#utility.yul":5435:5477   */
              swap2
              pop
                /* "#utility.yul":5527:5529   */
              0x60
                /* "#utility.yul":5516:5525   */
              dup6
                /* "#utility.yul":5512:5530   */
              add
                /* "#utility.yul":5499:5531   */
              calldataload
                /* "#utility.yul":5540:5571   */
              tag_1574
                /* "#utility.yul":5565:5570   */
              dup2
                /* "#utility.yul":5540:5571   */
              tag_1516
              jump	// in
            tag_1574:
                /* "#utility.yul":5149:5601   */
              swap4
              swap7
              swap3
              swap6
              pop
              swap1
              swap4
              pop
              pop
              jump	// out
                /* "#utility.yul":6276:6747   */
            tag_255:
                /* "#utility.yul":6368:6374   */
              0x00
                /* "#utility.yul":6376:6382   */
              dup1
                /* "#utility.yul":6384:6390   */
              0x00
                /* "#utility.yul":6437:6439   */
              0x60
                /* "#utility.yul":6425:6434   */
              dup5
                /* "#utility.yul":6416:6423   */
              dup7
                /* "#utility.yul":6412:6435   */
              sub
                /* "#utility.yul":6408:6440   */
              slt
                /* "#utility.yul":6405:6457   */
              iszero
              tag_1579
              jumpi
                /* "#utility.yul":6453:6454   */
              0x00
                /* "#utility.yul":6450:6451   */
              dup1
                /* "#utility.yul":6443:6455   */
              revert
                /* "#utility.yul":6405:6457   */
            tag_1579:
                /* "#utility.yul":6492:6501   */
              dup4
                /* "#utility.yul":6479:6502   */
              calldataload
                /* "#utility.yul":6511:6542   */
              tag_1580
                /* "#utility.yul":6536:6541   */
              dup2
                /* "#utility.yul":6511:6542   */
              tag_1516
              jump	// in
            tag_1580:
                /* "#utility.yul":6561:6566   */
              swap3
              pop
                /* "#utility.yul":6613:6615   */
              0x20
                /* "#utility.yul":6598:6616   */
              dup5
              add
                /* "#utility.yul":6585:6617   */
              calldataload
              swap2
              pop
                /* "#utility.yul":6669:6671   */
              0x40
                /* "#utility.yul":6654:6672   */
              dup5
              add
                /* "#utility.yul":6641:6673   */
              calldataload
                /* "#utility.yul":6682:6715   */
              tag_1581
                /* "#utility.yul":6641:6673   */
              dup2
                /* "#utility.yul":6682:6715   */
              tag_1516
              jump	// in
            tag_1581:
                /* "#utility.yul":6734:6741   */
              dup1
                /* "#utility.yul":6724:6741   */
              swap2
              pop
              pop
                /* "#utility.yul":6276:6747   */
              swap3
              pop
              swap3
              pop
              swap3
              jump	// out
                /* "#utility.yul":7148:7396   */
            tag_272:
                /* "#utility.yul":7216:7222   */
              0x00
                /* "#utility.yul":7224:7230   */
              dup1
                /* "#utility.yul":7277:7279   */
              0x40
                /* "#utility.yul":7265:7274   */
              dup4
                /* "#utility.yul":7256:7263   */
              dup6
                /* "#utility.yul":7252:7275   */
              sub
                /* "#utility.yul":7248:7280   */
              slt
                /* "#utility.yul":7245:7297   */
              iszero
              tag_1584
              jumpi
                /* "#utility.yul":7293:7294   */
              0x00
                /* "#utility.yul":7290:7291   */
              dup1
                /* "#utility.yul":7283:7295   */
              revert
                /* "#utility.yul":7245:7297   */
            tag_1584:
              pop
              pop
                /* "#utility.yul":7316:7339   */
              dup1
              calldataload
              swap3
                /* "#utility.yul":7386:7388   */
              0x20
                /* "#utility.yul":7371:7389   */
              swap1
              swap2
              add
                /* "#utility.yul":7358:7390   */
              calldataload
              swap2
              pop
                /* "#utility.yul":7148:7396   */
              jump	// out
                /* "#utility.yul":8962:9730   */
            tag_346:
                /* "#utility.yul":9108:9114   */
              0x00
                /* "#utility.yul":9116:9122   */
              dup1
                /* "#utility.yul":9124:9130   */
              0x00
                /* "#utility.yul":9132:9138   */
              dup1
                /* "#utility.yul":9140:9146   */
              0x00
                /* "#utility.yul":9148:9154   */
              dup1
                /* "#utility.yul":9156:9162   */
              0x00
                /* "#utility.yul":9164:9170   */
              dup1
                /* "#utility.yul":9217:9220   */
              0x0100
                /* "#utility.yul":9205:9214   */
              dup10
                /* "#utility.yul":9196:9203   */
              dup12
                /* "#utility.yul":9192:9215   */
              sub
                /* "#utility.yul":9188:9221   */
              slt
                /* "#utility.yul":9185:9238   */
              iszero
              tag_1596
              jumpi
                /* "#utility.yul":9234:9235   */
              0x00
                /* "#utility.yul":9231:9232   */
              dup1
                /* "#utility.yul":9224:9236   */
              revert
                /* "#utility.yul":9185:9238   */
            tag_1596:
                /* "#utility.yul":9257:9284   */
              tag_1597
                /* "#utility.yul":9274:9283   */
              dup10
                /* "#utility.yul":9257:9284   */
              tag_1519
              jump	// in
            tag_1597:
                /* "#utility.yul":9247:9284   */
              swap8
              pop
                /* "#utility.yul":9303:9341   */
              tag_1598
                /* "#utility.yul":9337:9339   */
              0x20
                /* "#utility.yul":9326:9335   */
              dup11
                /* "#utility.yul":9322:9340   */
              add
                /* "#utility.yul":9303:9341   */
              tag_1517
              jump	// in
            tag_1598:
                /* "#utility.yul":9293:9341   */
              swap7
              pop
                /* "#utility.yul":9391:9393   */
              0x40
                /* "#utility.yul":9380:9389   */
              dup10
                /* "#utility.yul":9376:9394   */
              add
                /* "#utility.yul":9363:9395   */
              calldataload
                /* "#utility.yul":9404:9435   */
              tag_1599
                /* "#utility.yul":9429:9434   */
              dup2
                /* "#utility.yul":9404:9435   */
              tag_1516
              jump	// in
            tag_1599:
                /* "#utility.yul":9454:9459   */
              swap6
              pop
                /* "#utility.yul":9506:9508   */
              0x60
                /* "#utility.yul":9491:9509   */
              dup10
              add
                /* "#utility.yul":9478:9510   */
              calldataload
              swap5
              pop
                /* "#utility.yul":9557:9560   */
              0x80
                /* "#utility.yul":9542:9561   */
              dup10
              add
                /* "#utility.yul":9529:9562   */
              calldataload
              swap4
              pop
                /* "#utility.yul":9581:9620   */
              tag_1600
                /* "#utility.yul":9615:9618   */
              0xa0
                /* "#utility.yul":9600:9619   */
              dup11
              add
                /* "#utility.yul":9581:9620   */
              tag_1517
              jump	// in
            tag_1600:
                /* "#utility.yul":9571:9620   */
              swap3
              pop
                /* "#utility.yul":9667:9670   */
              0xc0
                /* "#utility.yul":9656:9665   */
              dup10
                /* "#utility.yul":9652:9671   */
              add
                /* "#utility.yul":9639:9672   */
              calldataload
                /* "#utility.yul":9629:9672   */
              swap2
              pop
                /* "#utility.yul":9719:9722   */
              0xe0
                /* "#utility.yul":9708:9717   */
              dup10
                /* "#utility.yul":9704:9723   */
              add
                /* "#utility.yul":9691:9724   */
              calldataload
                /* "#utility.yul":9681:9724   */
              swap1
              pop
                /* "#utility.yul":8962:9730   */
              swap3
              swap6
              swap9
              pop
              swap3
              swap6
              swap9
              swap1
              swap4
              swap7
              pop
              jump	// out
                /* "#utility.yul":9735:10191   */
            tag_381:
                /* "#utility.yul":9812:9818   */
              0x00
                /* "#utility.yul":9820:9826   */
              dup1
                /* "#utility.yul":9828:9834   */
              0x00
                /* "#utility.yul":9881:9883   */
              0x60
                /* "#utility.yul":9869:9878   */
              dup5
                /* "#utility.yul":9860:9867   */
              dup7
                /* "#utility.yul":9856:9879   */
              sub
                /* "#utility.yul":9852:9884   */
              slt
                /* "#utility.yul":9849:9901   */
              iszero
              tag_1602
              jumpi
                /* "#utility.yul":9897:9898   */
              0x00
                /* "#utility.yul":9894:9895   */
              dup1
                /* "#utility.yul":9887:9899   */
              revert
                /* "#utility.yul":9849:9901   */
            tag_1602:
                /* "#utility.yul":9933:9942   */
              dup4
                /* "#utility.yul":9920:9943   */
              calldataload
                /* "#utility.yul":9910:9943   */
              swap3
              pop
                /* "#utility.yul":9993:9995   */
              0x20
                /* "#utility.yul":9982:9991   */
              dup5
                /* "#utility.yul":9978:9996   */
              add
                /* "#utility.yul":9965:9997   */
              calldataload
                /* "#utility.yul":10006:10037   */
              tag_1603
                /* "#utility.yul":10031:10036   */
              dup2
                /* "#utility.yul":10006:10037   */
              tag_1516
              jump	// in
            tag_1603:
                /* "#utility.yul":10056:10061   */
              swap2
              pop
                /* "#utility.yul":10113:10115   */
              0x40
                /* "#utility.yul":10098:10116   */
              dup5
              add
                /* "#utility.yul":10085:10117   */
              calldataload
                /* "#utility.yul":10126:10159   */
              tag_1581
                /* "#utility.yul":10085:10117   */
              dup2
                /* "#utility.yul":10126:10159   */
              tag_1516
              jump	// in
                /* "#utility.yul":10474:11208   */
            tag_418:
                /* "#utility.yul":10585:10591   */
              0x00
                /* "#utility.yul":10593:10599   */
              dup1
                /* "#utility.yul":10601:10607   */
              0x00
                /* "#utility.yul":10609:10615   */
              dup1
                /* "#utility.yul":10617:10623   */
              0x00
                /* "#utility.yul":10625:10631   */
              dup1
                /* "#utility.yul":10633:10639   */
              0x00
                /* "#utility.yul":10686:10689   */
              0xe0
                /* "#utility.yul":10674:10683   */
              dup9
                /* "#utility.yul":10665:10672   */
              dup11
                /* "#utility.yul":10661:10684   */
              sub
                /* "#utility.yul":10657:10690   */
              slt
                /* "#utility.yul":10654:10707   */
              iszero
              tag_1609
              jumpi
                /* "#utility.yul":10703:10704   */
              0x00
                /* "#utility.yul":10700:10701   */
              dup1
                /* "#utility.yul":10693:10705   */
              revert
                /* "#utility.yul":10654:10707   */
            tag_1609:
                /* "#utility.yul":10742:10751   */
              dup8
                /* "#utility.yul":10729:10752   */
              calldataload
                /* "#utility.yul":10761:10792   */
              tag_1610
                /* "#utility.yul":10786:10791   */
              dup2
                /* "#utility.yul":10761:10792   */
              tag_1516
              jump	// in
            tag_1610:
                /* "#utility.yul":10811:10816   */
              swap7
              pop
                /* "#utility.yul":10868:10870   */
              0x20
                /* "#utility.yul":10853:10871   */
              dup9
              add
                /* "#utility.yul":10840:10872   */
              calldataload
                /* "#utility.yul":10881:10914   */
              tag_1611
                /* "#utility.yul":10840:10872   */
              dup2
                /* "#utility.yul":10881:10914   */
              tag_1516
              jump	// in
            tag_1611:
                /* "#utility.yul":10933:10940   */
              swap6
              pop
                /* "#utility.yul":10987:10989   */
              0x40
                /* "#utility.yul":10972:10990   */
              dup9
              add
                /* "#utility.yul":10959:10991   */
              calldataload
              swap5
              pop
                /* "#utility.yul":11038:11040   */
              0x60
                /* "#utility.yul":11023:11041   */
              dup9
              add
                /* "#utility.yul":11010:11042   */
              calldataload
              swap4
              pop
                /* "#utility.yul":11061:11098   */
              tag_1612
                /* "#utility.yul":11093:11096   */
              0x80
                /* "#utility.yul":11078:11097   */
              dup10
              add
                /* "#utility.yul":11061:11098   */
              tag_1519
              jump	// in
            tag_1612:
                /* "#utility.yul":11051:11098   */
              swap3
              pop
                /* "#utility.yul":11145:11148   */
              0xa0
                /* "#utility.yul":11134:11143   */
              dup9
                /* "#utility.yul":11130:11149   */
              add
                /* "#utility.yul":11117:11150   */
              calldataload
                /* "#utility.yul":11107:11150   */
              swap2
              pop
                /* "#utility.yul":11197:11200   */
              0xc0
                /* "#utility.yul":11186:11195   */
              dup9
                /* "#utility.yul":11182:11201   */
              add
                /* "#utility.yul":11169:11202   */
              calldataload
                /* "#utility.yul":11159:11202   */
              swap1
              pop
                /* "#utility.yul":10474:11208   */
              swap3
              swap6
              swap9
              swap2
              swap5
              swap8
              pop
              swap3
              swap6
              pop
              jump	// out
                /* "#utility.yul":11213:11601   */
            tag_436:
                /* "#utility.yul":11281:11287   */
              0x00
                /* "#utility.yul":11289:11295   */
              dup1
                /* "#utility.yul":11342:11344   */
              0x40
                /* "#utility.yul":11330:11339   */
              dup4
                /* "#utility.yul":11321:11328   */
              dup6
                /* "#utility.yul":11317:11340   */
              sub
                /* "#utility.yul":11313:11345   */
              slt
                /* "#utility.yul":11310:11362   */
              iszero
              tag_1614
              jumpi
                /* "#utility.yul":11358:11359   */
              0x00
                /* "#utility.yul":11355:11356   */
              dup1
                /* "#utility.yul":11348:11360   */
              revert
                /* "#utility.yul":11310:11362   */
            tag_1614:
                /* "#utility.yul":11397:11406   */
              dup3
                /* "#utility.yul":11384:11407   */
              calldataload
                /* "#utility.yul":11416:11447   */
              tag_1615
                /* "#utility.yul":11441:11446   */
              dup2
                /* "#utility.yul":11416:11447   */
              tag_1516
              jump	// in
            tag_1615:
                /* "#utility.yul":11466:11471   */
              swap2
              pop
                /* "#utility.yul":11523:11525   */
              0x20
                /* "#utility.yul":11508:11526   */
              dup4
              add
                /* "#utility.yul":11495:11527   */
              calldataload
                /* "#utility.yul":11536:11569   */
              tag_1571
                /* "#utility.yul":11495:11527   */
              dup2
                /* "#utility.yul":11536:11569   */
              tag_1516
              jump	// in
                /* "#utility.yul":11840:11967   */
            tag_471:
                /* "#utility.yul":11901:11911   */
              0x4e487b71
                /* "#utility.yul":11896:11899   */
              0xe0
                /* "#utility.yul":11892:11912   */
              shl
                /* "#utility.yul":11889:11890   */
              0x00
                /* "#utility.yul":11882:11913   */
              mstore
                /* "#utility.yul":11932:11936   */
              0x12
                /* "#utility.yul":11929:11930   */
              0x04
                /* "#utility.yul":11922:11937   */
              mstore
                /* "#utility.yul":11956:11960   */
              0x24
                /* "#utility.yul":11953:11954   */
              0x00
                /* "#utility.yul":11946:11961   */
              revert
                /* "#utility.yul":11972:12099   */
            tag_1520:
                /* "#utility.yul":12033:12043   */
              0x4e487b71
                /* "#utility.yul":12028:12031   */
              0xe0
                /* "#utility.yul":12024:12044   */
              shl
                /* "#utility.yul":12021:12022   */
              0x00
                /* "#utility.yul":12014:12045   */
              mstore
                /* "#utility.yul":12064:12068   */
              0x11
                /* "#utility.yul":12061:12062   */
              0x04
                /* "#utility.yul":12054:12069   */
              mstore
                /* "#utility.yul":12088:12092   */
              0x24
                /* "#utility.yul":12085:12086   */
              0x00
                /* "#utility.yul":12078:12093   */
              revert
                /* "#utility.yul":12104:12229   */
            tag_496:
                /* "#utility.yul":12169:12178   */
              dup1
              dup3
              add
                /* "#utility.yul":12190:12200   */
              dup1
              dup3
              gt
                /* "#utility.yul":12187:12223   */
              iszero
              tag_487
              jumpi
                /* "#utility.yul":12203:12221   */
              tag_487
              tag_1520
              jump	// in
                /* "#utility.yul":12457:12837   */
            tag_502:
                /* "#utility.yul":12536:12537   */
              0x01
                /* "#utility.yul":12532:12544   */
              dup2
              dup2
              shr
              swap1
                /* "#utility.yul":12579:12591   */
              dup3
              and
              dup1
                /* "#utility.yul":12600:12661   */
              tag_1625
              jumpi
                /* "#utility.yul":12654:12658   */
              0x7f
                /* "#utility.yul":12646:12652   */
              dup3
                /* "#utility.yul":12642:12659   */
              and
                /* "#utility.yul":12632:12659   */
              swap2
              pop
                /* "#utility.yul":12600:12661   */
            tag_1625:
                /* "#utility.yul":12707:12709   */
              0x20
                /* "#utility.yul":12699:12705   */
              dup3
                /* "#utility.yul":12696:12710   */
              lt
                /* "#utility.yul":12676:12694   */
              dup2
                /* "#utility.yul":12673:12711   */
              sub
                /* "#utility.yul":12670:12831   */
              tag_1626
              jumpi
                /* "#utility.yul":12753:12763   */
              0x4e487b71
                /* "#utility.yul":12748:12751   */
              0xe0
                /* "#utility.yul":12744:12764   */
              shl
                /* "#utility.yul":12741:12742   */
              0x00
                /* "#utility.yul":12734:12765   */
              mstore
                /* "#utility.yul":12788:12792   */
              0x22
                /* "#utility.yul":12785:12786   */
              0x04
                /* "#utility.yul":12778:12793   */
              mstore
                /* "#utility.yul":12816:12820   */
              0x24
                /* "#utility.yul":12813:12814   */
              0x00
                /* "#utility.yul":12806:12821   */
              revert
                /* "#utility.yul":12670:12831   */
            tag_1626:
              pop
                /* "#utility.yul":12457:12837   */
              swap2
              swap1
              pop
              jump	// out
                /* "#utility.yul":12842:12970   */
            tag_526:
                /* "#utility.yul":12909:12918   */
              dup2
              dup2
              sub
                /* "#utility.yul":12930:12941   */
              dup2
              dup2
              gt
                /* "#utility.yul":12927:12964   */
              iszero
              tag_487
              jumpi
                /* "#utility.yul":12944:12962   */
              tag_487
              tag_1520
              jump	// in
                /* "#utility.yul":12975:13143   */
            tag_528:
                /* "#utility.yul":13048:13057   */
              dup1
              dup3
              mul
                /* "#utility.yul":13079:13088   */
              dup2
              iszero
                /* "#utility.yul":13096:13111   */
              dup3
              dup3
              div
                /* "#utility.yul":13090:13112   */
              dup5
              eq
                /* "#utility.yul":13076:13113   */
              or
                /* "#utility.yul":13066:13137   */
              tag_487
              jumpi
                /* "#utility.yul":13117:13135   */
              tag_487
              tag_1520
              jump	// in
                /* "#utility.yul":13148:13284   */
            tag_530:
                /* "#utility.yul":13183:13186   */
              0x00
              shl(0xff, 0x01)
                /* "#utility.yul":13204:13226   */
              dup3
              add
                /* "#utility.yul":13201:13249   */
              tag_1635
              jumpi
                /* "#utility.yul":13229:13247   */
              tag_1635
              tag_1520
              jump	// in
            tag_1635:
              pop
                /* "#utility.yul":13269:13270   */
              0x00
                /* "#utility.yul":13265:13278   */
              sub
              swap1
                /* "#utility.yul":13148:13284   */
              jump	// out
                /* "#utility.yul":13289:13489   */
            tag_533:
                /* "#utility.yul":13355:13364   */
              dup2
              dup2
              sub
                /* "#utility.yul":13328:13332   */
              0x00
                /* "#utility.yul":13383:13392   */
              dup4
              slt
                /* "#utility.yul":13411:13421   */
              dup1
              iszero
                /* "#utility.yul":13423:13435   */
              dup4
              dup4
              sgt
                /* "#utility.yul":13407:13436   */
              and
                /* "#utility.yul":13446:13458   */
              dup4
              dup4
              slt
                /* "#utility.yul":13438:13459   */
              dup3
              and
                /* "#utility.yul":13404:13460   */
              or
                /* "#utility.yul":13401:13483   */
              iszero
              tag_1169
              jumpi
                /* "#utility.yul":13463:13481   */
              tag_1169
              tag_1520
              jump	// in
                /* "#utility.yul":13962:14146   */
            tag_554:
                /* "#utility.yul":14032:14038   */
              0x00
                /* "#utility.yul":14085:14087   */
              0x20
                /* "#utility.yul":14073:14082   */
              dup3
                /* "#utility.yul":14064:14071   */
              dup5
                /* "#utility.yul":14060:14083   */
              sub
                /* "#utility.yul":14056:14088   */
              slt
                /* "#utility.yul":14053:14105   */
              iszero
              tag_1641
              jumpi
                /* "#utility.yul":14101:14102   */
              0x00
                /* "#utility.yul":14098:14099   */
              dup1
                /* "#utility.yul":14091:14103   */
              revert
                /* "#utility.yul":14053:14105   */
            tag_1641:
              pop
                /* "#utility.yul":14124:14140   */
              mload
              swap2
                /* "#utility.yul":13962:14146   */
              swap1
              pop
              jump	// out
                /* "#utility.yul":14151:14351   */
            tag_574:
              sub(shl(0x80, 0x01), 0x01)
                /* "#utility.yul":14287:14297   */
              dup3
              dup2
              and
                /* "#utility.yul":14275:14285   */
              dup3
              dup3
              and
                /* "#utility.yul":14271:14298   */
              sub
              swap1
                /* "#utility.yul":14310:14322   */
              dup1
              dup3
              gt
                /* "#utility.yul":14307:14345   */
              iszero
              tag_1169
              jumpi
                /* "#utility.yul":14325:14343   */
              tag_1169
              tag_1520
              jump	// in
                /* "#utility.yul":15030:15420   */
            tag_621:
              sub(shl(0xa0, 0x01), 0x01)
                /* "#utility.yul":15303:15318   */
              swap4
              dup5
              and
                /* "#utility.yul":15285:15319   */
              dup2
              mstore
                /* "#utility.yul":15355:15370   */
              swap2
              swap1
              swap3
              and
                /* "#utility.yul":15350:15352   */
              0x20
                /* "#utility.yul":15335:15353   */
              dup3
              add
                /* "#utility.yul":15328:15371   */
              mstore
                /* "#utility.yul":15402:15404   */
              0x40
                /* "#utility.yul":15387:15405   */
              dup2
              add
                /* "#utility.yul":15380:15414   */
              swap2
              swap1
              swap2
              mstore
                /* "#utility.yul":15235:15237   */
              0x60
                /* "#utility.yul":15220:15238   */
              add
              swap1
                /* "#utility.yul":15030:15420   */
              jump	// out
                /* "#utility.yul":16107:16352   */
            tag_758:
                /* "#utility.yul":16186:16192   */
              0x00
                /* "#utility.yul":16194:16200   */
              dup1
                /* "#utility.yul":16247:16249   */
              0x40
                /* "#utility.yul":16235:16244   */
              dup4
                /* "#utility.yul":16226:16233   */
              dup6
                /* "#utility.yul":16222:16245   */
              sub
                /* "#utility.yul":16218:16250   */
              slt
                /* "#utility.yul":16215:16267   */
              iszero
              tag_1651
              jumpi
                /* "#utility.yul":16263:16264   */
              0x00
                /* "#utility.yul":16260:16261   */
              dup1
                /* "#utility.yul":16253:16265   */
              revert
                /* "#utility.yul":16215:16267   */
            tag_1651:
              pop
              pop
                /* "#utility.yul":16286:16302   */
              dup1
              mload
                /* "#utility.yul":16342:16344   */
              0x20
                /* "#utility.yul":16327:16345   */
              swap1
              swap2
              add
                /* "#utility.yul":16321:16346   */
              mload
                /* "#utility.yul":16286:16302   */
              swap1
              swap3
                /* "#utility.yul":16321:16346   */
              swap1
              swap2
              pop
                /* "#utility.yul":16107:16352   */
              jump	// out
                /* "#utility.yul":16737:16864   */
            tag_1497:
                /* "#utility.yul":16798:16808   */
              0x4e487b71
                /* "#utility.yul":16793:16796   */
              0xe0
                /* "#utility.yul":16789:16809   */
              shl
                /* "#utility.yul":16786:16787   */
              0x00
                /* "#utility.yul":16779:16810   */
              mstore
                /* "#utility.yul":16829:16833   */
              0x41
                /* "#utility.yul":16826:16827   */
              0x04
                /* "#utility.yul":16819:16834   */
              mstore
                /* "#utility.yul":16853:16857   */
              0x24
                /* "#utility.yul":16850:16851   */
              0x00
                /* "#utility.yul":16843:16858   */
              revert
                /* "#utility.yul":16869:17766   */
            tag_878:
                /* "#utility.yul":16949:16955   */
              0x00
                /* "#utility.yul":17002:17004   */
              0x20
                /* "#utility.yul":16990:16999   */
              dup3
                /* "#utility.yul":16981:16988   */
              dup5
                /* "#utility.yul":16977:17000   */
              sub
                /* "#utility.yul":16973:17005   */
              slt
                /* "#utility.yul":16970:17022   */
              iszero
              tag_1655
              jumpi
                /* "#utility.yul":17018:17019   */
              0x00
                /* "#utility.yul":17015:17016   */
              dup1
                /* "#utility.yul":17008:17020   */
              revert
                /* "#utility.yul":16970:17022   */
            tag_1655:
                /* "#utility.yul":17051:17060   */
              dup2
                /* "#utility.yul":17045:17061   */
              mload
                /* "#utility.yul":17080:17098   */
              0xffffffffffffffff
                /* "#utility.yul":17121:17123   */
              dup1
                /* "#utility.yul":17113:17119   */
              dup3
                /* "#utility.yul":17110:17124   */
              gt
                /* "#utility.yul":17107:17141   */
              iszero
              tag_1656
              jumpi
                /* "#utility.yul":17137:17138   */
              0x00
                /* "#utility.yul":17134:17135   */
              dup1
                /* "#utility.yul":17127:17139   */
              revert
                /* "#utility.yul":17107:17141   */
            tag_1656:
                /* "#utility.yul":17175:17181   */
              dup2
                /* "#utility.yul":17164:17173   */
              dup5
                /* "#utility.yul":17160:17182   */
              add
                /* "#utility.yul":17150:17182   */
              swap2
              pop
                /* "#utility.yul":17220:17227   */
              dup5
                /* "#utility.yul":17213:17217   */
              0x1f
                /* "#utility.yul":17209:17211   */
              dup4
                /* "#utility.yul":17205:17218   */
              add
                /* "#utility.yul":17201:17228   */
              slt
                /* "#utility.yul":17191:17246   */
              tag_1657
              jumpi
                /* "#utility.yul":17242:17243   */
              0x00
                /* "#utility.yul":17239:17240   */
              dup1
                /* "#utility.yul":17232:17244   */
              revert
                /* "#utility.yul":17191:17246   */
            tag_1657:
                /* "#utility.yul":17271:17273   */
              dup2
                /* "#utility.yul":17265:17274   */
              mload
                /* "#utility.yul":17293:17295   */
              dup2
                /* "#utility.yul":17289:17291   */
              dup2
                /* "#utility.yul":17286:17296   */
              gt
                /* "#utility.yul":17283:17319   */
              iszero
              tag_1659
              jumpi
                /* "#utility.yul":17299:17317   */
              tag_1659
              tag_1497
              jump	// in
            tag_1659:
                /* "#utility.yul":17374:17376   */
              0x40
                /* "#utility.yul":17368:17377   */
              mload
                /* "#utility.yul":17342:17344   */
              0x1f
                /* "#utility.yul":17428:17441   */
              dup3
              add
              not(0x1f)
                /* "#utility.yul":17424:17446   */
              swap1
              dup2
              and
                /* "#utility.yul":17448:17450   */
              0x3f
                /* "#utility.yul":17420:17451   */
              add
                /* "#utility.yul":17416:17456   */
              and
                /* "#utility.yul":17404:17457   */
              dup2
              add
              swap1
                /* "#utility.yul":17472:17490   */
              dup4
              dup3
              gt
                /* "#utility.yul":17492:17514   */
              dup2
              dup4
              lt
                /* "#utility.yul":17469:17515   */
              or
                /* "#utility.yul":17466:17538   */
              iszero
              tag_1661
              jumpi
                /* "#utility.yul":17518:17536   */
              tag_1661
              tag_1497
              jump	// in
            tag_1661:
                /* "#utility.yul":17558:17568   */
              dup2
                /* "#utility.yul":17554:17556   */
              0x40
                /* "#utility.yul":17547:17569   */
              mstore
                /* "#utility.yul":17593:17595   */
              dup3
                /* "#utility.yul":17585:17591   */
              dup2
                /* "#utility.yul":17578:17596   */
              mstore
                /* "#utility.yul":17633:17640   */
              dup8
                /* "#utility.yul":17628:17630   */
              0x20
                /* "#utility.yul":17623:17625   */
              dup5
                /* "#utility.yul":17619:17621   */
              dup8
                /* "#utility.yul":17615:17626   */
              add
                /* "#utility.yul":17611:17631   */
              add
                /* "#utility.yul":17608:17641   */
              gt
                /* "#utility.yul":17605:17658   */
              iszero
              tag_1662
              jumpi
                /* "#utility.yul":17654:17655   */
              0x00
                /* "#utility.yul":17651:17652   */
              dup1
                /* "#utility.yul":17644:17656   */
              revert
                /* "#utility.yul":17605:17658   */
            tag_1662:
                /* "#utility.yul":17667:17735   */
              tag_1663
                /* "#utility.yul":17732:17734   */
              dup4
                /* "#utility.yul":17727:17729   */
              0x20
                /* "#utility.yul":17719:17725   */
              dup4
                /* "#utility.yul":17715:17730   */
              add
                /* "#utility.yul":17710:17712   */
              0x20
                /* "#utility.yul":17706:17708   */
              dup9
                /* "#utility.yul":17702:17713   */
              add
                /* "#utility.yul":17667:17735   */
              tag_1518
              jump	// in
            tag_1663:
                /* "#utility.yul":17754:17760   */
              swap8
                /* "#utility.yul":16869:17766   */
              swap7
              pop
              pop
              pop
              pop
              pop
              pop
              pop
              jump	// out
                /* "#utility.yul":17771:18198   */
            tag_880:
              shl(0xc5, 0x032bc30b1ba363c9)
                /* "#utility.yul":18017:18020   */
              dup2
                /* "#utility.yul":18010:18033   */
              mstore
                /* "#utility.yul":17992:17995   */
              0x00
                /* "#utility.yul":18062:18068   */
              dup3
                /* "#utility.yul":18056:18069   */
              mload
                /* "#utility.yul":18078:18152   */
              tag_1665
                /* "#utility.yul":18145:18151   */
              dup2
                /* "#utility.yul":18141:18142   */
              0x08
                /* "#utility.yul":18136:18139   */
              dup6
                /* "#utility.yul":18132:18143   */
              add
                /* "#utility.yul":18125:18129   */
              0x20
                /* "#utility.yul":18117:18123   */
              dup8
                /* "#utility.yul":18113:18130   */
              add
                /* "#utility.yul":18078:18152   */
              tag_1518
              jump	// in
            tag_1665:
                /* "#utility.yul":18172:18188   */
              swap2
              swap1
              swap2
              add
                /* "#utility.yul":18190:18191   */
              0x08
                /* "#utility.yul":18168:18192   */
              add
              swap3
                /* "#utility.yul":17771:18198   */
              swap2
              pop
              pop
              jump	// out
                /* "#utility.yul":18329:18874   */
            tag_1522:
                /* "#utility.yul":18431:18433   */
              0x1f
                /* "#utility.yul":18426:18429   */
              dup3
                /* "#utility.yul":18423:18434   */
              gt
                /* "#utility.yul":18420:18868   */
              iszero
              tag_653
              jumpi
                /* "#utility.yul":18467:18468   */
              0x00
                /* "#utility.yul":18492:18497   */
              dup2
                /* "#utility.yul":18488:18490   */
              dup2
                /* "#utility.yul":18481:18498   */
              mstore
                /* "#utility.yul":18537:18541   */
              0x20
                /* "#utility.yul":18533:18535   */
              dup2
                /* "#utility.yul":18523:18542   */
              keccak256
                /* "#utility.yul":18607:18609   */
              0x1f
                /* "#utility.yul":18595:18605   */
              dup6
                /* "#utility.yul":18591:18610   */
              add
                /* "#utility.yul":18588:18589   */
              0x05
                /* "#utility.yul":18584:18611   */
              shr
                /* "#utility.yul":18578:18582   */
              dup2
                /* "#utility.yul":18574:18612   */
              add
                /* "#utility.yul":18643:18647   */
              0x20
                /* "#utility.yul":18631:18641   */
              dup7
                /* "#utility.yul":18628:18648   */
              lt
                /* "#utility.yul":18625:18672   */
              iszero
              tag_1669
              jumpi
              pop
                /* "#utility.yul":18666:18670   */
              dup1
                /* "#utility.yul":18625:18672   */
            tag_1669:
                /* "#utility.yul":18721:18723   */
              0x1f
                /* "#utility.yul":18716:18719   */
              dup6
                /* "#utility.yul":18712:18724   */
              add
                /* "#utility.yul":18709:18710   */
              0x05
                /* "#utility.yul":18705:18725   */
              shr
                /* "#utility.yul":18699:18703   */
              dup3
                /* "#utility.yul":18695:18726   */
              add
                /* "#utility.yul":18685:18726   */
              swap2
              pop
                /* "#utility.yul":18776:18858   */
            tag_1670:
                /* "#utility.yul":18794:18796   */
              dup2
                /* "#utility.yul":18787:18792   */
              dup2
                /* "#utility.yul":18784:18797   */
              lt
                /* "#utility.yul":18776:18858   */
              iszero
              tag_850
              jumpi
                /* "#utility.yul":18839:18856   */
              dup3
              dup2
              sstore
                /* "#utility.yul":18820:18821   */
              0x01
                /* "#utility.yul":18809:18822   */
              add
                /* "#utility.yul":18776:18858   */
              jump(tag_1670)
                /* "#utility.yul":19050:20402   */
            tag_882:
                /* "#utility.yul":19176:19179   */
              dup2
                /* "#utility.yul":19170:19180   */
              mload
                /* "#utility.yul":19203:19221   */
              0xffffffffffffffff
                /* "#utility.yul":19195:19201   */
              dup2
                /* "#utility.yul":19192:19222   */
              gt
                /* "#utility.yul":19189:19245   */
              iszero
              tag_1676
              jumpi
                /* "#utility.yul":19225:19243   */
              tag_1676
              tag_1497
              jump	// in
            tag_1676:
                /* "#utility.yul":19254:19351   */
              tag_1677
                /* "#utility.yul":19344:19350   */
              dup2
                /* "#utility.yul":19304:19342   */
              tag_1678
                /* "#utility.yul":19336:19340   */
              dup5
                /* "#utility.yul":19330:19341   */
              sload
                /* "#utility.yul":19304:19342   */
              tag_502
              jump	// in
            tag_1678:
                /* "#utility.yul":19298:19302   */
              dup5
                /* "#utility.yul":19254:19351   */
              tag_1522
              jump	// in
            tag_1677:
                /* "#utility.yul":19406:19410   */
              0x20
              dup1
                /* "#utility.yul":19470:19472   */
              0x1f
                /* "#utility.yul":19459:19473   */
              dup4
              gt
                /* "#utility.yul":19487:19488   */
              0x01
                /* "#utility.yul":19482:20145   */
              dup2
              eq
              tag_1680
              jumpi
                /* "#utility.yul":20189:20190   */
              0x00
                /* "#utility.yul":20206:20212   */
              dup5
                /* "#utility.yul":20203:20292   */
              iszero
              tag_1681
              jumpi
              pop
                /* "#utility.yul":20258:20277   */
              dup6
              dup4
              add
                /* "#utility.yul":20252:20278   */
              mload
                /* "#utility.yul":20203:20292   */
            tag_1681:
              not(0x00)
                /* "#utility.yul":19007:19008   */
              0x03
                /* "#utility.yul":19003:19014   */
              dup7
              swap1
              shl
                /* "#utility.yul":18999:19023   */
              shr
                /* "#utility.yul":18995:19024   */
              not
                /* "#utility.yul":18985:19025   */
              and
                /* "#utility.yul":19031:19032   */
              0x01
                /* "#utility.yul":19027:19038   */
              dup6
              swap1
              shl
                /* "#utility.yul":18982:19039   */
              or
                /* "#utility.yul":20305:20386   */
              dup6
              sstore
                /* "#utility.yul":19452:20396   */
              jump(tag_850)
                /* "#utility.yul":19482:20145   */
            tag_1680:
                /* "#utility.yul":18276:18277   */
              0x00
                /* "#utility.yul":18269:18283   */
              dup6
              dup2
              mstore
                /* "#utility.yul":18313:18317   */
              0x20
                /* "#utility.yul":18300:18318   */
              dup2
              keccak256
              not(0x1f)
                /* "#utility.yul":19518:19538   */
              dup7
              and
              swap2
                /* "#utility.yul":19636:19872   */
            tag_1684:
                /* "#utility.yul":19650:19657   */
              dup3
                /* "#utility.yul":19647:19648   */
              dup2
                /* "#utility.yul":19644:19658   */
              lt
                /* "#utility.yul":19636:19872   */
              iszero
              tag_1686
              jumpi
                /* "#utility.yul":19739:19758   */
              dup9
              dup7
              add
                /* "#utility.yul":19733:19759   */
              mload
                /* "#utility.yul":19718:19760   */
              dup3
              sstore
                /* "#utility.yul":19831:19858   */
              swap5
              dup5
              add
              swap5
                /* "#utility.yul":19799:19800   */
              0x01
                /* "#utility.yul":19787:19801   */
              swap1
              swap2
              add
              swap1
                /* "#utility.yul":19666:19685   */
              dup5
              add
                /* "#utility.yul":19636:19872   */
              jump(tag_1684)
            tag_1686:
                /* "#utility.yul":19640:19643   */
              pop
                /* "#utility.yul":19900:19906   */
              dup6
                /* "#utility.yul":19891:19898   */
              dup3
                /* "#utility.yul":19888:19907   */
              lt
                /* "#utility.yul":19885:20086   */
              iszero
              tag_1687
              jumpi
                /* "#utility.yul":19961:19980   */
              dup8
              dup6
              add
                /* "#utility.yul":19955:19981   */
              mload
              not(0x00)
                /* "#utility.yul":20044:20045   */
              0x03
                /* "#utility.yul":20040:20054   */
              dup9
              swap1
              shl
                /* "#utility.yul":20056:20059   */
              0xf8
                /* "#utility.yul":20036:20060   */
              and
                /* "#utility.yul":20032:20069   */
              shr
                /* "#utility.yul":20028:20070   */
              not
                /* "#utility.yul":20013:20071   */
              and
                /* "#utility.yul":19998:20072   */
              dup2
              sstore
                /* "#utility.yul":19885:20086   */
            tag_1687:
              pop
              pop
              pop
              pop
              pop
                /* "#utility.yul":20132:20133   */
              0x01
                /* "#utility.yul":20116:20130   */
              swap1
              dup2
              shl
                /* "#utility.yul":20112:20134   */
              add
                /* "#utility.yul":20099:20135   */
              swap1
              sstore
              pop
                /* "#utility.yul":19050:20402   */
              jump	// out
                /* "#utility.yul":20407:20829   */
            tag_884:
              shl(0xe8, 0x657861)
                /* "#utility.yul":20653:20656   */
              dup2
                /* "#utility.yul":20646:20664   */
              mstore
                /* "#utility.yul":20628:20631   */
              0x00
                /* "#utility.yul":20693:20699   */
              dup3
                /* "#utility.yul":20687:20700   */
              mload
                /* "#utility.yul":20709:20783   */
              tag_1689
                /* "#utility.yul":20776:20782   */
              dup2
                /* "#utility.yul":20772:20773   */
              0x03
                /* "#utility.yul":20767:20770   */
              dup6
                /* "#utility.yul":20763:20774   */
              add
                /* "#utility.yul":20756:20760   */
              0x20
                /* "#utility.yul":20748:20754   */
              dup8
                /* "#utility.yul":20744:20761   */
              add
                /* "#utility.yul":20709:20783   */
              tag_1518
              jump	// in
            tag_1689:
                /* "#utility.yul":20803:20819   */
              swap2
              swap1
              swap2
              add
                /* "#utility.yul":20821:20822   */
              0x03
                /* "#utility.yul":20799:20823   */
              add
              swap3
                /* "#utility.yul":20407:20829   */
              swap2
              pop
              pop
              jump	// out
                /* "#utility.yul":22969:23081   */
            tag_1120:
                /* "#utility.yul":23001:23002   */
              0x00
                /* "#utility.yul":23027:23028   */
              dup3
                /* "#utility.yul":23017:23052   */
              tag_1697
              jumpi
                /* "#utility.yul":23032:23050   */
              tag_1697
              tag_471
              jump	// in
            tag_1697:
              pop
                /* "#utility.yul":23066:23075   */
              mod
              swap1
                /* "#utility.yul":22969:23081   */
              jump	// out
                /* "#utility.yul":23086:23213   */
            tag_1133:
                /* "#utility.yul":23147:23157   */
              0x4e487b71
                /* "#utility.yul":23142:23145   */
              0xe0
                /* "#utility.yul":23138:23158   */
              shl
                /* "#utility.yul":23135:23136   */
              0x00
                /* "#utility.yul":23128:23159   */
              mstore
                /* "#utility.yul":23178:23182   */
              0x21
                /* "#utility.yul":23175:23176   */
              0x04
                /* "#utility.yul":23168:23183   */
              mstore
                /* "#utility.yul":23202:23206   */
              0x24
                /* "#utility.yul":23199:23200   */
              0x00
                /* "#utility.yul":23192:23207   */
              revert
                /* "#utility.yul":23830:23950   */
            tag_1208:
                /* "#utility.yul":23870:23871   */
              0x00
                /* "#utility.yul":23896:23897   */
              dup3
                /* "#utility.yul":23886:23921   */
              tag_1703
              jumpi
                /* "#utility.yul":23901:23919   */
              tag_1703
              tag_471
              jump	// in
            tag_1703:
              pop
                /* "#utility.yul":23935:23944   */
              div
              swap1
                /* "#utility.yul":23830:23950   */
              jump	// out
                /* "#utility.yul":23955:24799   */
            tag_1265:
                /* "#utility.yul":24085:24088   */
              0x00
                /* "#utility.yul":24114:24115   */
              dup1
                /* "#utility.yul":24147:24153   */
              dup4
                /* "#utility.yul":24141:24154   */
              sload
                /* "#utility.yul":24177:24213   */
              tag_1705
                /* "#utility.yul":24203:24212   */
              dup2
                /* "#utility.yul":24177:24213   */
              tag_502
              jump	// in
            tag_1705:
                /* "#utility.yul":24232:24233   */
              0x01
                /* "#utility.yul":24249:24267   */
              dup3
              dup2
              and
                /* "#utility.yul":24276:24409   */
              dup1
              iszero
              tag_1707
              jumpi
                /* "#utility.yul":24423:24424   */
              0x01
                /* "#utility.yul":24418:24774   */
              dup2
              eq
              tag_1708
              jumpi
                /* "#utility.yul":24242:24774   */
              jump(tag_1706)
                /* "#utility.yul":24276:24409   */
            tag_1707:
              not(0xff)
                /* "#utility.yul":24309:24333   */
              dup5
              and
                /* "#utility.yul":24297:24334   */
              dup8
              mstore
                /* "#utility.yul":24382:24396   */
              dup3
              iszero
                /* "#utility.yul":24375:24397   */
              iszero
                /* "#utility.yul":24363:24398   */
              dup4
              mul
                /* "#utility.yul":24354:24399   */
              dup8
              add
              swap5
              pop
                /* "#utility.yul":24276:24409   */
              jump(tag_1706)
                /* "#utility.yul":24418:24774   */
            tag_1708:
                /* "#utility.yul":24449:24455   */
              dup8
                /* "#utility.yul":24446:24447   */
              0x00
                /* "#utility.yul":24439:24456   */
              mstore
                /* "#utility.yul":24479:24483   */
              0x20
                /* "#utility.yul":24524:24526   */
              dup1
                /* "#utility.yul":24521:24522   */
              0x00
                /* "#utility.yul":24511:24527   */
              keccak256
                /* "#utility.yul":24549:24550   */
              0x00
                /* "#utility.yul":24563:24728   */
            tag_1709:
                /* "#utility.yul":24577:24583   */
              dup6
                /* "#utility.yul":24574:24575   */
              dup2
                /* "#utility.yul":24571:24584   */
              lt
                /* "#utility.yul":24563:24728   */
              iszero
              tag_1711
              jumpi
                /* "#utility.yul":24655:24669   */
              dup2
              sload
                /* "#utility.yul":24642:24653   */
              dup11
              dup3
              add
                /* "#utility.yul":24635:24670   */
              mstore
                /* "#utility.yul":24698:24714   */
              swap1
              dup5
              add
              swap1
                /* "#utility.yul":24592:24602   */
              dup3
              add
                /* "#utility.yul":24563:24728   */
              jump(tag_1709)
            tag_1711:
                /* "#utility.yul":24567:24570   */
              pop
              pop
              pop
                /* "#utility.yul":24757:24763   */
              dup3
                /* "#utility.yul":24752:24755   */
              dup8
                /* "#utility.yul":24748:24764   */
              add
                /* "#utility.yul":24741:24764   */
              swap5
              pop
                /* "#utility.yul":24242:24774   */
            tag_1706:
              pop
                /* "#utility.yul":24790:24793   */
              swap3
              swap7
                /* "#utility.yul":23955:24799   */
              swap6
              pop
              pop
              pop
              pop
              pop
              pop
              jump	// out
                /* "#utility.yul":25637:26449   */
            tag_1456:
                /* "#utility.yul":26048:26073   */
              0x416363657373436f6e74726f6c3a206163636f756e7420000000000000000000
                /* "#utility.yul":26043:26046   */
              dup2
                /* "#utility.yul":26036:26074   */
              mstore
                /* "#utility.yul":26018:26021   */
              0x00
                /* "#utility.yul":26103:26109   */
              dup4
                /* "#utility.yul":26097:26110   */
              mload
                /* "#utility.yul":26119:26194   */
              tag_1715
                /* "#utility.yul":26187:26193   */
              dup2
                /* "#utility.yul":26182:26184   */
              0x17
                /* "#utility.yul":26177:26180   */
              dup6
                /* "#utility.yul":26173:26185   */
              add
                /* "#utility.yul":26166:26170   */
              0x20
                /* "#utility.yul":26158:26164   */
              dup9
                /* "#utility.yul":26154:26171   */
              add
                /* "#utility.yul":26119:26194   */
              tag_1518
              jump	// in
            tag_1715:
              shl(0x7d, 0x01034b99036b4b9b9b4b733903937b6329)
                /* "#utility.yul":26253:26255   */
              0x17
                /* "#utility.yul":26213:26229   */
              swap2
              dup5
              add
                /* "#utility.yul":26245:26256   */
              swap2
              dup3
              add
                /* "#utility.yul":26238:26278   */
              mstore
                /* "#utility.yul":26303:26316   */
              dup4
              mload
                /* "#utility.yul":26325:26401   */
              tag_1716
                /* "#utility.yul":26303:26316   */
              dup2
                /* "#utility.yul":26387:26389   */
              0x28
                /* "#utility.yul":26379:26390   */
              dup5
              add
                /* "#utility.yul":26372:26376   */
              0x20
                /* "#utility.yul":26360:26377   */
              dup9
              add
                /* "#utility.yul":26325:26401   */
              tag_1518
              jump	// in
            tag_1716:
                /* "#utility.yul":26421:26438   */
              add
                /* "#utility.yul":26440:26442   */
              0x28
                /* "#utility.yul":26417:26443   */
              add
              swap5
                /* "#utility.yul":25637:26449   */
              swap4
              pop
              pop
              pop
              pop
              jump	// out
                /* "#utility.yul":26454:26581   */
            tag_1501:
                /* "#utility.yul":26515:26525   */
              0x4e487b71
                /* "#utility.yul":26510:26513   */
              0xe0
                /* "#utility.yul":26506:26526   */
              shl
                /* "#utility.yul":26503:26504   */
              0x00
                /* "#utility.yul":26496:26527   */
              mstore
                /* "#utility.yul":26546:26550   */
              0x32
                /* "#utility.yul":26543:26544   */
              0x04
                /* "#utility.yul":26536:26551   */
              mstore
                /* "#utility.yul":26570:26574   */
              0x24
                /* "#utility.yul":26567:26568   */
              0x00
                /* "#utility.yul":26560:26575   */
              revert
                /* "#utility.yul":26586:26722   */
            tag_1514:
                /* "#utility.yul":26625:26628   */
              0x00
                /* "#utility.yul":26653:26658   */
              dup2
                /* "#utility.yul":26643:26682   */
              tag_1720
              jumpi
                /* "#utility.yul":26662:26680   */
              tag_1720
              tag_1520
              jump	// in
            tag_1720:
              pop
              not(0x00)
                /* "#utility.yul":26698:26716   */
              add
              swap1
                /* "#utility.yul":26586:26722   */
              jump	// out
            stop
            data_ada389e1fc24a8587c776340efb91b36e675792ab631816100d55df0b5cf3cbc ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef

            auxdata: 0xa2646970667358221220a8469abf63f9e566b839cc0c28f862aa474ed37c1266cd5e98b9cad9c740e02764736f6c63430008110033
        }
    }

    sub_5: assembly {
            /* "contracts/mocks/MockPriceFeed.sol":189:683  contract MockPriceFeed is IPriceFeed {... */
          mstore(0x40, 0xa0)
            /* "contracts/mocks/MockPriceFeed.sol":289:386  constructor(uint8 decimals_, int256 price_) {... */
          callvalue
          dup1
          iszero
          tag_1
          jumpi
          0x00
          dup1
          revert
        tag_1:
          pop
          mload(0x40)
          sub(codesize, bytecodeSize)
          dup1
          bytecodeSize
          dup4
          codecopy
          dup2
          add
          0x40
          dup2
          swap1
          mstore
          tag_2
          swap2
          tag_3
          jump	// in
        tag_2:
            /* "contracts/mocks/MockPriceFeed.sol":339:359  decimals = decimals_ */
          0xff
          dup3
          and
          0x80
          mstore
            /* "contracts/mocks/MockPriceFeed.sol":365:381  setPrice(price_) */
          tag_6
            /* "contracts/mocks/MockPriceFeed.sol":374:380  price_ */
          dup2
            /* "contracts/mocks/MockPriceFeed.sol":365:373  setPrice */
          tag_7
            /* "contracts/mocks/MockPriceFeed.sol":365:381  setPrice(price_) */
          jump	// in
        tag_6:
            /* "contracts/mocks/MockPriceFeed.sol":289:386  constructor(uint8 decimals_, int256 price_) {... */
          pop
          pop
            /* "contracts/mocks/MockPriceFeed.sol":189:683  contract MockPriceFeed is IPriceFeed {... */
          jump(tag_12)
            /* "contracts/mocks/MockPriceFeed.sol":472:589  function setPrice(int256 price_) public {... */
        tag_7:
            /* "contracts/mocks/MockPriceFeed.sol":518:523  price */
          0x00
            /* "contracts/mocks/MockPriceFeed.sol":518:532  price = price_ */
          dup2
          dup2
          sstore
            /* "contracts/mocks/MockPriceFeed.sol":543:584  AnswerUpdated(price_, 0, block.timestamp) */
          mload(0x40)
            /* "contracts/mocks/MockPriceFeed.sol":568:583  block.timestamp */
          timestamp
            /* "#utility.yul":498:523   */
          dup2
          mstore
            /* "contracts/mocks/MockPriceFeed.sol":518:532  price = price_ */
          dup3
          swap1
            /* "contracts/mocks/MockPriceFeed.sol":543:584  AnswerUpdated(price_, 0, block.timestamp) */
          0x0559884fd3a460db3073b7fc896cc77986f16e378210ded43186175bf646fc5f
          swap1
            /* "#utility.yul":486:488   */
          0x20
            /* "#utility.yul":471:489   */
          add
            /* "contracts/mocks/MockPriceFeed.sol":543:584  AnswerUpdated(price_, 0, block.timestamp) */
          mload(0x40)
          dup1
          swap2
          sub
          swap1
          log3
            /* "contracts/mocks/MockPriceFeed.sol":472:589  function setPrice(int256 price_) public {... */
          pop
          jump	// out
            /* "#utility.yul":14:347   */
        tag_3:
            /* "#utility.yul":90:96   */
          0x00
            /* "#utility.yul":98:104   */
          dup1
            /* "#utility.yul":151:153   */
          0x40
            /* "#utility.yul":139:148   */
          dup4
            /* "#utility.yul":130:137   */
          dup6
            /* "#utility.yul":126:149   */
          sub
            /* "#utility.yul":122:154   */
          slt
            /* "#utility.yul":119:171   */
          iszero
          tag_14
          jumpi
            /* "#utility.yul":167:168   */
          0x00
            /* "#utility.yul":164:165   */
          dup1
            /* "#utility.yul":157:169   */
          revert
            /* "#utility.yul":119:171   */
        tag_14:
            /* "#utility.yul":199:208   */
          dup3
            /* "#utility.yul":193:209   */
          mload
            /* "#utility.yul":249:253   */
          0xff
            /* "#utility.yul":242:247   */
          dup2
            /* "#utility.yul":238:254   */
          and
            /* "#utility.yul":231:236   */
          dup2
            /* "#utility.yul":228:255   */
          eq
            /* "#utility.yul":218:273   */
          tag_15
          jumpi
            /* "#utility.yul":269:270   */
          0x00
            /* "#utility.yul":266:267   */
          dup1
            /* "#utility.yul":259:271   */
          revert
            /* "#utility.yul":218:273   */
        tag_15:
            /* "#utility.yul":337:339   */
          0x20
            /* "#utility.yul":322:340   */
          swap4
          swap1
          swap4
          add
            /* "#utility.yul":316:341   */
          mload
            /* "#utility.yul":292:297   */
          swap3
          swap5
            /* "#utility.yul":316:341   */
          swap3
          swap4
          pop
          pop
          pop
            /* "#utility.yul":14:347   */
          jump	// out
            /* "#utility.yul":352:529   */
        tag_12:
            /* "contracts/mocks/MockPriceFeed.sol":189:683  contract MockPriceFeed is IPriceFeed {... */
          mload(0x80)
          codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))
          0x00
          assignImmutable("0x11a419b0f9f2f3f7ff4bfa1dbe09f6c16979b40ce0d2dbdffe04cf256683116f")
          return(0x00, dataSize(sub_0))
        stop

        sub_0: assembly {
                /* "contracts/mocks/MockPriceFeed.sol":189:683  contract MockPriceFeed is IPriceFeed {... */
              mstore(0x40, 0x80)
              callvalue
              dup1
              iszero
              tag_1
              jumpi
              0x00
              dup1
              revert
            tag_1:
              pop
              jumpi(tag_2, lt(calldatasize, 0x04))
              shr(0xe0, calldataload(0x00))
              dup1
              0x313ce567
              eq
              tag_3
              jumpi
              dup1
              0x50d25bcd
              eq
              tag_4
              jumpi
              dup1
              0xa035b1fe
              eq
              tag_5
              jumpi
              dup1
              0xf7a30806
              eq
              tag_6
              jumpi
            tag_2:
              0x00
              dup1
              revert
                /* "contracts/mocks/MockPriceFeed.sol":230:261  uint8 public immutable decimals */
            tag_3:
              tag_7
              immutable("0x11a419b0f9f2f3f7ff4bfa1dbe09f6c16979b40ce0d2dbdffe04cf256683116f")
              dup2
              jump
            tag_7:
              mload(0x40)
                /* "#utility.yul":186:190   */
              0xff
                /* "#utility.yul":174:191   */
              swap1
              swap2
              and
                /* "#utility.yul":156:192   */
              dup2
              mstore
                /* "#utility.yul":144:146   */
              0x20
                /* "#utility.yul":129:147   */
              add
                /* "contracts/mocks/MockPriceFeed.sol":230:261  uint8 public immutable decimals */
            tag_9:
              mload(0x40)
              dup1
              swap2
              sub
              swap1
              return
                /* "contracts/mocks/MockPriceFeed.sol":390:468  function latestAnswer() external view returns (int256) {... */
            tag_4:
                /* "contracts/mocks/MockPriceFeed.sol":437:443  int256 */
              0x00
                /* "contracts/mocks/MockPriceFeed.sol":458:463  price */
              sload
                /* "contracts/mocks/MockPriceFeed.sol":390:468  function latestAnswer() external view returns (int256) {... */
            tag_11:
              mload(0x40)
                /* "#utility.yul":347:372   */
              swap1
              dup2
              mstore
                /* "#utility.yul":335:337   */
              0x20
                /* "#utility.yul":320:338   */
              add
                /* "contracts/mocks/MockPriceFeed.sol":390:468  function latestAnswer() external view returns (int256) {... */
              tag_9
                /* "#utility.yul":203:378   */
              jump
                /* "contracts/mocks/MockPriceFeed.sol":265:284  int256 public price */
            tag_5:
              tag_11
              sload(0x00)
              dup2
              jump
                /* "contracts/mocks/MockPriceFeed.sol":472:589  function setPrice(int256 price_) public {... */
            tag_6:
              tag_18
              tag_19
              calldatasize
              0x04
              tag_20
              jump	// in
            tag_19:
              tag_21
              jump	// in
            tag_18:
              stop
            tag_21:
                /* "contracts/mocks/MockPriceFeed.sol":518:523  price */
              0x00
                /* "contracts/mocks/MockPriceFeed.sol":518:532  price = price_ */
              dup2
              dup2
              sstore
                /* "contracts/mocks/MockPriceFeed.sol":543:584  AnswerUpdated(price_, 0, block.timestamp) */
              mload(0x40)
                /* "contracts/mocks/MockPriceFeed.sol":568:583  block.timestamp */
              timestamp
                /* "#utility.yul":347:372   */
              dup2
              mstore
                /* "contracts/mocks/MockPriceFeed.sol":518:532  price = price_ */
              dup3
              swap1
                /* "contracts/mocks/MockPriceFeed.sol":543:584  AnswerUpdated(price_, 0, block.timestamp) */
              0x0559884fd3a460db3073b7fc896cc77986f16e378210ded43186175bf646fc5f
              swap1
                /* "#utility.yul":335:337   */
              0x20
                /* "#utility.yul":320:338   */
              add
                /* "contracts/mocks/MockPriceFeed.sol":543:584  AnswerUpdated(price_, 0, block.timestamp) */
              mload(0x40)
              dup1
              swap2
              sub
              swap1
              log3
                /* "contracts/mocks/MockPriceFeed.sol":472:589  function setPrice(int256 price_) public {... */
              pop
              jump	// out
                /* "#utility.yul":383:562   */
            tag_20:
                /* "#utility.yul":441:447   */
              0x00
                /* "#utility.yul":494:496   */
              0x20
                /* "#utility.yul":482:491   */
              dup3
                /* "#utility.yul":473:480   */
              dup5
                /* "#utility.yul":469:492   */
              sub
                /* "#utility.yul":465:497   */
              slt
                /* "#utility.yul":462:514   */
              iszero
              tag_30
              jumpi
                /* "#utility.yul":510:511   */
              0x00
                /* "#utility.yul":507:508   */
              dup1
                /* "#utility.yul":500:512   */
              revert
                /* "#utility.yul":462:514   */
            tag_30:
              pop
                /* "#utility.yul":533:556   */
              calldataload
              swap2
                /* "#utility.yul":383:562   */
              swap1
              pop
              jump	// out

            auxdata: 0xa264697066735822122012720e819acdc9dfc653e5b8edafe1be0b5d1249dd4b121161103e962a91096d64736f6c63430008110033
        }
    }

    sub_6: assembly {
            /* "contracts/RewardsController.sol":774:35101  contract RewardsController is Initializable, AccessControlUpgradeable {... */
          mstore(0x40, 0x80)
            /* "contracts/RewardsController.sol":1590:1637  constructor() {... */
          callvalue
          dup1
          iszero
          tag_1
          jumpi
          0x00
          dup1
          revert
        tag_1:
          pop
            /* "contracts/RewardsController.sol":1610:1632  _disableInitializers() */
          tag_4
            /* "contracts/RewardsController.sol":1610:1630  _disableInitializers */
          tag_5
            /* "contracts/RewardsController.sol":1610:1632  _disableInitializers() */
          jump	// in
        tag_4:
            /* "contracts/RewardsController.sol":774:35101  contract RewardsController is Initializable, AccessControlUpgradeable {... */
          jump(tag_12)
            /* "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":5928:6207  function _disableInitializers() internal virtual {... */
        tag_5:
            /* "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":5996:6009  _initializing */
          sload(0x00)
          0x0100
          swap1
          div
          0xff
          and
            /* "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":5995:6009  !_initializing */
          iszero
            /* "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":5987:6053  require(!_initializing, "Initializable: contract is initializing") */
          tag_8
          jumpi
          0x00
          dup1
          revert
        tag_8:
            /* "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":6067:6079  _initialized */
          sload(0x00)
            /* "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":6082:6097  type(uint8).max */
          0xff
            /* "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":6067:6079  _initialized */
          swap1
          dup2
          and
            /* "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":6067:6097  _initialized < type(uint8).max */
          lt
            /* "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":6063:6201  if (_initialized < type(uint8).max) {... */
          iszero
          tag_9
          jumpi
            /* "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":6113:6125  _initialized */
          0x00
            /* "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":6113:6143  _initialized = type(uint8).max */
          dup1
          sload
          not(0xff)
          and
            /* "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":6128:6143  type(uint8).max */
          0xff
            /* "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":6113:6143  _initialized = type(uint8).max */
          swap1
          dup2
          or
          swap1
          swap2
          sstore
            /* "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":6162:6190  Initialized(type(uint8).max) */
          mload(0x40)
            /* "#utility.yul":156:192   */
          swap1
          dup2
          mstore
            /* "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":6162:6190  Initialized(type(uint8).max) */
          0x7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498
          swap1
            /* "#utility.yul":144:146   */
          0x20
            /* "#utility.yul":129:147   */
          add
            /* "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":6162:6190  Initialized(type(uint8).max) */
          mload(0x40)
          dup1
          swap2
          sub
          swap1
          log1
            /* "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":6063:6201  if (_initialized < type(uint8).max) {... */
        tag_9:
            /* "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":5928:6207  function _disableInitializers() internal virtual {... */
          jump	// out
            /* "#utility.yul":14:198   */
        tag_12:
            /* "contracts/RewardsController.sol":774:35101  contract RewardsController is Initializable, AccessControlUpgradeable {... */
          dataSize(sub_0)
          dup1
          dataOffset(sub_0)
          0x00
          codecopy
          0x00
          return
        stop

        sub_0: assembly {
                /* "contracts/RewardsController.sol":774:35101  contract RewardsController is Initializable, AccessControlUpgradeable {... */
              mstore(0x40, 0x80)
              callvalue
              dup1
              iszero
              tag_1
              jumpi
              0x00
              dup1
              revert
            tag_1:
              pop
              jumpi(tag_2, lt(calldatasize, 0x04))
              shr(0xe0, calldataload(0x00))
              dup1
              0x8acbf3de
              gt
              tag_32
              jumpi
              dup1
              0xd219f395
              gt
              tag_33
              jumpi
              dup1
              0xe9c50ff7
              gt
              tag_34
              jumpi
              dup1
              0xe9c50ff7
              eq
              tag_28
              jumpi
              dup1
              0xf2426f9a
              eq
              tag_29
              jumpi
              dup1
              0xf940e385
              eq
              tag_30
              jumpi
              dup1
              0xfc196068
              eq
              tag_31
              jumpi
              0x00
              dup1
              revert
            tag_34:
              dup1
              0xd219f395
              eq
              tag_24
              jumpi
              dup1
              0xd547741f
              eq
              tag_25
              jumpi
              dup1
              0xd681afb5
              eq
              tag_26
              jumpi
              dup1
              0xde7ea7c6
              eq
              tag_27
              jumpi
              0x00
              dup1
              revert
            tag_33:
              dup1
              0xa361654a
              gt
              tag_35
              jumpi
              dup1
              0xa361654a
              eq
              tag_20
              jumpi
              dup1
              0xb658e673
              eq
              tag_21
              jumpi
              dup1
              0xb7eec413
              eq
              tag_22
              jumpi
              dup1
              0xc2db09c1
              eq
              tag_23
              jumpi
              0x00
              dup1
              revert
            tag_35:
              dup1
              0x8acbf3de
              eq
              tag_17
              jumpi
              dup1
              0x91d14854
              eq
              tag_18
              jumpi
              dup1
              0xa217fddf
              eq
              tag_19
              jumpi
              0x00
              dup1
              revert
            tag_32:
              dup1
              0x36568abe
              gt
              tag_36
              jumpi
              dup1
              0x5684aa46
              gt
              tag_37
              jumpi
              dup1
              0x5684aa46
              eq
              tag_13
              jumpi
              dup1
              0x6c912dad
              eq
              tag_14
              jumpi
              dup1
              0x77329f35
              eq
              tag_15
              jumpi
              dup1
              0x8129fc1c
              eq
              tag_16
              jumpi
              0x00
              dup1
              revert
            tag_37:
              dup1
              0x36568abe
              eq
              tag_10
              jumpi
              dup1
              0x382e85ad
              eq
              tag_11
              jumpi
              dup1
              0x44e250f8
              eq
              tag_12
              jumpi
              0x00
              dup1
              revert
            tag_36:
              dup1
              0x232b956c
              gt
              tag_38
              jumpi
              dup1
              0x232b956c
              eq
              tag_6
              jumpi
              dup1
              0x248a9ca3
              eq
              tag_7
              jumpi
              dup1
              0x249e6d9c
              eq
              tag_8
              jumpi
              dup1
              0x2f2ff15d
              eq
              tag_9
              jumpi
              0x00
              dup1
              revert
            tag_38:
              dup1
              0x0149e46f
              eq
              tag_3
              jumpi
              dup1
              0x01ffc9a7
              eq
              tag_4
              jumpi
              dup1
              0x10d66677
              eq
              tag_5
              jumpi
            tag_2:
              0x00
              dup1
              revert
                /* "contracts/RewardsController.sol":2141:2644  function handleDeposit(address account) external {... */
            tag_3:
              tag_39
              tag_40
              calldatasize
              0x04
              tag_41
              jump	// in
            tag_40:
              tag_42
              jump	// in
            tag_39:
              stop
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":2903:3116  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */
            tag_4:
              tag_43
              tag_44
              calldatasize
              0x04
              tag_45
              jump	// in
            tag_44:
              tag_46
              jump	// in
            tag_43:
              mload(0x40)
                /* "#utility.yul":858:872   */
              swap1
              iszero
                /* "#utility.yul":851:873   */
              iszero
                /* "#utility.yul":833:874   */
              dup2
              mstore
                /* "#utility.yul":821:823   */
              0x20
                /* "#utility.yul":806:824   */
              add
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":2903:3116  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */
            tag_47:
              mload(0x40)
              dup1
              swap2
              sub
              swap1
              return
                /* "contracts/RewardsController.sol":1426:1451  ERC20[] public rewardList */
            tag_5:
              tag_49
              tag_50
              calldatasize
              0x04
              tag_51
              jump	// in
            tag_50:
              tag_52
              jump	// in
            tag_49:
              mload(0x40)
              sub(shl(0xa0, 0x01), 0x01)
                /* "#utility.yul":1365:1397   */
              swap1
              swap2
              and
                /* "#utility.yul":1347:1398   */
              dup2
              mstore
                /* "#utility.yul":1335:1337   */
              0x20
                /* "#utility.yul":1320:1338   */
              add
                /* "contracts/RewardsController.sol":1426:1451  ERC20[] public rewardList */
              tag_47
                /* "#utility.yul":1186:1404   */
              jump
                /* "contracts/RewardsController.sol":1508:1534  Market[] public marketList */
            tag_6:
              tag_49
              tag_56
              calldatasize
              0x04
              tag_51
              jump	// in
            tag_56:
              tag_57
              jump	// in
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":4708:4837  function getRoleAdmin(bytes32 role) public view virtual override returns (bytes32) {... */
            tag_7:
              tag_60
              tag_61
              calldatasize
              0x04
              tag_51
              jump	// in
            tag_61:
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":4782:4789  bytes32 */
              0x00
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":4808:4820  _roles[role] */
              swap1
              dup2
              mstore
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":4808:4814  _roles */
              0x65
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":4808:4820  _roles[role] */
              0x20
              mstore
              0x40
              swap1
              keccak256
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":4808:4830  _roles[role].adminRole */
              0x01
              add
              sload
              swap1
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":4708:4837  function getRoleAdmin(bytes32 role) public view virtual override returns (bytes32) {... */
              jump
            tag_60:
              mload(0x40)
                /* "#utility.yul":1963:1988   */
              swap1
              dup2
              mstore
                /* "#utility.yul":1951:1953   */
              0x20
                /* "#utility.yul":1936:1954   */
              add
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":4708:4837  function getRoleAdmin(bytes32 role) public view virtual override returns (bytes32) {... */
              tag_47
                /* "#utility.yul":1817:1994   */
              jump
                /* "contracts/RewardsController.sol":8359:8682  function accountOperation(... */
            tag_8:
              tag_66
              tag_67
              calldatasize
              0x04
              tag_68
              jump	// in
            tag_67:
              sub(shl(0xa0, 0x01), 0x01)
                /* "contracts/RewardsController.sol":8549:8569  distribution[market] */
              swap3
              dup4
              and
                /* "contracts/RewardsController.sol":8490:8497  uint256 */
              0x00
                /* "contracts/RewardsController.sol":8549:8569  distribution[market] */
              swap1
              dup2
              mstore
                /* "contracts/RewardsController.sol":8549:8561  distribution */
              0x97
                /* "contracts/RewardsController.sol":8549:8569  distribution[market] */
              0x20
              swap1
              dup2
              mstore
              0x40
              dup1
              dup4
              keccak256
                /* "contracts/RewardsController.sol":8549:8585  distribution[market].rewards[reward] */
              swap4
              dup7
              and
              dup4
              mstore
              swap3
              dup2
              mstore
              dup3
              dup3
              keccak256
                /* "contracts/RewardsController.sol":8549:8603  distribution[market].rewards[reward].accounts[account] */
              swap6
              swap1
              swap5
              and
              dup2
              mstore
                /* "contracts/RewardsController.sol":8549:8594  distribution[market].rewards[reward].accounts */
              0x0b
              swap1
              swap5
              add
                /* "contracts/RewardsController.sol":8549:8603  distribution[market].rewards[reward].accounts[account] */
              dup4
              mstore
              dup1
              dup5
              keccak256
                /* "contracts/RewardsController.sol":8549:8614  distribution[market].rewards[reward].accounts[account][operation] */
              swap2
              iszero
              iszero
              dup5
              mstore
              swap2
              mstore
              swap1
              keccak256
                /* "contracts/RewardsController.sol":8628:8652  operationAccount.accrued */
              sload
              sub(shl(0x80, 0x01), 0x01)
              shl(0x80, 0x01)
              dup3
              div
              dup2
              and
              swap3
                /* "contracts/RewardsController.sol":8654:8676  operationAccount.index */
              swap2
              and
              swap1
                /* "contracts/RewardsController.sol":8359:8682  function accountOperation(... */
              jump
            tag_66:
              0x40
              dup1
              mload
                /* "#utility.yul":3118:3143   */
              swap3
              dup4
              mstore
                /* "#utility.yul":3174:3176   */
              0x20
                /* "#utility.yul":3159:3177   */
              dup4
              add
                /* "#utility.yul":3152:3186   */
              swap2
              swap1
              swap2
              mstore
                /* "#utility.yul":3091:3109   */
              add
                /* "contracts/RewardsController.sol":8359:8682  function accountOperation(... */
              tag_47
                /* "#utility.yul":2944:3192   */
              jump
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":5133:5278  function grantRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {... */
            tag_9:
              tag_39
              tag_73
              calldatasize
              0x04
              tag_74
              jump	// in
            tag_73:
              tag_75
              jump	// in
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":6242:6456  function renounceRole(bytes32 role, address account) public virtual override {... */
            tag_10:
              tag_39
              tag_77
              calldatasize
              0x04
              tag_74
              jump	// in
            tag_77:
              tag_78
              jump	// in
                /* "contracts/RewardsController.sol":10733:11934  function claimable(... */
            tag_11:
              tag_60
              tag_80
              calldatasize
              0x04
              tag_81
              jump	// in
            tag_80:
              tag_82
              jump	// in
                /* "contracts/RewardsController.sol":15714:15987  function rewardIndexes(Market market, ERC20 reward) external view returns (uint256, uint256, uint256) {... */
            tag_12:
              tag_85
              tag_86
              calldatasize
              0x04
              tag_87
              jump	// in
            tag_86:
              sub(shl(0xa0, 0x01), 0x01)
                /* "contracts/RewardsController.sol":15854:15874  distribution[market] */
              swap2
              dup3
              and
                /* "contracts/RewardsController.sol":15789:15796  uint256 */
              0x00
                /* "contracts/RewardsController.sol":15854:15874  distribution[market] */
              swap1
              dup2
              mstore
                /* "contracts/RewardsController.sol":15854:15866  distribution */
              0x97
                /* "contracts/RewardsController.sol":15854:15874  distribution[market] */
              0x20
              swap1
              dup2
              mstore
              0x40
              dup1
              dup4
              keccak256
                /* "contracts/RewardsController.sol":15854:15890  distribution[market].rewards[reward] */
              swap4
              swap1
              swap5
              and
              dup3
              mstore
              swap2
              swap1
              swap2
              mstore
              keccak256
                /* "contracts/RewardsController.sol":15904:15926  rewardData.borrowIndex */
              0x07
              dup2
              add
              sload
                /* "contracts/RewardsController.sol":15953:15981  rewardData.lastUndistributed */
              0x04
              swap1
              swap2
              add
              sload
              sub(shl(0x80, 0x01), 0x01)
                /* "contracts/RewardsController.sol":15904:15926  rewardData.borrowIndex */
              dup1
              dup4
              and
              swap4
              shl(0x80, 0x01)
                /* "contracts/RewardsController.sol":15928:15951  rewardData.depositIndex */
              swap1
              swap4
              div
              and
              swap2
                /* "contracts/RewardsController.sol":15714:15987  function rewardIndexes(Market market, ERC20 reward) external view returns (uint256, uint256, uint256) {... */
              jump
            tag_85:
              0x40
              dup1
              mload
                /* "#utility.yul":8518:8543   */
              swap4
              dup5
              mstore
                /* "#utility.yul":8574:8576   */
              0x20
                /* "#utility.yul":8559:8577   */
              dup5
              add
                /* "#utility.yul":8552:8586   */
              swap3
              swap1
              swap3
              mstore
                /* "#utility.yul":8602:8620   */
              swap1
              dup3
              add
                /* "#utility.yul":8595:8629   */
              mstore
                /* "#utility.yul":8506:8508   */
              0x60
                /* "#utility.yul":8491:8509   */
              add
                /* "contracts/RewardsController.sol":15714:15987  function rewardIndexes(Market market, ERC20 reward) external view returns (uint256, uint256, uint256) {... */
              tag_47
                /* "#utility.yul":8316:8635   */
              jump
                /* "contracts/RewardsController.sol":8959:9210  function distributionTime(Market market, ERC20 reward) external view returns (uint32, uint32, uint32) {... */
            tag_13:
              tag_91
              tag_92
              calldatasize
              0x04
              tag_87
              jump	// in
            tag_92:
              sub(shl(0xa0, 0x01), 0x01)
                /* "contracts/RewardsController.sol":9099:9119  distribution[market] */
              swap2
              dup3
              and
                /* "contracts/RewardsController.sol":9037:9043  uint32 */
              0x00
                /* "contracts/RewardsController.sol":9099:9119  distribution[market] */
              swap1
              dup2
              mstore
                /* "contracts/RewardsController.sol":9099:9111  distribution */
              0x97
                /* "contracts/RewardsController.sol":9099:9119  distribution[market] */
              0x20
              swap1
              dup2
              mstore
              0x40
              dup1
              dup4
              keccak256
                /* "contracts/RewardsController.sol":9099:9135  distribution[market].rewards[reward] */
              swap4
              swap1
              swap5
              and
              dup3
              mstore
              swap2
              swap1
              swap2
              mstore
              keccak256
                /* "contracts/RewardsController.sol":9149:9165  rewardData.start */
              0x08
              add
              sload
              0xffffffff
              dup1
              dup3
              and
              swap3
                /* "contracts/RewardsController.sol":9167:9181  rewardData.end */
              0x0100000000
              dup4
              div
              dup3
              and
              swap3
              shl(0x40, 0x01)
                /* "contracts/RewardsController.sol":9183:9204  rewardData.lastUpdate */
              swap1
              div
              swap1
              swap2
              and
              swap1
                /* "contracts/RewardsController.sol":8959:9210  function distributionTime(Market market, ERC20 reward) external view returns (uint32, uint32, uint32) {... */
              jump
            tag_91:
              0x40
              dup1
              mload
                /* "#utility.yul":8945:8955   */
              0xffffffff
                /* "#utility.yul":8982:8997   */
              swap5
              dup6
              and
                /* "#utility.yul":8964:8998   */
              dup2
              mstore
                /* "#utility.yul":9034:9049   */
              swap3
              dup5
              and
                /* "#utility.yul":9029:9031   */
              0x20
                /* "#utility.yul":9014:9032   */
              dup5
              add
                /* "#utility.yul":9007:9050   */
              mstore
                /* "#utility.yul":9086:9101   */
              swap3
              and
                /* "#utility.yul":9066:9084   */
              swap2
              dup2
              add
                /* "#utility.yul":9059:9102   */
              swap2
              swap1
              swap2
              mstore
                /* "#utility.yul":8923:8925   */
              0x60
                /* "#utility.yul":8908:8926   */
              add
                /* "contracts/RewardsController.sol":8959:9210  function distributionTime(Market market, ERC20 reward) external view returns (uint32, uint32, uint32) {... */
              tag_47
                /* "#utility.yul":8739:9108   */
              jump
                /* "contracts/RewardsController.sol":2942:3656  function handleBorrow(address account) external {... */
            tag_14:
              tag_39
              tag_97
              calldatasize
              0x04
              tag_41
              jump	// in
            tag_97:
              tag_98
              jump	// in
                /* "contracts/RewardsController.sol":3892:4064  function claimAll(address to) external returns (ERC20[] memory rewardsList, uint256[] memory claimedAmounts) {... */
            tag_15:
              tag_99
              tag_100
              calldatasize
              0x04
              tag_41
              jump	// in
            tag_100:
              tag_101
              jump	// in
            tag_99:
              mload(0x40)
              tag_47
              swap3
              swap2
              swap1
              tag_103
              jump	// in
                /* "contracts/RewardsController.sol":1717:1842  function initialize() external initializer {... */
            tag_16:
              tag_39
              tag_105
              jump	// in
                /* "contracts/RewardsController.sol":10174:10344  function allClaimable(address account, ERC20 reward) external view returns (uint256 unclaimedRewards) {... */
            tag_17:
              tag_60
              tag_107
              calldatasize
              0x04
              tag_87
              jump	// in
            tag_107:
              tag_109
              jump	// in
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":3203:3348  function hasRole(bytes32 role, address account) public view virtual override returns (bool) {... */
            tag_18:
              tag_43
              tag_112
              calldatasize
              0x04
              tag_74
              jump	// in
            tag_112:
              tag_113
              jump	// in
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":2324:2373  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */
            tag_19:
              tag_60
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":2369:2373  0x00 */
              0x00
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":2324:2373  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */
              dup2
              jump
                /* "contracts/RewardsController.sol":9455:9902  function allMarketsOperations() public view returns (MarketOperation[] memory marketOps) {... */
            tag_20:
              tag_118
              tag_119
              jump	// in
            tag_118:
              mload(0x40)
              tag_47
              swap2
              swap1
              tag_121
              jump	// in
                /* "contracts/RewardsController.sol":7791:7929  function availableRewardsCount(Market market) external view returns (uint256) {... */
            tag_21:
              tag_60
              tag_123
              calldatasize
              0x04
              tag_41
              jump	// in
            tag_123:
              sub(shl(0xa0, 0x01), 0x01)
                /* "contracts/RewardsController.sol":7882:7902  distribution[market] */
              and
                /* "contracts/RewardsController.sol":7860:7867  uint256 */
              0x00
                /* "contracts/RewardsController.sol":7882:7902  distribution[market] */
              swap1
              dup2
              mstore
                /* "contracts/RewardsController.sol":7882:7894  distribution */
              0x97
                /* "contracts/RewardsController.sol":7882:7902  distribution[market] */
              0x20
              mstore
              0x40
              swap1
              keccak256
                /* "contracts/RewardsController.sol":7882:7924  distribution[market].availableRewardsCount */
              0x02
              add
              sload
              0xff
              and
              swap1
                /* "contracts/RewardsController.sol":7791:7929  function availableRewardsCount(Market market) external view returns (uint256) {... */
              jump
                /* "contracts/RewardsController.sol":9261:9350  function allRewards() external view returns (ERC20[] memory) {... */
            tag_22:
              tag_127
              tag_128
              jump	// in
            tag_127:
              mload(0x40)
              tag_47
              swap2
              swap1
              tag_130
              jump	// in
                /* "contracts/RewardsController.sol":1233:1284  mapping(Market => Distribution) public distribution */
            tag_23:
              tag_131
              tag_132
              calldatasize
              0x04
              tag_41
              jump	// in
            tag_132:
              mstore(0x20, 0x97)
              0x00
              swap1
              dup2
              mstore
              0x40
              swap1
              keccak256
              0x02
              dup2
              add
              sload
              0x03
              swap1
              swap2
              add
              sload
              0xff
              swap1
              swap2
              and
              swap1
              dup3
              jump
            tag_131:
              0x40
              dup1
              mload
                /* "#utility.yul":13147:13151   */
              0xff
                /* "#utility.yul":13135:13152   */
              swap1
              swap4
              and
                /* "#utility.yul":13117:13153   */
              dup4
              mstore
                /* "#utility.yul":13184:13186   */
              0x20
                /* "#utility.yul":13169:13187   */
              dup4
              add
                /* "#utility.yul":13162:13196   */
              swap2
              swap1
              swap2
              mstore
                /* "#utility.yul":13090:13108   */
              add
                /* "contracts/RewardsController.sol":1233:1284  mapping(Market => Distribution) public distribution */
              tag_47
                /* "#utility.yul":12947:13202   */
              jump
                /* "contracts/RewardsController.sol":4461:6393  function claim(... */
            tag_24:
              tag_99
              tag_137
              calldatasize
              0x04
              tag_138
              jump	// in
            tag_137:
              tag_139
              jump	// in
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":5558:5705  function revokeRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {... */
            tag_25:
              tag_39
              tag_142
              calldatasize
              0x04
              tag_74
              jump	// in
            tag_142:
              tag_143
              jump	// in
                /* "contracts/RewardsController.sol":1109:1159  uint256 public constant UTILIZATION_CAP = 1e18 - 1 */
            tag_26:
              tag_60
                /* "contracts/RewardsController.sol":1151:1159  1e18 - 1 */
              0x0de0b6b3a763ffff
                /* "contracts/RewardsController.sol":1109:1159  uint256 public constant UTILIZATION_CAP = 1e18 - 1 */
              dup2
              jump
                /* "contracts/RewardsController.sol":26520:30543  function config(Config[] memory configs) external onlyRole(DEFAULT_ADMIN_ROLE) {... */
            tag_27:
              tag_39
              tag_148
              calldatasize
              0x04
              tag_149
              jump	// in
            tag_148:
              tag_150
              jump	// in
                /* "contracts/RewardsController.sol":1332:1375  mapping(ERC20 => bool) public rewardEnabled */
            tag_28:
              tag_43
              tag_152
              calldatasize
              0x04
              tag_41
              jump	// in
            tag_152:
              mstore(0x20, 0x98)
              0x00
              swap1
              dup2
              mstore
              0x40
              swap1
              keccak256
              sload
              0xff
              and
              dup2
              jump
                /* "contracts/RewardsController.sol":6617:7562  function rewardConfig(Market market, ERC20 reward) external view returns (Config memory) {... */
            tag_29:
              tag_156
              tag_157
              calldatasize
              0x04
              tag_87
              jump	// in
            tag_157:
              tag_158
              jump	// in
            tag_156:
              mload(0x40)
              tag_47
              swap2
              swap1
              tag_160
              jump	// in
                /* "contracts/RewardsController.sol":26206:26352  function withdraw(ERC20 asset, address to) external onlyRole(DEFAULT_ADMIN_ROLE) {... */
            tag_30:
              tag_39
              tag_162
              calldatasize
              0x04
              tag_87
              jump	// in
            tag_162:
              tag_164
              jump	// in
                /* "contracts/RewardsController.sol":18651:18926  function previewAllocation(... */
            tag_31:
              tag_85
              tag_166
              calldatasize
              0x04
              tag_167
              jump	// in
            tag_166:
              tag_168
              jump	// in
                /* "contracts/RewardsController.sol":2141:2644  function handleDeposit(address account) external {... */
            tag_42:
                /* "contracts/RewardsController.sol":2268:2293  new AccountOperation[](1) */
              0x40
              dup1
              mload
                /* "contracts/RewardsController.sol":2291:2292  1 */
              0x01
                /* "contracts/RewardsController.sol":2268:2293  new AccountOperation[](1) */
              dup1
              dup3
              mstore
              dup2
              dup4
              add
              swap1
              swap3
              mstore
                /* "contracts/RewardsController.sol":2219:2229  msg.sender */
              caller
              swap2
                /* "contracts/RewardsController.sol":2196:2209  Market market */
              0x00
              swap2
                /* "contracts/RewardsController.sol":2268:2293  new AccountOperation[](1) */
              swap1
              dup2
              0x20
              add
            tag_175:
              0x40
              dup1
              mload
              dup1
              dup3
              add
              swap1
              swap2
              mstore
              0x00
              dup1
              dup3
              mstore
              0x20
              dup3
              add
              mstore
              dup2
              mstore
              0x20
              add
              swap1
              0x01
              swap1
              sub
              swap1
              dup2
              tag_175
              jumpi
              swap1
              pop
              pop
                /* "contracts/RewardsController.sol":2308:2382  AccountOperation({ operation: false, balance: market.balanceOf(account) }) */
              0x40
              dup1
              mload
              dup1
              dup3
              add
              dup3
              mstore
              0x00
              dup2
              mstore
                /* "contracts/RewardsController.sol":2354:2379  market.balanceOf(account) */
              swap1
              mload
              shl(0xe0, 0x70a08231)
              dup2
              mstore
              sub(shl(0xa0, 0x01), 0x01)
                /* "#utility.yul":1365:1397   */
              dup7
              dup2
              and
                /* "contracts/RewardsController.sol":2354:2379  market.balanceOf(account) */
              0x04
              dup4
              add
                /* "#utility.yul":1347:1398   */
              mstore
                /* "contracts/RewardsController.sol":2236:2293  AccountOperation[] memory ops = new AccountOperation[](1) */
              swap3
              swap4
              pop
                /* "contracts/RewardsController.sol":2308:2382  AccountOperation({ operation: false, balance: market.balanceOf(account) }) */
              swap1
              swap2
              0x20
              dup4
              add
              swap2
                /* "contracts/RewardsController.sol":2354:2370  market.balanceOf */
              swap1
              dup6
              and
              swap1
              0x70a08231
              swap1
                /* "#utility.yul":1320:1338   */
              0x24
              add
                /* "contracts/RewardsController.sol":2354:2379  market.balanceOf(account) */
              0x20
              mload(0x40)
              dup1
              dup4
              sub
              dup2
              dup7
              gas
              staticcall
              iszero
              dup1
              iszero
              tag_181
              jumpi
              returndatasize
              0x00
              dup1
              returndatacopy
              revert(0x00, returndatasize)
            tag_181:
              pop
              pop
              pop
              pop
              mload(0x40)
              returndatasize
              not(0x1f)
              0x1f
              dup3
              add
              and
              dup3
              add
              dup1
              0x40
              mstore
              pop
              dup2
              add
              swap1
              tag_182
              swap2
              swap1
              tag_183
              jump	// in
            tag_182:
                /* "contracts/RewardsController.sol":2308:2382  AccountOperation({ operation: false, balance: market.balanceOf(account) }) */
              dup2
              mstore
              pop
                /* "contracts/RewardsController.sol":2299:2302  ops */
              dup2
                /* "contracts/RewardsController.sol":2303:2304  0 */
              0x00
                /* "contracts/RewardsController.sol":2299:2305  ops[0] */
              dup2
              mload
              dup2
              lt
              tag_185
              jumpi
              tag_185
              tag_186
              jump	// in
            tag_185:
              0x20
              swap1
              dup2
              mul
              swap2
              swap1
              swap2
              add
              dup2
              add
                /* "contracts/RewardsController.sol":2299:2382  ops[0] = AccountOperation({ operation: false, balance: market.balanceOf(account) }) */
              swap2
              swap1
              swap2
              mstore
              sub(shl(0xa0, 0x01), 0x01)
                /* "contracts/RewardsController.sol":2417:2437  distribution[market] */
              dup4
              and
                /* "contracts/RewardsController.sol":2389:2414  Distribution storage dist */
              0x00
                /* "contracts/RewardsController.sol":2417:2437  distribution[market] */
              swap1
              dup2
              mstore
                /* "contracts/RewardsController.sol":2417:2429  distribution */
              0x97
                /* "contracts/RewardsController.sol":2417:2437  distribution[market] */
              swap1
              swap2
              mstore
              0x40
              dup2
              keccak256
                /* "contracts/RewardsController.sol":2463:2489  dist.availableRewardsCount */
              0x02
              dup2
              add
              sload
                /* "contracts/RewardsController.sol":2417:2437  distribution[market] */
              swap1
              swap2
                /* "contracts/RewardsController.sol":2463:2489  dist.availableRewardsCount */
              0xff
              swap1
              swap2
              and
              swap1
                /* "contracts/RewardsController.sol":2495:2640  for (uint128 r = 0; r < available; ) {... */
            tag_187:
                /* "contracts/RewardsController.sol":2519:2528  available */
              dup2
                /* "contracts/RewardsController.sol":2515:2516  r */
              dup2
              sub(shl(0x80, 0x01), 0x01)
                /* "contracts/RewardsController.sol":2515:2528  r < available */
              and
              lt
                /* "contracts/RewardsController.sol":2495:2640  for (uint128 r = 0; r < available; ) {... */
              iszero
              tag_188
              jumpi
              sub(shl(0x80, 0x01), 0x01)
                /* "contracts/RewardsController.sol":2564:2588  dist.availableRewards[r] */
              dup2
              and
              0x00
              swap1
              dup2
              mstore
                /* "contracts/RewardsController.sol":2564:2585  dist.availableRewards */
              0x01
              dup5
              add
                /* "contracts/RewardsController.sol":2564:2588  dist.availableRewards[r] */
              0x20
              mstore
              0x40
              swap1
              keccak256
              sload
                /* "contracts/RewardsController.sol":2540:2594  update(account, market, dist.availableRewards[r], ops) */
              tag_190
              swap1
                /* "contracts/RewardsController.sol":2547:2554  account */
              dup8
              swap1
                /* "contracts/RewardsController.sol":2556:2562  market */
              dup8
              swap1
              sub(shl(0xa0, 0x01), 0x01)
                /* "contracts/RewardsController.sol":2564:2588  dist.availableRewards[r] */
              and
                /* "contracts/RewardsController.sol":2590:2593  ops */
              dup8
                /* "contracts/RewardsController.sol":2540:2546  update */
              tag_191
                /* "contracts/RewardsController.sol":2540:2594  update(account, market, dist.availableRewards[r], ops) */
              jump	// in
            tag_190:
                /* "contracts/RewardsController.sol":2622:2625  ++r */
              0x01
              add
                /* "contracts/RewardsController.sol":2495:2640  for (uint128 r = 0; r < available; ) {... */
              jump(tag_187)
            tag_188:
              pop
                /* "contracts/RewardsController.sol":2190:2644  {... */
              pop
              pop
              pop
              pop
                /* "contracts/RewardsController.sol":2141:2644  function handleDeposit(address account) external {... */
              pop
              jump	// out
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":2903:3116  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */
            tag_46:
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":2988:2992  bool */
              0x00
              not(sub(shl(0xe0, 0x01), 0x01))
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":3011:3069  interfaceId == type(IAccessControlUpgradeable).interfaceId */
              dup3
              and
              shl(0xe0, 0x7965db0b)
              eq
              dup1
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":3011:3109  interfaceId == type(IAccessControlUpgradeable).interfaceId || super.supportsInterface(interfaceId) */
              tag_194
              jumpi
              pop
              shl(0xe0, 0x01ffc9a7)
              not(sub(shl(0xe0, 0x01), 0x01))
                /* "node_modules/@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol":1168:1219  interfaceId == type(IERC165Upgradeable).interfaceId */
              dup4
              and
              eq
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":3073:3109  super.supportsInterface(interfaceId) */
            tag_194:
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":3004:3109  return interfaceId == type(IAccessControlUpgradeable).interfaceId || super.supportsInterface(interfaceId) */
              swap3
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":2903:3116  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */
              swap2
              pop
              pop
              jump	// out
                /* "contracts/RewardsController.sol":1426:1451  ERC20[] public rewardList */
            tag_52:
              0x99
              dup2
              dup2
              sload
              dup2
              lt
              tag_196
              jumpi
              0x00
              dup1
              revert
            tag_196:
              0x00
              swap2
              dup3
              mstore
              0x20
              swap1
              swap2
              keccak256
              add
              sload
              sub(shl(0xa0, 0x01), 0x01)
              and
              swap1
              pop
              dup2
              jump	// out
                /* "contracts/RewardsController.sol":1508:1534  Market[] public marketList */
            tag_57:
              0x9a
              dup2
              dup2
              sload
              dup2
              lt
              tag_196
              jumpi
              0x00
              dup1
              revert
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":5133:5278  function grantRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {... */
            tag_75:
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":4782:4789  bytes32 */
              0x00
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":4808:4820  _roles[role] */
              dup3
              dup2
              mstore
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":4808:4814  _roles */
              0x65
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":4808:4820  _roles[role] */
              0x20
              mstore
              0x40
              swap1
              keccak256
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":4808:4830  _roles[role].adminRole */
              0x01
              add
              sload
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":2802:2818  _checkRole(role) */
              tag_204
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":2813:2817  role */
              dup2
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":2802:2812  _checkRole */
              tag_205
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":2802:2818  _checkRole(role) */
              jump	// in
            tag_204:
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":5246:5271  _grantRole(role, account) */
              tag_207
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":5257:5261  role */
              dup4
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":5263:5270  account */
              dup4
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":5246:5256  _grantRole */
              tag_208
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":5246:5271  _grantRole(role, account) */
              jump	// in
            tag_207:
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":5133:5278  function grantRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {... */
              pop
              pop
              pop
              jump	// out
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":6242:6456  function renounceRole(bytes32 role, address account) public virtual override {... */
            tag_78:
              sub(shl(0xa0, 0x01), 0x01)
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":6337:6360  account == _msgSender() */
              dup2
              and
                /* "node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":929:939  msg.sender */
              caller
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":6337:6360  account == _msgSender() */
              eq
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":6329:6412  require(account == _msgSender(), "AccessControl: can only renounce roles for self") */
              tag_212
              jumpi
              0x00
              dup1
              revert
            tag_212:
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":6423:6449  _revokeRole(role, account) */
              tag_213
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":6435:6439  role */
              dup3
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":6441:6448  account */
              dup3
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":6423:6434  _revokeRole */
              tag_214
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":6423:6449  _revokeRole(role, account) */
              jump	// in
            tag_213:
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":6242:6456  function renounceRole(bytes32 role, address account) public virtual override {... */
              pop
              pop
              jump	// out
                /* "contracts/RewardsController.sol":10733:11934  function claimable(... */
            tag_82:
                /* "contracts/RewardsController.sol":10856:10880  uint256 unclaimedRewards */
              0x00
              dup1
                /* "contracts/RewardsController.sol":10888:11930  for (uint256 i = 0; i < marketOps.length; ) {... */
            tag_216:
                /* "contracts/RewardsController.sol":10912:10921  marketOps */
              dup5
                /* "contracts/RewardsController.sol":10912:10928  marketOps.length */
              mload
                /* "contracts/RewardsController.sol":10908:10909  i */
              dup2
                /* "contracts/RewardsController.sol":10908:10928  i < marketOps.length */
              lt
                /* "contracts/RewardsController.sol":10888:11930  for (uint256 i = 0; i < marketOps.length; ) {... */
              iszero
              tag_217
              jumpi
                /* "contracts/RewardsController.sol":10940:10978  MarketOperation memory marketOperation */
              0x00
                /* "contracts/RewardsController.sol":10981:10990  marketOps */
              dup6
                /* "contracts/RewardsController.sol":10991:10992  i */
              dup3
                /* "contracts/RewardsController.sol":10981:10993  marketOps[i] */
              dup2
              mload
              dup2
              lt
              tag_220
              jumpi
              tag_220
              tag_186
              jump	// in
            tag_220:
              0x20
              swap1
              dup2
              mul
              swap2
              swap1
              swap2
              add
              dup2
              add
              mload
                /* "contracts/RewardsController.sol":11042:11064  marketOperation.market */
              dup1
              mload
              sub(shl(0xa0, 0x01), 0x01)
                /* "contracts/RewardsController.sol":11029:11065  distribution[marketOperation.market] */
              swap1
              dup2
              and
                /* "contracts/RewardsController.sol":11001:11026  Distribution storage dist */
              0x00
                /* "contracts/RewardsController.sol":11029:11065  distribution[marketOperation.market] */
              swap1
              dup2
              mstore
                /* "contracts/RewardsController.sol":11029:11041  distribution */
              0x97
                /* "contracts/RewardsController.sol":11029:11065  distribution[marketOperation.market] */
              dup5
              mstore
              0x40
              dup1
              dup3
              keccak256
                /* "contracts/RewardsController.sol":11105:11125  dist.rewards[reward] */
              swap3
              dup10
              and
              dup3
              mstore
              swap4
              dup3
              swap1
              mstore
              swap3
              dup4
              keccak256
                /* "contracts/RewardsController.sol":11137:11163  dist.availableRewardsCount */
              0x02
              dup3
              add
              sload
                /* "contracts/RewardsController.sol":10981:10993  marketOps[i] */
              swap3
              swap5
              pop
                /* "contracts/RewardsController.sol":11029:11065  distribution[marketOperation.market] */
              swap1
              swap3
                /* "contracts/RewardsController.sol":11105:11125  dist.rewards[reward] */
              swap1
              swap2
                /* "contracts/RewardsController.sol":11137:11163  dist.availableRewardsCount */
              0xff
              and
                /* "contracts/RewardsController.sol":11137:11168  dist.availableRewardsCount == 0 */
              swap1
              sub
                /* "contracts/RewardsController.sol":11133:11242  if (dist.availableRewardsCount == 0) {... */
              tag_221
              jumpi
                /* "contracts/RewardsController.sol":11202:11205  ++i */
              dup4
              0x01
              add
              swap4
              pop
                /* "contracts/RewardsController.sol":11225:11233  continue */
              pop
              pop
              pop
                /* "contracts/RewardsController.sol":10888:11930  for (uint256 i = 0; i < marketOps.length; ) {... */
              jump(tag_216)
                /* "contracts/RewardsController.sol":11133:11242  if (dist.availableRewardsCount == 0) {... */
            tag_221:
                /* "contracts/RewardsController.sol":11316:11338  marketOperation.market */
              dup3
              mload
                /* "contracts/RewardsController.sol":11348:11374  marketOperation.operations */
              0x20
              dup5
              add
              mload
                /* "contracts/RewardsController.sol":11401:11417  rewardData.start */
              0x08
              dup4
              add
              sload
                /* "contracts/RewardsController.sol":11250:11279  AccountOperation[] memory ops */
              0x00
              swap3
                /* "contracts/RewardsController.sol":11282:11425  accountBalanceOperations(... */
              tag_222
              swap3
                /* "contracts/RewardsController.sol":11316:11338  marketOperation.market */
              swap1
              swap2
                /* "contracts/RewardsController.sol":11384:11391  account */
              dup12
              swap1
                /* "contracts/RewardsController.sol":11401:11417  rewardData.start */
              0xffffffff
              and
                /* "contracts/RewardsController.sol":11282:11306  accountBalanceOperations */
              tag_223
                /* "contracts/RewardsController.sol":11282:11425  accountBalanceOperations(... */
              jump	// in
            tag_222:
                /* "contracts/RewardsController.sol":11250:11425  AccountOperation[] memory ops = accountBalanceOperations(... */
              swap1
              pop
                /* "contracts/RewardsController.sol":11433:11448  uint256 balance */
              0x00
              dup1
                /* "contracts/RewardsController.sol":11456:11667  for (uint256 o = 0; o < ops.length; ) {... */
            tag_224:
                /* "contracts/RewardsController.sol":11480:11483  ops */
              dup3
                /* "contracts/RewardsController.sol":11480:11490  ops.length */
              mload
                /* "contracts/RewardsController.sol":11476:11477  o */
              dup2
                /* "contracts/RewardsController.sol":11476:11490  o < ops.length */
              lt
                /* "contracts/RewardsController.sol":11456:11667  for (uint256 o = 0; o < ops.length; ) {... */
              iszero
              tag_225
              jumpi
              sub(shl(0xa0, 0x01), 0x01)
                /* "contracts/RewardsController.sol":11524:11552  rewardData.accounts[account] */
              dup11
              and
              0x00
              swap1
              dup2
              mstore
                /* "contracts/RewardsController.sol":11524:11543  rewardData.accounts */
              0x0b
              dup6
              add
                /* "contracts/RewardsController.sol":11524:11552  rewardData.accounts[account] */
              0x20
              mstore
              0x40
              dup2
              keccak256
                /* "contracts/RewardsController.sol":11553:11559  ops[o] */
              dup5
              mload
                /* "contracts/RewardsController.sol":11524:11552  rewardData.accounts[account] */
              swap1
              swap2
              swap1
                /* "contracts/RewardsController.sol":11553:11556  ops */
              dup6
              swap1
                /* "contracts/RewardsController.sol":11557:11558  o */
              dup5
              swap1
                /* "contracts/RewardsController.sol":11553:11559  ops[o] */
              dup2
              lt
              tag_228
              jumpi
              tag_228
              tag_186
              jump	// in
            tag_228:
              0x20
              swap1
              dup2
              mul
              swap2
              swap1
              swap2
              add
              dup2
              add
              mload
                /* "contracts/RewardsController.sol":11553:11569  ops[o].operation */
              mload
                /* "contracts/RewardsController.sol":11524:11570  rewardData.accounts[account][ops[o].operation] */
              iszero
              iszero
              dup3
              mstore
              dup2
              add
              swap2
              swap1
              swap2
              mstore
              0x40
              add
              0x00
              keccak256
                /* "contracts/RewardsController.sol":11524:11578  rewardData.accounts[account][ops[o].operation].accrued */
              sload
                /* "contracts/RewardsController.sol":11504:11578  unclaimedRewards += rewardData.accounts[account][ops[o].operation].accrued */
              tag_229
              swap1
              shl(0x80, 0x01)
                /* "contracts/RewardsController.sol":11524:11578  rewardData.accounts[account][ops[o].operation].accrued */
              swap1
              div
              sub(shl(0x80, 0x01), 0x01)
              and
                /* "contracts/RewardsController.sol":11504:11578  unclaimedRewards += rewardData.accounts[account][ops[o].operation].accrued */
              dup10
              tag_230
              jump	// in
            tag_229:
              swap8
              pop
                /* "contracts/RewardsController.sol":11599:11602  ops */
              dup3
                /* "contracts/RewardsController.sol":11603:11604  o */
              dup2
                /* "contracts/RewardsController.sol":11599:11605  ops[o] */
              dup2
              mload
              dup2
              lt
              tag_232
              jumpi
              tag_232
              tag_186
              jump	// in
            tag_232:
              0x20
              mul
              0x20
              add
              add
              mload
                /* "contracts/RewardsController.sol":11599:11613  ops[o].balance */
              0x20
              add
              mload
                /* "contracts/RewardsController.sol":11588:11613  balance += ops[o].balance */
              dup3
              tag_233
              swap2
              swap1
              tag_230
              jump	// in
            tag_233:
              swap2
              pop
                /* "contracts/RewardsController.sol":11645:11648  ++o */
              0x01
              add
                /* "contracts/RewardsController.sol":11456:11667  for (uint256 o = 0; o < ops.length; ) {... */
              jump(tag_224)
            tag_225:
              pop
                /* "contracts/RewardsController.sol":11678:11689  balance > 0 */
              dup1
              iszero
                /* "contracts/RewardsController.sol":11674:11885  if (balance > 0) {... */
              tag_234
              jumpi
                /* "contracts/RewardsController.sol":11721:11876  pendingRewards(... */
              tag_235
                /* "contracts/RewardsController.sol":11747:11754  account */
              dup10
                /* "contracts/RewardsController.sol":11766:11772  reward */
              dup10
                /* "contracts/RewardsController.sol":11784:11866  AccountMarketOperation({ market: marketOperation.market, accountOperations: ops }) */
              mload(0x40)
              dup1
              0x40
              add
              0x40
              mstore
              dup1
                /* "contracts/RewardsController.sol":11817:11832  marketOperation */
              dup10
                /* "contracts/RewardsController.sol":11817:11839  marketOperation.market */
              0x00
              add
              mload
              sub(shl(0xa0, 0x01), 0x01)
                /* "contracts/RewardsController.sol":11784:11866  AccountMarketOperation({ market: marketOperation.market, accountOperations: ops }) */
              and
              dup2
              mstore
              0x20
              add
                /* "contracts/RewardsController.sol":11860:11863  ops */
              dup7
                /* "contracts/RewardsController.sol":11784:11866  AccountMarketOperation({ market: marketOperation.market, accountOperations: ops }) */
              dup2
              mstore
              pop
                /* "contracts/RewardsController.sol":11721:11735  pendingRewards */
              tag_236
                /* "contracts/RewardsController.sol":11721:11876  pendingRewards(... */
              jump	// in
            tag_235:
                /* "contracts/RewardsController.sol":11701:11876  unclaimedRewards += pendingRewards(... */
              tag_237
              swap1
              dup9
              tag_230
              jump	// in
            tag_237:
              swap7
              pop
                /* "contracts/RewardsController.sol":11674:11885  if (balance > 0) {... */
            tag_234:
                /* "contracts/RewardsController.sol":11912:11915  ++i */
              dup6
              0x01
              add
              swap6
              pop
                /* "contracts/RewardsController.sol":10932:11930  {... */
              pop
              pop
              pop
              pop
              pop
                /* "contracts/RewardsController.sol":10888:11930  for (uint256 i = 0; i < marketOps.length; ) {... */
              jump(tag_216)
            tag_217:
              pop
                /* "contracts/RewardsController.sol":10733:11934  function claimable(... */
              swap4
              swap3
              pop
              pop
              pop
              jump	// out
                /* "contracts/RewardsController.sol":2942:3656  function handleBorrow(address account) external {... */
            tag_98:
                /* "contracts/RewardsController.sol":3068:3093  new AccountOperation[](1) */
              0x40
              dup1
              mload
                /* "contracts/RewardsController.sol":3091:3092  1 */
              0x01
                /* "contracts/RewardsController.sol":3068:3093  new AccountOperation[](1) */
              dup1
              dup3
              mstore
              dup2
              dup4
              add
              swap1
              swap3
              mstore
                /* "contracts/RewardsController.sol":3019:3029  msg.sender */
              caller
              swap2
                /* "contracts/RewardsController.sol":2996:3009  Market market */
              0x00
              swap2
                /* "contracts/RewardsController.sol":3068:3093  new AccountOperation[](1) */
              swap1
              dup2
              0x20
              add
            tag_244:
              0x40
              dup1
              mload
              dup1
              dup3
              add
              swap1
              swap2
              mstore
              0x00
              dup1
              dup3
              mstore
              0x20
              dup3
              add
              mstore
              dup2
              mstore
              0x20
              add
              swap1
              0x01
              swap1
              sub
              swap1
              dup2
              tag_244
              jumpi
              swap1
              pop
              pop
                /* "contracts/RewardsController.sol":3143:3167  market.accounts(account) */
              mload(0x40)
              shl(0xe1, 0x2f2e0371)
              dup2
              mstore
              sub(shl(0xa0, 0x01), 0x01)
                /* "#utility.yul":1365:1397   */
              dup6
              dup2
              and
                /* "contracts/RewardsController.sol":3143:3167  market.accounts(account) */
              0x04
              dup4
              add
                /* "#utility.yul":1347:1398   */
              mstore
                /* "contracts/RewardsController.sol":3036:3093  AccountOperation[] memory ops = new AccountOperation[](1) */
              swap2
              swap3
              pop
                /* "contracts/RewardsController.sol":3104:3139  uint256 accountFloatingBorrowShares */
              0x00
              swap2
                /* "contracts/RewardsController.sol":3143:3158  market.accounts */
              dup5
              and
              swap1
              0x5e5c06e2
              swap1
                /* "#utility.yul":1320:1338   */
              0x24
              add
                /* "contracts/RewardsController.sol":3143:3167  market.accounts(account) */
              0x60
              mload(0x40)
              dup1
              dup4
              sub
              dup2
              dup7
              gas
              staticcall
              iszero
              dup1
              iszero
              tag_248
              jumpi
              returndatasize
              0x00
              dup1
              returndatacopy
              revert(0x00, returndatasize)
            tag_248:
              pop
              pop
              pop
              pop
              mload(0x40)
              returndatasize
              not(0x1f)
              0x1f
              dup3
              add
              and
              dup3
              add
              dup1
              0x40
              mstore
              pop
              dup2
              add
              swap1
              tag_249
              swap2
              swap1
              tag_250
              jump	// in
            tag_249:
              sub(shl(0xa0, 0x01), 0x01)
                /* "contracts/RewardsController.sol":3202:3222  distribution[market] */
              dup7
              and
                /* "contracts/RewardsController.sol":3174:3199  Distribution storage dist */
              0x00
                /* "contracts/RewardsController.sol":3202:3222  distribution[market] */
              swap1
              dup2
              mstore
                /* "contracts/RewardsController.sol":3202:3214  distribution */
              0x97
                /* "contracts/RewardsController.sol":3202:3222  distribution[market] */
              0x20
              mstore
              0x40
              dup2
              keccak256
                /* "contracts/RewardsController.sol":3248:3274  dist.availableRewardsCount */
              0x02
              dup2
              add
              sload
                /* "contracts/RewardsController.sol":3099:3167  (, , uint256 accountFloatingBorrowShares) = market.accounts(account) */
              swap3
              swap6
              pop
                /* "contracts/RewardsController.sol":3202:3222  distribution[market] */
              swap4
              pop
                /* "contracts/RewardsController.sol":3248:3274  dist.availableRewardsCount */
              0xff
              swap1
              swap2
              and
              swap2
              pop
                /* "contracts/RewardsController.sol":3280:3652  for (uint128 r = 0; r < available; ) {... */
            tag_251:
                /* "contracts/RewardsController.sol":3304:3313  available */
              dup2
                /* "contracts/RewardsController.sol":3300:3301  r */
              dup2
              sub(shl(0x80, 0x01), 0x01)
                /* "contracts/RewardsController.sol":3300:3313  r < available */
              and
              lt
                /* "contracts/RewardsController.sol":3280:3652  for (uint128 r = 0; r < available; ) {... */
              iszero
              tag_252
              jumpi
              sub(shl(0x80, 0x01), 0x01)
                /* "contracts/RewardsController.sol":3340:3364  dist.availableRewards[r] */
              dup2
              and
                /* "contracts/RewardsController.sol":3325:3337  ERC20 reward */
              0x00
                /* "contracts/RewardsController.sol":3340:3364  dist.availableRewards[r] */
              swap1
              dup2
              mstore
                /* "contracts/RewardsController.sol":3340:3361  dist.availableRewards */
              0x01
              dup1
              dup6
              add
                /* "contracts/RewardsController.sol":3340:3364  dist.availableRewards[r] */
              0x20
              swap1
              dup2
              mstore
              0x40
              dup1
              dup5
              keccak256
              sload
                /* "contracts/RewardsController.sol":3381:3550  AccountOperation({... */
              dup2
              mload
              dup1
              dup4
              add
              dup4
              mstore
              swap4
              dup5
              mstore
              sub(shl(0xa0, 0x01), 0x01)
                /* "contracts/RewardsController.sol":3340:3364  dist.availableRewards[r] */
              and
                /* "contracts/RewardsController.sol":3514:3534  dist.rewards[reward] */
              dup1
              dup6
              mstore
              dup8
              dup4
              mstore
              swap4
              keccak256
                /* "contracts/RewardsController.sol":3514:3540  dist.rewards[reward].start */
              0x08
              add
              sload
                /* "contracts/RewardsController.sol":3381:3550  AccountOperation({... */
              swap1
              dup3
              add
              swap1
                /* "contracts/RewardsController.sol":3472:3541  accountFixedBorrowShares(market, account, dist.rewards[reward].start) */
              tag_254
              swap1
                /* "contracts/RewardsController.sol":3497:3503  market */
              dup11
              swap1
                /* "contracts/RewardsController.sol":3505:3512  account */
              dup13
              swap1
                /* "contracts/RewardsController.sol":3514:3540  dist.rewards[reward].start */
              0xffffffff
              and
                /* "contracts/RewardsController.sol":3472:3496  accountFixedBorrowShares */
              tag_255
                /* "contracts/RewardsController.sol":3472:3541  accountFixedBorrowShares(market, account, dist.rewards[reward].start) */
              jump	// in
            tag_254:
                /* "contracts/RewardsController.sol":3442:3541  accountFloatingBorrowShares + accountFixedBorrowShares(market, account, dist.rewards[reward].start) */
              tag_256
              swap1
                /* "contracts/RewardsController.sol":3442:3469  accountFloatingBorrowShares */
              dup9
                /* "contracts/RewardsController.sol":3442:3541  accountFloatingBorrowShares + accountFixedBorrowShares(market, account, dist.rewards[reward].start) */
              tag_230
              jump	// in
            tag_256:
                /* "contracts/RewardsController.sol":3381:3550  AccountOperation({... */
              dup2
              mstore
              pop
                /* "contracts/RewardsController.sol":3372:3375  ops */
              dup7
                /* "contracts/RewardsController.sol":3376:3377  0 */
              0x00
                /* "contracts/RewardsController.sol":3372:3378  ops[0] */
              dup2
              mload
              dup2
              lt
              tag_258
              jumpi
              tag_258
              tag_186
              jump	// in
            tag_258:
              0x20
              mul
              0x20
              add
              add
                /* "contracts/RewardsController.sol":3372:3550  ops[0] = AccountOperation({... */
              dup2
              swap1
              mstore
              pop
                /* "contracts/RewardsController.sol":3558:3606  update(account, Market(msg.sender), reward, ops) */
              tag_259
                /* "contracts/RewardsController.sol":3565:3572  account */
              dup9
                /* "contracts/RewardsController.sol":3581:3591  msg.sender */
              caller
                /* "contracts/RewardsController.sol":3594:3600  reward */
              dup4
                /* "contracts/RewardsController.sol":3602:3605  ops */
              dup10
                /* "contracts/RewardsController.sol":3558:3564  update */
              tag_191
                /* "contracts/RewardsController.sol":3558:3606  update(account, Market(msg.sender), reward, ops) */
              jump	// in
            tag_259:
              pop
                /* "contracts/RewardsController.sol":3634:3637  ++r */
              0x01
              add
                /* "contracts/RewardsController.sol":3280:3652  for (uint128 r = 0; r < available; ) {... */
              jump(tag_251)
            tag_252:
              pop
                /* "contracts/RewardsController.sol":2990:3656  {... */
              pop
              pop
              pop
              pop
              pop
                /* "contracts/RewardsController.sol":2942:3656  function handleBorrow(address account) external {... */
              pop
              jump	// out
                /* "contracts/RewardsController.sol":3892:4064  function claimAll(address to) external returns (ERC20[] memory rewardsList, uint256[] memory claimedAmounts) {... */
            tag_101:
                /* "contracts/RewardsController.sol":3940:3966  ERC20[] memory rewardsList */
              0x60
                /* "contracts/RewardsController.sol":3968:3999  uint256[] memory claimedAmounts */
              dup1
                /* "contracts/RewardsController.sol":4014:4059  claim(allMarketsOperations(), to, rewardList) */
              tag_261
                /* "contracts/RewardsController.sol":4020:4042  allMarketsOperations() */
              tag_262
                /* "contracts/RewardsController.sol":4020:4040  allMarketsOperations */
              tag_119
                /* "contracts/RewardsController.sol":4020:4042  allMarketsOperations() */
              jump	// in
            tag_262:
                /* "contracts/RewardsController.sol":4044:4046  to */
              dup5
                /* "contracts/RewardsController.sol":4048:4058  rewardList */
              0x99
                /* "contracts/RewardsController.sol":4014:4059  claim(allMarketsOperations(), to, rewardList) */
              dup1
              sload
              dup1
              0x20
              mul
              0x20
              add
              mload(0x40)
              swap1
              dup2
              add
              0x40
              mstore
              dup1
              swap3
              swap2
              swap1
              dup2
              dup2
              mstore
              0x20
              add
              dup3
              dup1
              sload
              dup1
              iszero
              tag_263
              jumpi
              0x20
              mul
              dup3
              add
              swap2
              swap1
              0x00
              mstore
              keccak256(0x00, 0x20)
              swap1
            tag_264:
              dup2
              sload
              sub(shl(0xa0, 0x01), 0x01)
              and
              dup2
              mstore
              0x01
              swap1
              swap2
              add
              swap1
              0x20
              add
              dup1
              dup4
              gt
              tag_264
              jumpi
            tag_263:
              pop
              pop
              pop
              pop
              pop
                /* "contracts/RewardsController.sol":4014:4019  claim */
              tag_139
                /* "contracts/RewardsController.sol":4014:4059  claim(allMarketsOperations(), to, rewardList) */
              jump	// in
            tag_261:
                /* "contracts/RewardsController.sol":4007:4059  return claim(allMarketsOperations(), to, rewardList) */
              swap2
              pop
              swap2
              pop
                /* "contracts/RewardsController.sol":3892:4064  function claimAll(address to) external returns (ERC20[] memory rewardsList, uint256[] memory claimedAmounts) {... */
              swap2
              pop
              swap2
              jump	// out
                /* "contracts/RewardsController.sol":1717:1842  function initialize() external initializer {... */
            tag_105:
                /* "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":3268:3287  bool isTopLevelCall */
              0x00
                /* "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":3291:3304  _initializing */
              sload
              0x0100
              swap1
              div
              0xff
              and
                /* "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":3290:3304  !_initializing */
              iszero
              dup1
                /* "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":3336:3370  isTopLevelCall && _initialized < 1 */
              dup1
              iszero
              tag_266
              jumpi
              pop
                /* "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":3354:3366  _initialized */
              sload(0x00)
                /* "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":3369:3370  1 */
              0x01
                /* "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":3354:3366  _initialized */
              0xff
              swap1
              swap2
              and
                /* "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":3354:3370  _initialized < 1 */
              lt
                /* "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":3336:3370  isTopLevelCall && _initialized < 1 */
            tag_266:
                /* "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":3335:3443  (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1) */
              dup1
              tag_270
              jumpi
              pop
                /* "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":3415:3419  this */
              address
                /* "node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol":1476:1495  account.code.length */
              extcodesize
                /* "node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol":1476:1499  account.code.length > 0 */
              iszero
              dup1
              iszero
                /* "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":3376:3442  !AddressUpgradeable.isContract(address(this)) && _initialized == 1 */
              tag_270
              jumpi
              pop
                /* "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":3425:3437  _initialized */
              and(0xff, sload(0x00))
              0x01
                /* "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":3425:3442  _initialized == 1 */
              eq
                /* "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":3376:3442  !AddressUpgradeable.isContract(address(this)) && _initialized == 1 */
            tag_270:
                /* "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":3314:3515  require(... */
              tag_271
              jumpi
              0x00
              dup1
              revert
            tag_271:
                /* "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":3525:3537  _initialized */
              0x00
                /* "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":3525:3541  _initialized = 1 */
              dup1
              sload
              not(0xff)
              and
                /* "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":3540:3541  1 */
              0x01
                /* "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":3525:3541  _initialized = 1 */
              or
              swap1
              sstore
                /* "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":3551:3616  if (isTopLevelCall) {... */
              dup1
              iszero
              tag_272
              jumpi
                /* "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":3585:3598  _initializing */
              0x00
                /* "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":3585:3605  _initializing = true */
              dup1
              sload
              not(0xff00)
              and
              0x0100
              or
              swap1
              sstore
                /* "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":3551:3616  if (isTopLevelCall) {... */
            tag_272:
                /* "contracts/RewardsController.sol":1766:1788  __AccessControl_init() */
              tag_274
                /* "contracts/RewardsController.sol":1766:1786  __AccessControl_init */
              tag_275
                /* "contracts/RewardsController.sol":1766:1788  __AccessControl_init() */
              jump	// in
            tag_274:
                /* "contracts/RewardsController.sol":1795:1837  _grantRole(DEFAULT_ADMIN_ROLE, msg.sender) */
              tag_276
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":2369:2373  0x00 */
              0x00
                /* "contracts/RewardsController.sol":1826:1836  msg.sender */
              caller
                /* "contracts/RewardsController.sol":1795:1805  _grantRole */
              tag_208
                /* "contracts/RewardsController.sol":1795:1837  _grantRole(DEFAULT_ADMIN_ROLE, msg.sender) */
              jump	// in
            tag_276:
                /* "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":3640:3654  isTopLevelCall */
              dup1
                /* "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":3636:3735  if (isTopLevelCall) {... */
              iszero
              tag_277
              jumpi
                /* "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":3686:3691  false */
              0x00
                /* "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":3670:3691  _initializing = false */
              dup1
              sload
              not(0xff00)
              and
              swap1
              sstore
                /* "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":3710:3724  Initialized(1) */
              mload(0x40)
              0x01
                /* "#utility.yul":21899:21935   */
              dup2
              mstore
                /* "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":3710:3724  Initialized(1) */
              0x7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498
              swap1
                /* "#utility.yul":21887:21889   */
              0x20
                /* "#utility.yul":21872:21890   */
              add
                /* "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":3710:3724  Initialized(1) */
              mload(0x40)
              dup1
              swap2
              sub
              swap1
              log1
                /* "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":3636:3735  if (isTopLevelCall) {... */
            tag_277:
                /* "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":3258:3741  {... */
              pop
                /* "contracts/RewardsController.sol":1717:1842  function initialize() external initializer {... */
              jump	// out
                /* "contracts/RewardsController.sol":10174:10344  function allClaimable(address account, ERC20 reward) external view returns (uint256 unclaimedRewards) {... */
            tag_109:
                /* "contracts/RewardsController.sol":10250:10274  uint256 unclaimedRewards */
              0x00
                /* "contracts/RewardsController.sol":10289:10339  claimable(allMarketsOperations(), account, reward) */
              tag_281
                /* "contracts/RewardsController.sol":10299:10321  allMarketsOperations() */
              tag_282
                /* "contracts/RewardsController.sol":10299:10319  allMarketsOperations */
              tag_119
                /* "contracts/RewardsController.sol":10299:10321  allMarketsOperations() */
              jump	// in
            tag_282:
                /* "contracts/RewardsController.sol":10323:10330  account */
              dup5
                /* "contracts/RewardsController.sol":10332:10338  reward */
              dup5
                /* "contracts/RewardsController.sol":10289:10298  claimable */
              tag_82
                /* "contracts/RewardsController.sol":10289:10339  claimable(allMarketsOperations(), account, reward) */
              jump	// in
            tag_281:
                /* "contracts/RewardsController.sol":10282:10339  return claimable(allMarketsOperations(), account, reward) */
              swap4
                /* "contracts/RewardsController.sol":10174:10344  function allClaimable(address account, ERC20 reward) external view returns (uint256 unclaimedRewards) {... */
              swap3
              pop
              pop
              pop
              jump	// out
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":3203:3348  function hasRole(bytes32 role, address account) public view virtual override returns (bool) {... */
            tag_113:
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":3289:3293  bool */
              0x00
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":3312:3324  _roles[role] */
              swap2
              dup3
              mstore
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":3312:3318  _roles */
              0x65
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":3312:3324  _roles[role] */
              0x20
              swap1
              dup2
              mstore
              0x40
              dup1
              dup5
              keccak256
              sub(shl(0xa0, 0x01), 0x01)
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":3312:3341  _roles[role].members[account] */
              swap4
              swap1
              swap4
              and
              dup5
              mstore
              swap2
              swap1
              mstore
              swap1
              keccak256
              sload
              0xff
              and
              swap1
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":3203:3348  function hasRole(bytes32 role, address account) public view virtual override returns (bool) {... */
              jump	// out
                /* "contracts/RewardsController.sol":9455:9902  function allMarketsOperations() public view returns (MarketOperation[] memory marketOps) {... */
            tag_119:
                /* "contracts/RewardsController.sol":9508:9542  MarketOperation[] memory marketOps */
              0x60
                /* "contracts/RewardsController.sol":9550:9573  Market[] memory markets */
              0x00
                /* "contracts/RewardsController.sol":9576:9586  marketList */
              0x9a
                /* "contracts/RewardsController.sol":9550:9586  Market[] memory markets = marketList */
              dup1
              sload
              dup1
              0x20
              mul
              0x20
              add
              mload(0x40)
              swap1
              dup2
              add
              0x40
              mstore
              dup1
              swap3
              swap2
              swap1
              dup2
              dup2
              mstore
              0x20
              add
              dup3
              dup1
              sload
              dup1
              iszero
              tag_285
              jumpi
              0x20
              mul
              dup3
              add
              swap2
              swap1
              0x00
              mstore
              keccak256(0x00, 0x20)
              swap1
            tag_286:
              dup2
              sload
              sub(shl(0xa0, 0x01), 0x01)
              and
              dup2
              mstore
              0x01
              swap1
              swap2
              add
              swap1
              0x20
              add
              dup1
              dup4
              gt
              tag_286
              jumpi
            tag_285:
              pop
              pop
              pop
              pop
              pop
              swap1
              pop
                /* "contracts/RewardsController.sol":9626:9633  markets */
              dup1
                /* "contracts/RewardsController.sol":9626:9640  markets.length */
              mload
              sub(shl(0x40, 0x01), 0x01)
                /* "contracts/RewardsController.sol":9604:9641  new MarketOperation[](markets.length) */
              dup2
              gt
              iszero
              tag_288
              jumpi
              tag_288
              tag_173
              jump	// in
            tag_288:
              mload(0x40)
              swap1
              dup1
              dup3
              mstore
              dup1
              0x20
              mul
              0x20
              add
              dup3
              add
              0x40
              mstore
              dup1
              iszero
              tag_289
              jumpi
              dup2
              0x20
              add
            tag_290:
              0x40
              dup1
              mload
              dup1
              dup3
              add
              swap1
              swap2
              mstore
              0x00
              dup2
              mstore
              0x60
              0x20
              dup3
              add
              mstore
              dup2
              mstore
              0x20
              add
              swap1
              0x01
              swap1
              sub
              swap1
              dup2
              tag_290
              jumpi
              swap1
              pop
            tag_289:
              pop
                /* "contracts/RewardsController.sol":9592:9641  marketOps = new MarketOperation[](markets.length) */
              swap2
              pop
                /* "contracts/RewardsController.sol":9652:9661  uint256 m */
              0x00
                /* "contracts/RewardsController.sol":9647:9898  for (uint256 m = 0; m < markets.length; ) {... */
            tag_293:
                /* "contracts/RewardsController.sol":9671:9678  markets */
              dup2
                /* "contracts/RewardsController.sol":9671:9685  markets.length */
              mload
                /* "contracts/RewardsController.sol":9667:9668  m */
              dup2
                /* "contracts/RewardsController.sol":9667:9685  m < markets.length */
              lt
                /* "contracts/RewardsController.sol":9647:9898  for (uint256 m = 0; m < markets.length; ) {... */
              iszero
              tag_294
              jumpi
                /* "contracts/RewardsController.sol":9717:9730  new bool[](2) */
              0x40
              dup1
              mload
                /* "contracts/RewardsController.sol":9728:9729  2 */
              0x02
                /* "contracts/RewardsController.sol":9717:9730  new bool[](2) */
              dup1
              dup3
              mstore
              0x60
              dup3
              add
              dup4
              mstore
                /* "contracts/RewardsController.sol":9697:9714  bool[] memory ops */
              0x00
              swap3
                /* "contracts/RewardsController.sol":9717:9730  new bool[](2) */
              0x20
              dup4
              add
              swap1
              dup1
              calldatasize
              dup4
              calldatacopy
              add
              swap1
              pop
              pop
                /* "contracts/RewardsController.sol":9697:9730  bool[] memory ops = new bool[](2) */
              swap1
              pop
                /* "contracts/RewardsController.sol":9747:9751  true */
              0x01
                /* "contracts/RewardsController.sol":9738:9741  ops */
              dup2
                /* "contracts/RewardsController.sol":9742:9743  0 */
              0x00
                /* "contracts/RewardsController.sol":9738:9744  ops[0] */
              dup2
              mload
              dup2
              lt
              tag_300
              jumpi
              tag_300
              tag_186
              jump	// in
            tag_300:
              0x20
              mul
              0x20
              add
              add
                /* "contracts/RewardsController.sol":9738:9751  ops[0] = true */
              swap1
              iszero
              iszero
              swap1
              dup2
              iszero
              iszero
              dup2
              mstore
              pop
              pop
                /* "contracts/RewardsController.sol":9768:9773  false */
              0x00
                /* "contracts/RewardsController.sol":9759:9762  ops */
              dup2
                /* "contracts/RewardsController.sol":9763:9764  1 */
              0x01
                /* "contracts/RewardsController.sol":9759:9765  ops[1] */
              dup2
              mload
              dup2
              lt
              tag_302
              jumpi
              tag_302
              tag_186
              jump	// in
            tag_302:
              0x20
              mul
              0x20
              add
              add
                /* "contracts/RewardsController.sol":9759:9773  ops[1] = false */
              swap1
              iszero
              iszero
              swap1
              dup2
              iszero
              iszero
              dup2
              mstore
              pop
              pop
                /* "contracts/RewardsController.sol":9796:9852  MarketOperation({ market: markets[m], operations: ops }) */
              mload(0x40)
              dup1
              0x40
              add
              0x40
              mstore
              dup1
                /* "contracts/RewardsController.sol":9822:9829  markets */
              dup5
                /* "contracts/RewardsController.sol":9830:9831  m */
              dup5
                /* "contracts/RewardsController.sol":9822:9832  markets[m] */
              dup2
              mload
              dup2
              lt
              tag_304
              jumpi
              tag_304
              tag_186
              jump	// in
            tag_304:
              0x20
              mul
              0x20
              add
              add
              mload
              sub(shl(0xa0, 0x01), 0x01)
                /* "contracts/RewardsController.sol":9796:9852  MarketOperation({ market: markets[m], operations: ops }) */
              and
              dup2
              mstore
              0x20
              add
                /* "contracts/RewardsController.sol":9846:9849  ops */
              dup3
                /* "contracts/RewardsController.sol":9796:9852  MarketOperation({ market: markets[m], operations: ops }) */
              dup2
              mstore
              pop
                /* "contracts/RewardsController.sol":9781:9790  marketOps */
              dup5
                /* "contracts/RewardsController.sol":9791:9792  m */
              dup4
                /* "contracts/RewardsController.sol":9781:9793  marketOps[m] */
              dup2
              mload
              dup2
              lt
              tag_306
              jumpi
              tag_306
              tag_186
              jump	// in
            tag_306:
              0x20
              swap1
              dup2
              mul
              swap2
              swap1
              swap2
              add
              add
                /* "contracts/RewardsController.sol":9781:9852  marketOps[m] = MarketOperation({ market: markets[m], operations: ops }) */
              mstore
              pop
                /* "contracts/RewardsController.sol":9880:9883  ++m */
              0x01
              add
                /* "contracts/RewardsController.sol":9647:9898  for (uint256 m = 0; m < markets.length; ) {... */
              jump(tag_293)
            tag_294:
              pop
                /* "contracts/RewardsController.sol":9544:9902  {... */
              pop
                /* "contracts/RewardsController.sol":9455:9902  function allMarketsOperations() public view returns (MarketOperation[] memory marketOps) {... */
              swap1
              jump	// out
                /* "contracts/RewardsController.sol":9261:9350  function allRewards() external view returns (ERC20[] memory) {... */
            tag_128:
                /* "contracts/RewardsController.sol":9306:9320  ERC20[] memory */
              0x60
                /* "contracts/RewardsController.sol":9335:9345  rewardList */
              0x99
                /* "contracts/RewardsController.sol":9328:9345  return rewardList */
              dup1
              sload
              dup1
              0x20
              mul
              0x20
              add
              mload(0x40)
              swap1
              dup2
              add
              0x40
              mstore
              dup1
              swap3
              swap2
              swap1
              dup2
              dup2
              mstore
              0x20
              add
              dup3
              dup1
              sload
              dup1
              iszero
              tag_309
              jumpi
              0x20
              mul
              dup3
              add
              swap2
              swap1
              0x00
              mstore
              keccak256(0x00, 0x20)
              swap1
            tag_310:
              dup2
              sload
              sub(shl(0xa0, 0x01), 0x01)
              and
              dup2
              mstore
              0x01
              swap1
              swap2
              add
              swap1
              0x20
              add
              dup1
              dup4
              gt
              tag_310
              jumpi
            tag_309:
              pop
              pop
              pop
              pop
              pop
              swap1
              pop
                /* "contracts/RewardsController.sol":9261:9350  function allRewards() external view returns (ERC20[] memory) {... */
              swap1
              jump	// out
                /* "contracts/RewardsController.sol":4461:6393  function claim(... */
            tag_139:
                /* "contracts/RewardsController.sol":4662:4680  rewardsList.length */
              dup1
              mload
                /* "contracts/RewardsController.sol":4584:4598  ERC20[] memory */
              0x60
              swap1
              dup2
              swap1
                /* "contracts/RewardsController.sol":4662:4680  rewardsList.length */
              dup1
              sub(shl(0x40, 0x01), 0x01)
                /* "contracts/RewardsController.sol":4703:4730  new uint256[](rewardsCount) */
              dup2
              gt
              iszero
              tag_313
              jumpi
              tag_313
              tag_173
              jump	// in
            tag_313:
              mload(0x40)
              swap1
              dup1
              dup3
              mstore
              dup1
              0x20
              mul
              0x20
              add
              dup3
              add
              0x40
              mstore
              dup1
              iszero
              tag_314
              jumpi
              dup2
              0x20
              add
              0x20
              dup3
              mul
              dup1
              calldatasize
              dup4
              calldatacopy
              add
              swap1
              pop
            tag_314:
              pop
                /* "contracts/RewardsController.sol":4686:4730  claimedAmounts = new uint256[](rewardsCount) */
              swap2
              pop
                /* "contracts/RewardsController.sol":4741:4750  uint256 i */
              0x00
                /* "contracts/RewardsController.sol":4736:6039  for (uint256 i = 0; i < marketOps.length; ) {... */
            tag_315:
                /* "contracts/RewardsController.sol":4760:4769  marketOps */
              dup7
                /* "contracts/RewardsController.sol":4760:4776  marketOps.length */
              mload
                /* "contracts/RewardsController.sol":4756:4757  i */
              dup2
                /* "contracts/RewardsController.sol":4756:4776  i < marketOps.length */
              lt
                /* "contracts/RewardsController.sol":4736:6039  for (uint256 i = 0; i < marketOps.length; ) {... */
              iszero
              tag_316
              jumpi
                /* "contracts/RewardsController.sol":4788:4826  MarketOperation memory marketOperation */
              0x00
                /* "contracts/RewardsController.sol":4829:4838  marketOps */
              dup8
                /* "contracts/RewardsController.sol":4839:4840  i */
              dup3
                /* "contracts/RewardsController.sol":4829:4841  marketOps[i] */
              dup2
              mload
              dup2
              lt
              tag_319
              jumpi
              tag_319
              tag_186
              jump	// in
            tag_319:
              0x20
              swap1
              dup2
              mul
              swap2
              swap1
              swap2
              add
              dup2
              add
              mload
                /* "contracts/RewardsController.sol":4890:4912  marketOperation.market */
              dup1
              mload
              sub(shl(0xa0, 0x01), 0x01)
                /* "contracts/RewardsController.sol":4877:4913  distribution[marketOperation.market] */
              and
                /* "contracts/RewardsController.sol":4849:4874  Distribution storage dist */
              0x00
                /* "contracts/RewardsController.sol":4877:4913  distribution[marketOperation.market] */
              swap1
              dup2
              mstore
                /* "contracts/RewardsController.sol":4877:4889  distribution */
              0x97
                /* "contracts/RewardsController.sol":4877:4913  distribution[marketOperation.market] */
              swap1
              swap3
              mstore
              0x40
              dup3
              keccak256
                /* "contracts/RewardsController.sol":4948:4974  dist.availableRewardsCount */
              0x02
              dup2
              add
              sload
                /* "contracts/RewardsController.sol":4829:4841  marketOps[i] */
              swap2
              swap4
              pop
                /* "contracts/RewardsController.sol":4877:4913  distribution[marketOperation.market] */
              swap2
                /* "contracts/RewardsController.sol":4948:4974  dist.availableRewardsCount */
              0xff
              swap1
              swap2
              and
              swap1
                /* "contracts/RewardsController.sol":4982:5404  for (uint128 r = 0; r < availableRewards; ) {... */
            tag_320:
                /* "contracts/RewardsController.sol":5006:5022  availableRewards */
              dup2
                /* "contracts/RewardsController.sol":5002:5003  r */
              dup2
              sub(shl(0x80, 0x01), 0x01)
                /* "contracts/RewardsController.sol":5002:5022  r < availableRewards */
              and
              lt
                /* "contracts/RewardsController.sol":4982:5404  for (uint128 r = 0; r < availableRewards; ) {... */
              iszero
              tag_321
              jumpi
                /* "contracts/RewardsController.sol":5076:5098  marketOperation.market */
              dup4
              mload
              sub(shl(0x80, 0x01), 0x01)
                /* "contracts/RewardsController.sol":5110:5134  dist.availableRewards[r] */
              dup3
              and
                /* "contracts/RewardsController.sol":5076:5098  marketOperation.market */
              0x00
                /* "contracts/RewardsController.sol":5110:5134  dist.availableRewards[r] */
              swap1
              dup2
              mstore
                /* "contracts/RewardsController.sol":5110:5131  dist.availableRewards */
              0x01
              dup6
              add
                /* "contracts/RewardsController.sol":5110:5134  dist.availableRewards[r] */
              0x20
              swap1
              dup2
              mstore
              0x40
              dup1
              dup4
              keccak256
              sload
                /* "contracts/RewardsController.sol":5184:5206  marketOperation.market */
              dup9
              mload
                /* "contracts/RewardsController.sol":5220:5246  marketOperation.operations */
              dup4
              dup11
              add
              mload
              sub(shl(0xa0, 0x01), 0x01)
                /* "contracts/RewardsController.sol":5110:5134  dist.availableRewards[r] */
              swap1
              swap3
              and
                /* "contracts/RewardsController.sol":5284:5322  dist.rewards[dist.availableRewards[r]] */
              dup1
              dup7
              mstore
              swap4
              dup10
              swap1
              mstore
              swap2
              swap1
              swap4
              keccak256
                /* "contracts/RewardsController.sol":5284:5328  dist.rewards[dist.availableRewards[r]].start */
              0x08
              add
              sload
                /* "contracts/RewardsController.sol":5036:5350  update(... */
              tag_323
              swap5
                /* "contracts/RewardsController.sol":5054:5064  msg.sender */
              caller
              swap5
                /* "contracts/RewardsController.sol":5076:5098  marketOperation.market */
              swap1
              swap4
                /* "contracts/RewardsController.sol":5110:5134  dist.availableRewards[r] */
              swap3
                /* "contracts/RewardsController.sol":5146:5340  accountBalanceOperations(... */
              tag_324
              swap3
                /* "contracts/RewardsController.sol":5184:5206  marketOperation.market */
              swap1
              swap2
                /* "contracts/RewardsController.sol":5220:5246  marketOperation.operations */
              swap1
                /* "contracts/RewardsController.sol":5054:5064  msg.sender */
              dup7
              swap1
                /* "contracts/RewardsController.sol":5284:5328  dist.rewards[dist.availableRewards[r]].start */
              0xffffffff
              and
                /* "contracts/RewardsController.sol":5146:5170  accountBalanceOperations */
              tag_223
                /* "contracts/RewardsController.sol":5146:5340  accountBalanceOperations(... */
              jump	// in
            tag_324:
                /* "contracts/RewardsController.sol":5036:5042  update */
              tag_191
                /* "contracts/RewardsController.sol":5036:5350  update(... */
              jump	// in
            tag_323:
                /* "contracts/RewardsController.sol":5382:5385  ++r */
              0x01
              add
                /* "contracts/RewardsController.sol":4982:5404  for (uint128 r = 0; r < availableRewards; ) {... */
              jump(tag_320)
            tag_321:
              pop
                /* "contracts/RewardsController.sol":5416:5425  uint256 r */
              0x00
                /* "contracts/RewardsController.sol":5411:5994  for (uint256 r = 0; r < rewardsCount; ) {... */
            tag_325:
                /* "contracts/RewardsController.sol":5435:5447  rewardsCount */
              dup6
                /* "contracts/RewardsController.sol":5431:5432  r */
              dup2
                /* "contracts/RewardsController.sol":5431:5447  r < rewardsCount */
              lt
                /* "contracts/RewardsController.sol":5411:5994  for (uint256 r = 0; r < rewardsCount; ) {... */
              iszero
              tag_326
              jumpi
                /* "contracts/RewardsController.sol":5461:5490  RewardData storage rewardData */
              0x00
                /* "contracts/RewardsController.sol":5493:5497  dist */
              dup4
                /* "contracts/RewardsController.sol":5493:5505  dist.rewards */
              0x00
              add
                /* "contracts/RewardsController.sol":5493:5521  dist.rewards[rewardsList[r]] */
              0x00
                /* "contracts/RewardsController.sol":5506:5517  rewardsList */
              dup12
                /* "contracts/RewardsController.sol":5518:5519  r */
              dup5
                /* "contracts/RewardsController.sol":5506:5520  rewardsList[r] */
              dup2
              mload
              dup2
              lt
              tag_329
              jumpi
              tag_329
              tag_186
              jump	// in
            tag_329:
              0x20
              mul
              0x20
              add
              add
              mload
              sub(shl(0xa0, 0x01), 0x01)
                /* "contracts/RewardsController.sol":5493:5521  dist.rewards[rewardsList[r]] */
              and
              sub(shl(0xa0, 0x01), 0x01)
              and
              dup2
              mstore
              0x20
              add
              swap1
              dup2
              mstore
              0x20
              add
              0x00
              keccak256
                /* "contracts/RewardsController.sol":5461:5521  RewardData storage rewardData = dist.rewards[rewardsList[r]] */
              swap1
              pop
                /* "contracts/RewardsController.sol":5536:5545  uint256 o */
              0x00
                /* "contracts/RewardsController.sol":5531:5941  for (uint256 o = 0; o < marketOperation.operations.length; ) {... */
            tag_330:
                /* "contracts/RewardsController.sol":5555:5570  marketOperation */
              dup6
                /* "contracts/RewardsController.sol":5555:5581  marketOperation.operations */
              0x20
              add
              mload
                /* "contracts/RewardsController.sol":5555:5588  marketOperation.operations.length */
              mload
                /* "contracts/RewardsController.sol":5551:5552  o */
              dup2
                /* "contracts/RewardsController.sol":5551:5588  o < marketOperation.operations.length */
              lt
                /* "contracts/RewardsController.sol":5531:5941  for (uint256 o = 0; o < marketOperation.operations.length; ) {... */
              iszero
              tag_331
              jumpi
                /* "contracts/RewardsController.sol":5647:5657  msg.sender */
              caller
                /* "contracts/RewardsController.sol":5604:5624  uint256 rewardAmount */
              0x00
                /* "contracts/RewardsController.sol":5627:5658  rewardData.accounts[msg.sender] */
              swap1
              dup2
              mstore
                /* "contracts/RewardsController.sol":5627:5646  rewardData.accounts */
              0x0b
              dup4
              add
                /* "contracts/RewardsController.sol":5627:5658  rewardData.accounts[msg.sender] */
              0x20
              swap1
              dup2
              mstore
              0x40
              dup3
              keccak256
                /* "contracts/RewardsController.sol":5659:5685  marketOperation.operations */
              swap1
              dup9
              add
              mload
                /* "contracts/RewardsController.sol":5659:5688  marketOperation.operations[o] */
              dup1
              mload
                /* "contracts/RewardsController.sol":5604:5624  uint256 rewardAmount */
              dup4
              swap2
                /* "contracts/RewardsController.sol":5659:5685  marketOperation.operations */
              swap1
                /* "contracts/RewardsController.sol":5686:5687  o */
              dup6
              swap1
                /* "contracts/RewardsController.sol":5659:5688  marketOperation.operations[o] */
              dup2
              lt
              tag_334
              jumpi
              tag_334
              tag_186
              jump	// in
            tag_334:
              0x20
              swap1
              dup2
              mul
              swap2
              swap1
              swap2
              add
              dup2
              add
              mload
                /* "contracts/RewardsController.sol":5627:5689  rewardData.accounts[msg.sender][marketOperation.operations[o]] */
              iszero
              iszero
              dup3
              mstore
              dup2
              add
              swap2
              swap1
              swap2
              mstore
              0x40
              add
              0x00
              keccak256
                /* "contracts/RewardsController.sol":5627:5697  rewardData.accounts[msg.sender][marketOperation.operations[o]].accrued */
              sload
              shl(0x80, 0x01)
              swap1
              div
              sub(shl(0x80, 0x01), 0x01)
              and
              swap1
              pop
                /* "contracts/RewardsController.sol":5713:5730  rewardAmount != 0 */
              dup1
              iszero
                /* "contracts/RewardsController.sol":5709:5880  if (rewardAmount != 0) {... */
              tag_335
              jumpi
                /* "contracts/RewardsController.sol":5767:5779  rewardAmount */
              dup1
                /* "contracts/RewardsController.sol":5746:5760  claimedAmounts */
              dup11
                /* "contracts/RewardsController.sol":5761:5762  r */
              dup6
                /* "contracts/RewardsController.sol":5746:5763  claimedAmounts[r] */
              dup2
              mload
              dup2
              lt
              tag_337
              jumpi
              tag_337
              tag_186
              jump	// in
            tag_337:
              0x20
              mul
              0x20
              add
              add
                /* "contracts/RewardsController.sol":5746:5779  claimedAmounts[r] += rewardAmount */
              dup2
              dup2
              mload
              tag_338
              swap2
              swap1
              tag_230
              jump	// in
            tag_338:
              swap1
              mstore
              pop
                /* "contracts/RewardsController.sol":5813:5823  msg.sender */
              caller
                /* "contracts/RewardsController.sol":5866:5867  0 */
              0x00
                /* "contracts/RewardsController.sol":5793:5824  rewardData.accounts[msg.sender] */
              swap1
              dup2
              mstore
                /* "contracts/RewardsController.sol":5793:5812  rewardData.accounts */
              0x0b
              dup5
              add
                /* "contracts/RewardsController.sol":5793:5824  rewardData.accounts[msg.sender] */
              0x20
              swap1
              dup2
              mstore
              0x40
              dup3
              keccak256
                /* "contracts/RewardsController.sol":5825:5851  marketOperation.operations */
              swap1
              dup10
              add
              mload
                /* "contracts/RewardsController.sol":5825:5854  marketOperation.operations[o] */
              dup1
              mload
                /* "contracts/RewardsController.sol":5866:5867  0 */
              dup4
              swap2
                /* "contracts/RewardsController.sol":5825:5851  marketOperation.operations */
              swap1
                /* "contracts/RewardsController.sol":5852:5853  o */
              dup7
              swap1
                /* "contracts/RewardsController.sol":5825:5854  marketOperation.operations[o] */
              dup2
              lt
              tag_340
              jumpi
              tag_340
              tag_186
              jump	// in
            tag_340:
              0x20
              swap1
              dup2
              mul
              swap2
              swap1
              swap2
              add
              dup2
              add
              mload
                /* "contracts/RewardsController.sol":5793:5855  rewardData.accounts[msg.sender][marketOperation.operations[o]] */
              iszero
              iszero
              dup3
              mstore
              dup2
              add
              swap2
              swap1
              swap2
              mstore
              0x40
              add
              0x00
              keccak256
                /* "contracts/RewardsController.sol":5793:5867  rewardData.accounts[msg.sender][marketOperation.operations[o]].accrued = 0 */
              dup1
              sload
              sub(shl(0x80, 0x01), 0x01)
              swap3
              dup4
              and
              shl(0x80, 0x01)
              mul
              swap3
              and
              swap2
              swap1
              swap2
              or
              swap1
              sstore
                /* "contracts/RewardsController.sol":5709:5880  if (rewardAmount != 0) {... */
            tag_335:
              pop
                /* "contracts/RewardsController.sol":5915:5918  ++o */
              0x01
              add
                /* "contracts/RewardsController.sol":5531:5941  for (uint256 o = 0; o < marketOperation.operations.length; ) {... */
              jump(tag_330)
            tag_331:
              pop
              pop
                /* "contracts/RewardsController.sol":5972:5975  ++r */
              0x01
              add
                /* "contracts/RewardsController.sol":5411:5994  for (uint256 r = 0; r < rewardsCount; ) {... */
              jump(tag_325)
            tag_326:
              pop
                /* "contracts/RewardsController.sol":6021:6024  ++i */
              dup4
              0x01
              add
              swap4
              pop
                /* "contracts/RewardsController.sol":4780:6039  {... */
              pop
              pop
              pop
                /* "contracts/RewardsController.sol":4736:6039  for (uint256 i = 0; i < marketOps.length; ) {... */
              jump(tag_315)
            tag_316:
              pop
                /* "contracts/RewardsController.sol":6049:6058  uint256 r */
              0x00
                /* "contracts/RewardsController.sol":6044:6347  for (uint256 r = 0; r < rewardsList.length; ) {... */
            tag_341:
                /* "contracts/RewardsController.sol":6068:6079  rewardsList */
              dup5
                /* "contracts/RewardsController.sol":6068:6086  rewardsList.length */
              mload
                /* "contracts/RewardsController.sol":6064:6065  r */
              dup2
                /* "contracts/RewardsController.sol":6064:6086  r < rewardsList.length */
              lt
                /* "contracts/RewardsController.sol":6044:6347  for (uint256 r = 0; r < rewardsList.length; ) {... */
              iszero
              tag_342
              jumpi
                /* "contracts/RewardsController.sol":6098:6119  uint256 claimedAmount */
              0x00
                /* "contracts/RewardsController.sol":6122:6136  claimedAmounts */
              dup4
                /* "contracts/RewardsController.sol":6137:6138  r */
              dup3
                /* "contracts/RewardsController.sol":6122:6139  claimedAmounts[r] */
              dup2
              mload
              dup2
              lt
              tag_345
              jumpi
              tag_345
              tag_186
              jump	// in
            tag_345:
              0x20
              mul
              0x20
              add
              add
              mload
                /* "contracts/RewardsController.sol":6098:6139  uint256 claimedAmount = claimedAmounts[r] */
              swap1
              pop
                /* "contracts/RewardsController.sol":6167:6168  0 */
              0x00
                /* "contracts/RewardsController.sol":6151:6164  claimedAmount */
              dup2
                /* "contracts/RewardsController.sol":6151:6168  claimedAmount > 0 */
              gt
                /* "contracts/RewardsController.sol":6147:6302  if (claimedAmount > 0) {... */
              iszero
              tag_346
              jumpi
                /* "contracts/RewardsController.sol":6180:6226  rewardsList[r].safeTransfer(to, claimedAmount) */
              tag_347
                /* "contracts/RewardsController.sol":6208:6210  to */
              dup8
                /* "contracts/RewardsController.sol":6212:6225  claimedAmount */
              dup3
                /* "contracts/RewardsController.sol":6180:6191  rewardsList */
              dup9
                /* "contracts/RewardsController.sol":6192:6193  r */
              dup6
                /* "contracts/RewardsController.sol":6180:6194  rewardsList[r] */
              dup2
              mload
              dup2
              lt
              tag_349
              jumpi
              tag_349
              tag_186
              jump	// in
            tag_349:
              0x20
              mul
              0x20
              add
              add
              mload
              sub(shl(0xa0, 0x01), 0x01)
                /* "contracts/RewardsController.sol":6180:6207  rewardsList[r].safeTransfer */
              and
              tag_350
              swap1
                /* "contracts/RewardsController.sol":6180:6226  rewardsList[r].safeTransfer(to, claimedAmount) */
              swap3
              swap2
              swap1
              0xffffffff
              and
              jump	// in
            tag_347:
                /* "contracts/RewardsController.sol":6275:6277  to */
              dup7
              sub(shl(0xa0, 0x01), 0x01)
                /* "contracts/RewardsController.sol":6241:6293  Claim(msg.sender, rewardsList[r], to, claimedAmount) */
              and
                /* "contracts/RewardsController.sol":6259:6270  rewardsList */
              dup7
                /* "contracts/RewardsController.sol":6271:6272  r */
              dup4
                /* "contracts/RewardsController.sol":6259:6273  rewardsList[r] */
              dup2
              mload
              dup2
              lt
              tag_352
              jumpi
              tag_352
              tag_186
              jump	// in
            tag_352:
              0x20
              mul
              0x20
              add
              add
              mload
              sub(shl(0xa0, 0x01), 0x01)
                /* "contracts/RewardsController.sol":6241:6293  Claim(msg.sender, rewardsList[r], to, claimedAmount) */
              and
                /* "contracts/RewardsController.sol":6247:6257  msg.sender */
              caller
              sub(shl(0xa0, 0x01), 0x01)
                /* "contracts/RewardsController.sol":6241:6293  Claim(msg.sender, rewardsList[r], to, claimedAmount) */
              and
              0xc1405953cccdad6b442e266c84d66ad671e2534c6584f8e6ef92802f7ad294d5
                /* "contracts/RewardsController.sol":6279:6292  claimedAmount */
              dup5
                /* "contracts/RewardsController.sol":6241:6293  Claim(msg.sender, rewardsList[r], to, claimedAmount) */
              mload(0x40)
              tag_353
              swap2
                /* "#utility.yul":1963:1988   */
              dup2
              mstore
                /* "#utility.yul":1951:1953   */
              0x20
                /* "#utility.yul":1936:1954   */
              add
              swap1
                /* "#utility.yul":1817:1994   */
              jump
                /* "contracts/RewardsController.sol":6241:6293  Claim(msg.sender, rewardsList[r], to, claimedAmount) */
            tag_353:
              mload(0x40)
              dup1
              swap2
              sub
              swap1
              log4
                /* "contracts/RewardsController.sol":6147:6302  if (claimedAmount > 0) {... */
            tag_346:
              pop
                /* "contracts/RewardsController.sol":6329:6332  ++r */
              0x01
              add
                /* "contracts/RewardsController.sol":6044:6347  for (uint256 r = 0; r < rewardsList.length; ) {... */
              jump(tag_341)
            tag_342:
              pop
                /* "contracts/RewardsController.sol":6360:6371  rewardsList */
              swap3
              swap6
                /* "contracts/RewardsController.sol":4461:6393  function claim(... */
              swap1
              swap5
              pop
              swap3
              pop
              pop
              pop
              jump	// out
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":5558:5705  function revokeRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {... */
            tag_143:
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":4782:4789  bytes32 */
              0x00
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":4808:4820  _roles[role] */
              dup3
              dup2
              mstore
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":4808:4814  _roles */
              0x65
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":4808:4820  _roles[role] */
              0x20
              mstore
              0x40
              swap1
              keccak256
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":4808:4830  _roles[role].adminRole */
              0x01
              add
              sload
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":2802:2818  _checkRole(role) */
              tag_356
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":2813:2817  role */
              dup2
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":2802:2812  _checkRole */
              tag_205
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":2802:2818  _checkRole(role) */
              jump	// in
            tag_356:
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":5672:5698  _revokeRole(role, account) */
              tag_207
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":5684:5688  role */
              dup4
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":5690:5697  account */
              dup4
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":5672:5683  _revokeRole */
              tag_214
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":5672:5698  _revokeRole(role, account) */
              jump	// in
                /* "contracts/RewardsController.sol":26520:30543  function config(Config[] memory configs) external onlyRole(DEFAULT_ADMIN_ROLE) {... */
            tag_150:
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":2369:2373  0x00 */
              0x00
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":2802:2818  _checkRole(role) */
              tag_360
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":2369:2373  0x00 */
              dup2
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":2802:2812  _checkRole */
              tag_205
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":2802:2818  _checkRole(role) */
              jump	// in
            tag_360:
                /* "contracts/RewardsController.sol":26610:26619  uint256 i */
              0x00
                /* "contracts/RewardsController.sol":26605:30539  for (uint256 i = 0; i < configs.length; ) {... */
            tag_362:
                /* "contracts/RewardsController.sol":26629:26636  configs */
              dup3
                /* "contracts/RewardsController.sol":26629:26643  configs.length */
              mload
                /* "contracts/RewardsController.sol":26625:26626  i */
              dup2
                /* "contracts/RewardsController.sol":26625:26643  i < configs.length */
              lt
                /* "contracts/RewardsController.sol":26605:30539  for (uint256 i = 0; i < configs.length; ) {... */
              iszero
              tag_207
              jumpi
                /* "contracts/RewardsController.sol":26788:26792  1e18 */
              0x0de0b6b3a7640000
                /* "contracts/RewardsController.sol":26757:26764  configs */
              dup4
                /* "contracts/RewardsController.sol":26765:26766  i */
              dup3
                /* "contracts/RewardsController.sol":26757:26767  configs[i] */
              dup2
              mload
              dup2
              lt
              tag_366
              jumpi
              tag_366
              tag_186
              jump	// in
            tag_366:
              0x20
              mul
              0x20
              add
              add
              mload
                /* "contracts/RewardsController.sol":26757:26784  configs[i].transitionFactor */
              0x0140
              add
              mload
              sub(shl(0x40, 0x01), 0x01)
                /* "contracts/RewardsController.sol":26757:26792  configs[i].transitionFactor >= 1e18 */
              and
              lt
                /* "contracts/RewardsController.sol":26753:26816  if (configs[i].transitionFactor >= 1e18) revert InvalidConfig() */
              tag_367
              jumpi
                /* "contracts/RewardsController.sol":26801:26816  InvalidConfig() */
              mload(0x40)
              shl(0xe3, 0x06b7c759)
              dup2
              mstore
              0x04
              add
              mload(0x40)
              dup1
              swap2
              sub
              swap1
              revert
                /* "contracts/RewardsController.sol":26753:26816  if (configs[i].transitionFactor >= 1e18) revert InvalidConfig() */
            tag_367:
                /* "contracts/RewardsController.sol":26933:26940  configs */
              dup3
                /* "contracts/RewardsController.sol":26941:26942  i */
              dup2
                /* "contracts/RewardsController.sol":26933:26943  configs[i] */
              dup2
              mload
              dup2
              lt
              tag_369
              jumpi
              tag_369
              tag_186
              jump	// in
            tag_369:
              0x20
              mul
              0x20
              add
              add
              mload
                /* "contracts/RewardsController.sol":26933:26973  configs[i].depositAllocationWeightFactor */
              0x01a0
              add
              mload
              sub(shl(0x40, 0x01), 0x01)
                /* "contracts/RewardsController.sol":26933:26978  configs[i].depositAllocationWeightFactor == 0 */
              and
                /* "contracts/RewardsController.sol":26977:26978  0 */
              0x00
                /* "contracts/RewardsController.sol":26933:26978  configs[i].depositAllocationWeightFactor == 0 */
              sub
                /* "contracts/RewardsController.sol":26929:27002  if (configs[i].depositAllocationWeightFactor == 0) revert InvalidConfig() */
              tag_370
              jumpi
                /* "contracts/RewardsController.sol":26987:27002  InvalidConfig() */
              mload(0x40)
              shl(0xe3, 0x06b7c759)
              dup2
              mstore
              0x04
              add
              mload(0x40)
              dup1
              swap2
              sub
              swap1
              revert
                /* "contracts/RewardsController.sol":26929:27002  if (configs[i].depositAllocationWeightFactor == 0) revert InvalidConfig() */
            tag_370:
                /* "contracts/RewardsController.sol":27011:27036  Distribution storage dist */
              0x00
                /* "contracts/RewardsController.sol":27039:27051  distribution */
              0x97
                /* "contracts/RewardsController.sol":27039:27070  distribution[configs[i].market] */
              0x00
                /* "contracts/RewardsController.sol":27052:27059  configs */
              dup6
                /* "contracts/RewardsController.sol":27060:27061  i */
              dup5
                /* "contracts/RewardsController.sol":27052:27062  configs[i] */
              dup2
              mload
              dup2
              lt
              tag_372
              jumpi
              tag_372
              tag_186
              jump	// in
            tag_372:
              0x20
              mul
              0x20
              add
              add
              mload
                /* "contracts/RewardsController.sol":27052:27069  configs[i].market */
              0x00
              add
              mload
              sub(shl(0xa0, 0x01), 0x01)
                /* "contracts/RewardsController.sol":27039:27070  distribution[configs[i].market] */
              and
              sub(shl(0xa0, 0x01), 0x01)
              and
              dup2
              mstore
              0x20
              add
              swap1
              dup2
              mstore
              0x20
              add
              0x00
              keccak256
                /* "contracts/RewardsController.sol":27011:27070  Distribution storage dist = distribution[configs[i].market] */
              swap1
              pop
                /* "contracts/RewardsController.sol":27078:27107  RewardData storage rewardData */
              0x00
                /* "contracts/RewardsController.sol":27110:27114  dist */
              dup2
                /* "contracts/RewardsController.sol":27110:27122  dist.rewards */
              0x00
              add
                /* "contracts/RewardsController.sol":27110:27141  dist.rewards[configs[i].reward] */
              0x00
                /* "contracts/RewardsController.sol":27123:27130  configs */
              dup7
                /* "contracts/RewardsController.sol":27131:27132  i */
              dup6
                /* "contracts/RewardsController.sol":27123:27133  configs[i] */
              dup2
              mload
              dup2
              lt
              tag_374
              jumpi
              tag_374
              tag_186
              jump	// in
            tag_374:
              0x20
              mul
              0x20
              add
              add
              mload
                /* "contracts/RewardsController.sol":27123:27140  configs[i].reward */
              0x20
              add
              mload
              sub(shl(0xa0, 0x01), 0x01)
                /* "contracts/RewardsController.sol":27110:27141  dist.rewards[configs[i].reward] */
              and
              sub(shl(0xa0, 0x01), 0x01)
              and
              dup2
              mstore
              0x20
              add
              swap1
              dup2
              mstore
              0x20
              add
              0x00
              keccak256
                /* "contracts/RewardsController.sol":27078:27141  RewardData storage rewardData = dist.rewards[configs[i].reward] */
              swap1
              pop
                /* "contracts/RewardsController.sol":27154:27158  dist */
              dup2
                /* "contracts/RewardsController.sol":27154:27167  dist.baseUnit */
              0x03
              add
              sload
                /* "contracts/RewardsController.sol":27171:27172  0 */
              0x00
                /* "contracts/RewardsController.sol":27154:27172  dist.baseUnit == 0 */
              sub
                /* "contracts/RewardsController.sol":27150:27294  if (dist.baseUnit == 0) {... */
              tag_375
              jumpi
                /* "contracts/RewardsController.sol":27251:27261  marketList */
              0x9a
                /* "contracts/RewardsController.sol":27267:27274  configs */
              dup6
                /* "contracts/RewardsController.sol":27275:27276  i */
              dup5
                /* "contracts/RewardsController.sol":27267:27277  configs[i] */
              dup2
              mload
              dup2
              lt
              tag_377
              jumpi
              tag_377
              tag_186
              jump	// in
            tag_377:
              0x20
              swap1
              dup2
              mul
              swap2
              swap1
              swap2
              add
              dup2
              add
              mload
                /* "contracts/RewardsController.sol":27267:27284  configs[i].market */
              mload
                /* "contracts/RewardsController.sol":27251:27285  marketList.push(configs[i].market) */
              dup3
              sload
              0x01
              dup2
              add
              dup5
              sstore
              0x00
              swap4
              dup5
              mstore
              swap2
              swap1
              swap3
              keccak256
              add
              dup1
              sload
              not(sub(shl(0xa0, 0x01), 0x01))
              and
              sub(shl(0xa0, 0x01), 0x01)
              swap1
              swap3
              and
              swap2
              swap1
              swap2
              or
              swap1
              sstore
                /* "contracts/RewardsController.sol":27150:27294  if (dist.baseUnit == 0) {... */
            tag_375:
                /* "contracts/RewardsController.sol":27306:27319  rewardEnabled */
              0x98
                /* "contracts/RewardsController.sol":27306:27338  rewardEnabled[configs[i].reward] */
              0x00
                /* "contracts/RewardsController.sol":27320:27327  configs */
              dup7
                /* "contracts/RewardsController.sol":27328:27329  i */
              dup6
                /* "contracts/RewardsController.sol":27320:27330  configs[i] */
              dup2
              mload
              dup2
              lt
              tag_380
              jumpi
              tag_380
              tag_186
              jump	// in
            tag_380:
              0x20
              swap1
              dup2
              mul
              swap2
              swap1
              swap2
              add
              dup2
              add
              mload
                /* "contracts/RewardsController.sol":27320:27337  configs[i].reward */
              dup2
              add
              mload
              sub(shl(0xa0, 0x01), 0x01)
                /* "contracts/RewardsController.sol":27306:27338  rewardEnabled[configs[i].reward] */
              and
              dup3
              mstore
              dup2
              add
              swap2
              swap1
              swap2
              mstore
              0x40
              add
              0x00
              keccak256
              sload
              0xff
              and
                /* "contracts/RewardsController.sol":27301:27516  if (!rewardEnabled[configs[i].reward]) {... */
              tag_381
              jumpi
                /* "contracts/RewardsController.sol":27459:27463  true */
              0x01
                /* "contracts/RewardsController.sol":27424:27437  rewardEnabled */
              0x98
                /* "contracts/RewardsController.sol":27424:27456  rewardEnabled[configs[i].reward] */
              0x00
                /* "contracts/RewardsController.sol":27438:27445  configs */
              dup8
                /* "contracts/RewardsController.sol":27446:27447  i */
              dup7
                /* "contracts/RewardsController.sol":27438:27448  configs[i] */
              dup2
              mload
              dup2
              lt
              tag_383
              jumpi
              tag_383
              tag_186
              jump	// in
            tag_383:
              0x20
              mul
              0x20
              add
              add
              mload
                /* "contracts/RewardsController.sol":27438:27455  configs[i].reward */
              0x20
              add
              mload
              sub(shl(0xa0, 0x01), 0x01)
                /* "contracts/RewardsController.sol":27424:27456  rewardEnabled[configs[i].reward] */
              and
              sub(shl(0xa0, 0x01), 0x01)
              and
              dup2
              mstore
              0x20
              add
              swap1
              dup2
              mstore
              0x20
              add
              0x00
              keccak256
              0x00
                /* "contracts/RewardsController.sol":27424:27463  rewardEnabled[configs[i].reward] = true */
              0x0100
              exp
              dup2
              sload
              dup2
              0xff
              mul
              not
              and
              swap1
              dup4
              iszero
              iszero
              mul
              or
              swap1
              sstore
              pop
                /* "contracts/RewardsController.sol":27473:27483  rewardList */
              0x99
                /* "contracts/RewardsController.sol":27489:27496  configs */
              dup6
                /* "contracts/RewardsController.sol":27497:27498  i */
              dup5
                /* "contracts/RewardsController.sol":27489:27499  configs[i] */
              dup2
              mload
              dup2
              lt
              tag_385
              jumpi
              tag_385
              tag_186
              jump	// in
            tag_385:
              0x20
              swap1
              dup2
              mul
              swap2
              swap1
              swap2
              add
              dup2
              add
              mload
                /* "contracts/RewardsController.sol":27489:27506  configs[i].reward */
              dup2
              add
              mload
                /* "contracts/RewardsController.sol":27473:27507  rewardList.push(configs[i].reward) */
              dup3
              sload
              0x01
              dup2
              add
              dup5
              sstore
              0x00
              swap4
              dup5
              mstore
              swap2
              swap1
              swap3
              keccak256
              add
              dup1
              sload
              not(sub(shl(0xa0, 0x01), 0x01))
              and
              sub(shl(0xa0, 0x01), 0x01)
              swap1
              swap3
              and
              swap2
              swap1
              swap2
              or
              swap1
              sstore
                /* "contracts/RewardsController.sol":27301:27516  if (!rewardEnabled[configs[i].reward]) {... */
            tag_381:
                /* "contracts/RewardsController.sol":27527:27548  rewardData.lastUpdate */
              0x08
              dup2
              add
              sload
              shl(0x40, 0x01)
              swap1
              div
              0xffffffff
              and
                /* "contracts/RewardsController.sol":27552:27553  0 */
              0x00
                /* "contracts/RewardsController.sol":27527:27553  rewardData.lastUpdate == 0 */
              sub
                /* "contracts/RewardsController.sol":27523:29531  if (rewardData.lastUpdate == 0) {... */
              tag_387
              jumpi
                /* "contracts/RewardsController.sol":27713:27720  configs */
              dup5
                /* "contracts/RewardsController.sol":27721:27722  i */
              dup4
                /* "contracts/RewardsController.sol":27713:27723  configs[i] */
              dup2
              mload
              dup2
              lt
              tag_389
              jumpi
              tag_389
              tag_186
              jump	// in
            tag_389:
              0x20
              swap1
              dup2
              mul
              swap2
              swap1
              swap2
              add
              dup2
              add
              mload
                /* "contracts/RewardsController.sol":27713:27730  configs[i].reward */
              add
              mload
                /* "contracts/RewardsController.sol":27681:27707  dist.availableRewardsCount */
              0x02
              dup4
              add
                /* "contracts/RewardsController.sol":27681:27709  dist.availableRewardsCount++ */
              dup1
              sload
                /* "contracts/RewardsController.sol":27659:27680  dist.availableRewards */
              0x01
              dup6
              add
              swap2
                /* "contracts/RewardsController.sol":27659:27710  dist.availableRewards[dist.availableRewardsCount++] */
              0x00
              swap2
                /* "contracts/RewardsController.sol":27681:27709  dist.availableRewardsCount++ */
              0xff
              and
              swap1
                /* "contracts/RewardsController.sol":27659:27710  dist.availableRewards[dist.availableRewardsCount++] */
              dup3
                /* "contracts/RewardsController.sol":27681:27709  dist.availableRewardsCount++ */
              tag_390
              dup4
              tag_391
              jump	// in
            tag_390:
              swap2
              swap1
              0x0100
              exp
              dup2
              sload
              dup2
              0xff
              mul
              not
              and
              swap1
              dup4
              0xff
              and
              mul
              or
              swap1
              sstore
              pop
                /* "contracts/RewardsController.sol":27659:27710  dist.availableRewards[dist.availableRewardsCount++] */
              0xff
              and
              sub(shl(0x80, 0x01), 0x01)
              and
              dup2
              mstore
              0x20
              add
              swap1
              dup2
              mstore
              0x20
              add
              0x00
              keccak256
              0x00
                /* "contracts/RewardsController.sol":27659:27730  dist.availableRewards[dist.availableRewardsCount++] = configs[i].reward */
              0x0100
              exp
              dup2
              sload
              dup2
              sub(shl(0xa0, 0x01), 0x01)
              mul
              not
              and
              swap1
              dup4
              sub(shl(0xa0, 0x01), 0x01)
              and
              mul
              or
              swap1
              sstore
              pop
                /* "contracts/RewardsController.sol":27762:27769  configs */
              dup5
                /* "contracts/RewardsController.sol":27770:27771  i */
              dup4
                /* "contracts/RewardsController.sol":27762:27772  configs[i] */
              dup2
              mload
              dup2
              lt
              tag_393
              jumpi
              tag_393
              tag_186
              jump	// in
            tag_393:
              0x20
              mul
              0x20
              add
              add
              mload
                /* "contracts/RewardsController.sol":27762:27779  configs[i].market */
              0x00
              add
              mload
              sub(shl(0xa0, 0x01), 0x01)
                /* "contracts/RewardsController.sol":27762:27788  configs[i].market.decimals */
              and
              0x313ce567
                /* "contracts/RewardsController.sol":27762:27790  configs[i].market.decimals() */
              mload(0x40)
              dup2
              0xffffffff
              and
              0xe0
              shl
              dup2
              mstore
              0x04
              add
              0x20
              mload(0x40)
              dup1
              dup4
              sub
              dup2
              dup7
              gas
              staticcall
              iszero
              dup1
              iszero
              tag_395
              jumpi
              returndatasize
              0x00
              dup1
              returndatacopy
              revert(0x00, returndatasize)
            tag_395:
              pop
              pop
              pop
              pop
              mload(0x40)
              returndatasize
              not(0x1f)
              0x1f
              dup3
              add
              and
              dup3
              add
              dup1
              0x40
              mstore
              pop
              dup2
              add
              swap1
              tag_396
              swap2
              swap1
              tag_397
              jump	// in
            tag_396:
                /* "contracts/RewardsController.sol":27756:27790  10 ** configs[i].market.decimals() */
              tag_398
              swap1
                /* "contracts/RewardsController.sol":27756:27758  10 */
              0x0a
                /* "contracts/RewardsController.sol":27756:27790  10 ** configs[i].market.decimals() */
              tag_399
              jump	// in
            tag_398:
                /* "contracts/RewardsController.sol":27740:27753  dist.baseUnit */
              0x03
              dup4
              add
                /* "contracts/RewardsController.sol":27740:27790  dist.baseUnit = 10 ** configs[i].market.decimals() */
              sstore
                /* "contracts/RewardsController.sol":27876:27886  configs[i] */
              dup5
              mload
                /* "contracts/RewardsController.sol":27876:27883  configs */
              dup6
              swap1
                /* "contracts/RewardsController.sol":27884:27885  i */
              dup5
              swap1
                /* "contracts/RewardsController.sol":27876:27886  configs[i] */
              dup2
              lt
              tag_401
              jumpi
              tag_401
              tag_186
              jump	// in
            tag_401:
              0x20
              mul
              0x20
              add
              add
              mload
                /* "contracts/RewardsController.sol":27876:27892  configs[i].start */
              0x60
              add
              mload
                /* "contracts/RewardsController.sol":27857:27867  rewardData */
              dup2
                /* "contracts/RewardsController.sol":27857:27873  rewardData.start */
              0x08
              add
              0x00
                /* "contracts/RewardsController.sol":27857:27892  rewardData.start = configs[i].start */
              0x0100
              exp
              dup2
              sload
              dup2
              0xffffffff
              mul
              not
              and
              swap1
              dup4
              0xffffffff
              and
              mul
              or
              swap1
              sstore
              pop
                /* "contracts/RewardsController.sol":27926:27933  configs */
              dup5
                /* "contracts/RewardsController.sol":27934:27935  i */
              dup4
                /* "contracts/RewardsController.sol":27926:27936  configs[i] */
              dup2
              mload
              dup2
              lt
              tag_403
              jumpi
              tag_403
              tag_186
              jump	// in
            tag_403:
              0x20
              mul
              0x20
              add
              add
              mload
                /* "contracts/RewardsController.sol":27926:27942  configs[i].start */
              0x60
              add
              mload
                /* "contracts/RewardsController.sol":27902:27912  rewardData */
              dup2
                /* "contracts/RewardsController.sol":27902:27923  rewardData.lastUpdate */
              0x08
              add
              0x08
                /* "contracts/RewardsController.sol":27902:27942  rewardData.lastUpdate = configs[i].start */
              0x0100
              exp
              dup2
              sload
              dup2
              0xffffffff
              mul
              not
              and
              swap1
              dup4
              0xffffffff
              and
              mul
              or
              swap1
              sstore
              pop
                /* "contracts/RewardsController.sol":28008:28015  configs */
              dup5
                /* "contracts/RewardsController.sol":28016:28017  i */
              dup4
                /* "contracts/RewardsController.sol":28008:28018  configs[i] */
              dup2
              mload
              dup2
              lt
              tag_405
              jumpi
              tag_405
              tag_186
              jump	// in
            tag_405:
              0x20
              mul
              0x20
              add
              add
              mload
                /* "contracts/RewardsController.sol":28008:28037  configs[i].distributionPeriod */
              0x80
              add
              mload
                /* "contracts/RewardsController.sol":27977:27984  configs */
              dup6
                /* "contracts/RewardsController.sol":27985:27986  i */
              dup5
                /* "contracts/RewardsController.sol":27977:27987  configs[i] */
              dup2
              mload
              dup2
              lt
              tag_407
              jumpi
              tag_407
              tag_186
              jump	// in
            tag_407:
              0x20
              mul
              0x20
              add
              add
              mload
                /* "contracts/RewardsController.sol":27977:28005  configs[i].totalDistribution */
              0xc0
              add
              mload
                /* "contracts/RewardsController.sol":27977:28037  configs[i].totalDistribution / configs[i].distributionPeriod */
              tag_408
              swap2
              swap1
              tag_409
              jump	// in
            tag_408:
                /* "contracts/RewardsController.sol":27952:27974  rewardData.releaseRate */
              0x01
              dup3
              add
                /* "contracts/RewardsController.sol":27952:28037  rewardData.releaseRate = configs[i].totalDistribution / configs[i].distributionPeriod */
              sstore
                /* "contracts/RewardsController.sol":27523:29531  if (rewardData.lastUpdate == 0) {... */
              jump(tag_410)
            tag_387:
                /* "contracts/RewardsController.sol":28077:28093  rewardData.start */
              0x08
              dup2
              add
              sload
                /* "contracts/RewardsController.sol":28229:28242  new bool[](1) */
              0x40
              dup1
              mload
                /* "contracts/RewardsController.sol":28077:28093  rewardData.start */
              0x01
                /* "contracts/RewardsController.sol":28229:28242  new bool[](1) */
              dup1
              dup3
              mstore
              dup2
              dup4
              add
              swap1
              swap3
              mstore
                /* "contracts/RewardsController.sol":28077:28093  rewardData.start */
              0xffffffff
              dup1
              dup5
              and
              swap4
                /* "contracts/RewardsController.sol":28116:28130  rewardData.end */
              0x0100000000
              swap1
              div
              and
              swap2
                /* "contracts/RewardsController.sol":28062:28074  uint32 start */
              0x00
              swap2
                /* "contracts/RewardsController.sol":28229:28242  new bool[](1) */
              swap1
              0x20
              dup1
              dup4
              add
              swap1
              dup1
              calldatasize
              dup4
              calldatacopy
              add
              swap1
              pop
              pop
                /* "contracts/RewardsController.sol":28209:28242  bool[] memory ops = new bool[](1) */
              swap1
              pop
                /* "contracts/RewardsController.sol":28261:28265  true */
              0x01
                /* "contracts/RewardsController.sol":28252:28255  ops */
              dup2
                /* "contracts/RewardsController.sol":28256:28257  0 */
              0x00
                /* "contracts/RewardsController.sol":28252:28258  ops[0] */
              dup2
              mload
              dup2
              lt
              tag_415
              jumpi
              tag_415
              tag_186
              jump	// in
            tag_415:
              0x20
              mul
              0x20
              add
              add
                /* "contracts/RewardsController.sol":28252:28265  ops[0] = true */
              swap1
              iszero
              iszero
              swap1
              dup2
              iszero
              iszero
              dup2
              mstore
              pop
              pop
                /* "contracts/RewardsController.sol":28275:28450  update(... */
              tag_416
                /* "contracts/RewardsController.sol":28301:28302  0 */
              0x00
                /* "contracts/RewardsController.sol":28315:28322  configs */
              dup10
                /* "contracts/RewardsController.sol":28323:28324  i */
              dup9
                /* "contracts/RewardsController.sol":28315:28325  configs[i] */
              dup2
              mload
              dup2
              lt
              tag_418
              jumpi
              tag_418
              tag_186
              jump	// in
            tag_418:
              0x20
              mul
              0x20
              add
              add
              mload
                /* "contracts/RewardsController.sol":28315:28332  configs[i].market */
              0x00
              add
              mload
                /* "contracts/RewardsController.sol":28344:28351  configs */
              dup11
                /* "contracts/RewardsController.sol":28352:28353  i */
              dup10
                /* "contracts/RewardsController.sol":28344:28354  configs[i] */
              dup2
              mload
              dup2
              lt
              tag_420
              jumpi
              tag_420
              tag_186
              jump	// in
            tag_420:
              0x20
              mul
              0x20
              add
              add
              mload
                /* "contracts/RewardsController.sol":28344:28361  configs[i].reward */
              0x20
              add
              mload
                /* "contracts/RewardsController.sol":28373:28440  accountBalanceOperations(configs[i].market, ops, address(0), start) */
              tag_324
                /* "contracts/RewardsController.sol":28398:28405  configs */
              dup13
                /* "contracts/RewardsController.sol":28406:28407  i */
              dup12
                /* "contracts/RewardsController.sol":28398:28408  configs[i] */
              dup2
              mload
              dup2
              lt
              tag_423
              jumpi
              tag_423
              tag_186
              jump	// in
            tag_423:
              0x20
              mul
              0x20
              add
              add
              mload
                /* "contracts/RewardsController.sol":28398:28415  configs[i].market */
              0x00
              add
              mload
                /* "contracts/RewardsController.sol":28417:28420  ops */
              dup7
                /* "contracts/RewardsController.sol":28430:28431  0 */
              0x00
                /* "contracts/RewardsController.sol":28434:28439  start */
              dup11
                /* "contracts/RewardsController.sol":28373:28397  accountBalanceOperations */
              tag_223
                /* "contracts/RewardsController.sol":28373:28440  accountBalanceOperations(configs[i].market, ops, address(0), start) */
              jump	// in
                /* "contracts/RewardsController.sol":28275:28450  update(... */
            tag_416:
                /* "contracts/RewardsController.sol":28522:28525  end */
              dup2
                /* "contracts/RewardsController.sol":28504:28525  block.timestamp < end */
              0xffffffff
              and
                /* "contracts/RewardsController.sol":28504:28519  block.timestamp */
              timestamp
                /* "contracts/RewardsController.sol":28504:28525  block.timestamp < end */
              lt
                /* "contracts/RewardsController.sol":28500:29523  if (block.timestamp < end) {... */
              iszero
              tag_424
              jumpi
                /* "contracts/RewardsController.sol":28539:28555  uint256 released */
              0x00
                /* "contracts/RewardsController.sol":28571:28586  uint256 elapsed */
              dup1
                /* "contracts/RewardsController.sol":28624:28629  start */
              dup5
                /* "contracts/RewardsController.sol":28606:28629  block.timestamp > start */
              0xffffffff
              and
                /* "contracts/RewardsController.sol":28606:28621  block.timestamp */
              timestamp
                /* "contracts/RewardsController.sol":28606:28629  block.timestamp > start */
              gt
                /* "contracts/RewardsController.sol":28602:29066  if (block.timestamp > start) {... */
              iszero
              tag_425
              jumpi
                /* "contracts/RewardsController.sol":28774:28795  rewardData.lastConfig */
              0x08
              dup7
              add
              sload
                /* "contracts/RewardsController.sol":28756:28795  block.timestamp - rewardData.lastConfig */
              tag_426
              swap1
              shl(0x60, 0x01)
                /* "contracts/RewardsController.sol":28774:28795  rewardData.lastConfig */
              swap1
              div
              0xffffffff
              and
                /* "contracts/RewardsController.sol":28756:28771  block.timestamp */
              timestamp
                /* "contracts/RewardsController.sol":28756:28795  block.timestamp - rewardData.lastConfig */
              tag_427
              jump	// in
            tag_426:
                /* "contracts/RewardsController.sol":28716:28726  rewardData */
              dup7
                /* "contracts/RewardsController.sol":28716:28738  rewardData.releaseRate */
              0x01
              add
              sload
                /* "contracts/RewardsController.sol":28716:28796  rewardData.releaseRate *... */
              tag_428
              swap2
              swap1
              tag_429
              jump	// in
            tag_428:
                /* "contracts/RewardsController.sol":28670:28680  rewardData */
              dup7
                /* "contracts/RewardsController.sol":28670:28699  rewardData.lastConfigReleased */
              0x09
              add
              sload
                /* "contracts/RewardsController.sol":28670:28796  rewardData.lastConfigReleased +... */
              tag_430
              swap2
              swap1
              tag_230
              jump	// in
            tag_430:
                /* "contracts/RewardsController.sol":28645:28796  released =... */
              swap2
              pop
                /* "contracts/RewardsController.sol":28820:28843  block.timestamp - start */
              tag_431
              0xffffffff
              dup7
              and
                /* "contracts/RewardsController.sol":28820:28835  block.timestamp */
              timestamp
                /* "contracts/RewardsController.sol":28820:28843  block.timestamp - start */
              tag_427
              jump	// in
            tag_431:
                /* "contracts/RewardsController.sol":28810:28843  elapsed = block.timestamp - start */
              swap1
              pop
                /* "contracts/RewardsController.sol":28893:28901  released */
              dup2
                /* "contracts/RewardsController.sol":28861:28868  configs */
              dup11
                /* "contracts/RewardsController.sol":28869:28870  i */
              dup10
                /* "contracts/RewardsController.sol":28861:28871  configs[i] */
              dup2
              mload
              dup2
              lt
              tag_433
              jumpi
              tag_433
              tag_186
              jump	// in
            tag_433:
              0x20
              mul
              0x20
              add
              add
              mload
                /* "contracts/RewardsController.sol":28861:28889  configs[i].totalDistribution */
              0xc0
              add
              mload
                /* "contracts/RewardsController.sol":28861:28901  configs[i].totalDistribution <= released */
              gt
              iszero
                /* "contracts/RewardsController.sol":28861:28945  configs[i].totalDistribution <= released || configs[i].distributionPeriod <= elapsed */
              dup1
              tag_434
              jumpi
              pop
                /* "contracts/RewardsController.sol":28938:28945  elapsed */
              dup1
                /* "contracts/RewardsController.sol":28905:28912  configs */
              dup11
                /* "contracts/RewardsController.sol":28913:28914  i */
              dup10
                /* "contracts/RewardsController.sol":28905:28915  configs[i] */
              dup2
              mload
              dup2
              lt
              tag_436
              jumpi
              tag_436
              tag_186
              jump	// in
            tag_436:
              0x20
              mul
              0x20
              add
              add
              mload
                /* "contracts/RewardsController.sol":28905:28934  configs[i].distributionPeriod */
              0x80
              add
              mload
                /* "contracts/RewardsController.sol":28905:28945  configs[i].distributionPeriod <= elapsed */
              gt
              iszero
                /* "contracts/RewardsController.sol":28861:28945  configs[i].totalDistribution <= released || configs[i].distributionPeriod <= elapsed */
            tag_434:
                /* "contracts/RewardsController.sol":28857:29000  if (configs[i].totalDistribution <= released || configs[i].distributionPeriod <= elapsed) {... */
              iszero
              tag_437
              jumpi
                /* "contracts/RewardsController.sol":28970:28985  InvalidConfig() */
              mload(0x40)
              shl(0xe3, 0x06b7c759)
              dup2
              mstore
              0x04
              add
              mload(0x40)
              dup1
              swap2
              sub
              swap1
              revert
                /* "contracts/RewardsController.sol":28857:29000  if (configs[i].totalDistribution <= released || configs[i].distributionPeriod <= elapsed) {... */
            tag_437:
                /* "contracts/RewardsController.sol":29013:29042  rewardData.lastConfigReleased */
              0x09
              dup7
              add
                /* "contracts/RewardsController.sol":29013:29053  rewardData.lastConfigReleased = released */
              dup3
              swap1
              sstore
                /* "contracts/RewardsController.sol":28602:29066  if (block.timestamp > start) {... */
            tag_425:
                /* "contracts/RewardsController.sol":29204:29211  elapsed */
              dup1
                /* "contracts/RewardsController.sol":29172:29179  configs */
              dup11
                /* "contracts/RewardsController.sol":29180:29181  i */
              dup10
                /* "contracts/RewardsController.sol":29172:29182  configs[i] */
              dup2
              mload
              dup2
              lt
              tag_439
              jumpi
              tag_439
              tag_186
              jump	// in
            tag_439:
              0x20
              mul
              0x20
              add
              add
              mload
                /* "contracts/RewardsController.sol":29172:29201  configs[i].distributionPeriod */
              0x80
              add
              mload
                /* "contracts/RewardsController.sol":29172:29211  configs[i].distributionPeriod - elapsed */
              tag_440
              swap2
              swap1
              tag_427
              jump	// in
            tag_440:
                /* "contracts/RewardsController.sol":29147:29155  released */
              dup3
                /* "contracts/RewardsController.sol":29116:29123  configs */
              dup12
                /* "contracts/RewardsController.sol":29124:29125  i */
              dup11
                /* "contracts/RewardsController.sol":29116:29126  configs[i] */
              dup2
              mload
              dup2
              lt
              tag_442
              jumpi
              tag_442
              tag_186
              jump	// in
            tag_442:
              0x20
              mul
              0x20
              add
              add
              mload
                /* "contracts/RewardsController.sol":29116:29144  configs[i].totalDistribution */
              0xc0
              add
              mload
                /* "contracts/RewardsController.sol":29116:29155  configs[i].totalDistribution - released */
              tag_443
              swap2
              swap1
              tag_427
              jump	// in
            tag_443:
                /* "contracts/RewardsController.sol":29115:29212  (configs[i].totalDistribution - released) /... */
              tag_444
              swap2
              swap1
              tag_409
              jump	// in
            tag_444:
                /* "contracts/RewardsController.sol":29078:29100  rewardData.releaseRate */
              0x01
              dup8
              add
                /* "contracts/RewardsController.sol":29078:29212  rewardData.releaseRate =... */
              sstore
              pop
                /* "contracts/RewardsController.sol":28500:29523  if (block.timestamp < end) {... */
              tag_448
              swap1
              pop
              jump
            tag_424:
                /* "contracts/RewardsController.sol":29253:29260  configs */
              dup8
                /* "contracts/RewardsController.sol":29261:29262  i */
              dup7
                /* "contracts/RewardsController.sol":29253:29263  configs[i] */
              dup2
              mload
              dup2
              lt
              tag_447
              jumpi
              tag_447
              tag_186
              jump	// in
            tag_447:
              0x20
              swap1
              dup2
              mul
              swap2
              swap1
              swap2
              add
              add
              mload
                /* "contracts/RewardsController.sol":29253:29269  configs[i].start */
              0x60
              add
              mload
                /* "contracts/RewardsController.sol":29233:29249  rewardData.start */
              0x08
              dup6
              add
              sload
                /* "contracts/RewardsController.sol":29233:29269  rewardData.start != configs[i].start */
              0xffffffff
                /* "contracts/RewardsController.sol":29233:29249  rewardData.start */
              swap1
              dup2
              and
                /* "contracts/RewardsController.sol":29233:29269  rewardData.start != configs[i].start */
              swap2
              and
              eq
                /* "contracts/RewardsController.sol":29229:29523  if (rewardData.start != configs[i].start) {... */
              tag_448
              jumpi
                /* "contracts/RewardsController.sol":29302:29309  configs */
              dup8
                /* "contracts/RewardsController.sol":29310:29311  i */
              dup7
                /* "contracts/RewardsController.sol":29302:29312  configs[i] */
              dup2
              mload
              dup2
              lt
              tag_450
              jumpi
              tag_450
              tag_186
              jump	// in
            tag_450:
              0x20
              mul
              0x20
              add
              add
              mload
                /* "contracts/RewardsController.sol":29302:29318  configs[i].start */
              0x60
              add
              mload
                /* "contracts/RewardsController.sol":29283:29293  rewardData */
              dup5
                /* "contracts/RewardsController.sol":29283:29299  rewardData.start */
              0x08
              add
              0x00
                /* "contracts/RewardsController.sol":29283:29318  rewardData.start = configs[i].start */
              0x0100
              exp
              dup2
              sload
              dup2
              0xffffffff
              mul
              not
              and
              swap1
              dup4
              0xffffffff
              and
              mul
              or
              swap1
              sstore
              pop
                /* "contracts/RewardsController.sol":29354:29361  configs */
              dup8
                /* "contracts/RewardsController.sol":29362:29363  i */
              dup7
                /* "contracts/RewardsController.sol":29354:29364  configs[i] */
              dup2
              mload
              dup2
              lt
              tag_452
              jumpi
              tag_452
              tag_186
              jump	// in
            tag_452:
              0x20
              mul
              0x20
              add
              add
              mload
                /* "contracts/RewardsController.sol":29354:29370  configs[i].start */
              0x60
              add
              mload
                /* "contracts/RewardsController.sol":29330:29340  rewardData */
              dup5
                /* "contracts/RewardsController.sol":29330:29351  rewardData.lastUpdate */
              0x08
              add
              0x08
                /* "contracts/RewardsController.sol":29330:29370  rewardData.lastUpdate = configs[i].start */
              0x0100
              exp
              dup2
              sload
              dup2
              0xffffffff
              mul
              not
              and
              swap1
              dup4
              0xffffffff
              and
              mul
              or
              swap1
              sstore
              pop
                /* "contracts/RewardsController.sol":29438:29445  configs */
              dup8
                /* "contracts/RewardsController.sol":29446:29447  i */
              dup7
                /* "contracts/RewardsController.sol":29438:29448  configs[i] */
              dup2
              mload
              dup2
              lt
              tag_454
              jumpi
              tag_454
              tag_186
              jump	// in
            tag_454:
              0x20
              mul
              0x20
              add
              add
              mload
                /* "contracts/RewardsController.sol":29438:29467  configs[i].distributionPeriod */
              0x80
              add
              mload
                /* "contracts/RewardsController.sol":29407:29414  configs */
              dup9
                /* "contracts/RewardsController.sol":29415:29416  i */
              dup8
                /* "contracts/RewardsController.sol":29407:29417  configs[i] */
              dup2
              mload
              dup2
              lt
              tag_456
              jumpi
              tag_456
              tag_186
              jump	// in
            tag_456:
              0x20
              mul
              0x20
              add
              add
              mload
                /* "contracts/RewardsController.sol":29407:29435  configs[i].totalDistribution */
              0xc0
              add
              mload
                /* "contracts/RewardsController.sol":29407:29467  configs[i].totalDistribution / configs[i].distributionPeriod */
              tag_457
              swap2
              swap1
              tag_409
              jump	// in
            tag_457:
                /* "contracts/RewardsController.sol":29382:29404  rewardData.releaseRate */
              0x01
              dup6
              add
                /* "contracts/RewardsController.sol":29382:29467  rewardData.releaseRate = configs[i].totalDistribution / configs[i].distributionPeriod */
              sstore
                /* "contracts/RewardsController.sol":29511:29512  0 */
              0x00
                /* "contracts/RewardsController.sol":29479:29508  rewardData.lastConfigReleased */
              0x09
              dup6
              add
                /* "contracts/RewardsController.sol":29479:29512  rewardData.lastConfigReleased = 0 */
              sstore
                /* "contracts/RewardsController.sol":29229:29523  if (rewardData.start != configs[i].start) {... */
            tag_448:
                /* "contracts/RewardsController.sol":28052:29531  {... */
              pop
              pop
              pop
                /* "contracts/RewardsController.sol":27523:29531  if (rewardData.lastUpdate == 0) {... */
            tag_410:
                /* "contracts/RewardsController.sol":29538:29559  rewardData.lastConfig */
              0x08
              dup2
              add
                /* "contracts/RewardsController.sol":29538:29585  rewardData.lastConfig = uint32(block.timestamp) */
              dup1
              sload
              not(shl(0x60, 0xffffffff))
              and
              shl(0x60, 0x01)
                /* "contracts/RewardsController.sol":29569:29584  block.timestamp */
              timestamp
                /* "contracts/RewardsController.sol":29538:29585  rewardData.lastConfig = uint32(block.timestamp) */
              0xffffffff
              and
              mul
              or
              swap1
              sstore
                /* "contracts/RewardsController.sol":29636:29646  configs[i] */
              dup5
              mload
              dup6
              swap1
                /* "contracts/RewardsController.sol":29644:29645  i */
              dup5
              swap1
                /* "contracts/RewardsController.sol":29636:29646  configs[i] */
              dup2
              lt
              tag_459
              jumpi
              tag_459
              tag_186
              jump	// in
            tag_459:
              0x20
              swap1
              dup2
              mul
              swap2
              swap1
              swap2
              add
              add
              mload
                /* "contracts/RewardsController.sol":29636:29665  configs[i].distributionPeriod */
              0x80
              add
              mload
                /* "contracts/RewardsController.sol":29610:29626  rewardData.start */
              0x08
              dup3
              add
              sload
                /* "contracts/RewardsController.sol":29610:29666  rewardData.start + uint32(configs[i].distributionPeriod) */
              tag_460
              swap2
                /* "contracts/RewardsController.sol":29636:29665  configs[i].distributionPeriod */
              swap1
                /* "contracts/RewardsController.sol":29610:29626  rewardData.start */
              0xffffffff
              and
                /* "contracts/RewardsController.sol":29610:29666  rewardData.start + uint32(configs[i].distributionPeriod) */
              tag_461
              jump	// in
            tag_460:
                /* "contracts/RewardsController.sol":29593:29603  rewardData */
              dup2
                /* "contracts/RewardsController.sol":29593:29607  rewardData.end */
              0x08
              add
              0x04
                /* "contracts/RewardsController.sol":29593:29666  rewardData.end = rewardData.start + uint32(configs[i].distributionPeriod) */
              0x0100
              exp
              dup2
              sload
              dup2
              0xffffffff
              mul
              not
              and
              swap1
              dup4
              0xffffffff
              and
              mul
              or
              swap1
              sstore
              pop
                /* "contracts/RewardsController.sol":29697:29704  configs */
              dup5
                /* "contracts/RewardsController.sol":29705:29706  i */
              dup4
                /* "contracts/RewardsController.sol":29697:29707  configs[i] */
              dup2
              mload
              dup2
              lt
              tag_463
              jumpi
              tag_463
              tag_186
              jump	// in
            tag_463:
              0x20
              mul
              0x20
              add
              add
              mload
                /* "contracts/RewardsController.sol":29697:29717  configs[i].priceFeed */
              0x40
              add
              mload
                /* "contracts/RewardsController.sol":29674:29684  rewardData */
              dup2
                /* "contracts/RewardsController.sol":29674:29694  rewardData.priceFeed */
              0x0a
              add
              0x00
                /* "contracts/RewardsController.sol":29674:29717  rewardData.priceFeed = configs[i].priceFeed */
              0x0100
              exp
              dup2
              sload
              dup2
              sub(shl(0xa0, 0x01), 0x01)
              mul
              not
              and
              swap1
              dup4
              sub(shl(0xa0, 0x01), 0x01)
              and
              mul
              or
              swap1
              sstore
              pop
                /* "contracts/RewardsController.sol":29806:29813  configs */
              dup5
                /* "contracts/RewardsController.sol":29814:29815  i */
              dup4
                /* "contracts/RewardsController.sol":29806:29816  configs[i] */
              dup2
              mload
              dup2
              lt
              tag_465
              jumpi
              tag_465
              tag_186
              jump	// in
            tag_465:
              0x20
              mul
              0x20
              add
              add
              mload
                /* "contracts/RewardsController.sol":29806:29834  configs[i].totalDistribution */
              0xc0
              add
              mload
                /* "contracts/RewardsController.sol":29775:29785  rewardData */
              dup2
                /* "contracts/RewardsController.sol":29775:29803  rewardData.totalDistribution */
              0x02
              add
                /* "contracts/RewardsController.sol":29775:29834  rewardData.totalDistribution = configs[i].totalDistribution */
              dup2
              swap1
              sstore
              pop
                /* "contracts/RewardsController.sol":29866:29873  configs */
              dup5
                /* "contracts/RewardsController.sol":29874:29875  i */
              dup4
                /* "contracts/RewardsController.sol":29866:29876  configs[i] */
              dup2
              mload
              dup2
              lt
              tag_467
              jumpi
              tag_467
              tag_186
              jump	// in
            tag_467:
              0x20
              mul
              0x20
              add
              add
              mload
                /* "contracts/RewardsController.sol":29866:29887  configs[i].targetDebt */
              0xa0
              add
              mload
                /* "contracts/RewardsController.sol":29842:29852  rewardData */
              dup2
                /* "contracts/RewardsController.sol":29842:29863  rewardData.targetDebt */
              0x00
              add
                /* "contracts/RewardsController.sol":29842:29887  rewardData.targetDebt = configs[i].targetDebt */
              dup2
              swap1
              sstore
              pop
                /* "contracts/RewardsController.sol":29928:29935  configs */
              dup5
                /* "contracts/RewardsController.sol":29936:29937  i */
              dup4
                /* "contracts/RewardsController.sol":29928:29938  configs[i] */
              dup2
              mload
              dup2
              lt
              tag_469
              jumpi
              tag_469
              tag_186
              jump	// in
            tag_469:
              0x20
              mul
              0x20
              add
              add
              mload
                /* "contracts/RewardsController.sol":29928:29958  configs[i].undistributedFactor */
              0xe0
              add
              mload
                /* "contracts/RewardsController.sol":29895:29905  rewardData */
              dup2
                /* "contracts/RewardsController.sol":29895:29925  rewardData.undistributedFactor */
              0x03
              add
                /* "contracts/RewardsController.sol":29895:29958  rewardData.undistributedFactor = configs[i].undistributedFactor */
              dup2
              swap1
              sstore
              pop
                /* "contracts/RewardsController.sol":29989:29996  configs */
              dup5
                /* "contracts/RewardsController.sol":29997:29998  i */
              dup4
                /* "contracts/RewardsController.sol":29989:29999  configs[i] */
              dup2
              mload
              dup2
              lt
              tag_471
              jumpi
              tag_471
              tag_186
              jump	// in
            tag_471:
              0x20
              mul
              0x20
              add
              add
              mload
                /* "contracts/RewardsController.sol":29989:30009  configs[i].flipSpeed */
              0x0100
              add
              mload
                /* "contracts/RewardsController.sol":29966:29976  rewardData */
              dup2
                /* "contracts/RewardsController.sol":29966:29986  rewardData.flipSpeed */
              0x05
              add
              0x00
                /* "contracts/RewardsController.sol":29966:30009  rewardData.flipSpeed = configs[i].flipSpeed */
              0x0100
              exp
              dup2
              sload
              dup2
              sub(shl(0x80, 0x01), 0x01)
              mul
              not
              and
              swap1
              dup4
              0x0f
              signextend
              sub(shl(0x80, 0x01), 0x01)
              and
              mul
              or
              swap1
              sstore
              pop
                /* "contracts/RewardsController.sol":30049:30056  configs */
              dup5
                /* "contracts/RewardsController.sol":30057:30058  i */
              dup4
                /* "contracts/RewardsController.sol":30049:30059  configs[i] */
              dup2
              mload
              dup2
              lt
              tag_473
              jumpi
              tag_473
              tag_186
              jump	// in
            tag_473:
              0x20
              mul
              0x20
              add
              add
              mload
                /* "contracts/RewardsController.sol":30049:30078  configs[i].compensationFactor */
              0x0120
              add
              mload
                /* "contracts/RewardsController.sol":30017:30027  rewardData */
              dup2
                /* "contracts/RewardsController.sol":30017:30046  rewardData.compensationFactor */
              0x05
              add
              0x10
                /* "contracts/RewardsController.sol":30017:30078  rewardData.compensationFactor = configs[i].compensationFactor */
              0x0100
              exp
              dup2
              sload
              dup2
              sub(shl(0x40, 0x01), 0x01)
              mul
              not
              and
              swap1
              dup4
              sub(shl(0x40, 0x01), 0x01)
              and
              mul
              or
              swap1
              sstore
              pop
                /* "contracts/RewardsController.sol":30128:30135  configs */
              dup5
                /* "contracts/RewardsController.sol":30136:30137  i */
              dup4
                /* "contracts/RewardsController.sol":30128:30138  configs[i] */
              dup2
              mload
              dup2
              lt
              tag_475
              jumpi
              tag_475
              tag_186
              jump	// in
            tag_475:
              0x20
              mul
              0x20
              add
              add
              mload
                /* "contracts/RewardsController.sol":30128:30167  configs[i].borrowAllocationWeightFactor */
              0x0160
              add
              mload
                /* "contracts/RewardsController.sol":30086:30096  rewardData */
              dup2
                /* "contracts/RewardsController.sol":30086:30125  rewardData.borrowAllocationWeightFactor */
              0x06
              add
              0x00
                /* "contracts/RewardsController.sol":30086:30167  rewardData.borrowAllocationWeightFactor = configs[i].borrowAllocationWeightFactor */
              0x0100
              exp
              dup2
              sload
              dup2
              sub(shl(0x40, 0x01), 0x01)
              mul
              not
              and
              swap1
              dup4
              sub(shl(0x40, 0x01), 0x01)
              and
              mul
              or
              swap1
              sstore
              pop
                /* "contracts/RewardsController.sol":30218:30225  configs */
              dup5
                /* "contracts/RewardsController.sol":30226:30227  i */
              dup4
                /* "contracts/RewardsController.sol":30218:30228  configs[i] */
              dup2
              mload
              dup2
              lt
              tag_477
              jumpi
              tag_477
              tag_186
              jump	// in
            tag_477:
              0x20
              mul
              0x20
              add
              add
              mload
                /* "contracts/RewardsController.sol":30218:30258  configs[i].depositAllocationWeightAddend */
              0x0180
              add
              mload
                /* "contracts/RewardsController.sol":30175:30185  rewardData */
              dup2
                /* "contracts/RewardsController.sol":30175:30215  rewardData.depositAllocationWeightAddend */
              0x06
              add
              0x08
                /* "contracts/RewardsController.sol":30175:30258  rewardData.depositAllocationWeightAddend = configs[i].depositAllocationWeightAddend */
              0x0100
              exp
              dup2
              sload
              dup2
              sub(shl(0x40, 0x01), 0x01)
              mul
              not
              and
              swap1
              dup4
              sub(shl(0x40, 0x01), 0x01)
              and
              mul
              or
              swap1
              sstore
              pop
                /* "contracts/RewardsController.sol":30296:30303  configs */
              dup5
                /* "contracts/RewardsController.sol":30304:30305  i */
              dup4
                /* "contracts/RewardsController.sol":30296:30306  configs[i] */
              dup2
              mload
              dup2
              lt
              tag_479
              jumpi
              tag_479
              tag_186
              jump	// in
            tag_479:
              0x20
              mul
              0x20
              add
              add
              mload
                /* "contracts/RewardsController.sol":30296:30323  configs[i].transitionFactor */
              0x0140
              add
              mload
                /* "contracts/RewardsController.sol":30266:30276  rewardData */
              dup2
                /* "contracts/RewardsController.sol":30266:30293  rewardData.transitionFactor */
              0x05
              add
              0x18
                /* "contracts/RewardsController.sol":30266:30323  rewardData.transitionFactor = configs[i].transitionFactor */
              0x0100
              exp
              dup2
              sload
              dup2
              sub(shl(0x40, 0x01), 0x01)
              mul
              not
              and
              swap1
              dup4
              sub(shl(0x40, 0x01), 0x01)
              and
              mul
              or
              swap1
              sstore
              pop
                /* "contracts/RewardsController.sol":30374:30381  configs */
              dup5
                /* "contracts/RewardsController.sol":30382:30383  i */
              dup4
                /* "contracts/RewardsController.sol":30374:30384  configs[i] */
              dup2
              mload
              dup2
              lt
              tag_481
              jumpi
              tag_481
              tag_186
              jump	// in
            tag_481:
              0x20
              mul
              0x20
              add
              add
              mload
                /* "contracts/RewardsController.sol":30374:30414  configs[i].depositAllocationWeightFactor */
              0x01a0
              add
              mload
                /* "contracts/RewardsController.sol":30331:30341  rewardData */
              dup2
                /* "contracts/RewardsController.sol":30331:30371  rewardData.depositAllocationWeightFactor */
              0x06
              add
              0x10
                /* "contracts/RewardsController.sol":30331:30414  rewardData.depositAllocationWeightFactor = configs[i].depositAllocationWeightFactor */
              0x0100
              exp
              dup2
              sload
              dup2
              sub(shl(0x40, 0x01), 0x01)
              mul
              not
              and
              swap1
              dup4
              sub(shl(0x40, 0x01), 0x01)
              and
              mul
              or
              swap1
              sstore
              pop
                /* "contracts/RewardsController.sol":30463:30470  configs */
              dup5
                /* "contracts/RewardsController.sol":30471:30472  i */
              dup4
                /* "contracts/RewardsController.sol":30463:30473  configs[i] */
              dup2
              mload
              dup2
              lt
              tag_483
              jumpi
              tag_483
              tag_186
              jump	// in
            tag_483:
              0x20
              mul
              0x20
              add
              add
              mload
                /* "contracts/RewardsController.sol":30463:30480  configs[i].reward */
              0x20
              add
              mload
              sub(shl(0xa0, 0x01), 0x01)
                /* "contracts/RewardsController.sol":30428:30493  DistributionSet(configs[i].market, configs[i].reward, configs[i]) */
              and
                /* "contracts/RewardsController.sol":30444:30451  configs */
              dup6
                /* "contracts/RewardsController.sol":30452:30453  i */
              dup5
                /* "contracts/RewardsController.sol":30444:30454  configs[i] */
              dup2
              mload
              dup2
              lt
              tag_485
              jumpi
              tag_485
              tag_186
              jump	// in
            tag_485:
              0x20
              mul
              0x20
              add
              add
              mload
                /* "contracts/RewardsController.sol":30444:30461  configs[i].market */
              0x00
              add
              mload
              sub(shl(0xa0, 0x01), 0x01)
                /* "contracts/RewardsController.sol":30428:30493  DistributionSet(configs[i].market, configs[i].reward, configs[i]) */
              and
              0xbb1f0f9f2e246d18022362060458bdfde9ab9b4e4eb514b800b155df7ea8ecac
                /* "contracts/RewardsController.sol":30482:30489  configs */
              dup8
                /* "contracts/RewardsController.sol":30490:30491  i */
              dup7
                /* "contracts/RewardsController.sol":30482:30492  configs[i] */
              dup2
              mload
              dup2
              lt
              tag_487
              jumpi
              tag_487
              tag_186
              jump	// in
            tag_487:
              0x20
              mul
              0x20
              add
              add
              mload
                /* "contracts/RewardsController.sol":30428:30493  DistributionSet(configs[i].market, configs[i].reward, configs[i]) */
              mload(0x40)
              tag_488
              swap2
              swap1
              tag_160
              jump	// in
            tag_488:
              mload(0x40)
              dup1
              swap2
              sub
              swap1
              log3
              pop
              pop
                /* "contracts/RewardsController.sol":30521:30524  ++i */
              0x01
              add
                /* "contracts/RewardsController.sol":26605:30539  for (uint256 i = 0; i < configs.length; ) {... */
              jump(tag_362)
                /* "contracts/RewardsController.sol":6617:7562  function rewardConfig(Market market, ERC20 reward) external view returns (Config memory) {... */
            tag_158:
              0x40
              dup1
              mload
              0x01c0
              dup2
              add
              dup3
              mstore
              0x00
              dup1
              dup3
              mstore
              0x20
              dup3
              add
              dup2
              swap1
              mstore
              swap2
              dup2
              add
              dup3
              swap1
              mstore
              0x60
              dup2
              add
              dup3
              swap1
              mstore
              0x80
              dup2
              add
              dup3
              swap1
              mstore
              0xa0
              dup2
              add
              dup3
              swap1
              mstore
              0xc0
              dup2
              add
              dup3
              swap1
              mstore
              0xe0
              dup2
              add
              dup3
              swap1
              mstore
              0x0100
              dup2
              add
              dup3
              swap1
              mstore
              0x0120
              dup2
              add
              dup3
              swap1
              mstore
              0x0140
              dup2
              add
              dup3
              swap1
              mstore
              0x0160
              dup2
              add
              dup3
              swap1
              mstore
              0x0180
              dup2
              add
              dup3
              swap1
              mstore
              0x01a0
              dup2
              add
              swap2
              swap1
              swap2
              mstore
              sub(shl(0xa0, 0x01), 0x01)
                /* "contracts/RewardsController.sol":6744:6764  distribution[market] */
              dup1
              dup5
              and
                /* "contracts/RewardsController.sol":6712:6741  RewardData storage rewardData */
              0x00
                /* "contracts/RewardsController.sol":6744:6764  distribution[market] */
              dup2
              dup2
              mstore
                /* "contracts/RewardsController.sol":6744:6756  distribution */
              0x97
                /* "contracts/RewardsController.sol":6744:6764  distribution[market] */
              0x20
              swap1
              dup2
              mstore
              0x40
              dup1
              dup4
              keccak256
                /* "contracts/RewardsController.sol":6744:6780  distribution[market].rewards[reward] */
              dup8
              dup7
              and
              dup1
              dup6
              mstore
              swap1
              dup4
              mstore
              swap3
              dup2
              swap1
              keccak256
                /* "contracts/RewardsController.sol":6799:7557  Config({... */
              dup2
              mload
              0x01c0
              dup2
              add
              dup4
              mstore
              swap5
              dup6
              mstore
              swap2
              dup5
              add
              swap3
              swap1
              swap3
              mstore
                /* "contracts/RewardsController.sol":6875:6895  rewardData.priceFeed */
              0x0a
              dup2
              add
              sload
              swap1
              swap4
              and
                /* "contracts/RewardsController.sol":6799:7557  Config({... */
              swap1
              dup3
              add
              mstore
                /* "contracts/RewardsController.sol":6912:6928  rewardData.start */
              0x08
              dup3
              add
              sload
              0xffffffff
              dup1
              dup3
              and
                /* "contracts/RewardsController.sol":6799:7557  Config({... */
              0x60
              dup5
              add
              dup2
              swap1
              mstore
              0x80
              dup5
              add
              swap3
                /* "contracts/RewardsController.sol":6958:6991  rewardData.end - rewardData.start */
              tag_492
              swap3
                /* "contracts/RewardsController.sol":6958:6972  rewardData.end */
              0x0100000000
              swap1
              swap2
              div
              and
                /* "contracts/RewardsController.sol":6958:6991  rewardData.end - rewardData.start */
              tag_493
              jump	// in
            tag_492:
                /* "contracts/RewardsController.sol":6799:7557  Config({... */
              0xffffffff
              and
              dup2
              mstore
                /* "contracts/RewardsController.sol":7013:7034  rewardData.targetDebt */
              dup3
              sload
                /* "contracts/RewardsController.sol":6799:7557  Config({... */
              0x20
              dup3
              add
              mstore
                /* "contracts/RewardsController.sol":7063:7091  rewardData.totalDistribution */
              0x02
              dup4
              add
              sload
                /* "contracts/RewardsController.sol":6799:7557  Config({... */
              0x40
              dup3
              add
              mstore
                /* "contracts/RewardsController.sol":7122:7152  rewardData.undistributedFactor */
              0x03
              dup4
              add
              sload
                /* "contracts/RewardsController.sol":6799:7557  Config({... */
              0x60
              dup3
              add
              mstore
                /* "contracts/RewardsController.sol":7173:7193  rewardData.flipSpeed */
              0x05
              dup4
              add
              sload
              0x0f
              dup2
              swap1
              signextend
                /* "contracts/RewardsController.sol":6799:7557  Config({... */
              0x80
              dup4
              add
              mstore
              sub(shl(0x40, 0x01), 0x01)
              shl(0x80, 0x01)
                /* "contracts/RewardsController.sol":7223:7252  rewardData.compensationFactor */
              dup1
              dup4
              div
              dup3
              and
                /* "contracts/RewardsController.sol":6799:7557  Config({... */
              0xa0
              dup6
              add
              mstore
              shl(0xc0, 0x01)
                /* "contracts/RewardsController.sol":7280:7307  rewardData.transitionFactor */
              swap1
              swap3
              div
              dup2
              and
                /* "contracts/RewardsController.sol":6799:7557  Config({... */
              0xc0
              dup5
              add
              mstore
                /* "contracts/RewardsController.sol":7347:7386  rewardData.borrowAllocationWeightFactor */
              0x06
              swap1
              swap5
              add
              sload
              dup1
              dup6
              and
                /* "contracts/RewardsController.sol":6799:7557  Config({... */
              0xe0
              dup5
              add
              mstore
              shl(0x40, 0x01)
                /* "contracts/RewardsController.sol":7427:7467  rewardData.depositAllocationWeightAddend */
              dup2
              div
              dup6
              and
                /* "contracts/RewardsController.sol":7173:7193  rewardData.flipSpeed */
              0x0100
                /* "contracts/RewardsController.sol":6799:7557  Config({... */
              dup5
              add
              mstore
                /* "contracts/RewardsController.sol":7508:7548  rewardData.depositAllocationWeightFactor */
              div
              swap1
              swap3
              and
                /* "contracts/RewardsController.sol":6799:7557  Config({... */
              0x0120
              swap1
              swap3
              add
              swap2
              swap1
              swap2
              mstore
                /* "contracts/RewardsController.sol":6786:7557  return... */
              swap1
              pop
                /* "contracts/RewardsController.sol":6617:7562  function rewardConfig(Market market, ERC20 reward) external view returns (Config memory) {... */
              swap3
              swap2
              pop
              pop
              jump	// out
                /* "contracts/RewardsController.sol":26206:26352  function withdraw(ERC20 asset, address to) external onlyRole(DEFAULT_ADMIN_ROLE) {... */
            tag_164:
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":2369:2373  0x00 */
              0x00
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":2802:2818  _checkRole(role) */
              tag_495
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":2369:2373  0x00 */
              dup2
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":2802:2812  _checkRole */
              tag_205
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":2802:2818  _checkRole(role) */
              jump	// in
            tag_495:
                /* "contracts/RewardsController.sol":26316:26346  asset.balanceOf(address(this)) */
              mload(0x40)
              shl(0xe0, 0x70a08231)
              dup2
              mstore
                /* "contracts/RewardsController.sol":26340:26344  this */
              address
                /* "contracts/RewardsController.sol":26316:26346  asset.balanceOf(address(this)) */
              0x04
              dup3
              add
                /* "#utility.yul":1347:1398   */
              mstore
                /* "contracts/RewardsController.sol":26293:26347  asset.safeTransfer(to, asset.balanceOf(address(this))) */
              tag_207
              swap1
                /* "contracts/RewardsController.sol":26312:26314  to */
              dup4
              swap1
              sub(shl(0xa0, 0x01), 0x01)
                /* "contracts/RewardsController.sol":26316:26331  asset.balanceOf */
              dup7
              and
              swap1
              0x70a08231
              swap1
                /* "#utility.yul":1320:1338   */
              0x24
              add
                /* "contracts/RewardsController.sol":26316:26346  asset.balanceOf(address(this)) */
              0x20
              mload(0x40)
              dup1
              dup4
              sub
              dup2
              dup7
              gas
              staticcall
              iszero
              dup1
              iszero
              tag_500
              jumpi
              returndatasize
              0x00
              dup1
              returndatacopy
              revert(0x00, returndatasize)
            tag_500:
              pop
              pop
              pop
              pop
              mload(0x40)
              returndatasize
              not(0x1f)
              0x1f
              dup3
              add
              and
              dup3
              add
              dup1
              0x40
              mstore
              pop
              dup2
              add
              swap1
              tag_501
              swap2
              swap1
              tag_183
              jump	// in
            tag_501:
              sub(shl(0xa0, 0x01), 0x01)
                /* "contracts/RewardsController.sol":26293:26311  asset.safeTransfer */
              dup7
              and
              swap2
                /* "contracts/RewardsController.sol":26293:26347  asset.safeTransfer(to, asset.balanceOf(address(this))) */
              swap1
                /* "contracts/RewardsController.sol":26293:26311  asset.safeTransfer */
              tag_350
                /* "contracts/RewardsController.sol":26293:26347  asset.safeTransfer(to, asset.balanceOf(address(this))) */
              jump	// in
                /* "contracts/RewardsController.sol":18651:18926  function previewAllocation(... */
            tag_168:
              sub(shl(0xa0, 0x01), 0x01)
                /* "contracts/RewardsController.sol":18865:18885  distribution[market] */
              dup1
              dup5
              and
                /* "contracts/RewardsController.sol":18765:18784  uint256 borrowIndex */
              0x00
                /* "contracts/RewardsController.sol":18865:18885  distribution[market] */
              swap1
              dup2
              mstore
                /* "contracts/RewardsController.sol":18865:18877  distribution */
              0x97
                /* "contracts/RewardsController.sol":18865:18885  distribution[market] */
              0x20
              swap1
              dup2
              mstore
              0x40
              dup1
              dup4
              keccak256
                /* "contracts/RewardsController.sol":18865:18901  distribution[market].rewards[reward] */
              swap4
              dup7
              and
              dup4
              mstore
              swap3
              swap1
              mstore
              swap1
              dup2
              keccak256
                /* "contracts/RewardsController.sol":18765:18784  uint256 borrowIndex */
              dup2
              swap1
              dup2
              swap1
                /* "contracts/RewardsController.sol":18847:18921  previewAllocation(distribution[market].rewards[reward], market, deltaTime) */
              tag_503
              swap1
                /* "contracts/RewardsController.sol":18878:18884  market */
              dup8
                /* "contracts/RewardsController.sol":18911:18920  deltaTime */
              dup7
                /* "contracts/RewardsController.sol":18847:18864  previewAllocation */
              tag_504
                /* "contracts/RewardsController.sol":18847:18921  previewAllocation(distribution[market].rewards[reward], market, deltaTime) */
              jump	// in
            tag_503:
                /* "contracts/RewardsController.sol":18840:18921  return previewAllocation(distribution[market].rewards[reward], market, deltaTime) */
              swap3
              pop
              swap3
              pop
              swap3
              pop
                /* "contracts/RewardsController.sol":18651:18926  function previewAllocation(... */
            tag_502:
              swap4
              pop
              swap4
              pop
              swap4
              swap1
              pop
              jump	// out
                /* "contracts/RewardsController.sol":12270:14285  function update(address account, Market market, ERC20 reward, AccountOperation[] memory ops) internal {... */
            tag_191:
              sub(shl(0xa0, 0x01), 0x01)
                /* "contracts/RewardsController.sol":12397:12417  distribution[market] */
              dup4
              dup2
              and
                /* "contracts/RewardsController.sol":12378:12394  uint256 baseUnit */
              0x00
                /* "contracts/RewardsController.sol":12397:12417  distribution[market] */
              swap1
              dup2
              mstore
                /* "contracts/RewardsController.sol":12397:12409  distribution */
              0x97
                /* "contracts/RewardsController.sol":12397:12417  distribution[market] */
              0x20
              swap1
              dup2
              mstore
              0x40
              dup1
              dup4
              keccak256
                /* "contracts/RewardsController.sol":12397:12426  distribution[market].baseUnit */
              0x03
              dup2
              add
              sload
                /* "contracts/RewardsController.sol":12464:12500  distribution[market].rewards[reward] */
              swap5
              dup8
              and
              dup5
              mstore
              swap1
              swap2
              mstore
              swap1
              keccak256
                /* "contracts/RewardsController.sol":12535:12556  rewardData.lastUpdate */
              0x08
              dup2
              add
              sload
              shl(0x40, 0x01)
              swap1
              div
              0xffffffff
              and
                /* "contracts/RewardsController.sol":12677:12692  block.timestamp */
              timestamp
              dup2
              lt
                /* "contracts/RewardsController.sol":12673:13340  if (block.timestamp > lastUpdate) {... */
              iszero
              tag_506
              jumpi
                /* "contracts/RewardsController.sol":12718:12737  uint256 borrowIndex */
              0x00
              dup1
              dup1
                /* "contracts/RewardsController.sol":12789:12896  previewAllocation(... */
              tag_507
                /* "contracts/RewardsController.sol":12818:12828  rewardData */
              dup6
                /* "contracts/RewardsController.sol":12840:12846  market */
              dup11
                /* "contracts/RewardsController.sol":12858:12886  block.timestamp - lastUpdate */
              tag_508
                /* "contracts/RewardsController.sol":12876:12886  lastUpdate */
              dup8
                /* "contracts/RewardsController.sol":12858:12873  block.timestamp */
              timestamp
                /* "contracts/RewardsController.sol":12858:12886  block.timestamp - lastUpdate */
              tag_427
              jump	// in
            tag_508:
                /* "contracts/RewardsController.sol":12789:12806  previewAllocation */
              tag_504
                /* "contracts/RewardsController.sol":12789:12896  previewAllocation(... */
              jump	// in
            tag_507:
                /* "contracts/RewardsController.sol":12717:12896  (uint256 borrowIndex, uint256 depositIndex, uint256 newUndistributed) = previewAllocation(... */
              swap2
              swap5
              pop
              swap3
              pop
              swap1
              pop
              sub(shl(0x80, 0x01), 0x01)
                /* "contracts/RewardsController.sol":12910:12941  borrowIndex > type(uint128).max */
              dup4
              gt
              dup1
                /* "contracts/RewardsController.sol":12910:12977  borrowIndex > type(uint128).max || depositIndex > type(uint128).max */
              tag_509
              jumpi
              pop
              sub(shl(0x80, 0x01), 0x01)
                /* "contracts/RewardsController.sol":12945:12977  depositIndex > type(uint128).max */
              dup3
              gt
                /* "contracts/RewardsController.sol":12910:12977  borrowIndex > type(uint128).max || depositIndex > type(uint128).max */
            tag_509:
                /* "contracts/RewardsController.sol":12906:13001  if (borrowIndex > type(uint128).max || depositIndex > type(uint128).max) revert IndexOverflow() */
              iszero
              tag_510
              jumpi
                /* "contracts/RewardsController.sol":12986:13001  IndexOverflow() */
              mload(0x40)
              shl(0xe0, 0x7decd257)
              dup2
              mstore
              0x04
              add
              mload(0x40)
              dup1
              swap2
              sub
              swap1
              revert
                /* "contracts/RewardsController.sol":12906:13001  if (borrowIndex > type(uint128).max || depositIndex > type(uint128).max) revert IndexOverflow() */
            tag_510:
              sub(shl(0x80, 0x01), 0x01)
                /* "contracts/RewardsController.sol":13066:13113  rewardData.depositIndex = uint128(depositIndex) */
              dup3
              dup2
              and
              shl(0x80, 0x01)
              mul
                /* "contracts/RewardsController.sol":13011:13056  rewardData.borrowIndex = uint128(borrowIndex) */
              swap1
              dup5
              and
                /* "contracts/RewardsController.sol":13066:13113  rewardData.depositIndex = uint128(depositIndex) */
              or
                /* "contracts/RewardsController.sol":13011:13033  rewardData.borrowIndex */
              0x07
              dup7
              add
                /* "contracts/RewardsController.sol":13066:13113  rewardData.depositIndex = uint128(depositIndex) */
              sstore
                /* "contracts/RewardsController.sol":13123:13144  rewardData.lastUpdate */
              0x08
              dup6
              add
                /* "contracts/RewardsController.sol":13123:13170  rewardData.lastUpdate = uint32(block.timestamp) */
              dup1
              sload
              0xffffffff
                /* "contracts/RewardsController.sol":13154:13169  block.timestamp */
              timestamp
                /* "contracts/RewardsController.sol":13123:13170  rewardData.lastUpdate = uint32(block.timestamp) */
              swap1
              dup2
              and
              shl(0x40, 0x01)
              mul
              not(0xffffffff0000000000000000)
              swap1
              swap3
              and
              swap2
              swap1
              swap2
              or
              swap1
              swap2
              sstore
                /* "contracts/RewardsController.sol":13180:13208  rewardData.lastUndistributed */
              0x04
              dup7
              add
                /* "contracts/RewardsController.sol":13180:13227  rewardData.lastUndistributed = newUndistributed */
              dup3
              swap1
              sstore
                /* "contracts/RewardsController.sol":13242:13331  IndexUpdate(market, reward, borrowIndex, depositIndex, newUndistributed, block.timestamp) */
              0x40
              dup1
              mload
                /* "#utility.yul":24938:24963   */
              dup6
              dup2
              mstore
                /* "#utility.yul":24994:24996   */
              0x20
                /* "#utility.yul":24979:24997   */
              dup2
              add
                /* "#utility.yul":24972:25006   */
              dup6
              swap1
              mstore
                /* "#utility.yul":25022:25040   */
              swap1
              dup2
              add
                /* "#utility.yul":25015:25049   */
              dup4
              swap1
              mstore
                /* "#utility.yul":25080:25082   */
              0x60
                /* "#utility.yul":25065:25083   */
              dup2
              add
                /* "#utility.yul":25058:25092   */
              swap2
              swap1
              swap2
              mstore
              sub(shl(0xa0, 0x01), 0x01)
                /* "contracts/RewardsController.sol":13242:13331  IndexUpdate(market, reward, borrowIndex, depositIndex, newUndistributed, block.timestamp) */
              dup10
              dup2
              and
              swap2
              swap1
              dup12
              and
              swap1
              0x1be815035b13056fba0f0dcbaec5d30add5d95e5f1b6990581607fbccdc93050
              swap1
                /* "#utility.yul":24925:24928   */
              0x80
                /* "#utility.yul":24910:24929   */
              add
                /* "contracts/RewardsController.sol":13242:13331  IndexUpdate(market, reward, borrowIndex, depositIndex, newUndistributed, block.timestamp) */
              mload(0x40)
              dup1
              swap2
              sub
              swap1
              log3
                /* "contracts/RewardsController.sol":12707:13340  {... */
              pop
              pop
              pop
                /* "contracts/RewardsController.sol":12673:13340  if (block.timestamp > lastUpdate) {... */
            tag_506:
              pop
              sub(shl(0xa0, 0x01), 0x01)
                /* "contracts/RewardsController.sol":13404:13432  rewardData.accounts[account] */
              dup7
              and
                /* "contracts/RewardsController.sol":13352:13401  mapping(bool => Account) storage operationAccount */
              0x00
                /* "contracts/RewardsController.sol":13404:13432  rewardData.accounts[account] */
              swap1
              dup2
              mstore
                /* "contracts/RewardsController.sol":13404:13423  rewardData.accounts */
              0x0b
              dup3
              add
                /* "contracts/RewardsController.sol":13404:13432  rewardData.accounts[account] */
              0x20
              mstore
              0x40
              dup2
              keccak256
              swap1
                /* "contracts/RewardsController.sol":13438:14281  for (uint256 i = 0; i < ops.length; ) {... */
            tag_513:
                /* "contracts/RewardsController.sol":13462:13465  ops */
              dup5
                /* "contracts/RewardsController.sol":13462:13472  ops.length */
              mload
                /* "contracts/RewardsController.sol":13458:13459  i */
              dup2
                /* "contracts/RewardsController.sol":13458:13472  i < ops.length */
              lt
                /* "contracts/RewardsController.sol":13438:14281  for (uint256 i = 0; i < ops.length; ) {... */
              iszero
              tag_514
              jumpi
                /* "contracts/RewardsController.sol":13484:13510  AccountOperation memory op */
              0x00
                /* "contracts/RewardsController.sol":13513:13516  ops */
              dup6
                /* "contracts/RewardsController.sol":13517:13518  i */
              dup3
                /* "contracts/RewardsController.sol":13513:13519  ops[i] */
              dup2
              mload
              dup2
              lt
              tag_517
              jumpi
              tag_517
              tag_186
              jump	// in
            tag_517:
              0x20
              swap1
              dup2
              mul
              swap2
              swap1
              swap2
              add
              dup2
              add
              mload
                /* "contracts/RewardsController.sol":13574:13586  op.operation */
              dup1
              mload
                /* "contracts/RewardsController.sol":13557:13587  operationAccount[op.operation] */
              iszero
              iszero
                /* "contracts/RewardsController.sol":13527:13554  Account storage accountData */
              0x00
                /* "contracts/RewardsController.sol":13557:13587  operationAccount[op.operation] */
              swap1
              dup2
              mstore
              swap2
              dup6
              swap1
              mstore
              0x40
              dup3
              keccak256
                /* "contracts/RewardsController.sol":13618:13635  accountData.index */
              dup1
              sload
                /* "contracts/RewardsController.sol":13678:13690  op.operation */
              dup3
              mload
                /* "contracts/RewardsController.sol":13513:13519  ops[i] */
              swap3
              swap5
              pop
                /* "contracts/RewardsController.sol":13557:13587  operationAccount[op.operation] */
              swap1
              swap3
              sub(shl(0x80, 0x01), 0x01)
                /* "contracts/RewardsController.sol":13618:13635  accountData.index */
              swap1
              swap2
              and
              swap2
                /* "contracts/RewardsController.sol":13674:13817  if (op.operation) {... */
              iszero
              tag_518
              jumpi
              pop
                /* "contracts/RewardsController.sol":13720:13742  rewardData.borrowIndex */
              0x07
              dup7
              add
              sload
              sub(shl(0x80, 0x01), 0x01)
              and
                /* "contracts/RewardsController.sol":13674:13817  if (op.operation) {... */
              jump(tag_519)
            tag_518:
              pop
                /* "contracts/RewardsController.sol":13785:13808  rewardData.depositIndex */
              0x07
              dup7
              add
              sload
              shl(0x80, 0x01)
              swap1
              div
              sub(shl(0x80, 0x01), 0x01)
              and
                /* "contracts/RewardsController.sol":13674:13817  if (op.operation) {... */
            tag_519:
                /* "contracts/RewardsController.sol":13844:13859  newAccountIndex */
              dup1
                /* "contracts/RewardsController.sol":13828:13840  accountIndex */
              dup3
                /* "contracts/RewardsController.sol":13828:13859  accountIndex != newAccountIndex */
              eq
                /* "contracts/RewardsController.sol":13824:14236  if (accountIndex != newAccountIndex) {... */
              tag_521
              jumpi
                /* "contracts/RewardsController.sol":13871:13915  accountData.index = uint128(newAccountIndex) */
              dup3
              sload
              not(0xffffffffffffffffffffffffffffffff)
              and
              sub(shl(0x80, 0x01), 0x01)
              dup3
              and
              or
              dup4
              sstore
                /* "contracts/RewardsController.sol":13929:13939  op.balance */
              0x20
              dup5
              add
              mload
                /* "contracts/RewardsController.sol":13929:13944  op.balance != 0 */
              iszero
                /* "contracts/RewardsController.sol":13925:14228  if (op.balance != 0) {... */
              tag_521
              jumpi
                /* "contracts/RewardsController.sol":13958:13980  uint256 rewardsAccrued */
              0x00
                /* "contracts/RewardsController.sol":13983:14050  accountRewards(op.balance, newAccountIndex, accountIndex, baseUnit) */
              tag_522
                /* "contracts/RewardsController.sol":13998:14000  op */
              dup6
                /* "contracts/RewardsController.sol":13998:14008  op.balance */
              0x20
              add
              mload
                /* "contracts/RewardsController.sol":14010:14025  newAccountIndex */
              dup4
                /* "contracts/RewardsController.sol":14027:14039  accountIndex */
              dup6
                /* "contracts/RewardsController.sol":14041:14049  baseUnit */
              dup13
                /* "contracts/RewardsController.sol":13983:13997  accountRewards */
              tag_523
                /* "contracts/RewardsController.sol":13983:14050  accountRewards(op.balance, newAccountIndex, accountIndex, baseUnit) */
              jump	// in
            tag_522:
                /* "contracts/RewardsController.sol":14062:14108  accountData.accrued += uint128(rewardsAccrued) */
              dup5
              sload
                /* "contracts/RewardsController.sol":13958:14050  uint256 rewardsAccrued = accountRewards(op.balance, newAccountIndex, accountIndex, baseUnit) */
              swap1
              swap2
              pop
              dup2
              swap1
                /* "contracts/RewardsController.sol":14062:14108  accountData.accrued += uint128(rewardsAccrued) */
              dup6
              swap1
                /* "contracts/RewardsController.sol":14062:14081  accountData.accrued */
              0x10
              swap1
                /* "contracts/RewardsController.sol":14062:14108  accountData.accrued += uint128(rewardsAccrued) */
              tag_524
              swap1
                /* "contracts/RewardsController.sol":13958:14050  uint256 rewardsAccrued = accountRewards(op.balance, newAccountIndex, accountIndex, baseUnit) */
              dup5
              swap1
              shl(0x80, 0x01)
                /* "contracts/RewardsController.sol":14062:14108  accountData.accrued += uint128(rewardsAccrued) */
              swap1
              div
              sub(shl(0x80, 0x01), 0x01)
              and
              tag_525
              jump	// in
            tag_524:
              swap3
              pop
              0x0100
              exp
              dup2
              sload
              dup2
              sub(shl(0x80, 0x01), 0x01)
              mul
              not
              and
              swap1
              dup4
              sub(shl(0x80, 0x01), 0x01)
              and
              mul
              or
              swap1
              sstore
              pop
                /* "contracts/RewardsController.sol":14148:14155  account */
              dup13
              sub(shl(0xa0, 0x01), 0x01)
                /* "contracts/RewardsController.sol":14125:14217  Accrue(market, reward, account, op.operation, accountIndex, newAccountIndex, rewardsAccrued) */
              and
                /* "contracts/RewardsController.sol":14140:14146  reward */
              dup12
              sub(shl(0xa0, 0x01), 0x01)
                /* "contracts/RewardsController.sol":14125:14217  Accrue(market, reward, account, op.operation, accountIndex, newAccountIndex, rewardsAccrued) */
              and
                /* "contracts/RewardsController.sol":14132:14138  market */
              dup14
              sub(shl(0xa0, 0x01), 0x01)
                /* "contracts/RewardsController.sol":14125:14217  Accrue(market, reward, account, op.operation, accountIndex, newAccountIndex, rewardsAccrued) */
              and
              0xc4278cd1497fedb2697092108a0141a0cbecdd1472913b6e803010998aa63537
                /* "contracts/RewardsController.sol":14157:14159  op */
              dup9
                /* "contracts/RewardsController.sol":14157:14169  op.operation */
              0x00
              add
              mload
                /* "contracts/RewardsController.sol":14171:14183  accountIndex */
              dup8
                /* "contracts/RewardsController.sol":14185:14200  newAccountIndex */
              dup8
                /* "contracts/RewardsController.sol":14202:14216  rewardsAccrued */
              dup8
                /* "contracts/RewardsController.sol":14125:14217  Accrue(market, reward, account, op.operation, accountIndex, newAccountIndex, rewardsAccrued) */
              mload(0x40)
              tag_526
              swap5
              swap4
              swap3
              swap2
              swap1
                /* "#utility.yul":25555:25569   */
              swap4
              iszero
                /* "#utility.yul":25548:25570   */
              iszero
                /* "#utility.yul":25530:25571   */
              dup5
              mstore
                /* "#utility.yul":25602:25604   */
              0x20
                /* "#utility.yul":25587:25605   */
              dup5
              add
                /* "#utility.yul":25580:25614   */
              swap3
              swap1
              swap3
              mstore
                /* "#utility.yul":25645:25647   */
              0x40
                /* "#utility.yul":25630:25648   */
              dup4
              add
                /* "#utility.yul":25623:25657   */
              mstore
                /* "#utility.yul":25688:25690   */
              0x60
                /* "#utility.yul":25673:25691   */
              dup3
              add
                /* "#utility.yul":25666:25700   */
              mstore
                /* "#utility.yul":25517:25520   */
              0x80
                /* "#utility.yul":25502:25521   */
              add
              swap1
                /* "#utility.yul":25305:25706   */
              jump
                /* "contracts/RewardsController.sol":14125:14217  Accrue(market, reward, account, op.operation, accountIndex, newAccountIndex, rewardsAccrued) */
            tag_526:
              mload(0x40)
              dup1
              swap2
              sub
              swap1
              log4
                /* "contracts/RewardsController.sol":13946:14228  {... */
              pop
                /* "contracts/RewardsController.sol":13925:14228  if (op.balance != 0) {... */
            tag_521:
                /* "contracts/RewardsController.sol":14263:14266  ++i */
              dup5
              0x01
              add
              swap5
              pop
                /* "contracts/RewardsController.sol":13476:14281  {... */
              pop
              pop
              pop
              pop
                /* "contracts/RewardsController.sol":13438:14281  for (uint256 i = 0; i < ops.length; ) {... */
              jump(tag_513)
            tag_514:
              pop
                /* "contracts/RewardsController.sol":12372:14285  {... */
              pop
              pop
              pop
                /* "contracts/RewardsController.sol":12270:14285  function update(address account, Market market, ERC20 reward, AccountOperation[] memory ops) internal {... */
              pop
              pop
              pop
              pop
              jump	// out
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":3642:3745  function _checkRole(bytes32 role) internal view virtual {... */
            tag_205:
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":3708:3738  _checkRole(role, _msgSender()) */
              tag_277
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":3719:3723  role */
              dup2
                /* "node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":929:939  msg.sender */
              caller
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":3708:3718  _checkRole */
              tag_532
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":3708:3738  _checkRole(role, _msgSender()) */
              jump	// in
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":7791:8024  function _grantRole(bytes32 role, address account) internal virtual {... */
            tag_208:
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":7874:7896  hasRole(role, account) */
              tag_534
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":7882:7886  role */
              dup3
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":7888:7895  account */
              dup3
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":7874:7881  hasRole */
              tag_113
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":7874:7896  hasRole(role, account) */
              jump	// in
            tag_534:
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":7869:8018  if (!hasRole(role, account)) {... */
              tag_213
              jumpi
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":7912:7924  _roles[role] */
              0x00
              dup3
              dup2
              mstore
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":7912:7918  _roles */
              0x65
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":7912:7924  _roles[role] */
              0x20
              swap1
              dup2
              mstore
              0x40
              dup1
              dup4
              keccak256
              sub(shl(0xa0, 0x01), 0x01)
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":7912:7941  _roles[role].members[account] */
              dup6
              and
              dup5
              mstore
              swap1
              swap2
              mstore
              swap1
              keccak256
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":7912:7948  _roles[role].members[account] = true */
              dup1
              sload
              not(0xff)
              and
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":7944:7948  true */
              0x01
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":7912:7948  _roles[role].members[account] = true */
              or
              swap1
              sstore
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":7994:8006  _msgSender() */
              tag_536
                /* "node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":929:939  msg.sender */
              caller
              swap1
                /* "node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":850:946  function _msgSender() internal view virtual returns (address) {... */
              jump
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":7994:8006  _msgSender() */
            tag_536:
              sub(shl(0xa0, 0x01), 0x01)
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":7967:8007  RoleGranted(role, account, _msgSender()) */
              and
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":7985:7992  account */
              dup2
              sub(shl(0xa0, 0x01), 0x01)
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":7967:8007  RoleGranted(role, account, _msgSender()) */
              and
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":7979:7983  role */
              dup4
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":7967:8007  RoleGranted(role, account, _msgSender()) */
              0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d
              mload(0x40)
              mload(0x40)
              dup1
              swap2
              sub
              swap1
              log4
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":7791:8024  function _grantRole(bytes32 role, address account) internal virtual {... */
              pop
              pop
              jump	// out
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":8195:8429  function _revokeRole(bytes32 role, address account) internal virtual {... */
            tag_214:
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":8278:8300  hasRole(role, account) */
              tag_539
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":8286:8290  role */
              dup3
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":8292:8299  account */
              dup3
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":8278:8285  hasRole */
              tag_113
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":8278:8300  hasRole(role, account) */
              jump	// in
            tag_539:
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":8274:8423  if (hasRole(role, account)) {... */
              iszero
              tag_213
              jumpi
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":8348:8353  false */
              0x00
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":8316:8328  _roles[role] */
              dup3
              dup2
              mstore
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":8316:8322  _roles */
              0x65
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":8316:8328  _roles[role] */
              0x20
              swap1
              dup2
              mstore
              0x40
              dup1
              dup4
              keccak256
              sub(shl(0xa0, 0x01), 0x01)
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":8316:8345  _roles[role].members[account] */
              dup6
              and
              dup1
              dup6
              mstore
              swap3
              mstore
              dup1
              dup4
              keccak256
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":8316:8353  _roles[role].members[account] = false */
              dup1
              sload
              not(0xff)
              and
              swap1
              sstore
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":8372:8412  RoleRevoked(role, account, _msgSender()) */
              mload
                /* "node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":929:939  msg.sender */
              caller
              swap3
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":8316:8328  _roles[role] */
              dup6
              swap2
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":8372:8412  RoleRevoked(role, account, _msgSender()) */
              0xf6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b
              swap2
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":8348:8353  false */
              swap1
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":8372:8412  RoleRevoked(role, account, _msgSender()) */
              log4
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":8195:8429  function _revokeRole(bytes32 role, address account) internal virtual {... */
              pop
              pop
              jump	// out
                /* "contracts/RewardsController.sol":25252:26018  function accountBalanceOperations(... */
            tag_223:
                /* "contracts/RewardsController.sol":25406:25449  AccountOperation[] memory accountBalanceOps */
              0x60
                /* "contracts/RewardsController.sol":25500:25503  ops */
              dup4
                /* "contracts/RewardsController.sol":25500:25510  ops.length */
              mload
              sub(shl(0x40, 0x01), 0x01)
                /* "contracts/RewardsController.sol":25477:25511  new AccountOperation[](ops.length) */
              dup2
              gt
              iszero
              tag_544
              jumpi
              tag_544
              tag_173
              jump	// in
            tag_544:
              mload(0x40)
              swap1
              dup1
              dup3
              mstore
              dup1
              0x20
              mul
              0x20
              add
              dup3
              add
              0x40
              mstore
              dup1
              iszero
              tag_545
              jumpi
              dup2
              0x20
              add
            tag_546:
              0x40
              dup1
              mload
              dup1
              dup3
              add
              swap1
              swap2
              mstore
              0x00
              dup1
              dup3
              mstore
              0x20
              dup3
              add
              mstore
              dup2
              mstore
              0x20
              add
              swap1
              0x01
              swap1
              sub
              swap1
              dup2
              tag_546
              jumpi
              swap1
              pop
            tag_545:
              pop
                /* "contracts/RewardsController.sol":25457:25511  accountBalanceOps = new AccountOperation[](ops.length) */
              swap1
              pop
                /* "contracts/RewardsController.sol":25522:25531  uint256 i */
              0x00
                /* "contracts/RewardsController.sol":25517:26014  for (uint256 i = 0; i < ops.length; ) {... */
            tag_548:
                /* "contracts/RewardsController.sol":25541:25544  ops */
              dup5
                /* "contracts/RewardsController.sol":25541:25551  ops.length */
              mload
                /* "contracts/RewardsController.sol":25537:25538  i */
              dup2
                /* "contracts/RewardsController.sol":25537:25551  i < ops.length */
              lt
                /* "contracts/RewardsController.sol":25517:26014  for (uint256 i = 0; i < ops.length; ) {... */
              iszero
              tag_549
              jumpi
                /* "contracts/RewardsController.sol":25567:25570  ops */
              dup5
                /* "contracts/RewardsController.sol":25571:25572  i */
              dup2
                /* "contracts/RewardsController.sol":25567:25573  ops[i] */
              dup2
              mload
              dup2
              lt
              tag_552
              jumpi
              tag_552
              tag_186
              jump	// in
            tag_552:
              0x20
              mul
              0x20
              add
              add
              mload
                /* "contracts/RewardsController.sol":25563:25969  if (ops[i]) {... */
              iszero
              tag_553
              jumpi
                /* "contracts/RewardsController.sol":25622:25646  market.accounts(account) */
              mload(0x40)
              shl(0xe1, 0x2f2e0371)
              dup2
              mstore
              sub(shl(0xa0, 0x01), 0x01)
                /* "#utility.yul":1365:1397   */
              dup6
              dup2
              and
                /* "contracts/RewardsController.sol":25622:25646  market.accounts(account) */
              0x04
              dup4
              add
                /* "#utility.yul":1347:1398   */
              mstore
                /* "contracts/RewardsController.sol":25590:25618  uint256 floatingBorrowShares */
              0x00
              swap2
                /* "contracts/RewardsController.sol":25622:25637  market.accounts */
              swap1
              dup9
              and
              swap1
              0x5e5c06e2
              swap1
                /* "#utility.yul":1320:1338   */
              0x24
              add
                /* "contracts/RewardsController.sol":25622:25646  market.accounts(account) */
              0x60
              mload(0x40)
              dup1
              dup4
              sub
              dup2
              dup7
              gas
              staticcall
              iszero
              dup1
              iszero
              tag_556
              jumpi
              returndatasize
              0x00
              dup1
              returndatacopy
              revert(0x00, returndatasize)
            tag_556:
              pop
              pop
              pop
              pop
              mload(0x40)
              returndatasize
              not(0x1f)
              0x1f
              dup3
              add
              and
              dup3
              add
              dup1
              0x40
              mstore
              pop
              dup2
              add
              swap1
              tag_557
              swap2
              swap1
              tag_250
              jump	// in
            tag_557:
                /* "contracts/RewardsController.sol":25585:25646  (, , uint256 floatingBorrowShares) = market.accounts(account) */
              swap3
              pop
              pop
              pop
                /* "contracts/RewardsController.sol":25679:25838  AccountOperation({... */
              mload(0x40)
              dup1
              0x40
              add
              0x40
              mstore
              dup1
                /* "contracts/RewardsController.sol":25719:25723  true */
              0x01
                /* "contracts/RewardsController.sol":25679:25838  AccountOperation({... */
              iszero
              iszero
              dup2
              mstore
              0x20
              add
                /* "contracts/RewardsController.sol":25767:25827  accountFixedBorrowShares(market, account, distributionStart) */
              tag_558
                /* "contracts/RewardsController.sol":25792:25798  market */
              dup10
                /* "contracts/RewardsController.sol":25800:25807  account */
              dup9
                /* "contracts/RewardsController.sol":25809:25826  distributionStart */
              dup9
                /* "contracts/RewardsController.sol":25767:25791  accountFixedBorrowShares */
              tag_255
                /* "contracts/RewardsController.sol":25767:25827  accountFixedBorrowShares(market, account, distributionStart) */
              jump	// in
            tag_558:
                /* "contracts/RewardsController.sol":25744:25827  floatingBorrowShares + accountFixedBorrowShares(market, account, distributionStart) */
              tag_559
              swap1
                /* "contracts/RewardsController.sol":25744:25764  floatingBorrowShares */
              dup5
                /* "contracts/RewardsController.sol":25744:25827  floatingBorrowShares + accountFixedBorrowShares(market, account, distributionStart) */
              tag_230
              jump	// in
            tag_559:
                /* "contracts/RewardsController.sol":25679:25838  AccountOperation({... */
              dup2
              mstore
              pop
                /* "contracts/RewardsController.sol":25656:25673  accountBalanceOps */
              dup4
                /* "contracts/RewardsController.sol":25674:25675  i */
              dup4
                /* "contracts/RewardsController.sol":25656:25676  accountBalanceOps[i] */
              dup2
              mload
              dup2
              lt
              tag_561
              jumpi
              tag_561
              tag_186
              jump	// in
            tag_561:
              0x20
              mul
              0x20
              add
              add
                /* "contracts/RewardsController.sol":25656:25838  accountBalanceOps[i] = AccountOperation({... */
              dup2
              swap1
              mstore
              pop
                /* "contracts/RewardsController.sol":25575:25847  {... */
              pop
                /* "contracts/RewardsController.sol":25563:25969  if (ops[i]) {... */
              jump(tag_562)
            tag_553:
                /* "contracts/RewardsController.sol":25886:25960  AccountOperation({ operation: false, balance: market.balanceOf(account) }) */
              0x40
              dup1
              mload
              dup1
              dup3
              add
              dup3
              mstore
              0x00
              dup2
              mstore
                /* "contracts/RewardsController.sol":25932:25957  market.balanceOf(account) */
              swap1
              mload
              shl(0xe0, 0x70a08231)
              dup2
              mstore
              sub(shl(0xa0, 0x01), 0x01)
                /* "#utility.yul":1365:1397   */
              dup7
              dup2
              and
                /* "contracts/RewardsController.sol":25932:25957  market.balanceOf(account) */
              0x04
              dup4
              add
                /* "#utility.yul":1347:1398   */
              mstore
                /* "contracts/RewardsController.sol":25886:25960  AccountOperation({ operation: false, balance: market.balanceOf(account) }) */
              0x20
              dup4
              add
              swap2
                /* "contracts/RewardsController.sol":25932:25948  market.balanceOf */
              swap1
              dup10
              and
              swap1
              0x70a08231
              swap1
                /* "#utility.yul":1320:1338   */
              0x24
              add
                /* "contracts/RewardsController.sol":25932:25957  market.balanceOf(account) */
              0x20
              mload(0x40)
              dup1
              dup4
              sub
              dup2
              dup7
              gas
              staticcall
              iszero
              dup1
              iszero
              tag_565
              jumpi
              returndatasize
              0x00
              dup1
              returndatacopy
              revert(0x00, returndatasize)
            tag_565:
              pop
              pop
              pop
              pop
              mload(0x40)
              returndatasize
              not(0x1f)
              0x1f
              dup3
              add
              and
              dup3
              add
              dup1
              0x40
              mstore
              pop
              dup2
              add
              swap1
              tag_566
              swap2
              swap1
              tag_183
              jump	// in
            tag_566:
                /* "contracts/RewardsController.sol":25886:25960  AccountOperation({ operation: false, balance: market.balanceOf(account) }) */
              dup2
              mstore
              pop
                /* "contracts/RewardsController.sol":25863:25880  accountBalanceOps */
              dup3
                /* "contracts/RewardsController.sol":25881:25882  i */
              dup3
                /* "contracts/RewardsController.sol":25863:25883  accountBalanceOps[i] */
              dup2
              mload
              dup2
              lt
              tag_568
              jumpi
              tag_568
              tag_186
              jump	// in
            tag_568:
              0x20
              mul
              0x20
              add
              add
                /* "contracts/RewardsController.sol":25863:25960  accountBalanceOps[i] = AccountOperation({ operation: false, balance: market.balanceOf(account) }) */
              dup2
              swap1
              mstore
              pop
                /* "contracts/RewardsController.sol":25563:25969  if (ops[i]) {... */
            tag_562:
                /* "contracts/RewardsController.sol":25996:25999  ++i */
              0x01
              add
                /* "contracts/RewardsController.sol":25517:26014  for (uint256 i = 0; i < ops.length; ) {... */
              jump(tag_548)
            tag_549:
              pop
                /* "contracts/RewardsController.sol":25252:26018  function accountBalanceOperations(... */
              swap5
              swap4
              pop
              pop
              pop
              pop
              jump	// out
                /* "contracts/RewardsController.sol":16372:17436  function pendingRewards(... */
            tag_236:
                /* "contracts/RewardsController.sol":16569:16579  ops.market */
              dup1
              mload
              sub(shl(0xa0, 0x01), 0x01)
                /* "contracts/RewardsController.sol":16556:16580  distribution[ops.market] */
              swap1
              dup2
              and
                /* "contracts/RewardsController.sol":16501:16516  uint256 rewards */
              0x00
                /* "contracts/RewardsController.sol":16556:16580  distribution[ops.market] */
              swap1
              dup2
              mstore
                /* "contracts/RewardsController.sol":16556:16568  distribution */
              0x97
                /* "contracts/RewardsController.sol":16556:16580  distribution[ops.market] */
              0x20
              dup2
              dup2
              mstore
              0x40
              dup1
              dup5
              keccak256
                /* "contracts/RewardsController.sol":16556:16596  distribution[ops.market].rewards[reward] */
              dup8
              dup7
              and
              dup6
              mstore
              dup3
              mstore
              dup1
              dup5
              keccak256
                /* "contracts/RewardsController.sol":16634:16644  ops.market */
              dup7
              mload
                /* "contracts/RewardsController.sol":16621:16645  distribution[ops.market] */
              swap1
              swap6
              and
              dup5
              mstore
              swap2
              swap1
              mstore
              dup2
              keccak256
                /* "contracts/RewardsController.sol":16621:16654  distribution[ops.market].baseUnit */
              0x03
              add
              sload
                /* "contracts/RewardsController.sol":16681:16702  rewardData.lastUpdate */
              0x08
              dup4
              add
              sload
                /* "contracts/RewardsController.sol":16799:16809  ops.market */
              dup5
              mload
                /* "contracts/RewardsController.sol":16501:16516  uint256 rewards */
              swap3
              swap4
                /* "contracts/RewardsController.sol":16556:16596  distribution[ops.market].rewards[reward] */
              swap3
              shl(0x40, 0x01)
                /* "contracts/RewardsController.sol":16681:16702  rewardData.lastUpdate */
              swap1
              swap2
              div
              0xffffffff
              and
              swap1
                /* "contracts/RewardsController.sol":16501:16516  uint256 rewards */
              dup5
              swap1
              dup2
              swap1
                /* "contracts/RewardsController.sol":16756:16886  previewAllocation(... */
              tag_570
              swap1
                /* "contracts/RewardsController.sol":16556:16596  distribution[ops.market].rewards[reward] */
              dup7
              swap1
                /* "contracts/RewardsController.sol":16817:16832  block.timestamp */
              timestamp
              dup7
              lt
                /* "contracts/RewardsController.sol":16817:16880  block.timestamp > lastUpdate ? block.timestamp - lastUpdate : 0 */
              tag_571
              jumpi
                /* "contracts/RewardsController.sol":16879:16880  0 */
              0x00
                /* "contracts/RewardsController.sol":12789:12806  previewAllocation */
              tag_504
                /* "contracts/RewardsController.sol":12789:12896  previewAllocation(... */
              jump	// in
                /* "contracts/RewardsController.sol":16817:16880  block.timestamp > lastUpdate ? block.timestamp - lastUpdate : 0 */
            tag_571:
                /* "contracts/RewardsController.sol":16848:16876  block.timestamp - lastUpdate */
              tag_508
                /* "contracts/RewardsController.sol":16866:16876  lastUpdate */
              dup7
                /* "contracts/RewardsController.sol":16848:16863  block.timestamp */
              timestamp
                /* "contracts/RewardsController.sol":16848:16876  block.timestamp - lastUpdate */
              tag_427
              jump	// in
                /* "contracts/RewardsController.sol":16756:16886  previewAllocation(... */
            tag_570:
              pop
              sub(shl(0xa0, 0x01), 0x01)
                /* "contracts/RewardsController.sol":16944:16972  rewardData.accounts[account] */
              dup12
              and
                /* "contracts/RewardsController.sol":16892:16941  mapping(bool => Account) storage operationAccount */
              0x00
                /* "contracts/RewardsController.sol":16944:16972  rewardData.accounts[account] */
              swap1
              dup2
              mstore
                /* "contracts/RewardsController.sol":16944:16963  rewardData.accounts */
              0x0b
              dup9
              add
                /* "contracts/RewardsController.sol":16944:16972  rewardData.accounts[account] */
              0x20
              mstore
              0x40
              dup2
              keccak256
                /* "contracts/RewardsController.sol":16708:16886  (uint256 borrowIndex, uint256 depositIndex, ) = previewAllocation(... */
              swap3
              swap5
              pop
              swap1
              swap3
              pop
                /* "contracts/RewardsController.sol":16978:17432  for (uint256 o = 0; o < ops.accountOperations.length; ) {... */
            tag_574:
                /* "contracts/RewardsController.sol":17002:17005  ops */
              dup9
                /* "contracts/RewardsController.sol":17002:17023  ops.accountOperations */
              0x20
              add
              mload
                /* "contracts/RewardsController.sol":17002:17030  ops.accountOperations.length */
              mload
                /* "contracts/RewardsController.sol":16998:16999  o */
              dup2
                /* "contracts/RewardsController.sol":16998:17030  o < ops.accountOperations.length */
              lt
                /* "contracts/RewardsController.sol":16978:17432  for (uint256 o = 0; o < ops.accountOperations.length; ) {... */
              iszero
              tag_575
              jumpi
                /* "contracts/RewardsController.sol":17042:17059  uint256 nextIndex */
              0x00
                /* "contracts/RewardsController.sol":17071:17074  ops */
              dup10
                /* "contracts/RewardsController.sol":17071:17092  ops.accountOperations */
              0x20
              add
              mload
                /* "contracts/RewardsController.sol":17093:17094  o */
              dup3
                /* "contracts/RewardsController.sol":17071:17095  ops.accountOperations[o] */
              dup2
              mload
              dup2
              lt
              tag_578
              jumpi
              tag_578
              tag_186
              jump	// in
            tag_578:
              0x20
              mul
              0x20
              add
              add
              mload
                /* "contracts/RewardsController.sol":17071:17105  ops.accountOperations[o].operation */
              0x00
              add
              mload
                /* "contracts/RewardsController.sol":17067:17198  if (ops.accountOperations[o].operation) {... */
              iszero
              tag_579
              jumpi
              pop
                /* "contracts/RewardsController.sol":17129:17140  borrowIndex */
              dup4
                /* "contracts/RewardsController.sol":17067:17198  if (ops.accountOperations[o].operation) {... */
              jump(tag_580)
            tag_579:
              pop
                /* "contracts/RewardsController.sol":17177:17189  depositIndex */
              dup3
                /* "contracts/RewardsController.sol":17067:17198  if (ops.accountOperations[o].operation) {... */
            tag_580:
                /* "contracts/RewardsController.sol":17217:17386  accountRewards(... */
              tag_581
                /* "contracts/RewardsController.sol":17241:17244  ops */
              dup11
                /* "contracts/RewardsController.sol":17241:17262  ops.accountOperations */
              0x20
              add
              mload
                /* "contracts/RewardsController.sol":17263:17264  o */
              dup4
                /* "contracts/RewardsController.sol":17241:17265  ops.accountOperations[o] */
              dup2
              mload
              dup2
              lt
              tag_583
              jumpi
              tag_583
              tag_186
              jump	// in
            tag_583:
              0x20
              mul
              0x20
              add
              add
              mload
                /* "contracts/RewardsController.sol":17241:17273  ops.accountOperations[o].balance */
              0x20
              add
              mload
                /* "contracts/RewardsController.sol":17283:17292  nextIndex */
              dup3
                /* "contracts/RewardsController.sol":17302:17318  operationAccount */
              dup6
                /* "contracts/RewardsController.sol":17302:17354  operationAccount[ops.accountOperations[o].operation] */
              0x00
                /* "contracts/RewardsController.sol":17319:17322  ops */
              dup15
                /* "contracts/RewardsController.sol":17319:17340  ops.accountOperations */
              0x20
              add
              mload
                /* "contracts/RewardsController.sol":17341:17342  o */
              dup8
                /* "contracts/RewardsController.sol":17319:17343  ops.accountOperations[o] */
              dup2
              mload
              dup2
              lt
              tag_585
              jumpi
              tag_585
              tag_186
              jump	// in
            tag_585:
              0x20
              swap1
              dup2
              mul
              swap2
              swap1
              swap2
              add
              dup2
              add
              mload
                /* "contracts/RewardsController.sol":17319:17353  ops.accountOperations[o].operation */
              mload
                /* "contracts/RewardsController.sol":17302:17354  operationAccount[ops.accountOperations[o].operation] */
              iszero
              iszero
              dup3
              mstore
              dup2
              add
              swap2
              swap1
              swap2
              mstore
              0x40
              add
                /* "contracts/RewardsController.sol":17319:17353  ops.accountOperations[o].operation */
              0x00
                /* "contracts/RewardsController.sol":17302:17354  operationAccount[ops.accountOperations[o].operation] */
              keccak256
                /* "contracts/RewardsController.sol":17302:17360  operationAccount[ops.accountOperations[o].operation].index */
              sload
              sub(shl(0x80, 0x01), 0x01)
              and
                /* "contracts/RewardsController.sol":17370:17378  baseUnit */
              dup11
                /* "contracts/RewardsController.sol":17217:17231  accountRewards */
              tag_523
                /* "contracts/RewardsController.sol":17217:17386  accountRewards(... */
              jump	// in
            tag_581:
                /* "contracts/RewardsController.sol":17206:17386  rewards += accountRewards(... */
              tag_586
              swap1
              dup11
              tag_230
              jump	// in
            tag_586:
              swap9
              pop
              pop
                /* "contracts/RewardsController.sol":17414:17417  ++o */
              0x01
              add
                /* "contracts/RewardsController.sol":16978:17432  for (uint256 o = 0; o < ops.accountOperations.length; ) {... */
              jump(tag_574)
            tag_575:
              pop
                /* "contracts/RewardsController.sol":16518:17436  {... */
              pop
              pop
              pop
              pop
              pop
              pop
                /* "contracts/RewardsController.sol":16372:17436  function pendingRewards(... */
              swap4
              swap3
              pop
              pop
              pop
              jump	// out
                /* "contracts/RewardsController.sol":14565:15236  function accountFixedBorrowShares(... */
            tag_255:
                /* "contracts/RewardsController.sol":14684:14701  uint256 fixedDebt */
              0x00
              dup1
                /* "contracts/utils/FixedLib.sol":306:313  4 weeks */
              0x24ea00
                /* "contracts/RewardsController.sol":14742:14767  start % FixedLib.INTERVAL */
              tag_588
                /* "contracts/utils/FixedLib.sol":306:313  4 weeks */
              dup2
                /* "contracts/RewardsController.sol":14742:14767  start % FixedLib.INTERVAL */
              0xffffffff
              dup7
              and
              tag_589
              jump	// in
            tag_588:
                /* "contracts/RewardsController.sol":14733:14768  start - (start % FixedLib.INTERVAL) */
              tag_590
              swap1
              0xffffffff
              dup7
              and
              tag_427
              jump	// in
            tag_590:
                /* "contracts/RewardsController.sol":14733:14788  start - (start % FixedLib.INTERVAL) + FixedLib.INTERVAL */
              tag_591
              swap2
              swap1
              tag_230
              jump	// in
            tag_591:
                /* "contracts/RewardsController.sol":14709:14788  uint256 firstMaturity = start - (start % FixedLib.INTERVAL) + FixedLib.INTERVAL */
              swap1
              pop
                /* "contracts/RewardsController.sol":14794:14813  uint256 maxMaturity */
              0x00
                /* "contracts/RewardsController.sol":14907:14913  market */
              dup6
              sub(shl(0xa0, 0x01), 0x01)
                /* "contracts/RewardsController.sol":14907:14928  market.maxFuturePools */
              and
              0x0e52dbec
                /* "contracts/RewardsController.sol":14907:14930  market.maxFuturePools() */
              mload(0x40)
              dup2
              0xffffffff
              and
              0xe0
              shl
              dup2
              mstore
              0x04
              add
              0x20
              mload(0x40)
              dup1
              dup4
              sub
              dup2
              dup7
              gas
              staticcall
              iszero
              dup1
              iszero
              tag_593
              jumpi
              returndatasize
              0x00
              dup1
              returndatacopy
              revert(0x00, returndatasize)
            tag_593:
              pop
              pop
              pop
              pop
              mload(0x40)
              returndatasize
              not(0x1f)
              0x1f
              dup3
              add
              and
              dup3
              add
              dup1
              0x40
              mstore
              pop
              dup2
              add
              swap1
              tag_594
              swap2
              swap1
              tag_397
              jump	// in
            tag_594:
                /* "contracts/RewardsController.sol":14887:14930  FixedLib.INTERVAL * market.maxFuturePools() */
              tag_595
              swap1
              0xff
              and
                /* "contracts/utils/FixedLib.sol":306:313  4 weeks */
              0x24ea00
                /* "contracts/RewardsController.sol":14887:14930  FixedLib.INTERVAL * market.maxFuturePools() */
              tag_429
              jump	// in
            tag_595:
                /* "contracts/RewardsController.sol":14841:14876  block.timestamp % FixedLib.INTERVAL */
              tag_596
                /* "contracts/utils/FixedLib.sol":306:313  4 weeks */
              0x24ea00
                /* "contracts/RewardsController.sol":14841:14856  block.timestamp */
              timestamp
                /* "contracts/RewardsController.sol":14841:14876  block.timestamp % FixedLib.INTERVAL */
              tag_589
              jump	// in
            tag_596:
                /* "contracts/RewardsController.sol":14816:14877  block.timestamp -... */
              tag_597
              swap1
                /* "contracts/RewardsController.sol":14816:14831  block.timestamp */
              timestamp
                /* "contracts/RewardsController.sol":14816:14877  block.timestamp -... */
              tag_427
              jump	// in
            tag_597:
                /* "contracts/RewardsController.sol":14816:14931  block.timestamp -... */
              tag_598
              swap2
              swap1
              tag_230
              jump	// in
            tag_598:
                /* "contracts/RewardsController.sol":14794:14931  uint256 maxMaturity = block.timestamp -... */
              swap1
              pop
                /* "contracts/RewardsController.sol":14962:14975  firstMaturity */
              dup2
                /* "contracts/RewardsController.sol":14938:15184  for (uint256 maturity = firstMaturity; maturity <= maxMaturity; ) {... */
            tag_599:
                /* "contracts/RewardsController.sol":14989:15000  maxMaturity */
              dup2
                /* "contracts/RewardsController.sol":14977:14985  maturity */
              dup2
                /* "contracts/RewardsController.sol":14977:15000  maturity <= maxMaturity */
              gt
                /* "contracts/RewardsController.sol":14938:15184  for (uint256 maturity = firstMaturity; maturity <= maxMaturity; ) {... */
              tag_600
              jumpi
                /* "contracts/RewardsController.sol":15036:15082  market.fixedBorrowPositions(maturity, account) */
              mload(0x40)
              shl(0xe0, 0xd2681a0b)
              dup2
              mstore
              0x04
              dup2
              add
                /* "#utility.yul":26002:26027   */
              dup3
              swap1
              mstore
              sub(shl(0xa0, 0x01), 0x01)
                /* "#utility.yul":26063:26095   */
              dup8
              dup2
              and
                /* "#utility.yul":26043:26061   */
              0x24
              dup4
              add
                /* "#utility.yul":26036:26096   */
              mstore
                /* "contracts/RewardsController.sol":15013:15030  uint256 principal */
              0x00
              swap2
                /* "contracts/RewardsController.sol":15036:15063  market.fixedBorrowPositions */
              swap1
              dup10
              and
              swap1
              0xd2681a0b
              swap1
                /* "#utility.yul":25975:25993   */
              0x44
              add
                /* "contracts/RewardsController.sol":15036:15082  market.fixedBorrowPositions(maturity, account) */
              0x40
              dup1
              mload
              dup1
              dup4
              sub
              dup2
              dup7
              gas
              staticcall
              iszero
              dup1
              iszero
              tag_605
              jumpi
              returndatasize
              0x00
              dup1
              returndatacopy
              revert(0x00, returndatasize)
            tag_605:
              pop
              pop
              pop
              pop
              mload(0x40)
              returndatasize
              not(0x1f)
              0x1f
              dup3
              add
              and
              dup3
              add
              dup1
              0x40
              mstore
              pop
              dup2
              add
              swap1
              tag_606
              swap2
              swap1
              tag_607
              jump	// in
            tag_606:
              pop
                /* "contracts/RewardsController.sol":15012:15082  (uint256 principal, ) = market.fixedBorrowPositions(maturity, account) */
              swap1
              pop
                /* "contracts/RewardsController.sol":15090:15112  fixedDebt += principal */
              tag_608
                /* "contracts/RewardsController.sol":15012:15082  (uint256 principal, ) = market.fixedBorrowPositions(maturity, account) */
              dup2
                /* "contracts/RewardsController.sol":15090:15112  fixedDebt += principal */
              dup7
              tag_230
              jump	// in
            tag_608:
              swap5
              pop
              pop
                /* "contracts/utils/FixedLib.sol":306:313  4 weeks */
              0x24ea00
                /* "contracts/RewardsController.sol":15140:15169  maturity += FixedLib.INTERVAL */
              add
                /* "contracts/RewardsController.sol":14938:15184  for (uint256 maturity = firstMaturity; maturity <= maxMaturity; ) {... */
              jump(tag_599)
            tag_600:
              pop
                /* "contracts/RewardsController.sol":15201:15231  market.previewRepay(fixedDebt) */
              mload(0x40)
              shl(0xe1, 0x5fb91651)
              dup2
              mstore
              0x04
              dup2
              add
                /* "#utility.yul":1963:1988   */
              dup5
              swap1
              mstore
              sub(shl(0xa0, 0x01), 0x01)
                /* "contracts/RewardsController.sol":15201:15220  market.previewRepay */
              dup8
              and
              swap1
              0xbf722ca2
              swap1
                /* "#utility.yul":1936:1954   */
              0x24
              add
                /* "contracts/RewardsController.sol":15201:15231  market.previewRepay(fixedDebt) */
              0x20
              mload(0x40)
              dup1
              dup4
              sub
              dup2
              dup7
              gas
              staticcall
              iszero
              dup1
              iszero
              tag_611
              jumpi
              returndatasize
              0x00
              dup1
              returndatacopy
              revert(0x00, returndatasize)
            tag_611:
              pop
              pop
              pop
              pop
              mload(0x40)
              returndatasize
              not(0x1f)
              0x1f
              dup3
              add
              and
              dup3
              add
              dup1
              0x40
              mstore
              pop
              dup2
              add
              swap1
              tag_612
              swap2
              swap1
              tag_183
              jump	// in
            tag_612:
                /* "contracts/RewardsController.sol":15189:15231  fixedDebt = market.previewRepay(fixedDebt) */
              swap7
                /* "contracts/RewardsController.sol":14565:15236  function accountFixedBorrowShares(... */
              swap6
              pop
              pop
              pop
              pop
              pop
              pop
              jump	// out
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":2025:2090  function __AccessControl_init() internal onlyInitializing {... */
            tag_275:
                /* "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":5363:5376  _initializing */
              sload(0x00)
              0x0100
              swap1
              div
              0xff
              and
                /* "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":5355:5424  require(_initializing, "Initializable: contract is not initializing") */
              tag_615
              jumpi
              0x00
              dup1
              revert
            tag_615:
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":2025:2090  function __AccessControl_init() internal onlyInitializing {... */
              jump	// out
                /* "node_modules/solmate/src/utils/SafeTransferLib.sol":2616:4026  function safeTransfer(... */
            tag_350:
                /* "node_modules/solmate/src/utils/SafeTransferLib.sol":2728:2740  bool success */
              0x00
                /* "node_modules/solmate/src/utils/SafeTransferLib.sol":2880:2884  0x40 */
              0x40
                /* "node_modules/solmate/src/utils/SafeTransferLib.sol":2874:2885  mload(0x40) */
              mload
              shl(0xe0, 0xa9059cbb)
                /* "node_modules/solmate/src/utils/SafeTransferLib.sol":3003:3004  0 */
              0x00
                /* "node_modules/solmate/src/utils/SafeTransferLib.sol":2996:3073  mstore(0, 0xa9059cbb00000000000000000000000000000000000000000000000000000000) */
              mstore
                /* "node_modules/solmate/src/utils/SafeTransferLib.sol":3096:3098  to */
              dup4
                /* "node_modules/solmate/src/utils/SafeTransferLib.sol":3093:3094  4 */
              0x04
                /* "node_modules/solmate/src/utils/SafeTransferLib.sol":3086:3099  mstore(4, to) */
              mstore
                /* "node_modules/solmate/src/utils/SafeTransferLib.sol":3152:3158  amount */
              dup3
                /* "node_modules/solmate/src/utils/SafeTransferLib.sol":3148:3150  36 */
              0x24
                /* "node_modules/solmate/src/utils/SafeTransferLib.sol":3141:3159  mstore(36, amount) */
              mstore
                /* "node_modules/solmate/src/utils/SafeTransferLib.sol":3820:3822  32 */
              0x20
                /* "node_modules/solmate/src/utils/SafeTransferLib.sol":3817:3818  0 */
              0x00
                /* "node_modules/solmate/src/utils/SafeTransferLib.sol":3813:3815  68 */
              0x44
                /* "node_modules/solmate/src/utils/SafeTransferLib.sol":3810:3811  0 */
              0x00
                /* "node_modules/solmate/src/utils/SafeTransferLib.sol":3807:3808  0 */
              dup1
                /* "node_modules/solmate/src/utils/SafeTransferLib.sol":3800:3805  token */
              dup10
                /* "node_modules/solmate/src/utils/SafeTransferLib.sol":3793:3798  gas() */
              gas
                /* "node_modules/solmate/src/utils/SafeTransferLib.sol":3788:3823  call(gas(), token, 0, 0, 68, 0, 32) */
              call
                /* "node_modules/solmate/src/utils/SafeTransferLib.sol":3475:3491  returndatasize() */
              returndatasize
                /* "node_modules/solmate/src/utils/SafeTransferLib.sol":3468:3492  iszero(returndatasize()) */
              iszero
                /* "node_modules/solmate/src/utils/SafeTransferLib.sol":3462:3464  31 */
              0x1f
                /* "node_modules/solmate/src/utils/SafeTransferLib.sol":3444:3460  returndatasize() */
              returndatasize
                /* "node_modules/solmate/src/utils/SafeTransferLib.sol":3441:3465  gt(returndatasize(), 31) */
              gt
                /* "node_modules/solmate/src/utils/SafeTransferLib.sol":3437:3438  1 */
              0x01
                /* "node_modules/solmate/src/utils/SafeTransferLib.sol":3433:3434  0 */
              0x00
                /* "node_modules/solmate/src/utils/SafeTransferLib.sol":3427:3435  mload(0) */
              mload
                /* "node_modules/solmate/src/utils/SafeTransferLib.sol":3424:3439  eq(mload(0), 1) */
              eq
                /* "node_modules/solmate/src/utils/SafeTransferLib.sol":3420:3466  and(eq(mload(0), 1), gt(returndatasize(), 31)) */
              and
                /* "node_modules/solmate/src/utils/SafeTransferLib.sol":3417:3493  or(and(eq(mload(0), 1), gt(returndatasize(), 31)), iszero(returndatasize())) */
              or
                /* "node_modules/solmate/src/utils/SafeTransferLib.sol":3217:3837  and(... */
              and
                /* "node_modules/solmate/src/utils/SafeTransferLib.sol":3206:3837  success := and(... */
              swap2
              pop
                /* "node_modules/solmate/src/utils/SafeTransferLib.sol":3864:3865  0 */
              0x00
                /* "node_modules/solmate/src/utils/SafeTransferLib.sol":3858:3862  0x60 */
              0x60
                /* "node_modules/solmate/src/utils/SafeTransferLib.sol":3851:3866  mstore(0x60, 0) */
              mstore
                /* "node_modules/solmate/src/utils/SafeTransferLib.sol":3926:3936  memPointer */
              dup1
                /* "node_modules/solmate/src/utils/SafeTransferLib.sol":3920:3924  0x40 */
              0x40
                /* "node_modules/solmate/src/utils/SafeTransferLib.sol":3913:3937  mstore(0x40, memPointer) */
              mstore
              pop
                /* "node_modules/solmate/src/utils/SafeTransferLib.sol":3992:3999  success */
              dup1
                /* "node_modules/solmate/src/utils/SafeTransferLib.sol":3984:4019  require(success, "TRANSFER_FAILED") */
              tag_618
              jumpi
              0x00
              dup1
              revert
            tag_618:
                /* "node_modules/solmate/src/utils/SafeTransferLib.sol":2718:4026  {... */
              pop
                /* "node_modules/solmate/src/utils/SafeTransferLib.sol":2616:4026  function safeTransfer(... */
              pop
              pop
              pop
              jump	// out
                /* "contracts/RewardsController.sol":19428:24809  function previewAllocation(... */
            tag_504:
                /* "contracts/RewardsController.sol":19559:19578  uint256 borrowIndex */
              0x00
                /* "contracts/RewardsController.sol":19580:19600  uint256 depositIndex */
              dup1
                /* "contracts/RewardsController.sol":19602:19626  uint256 newUndistributed */
              0x00
                /* "contracts/RewardsController.sol":19634:19661  TotalMarketBalance memory m */
              tag_620
              mload(0x40)
              dup1
              0x60
              add
              0x40
              mstore
              dup1
              0x00
              dup2
              mstore
              0x20
              add
              0x00
              dup2
              mstore
              0x20
              add
              0x00
              dup2
              mstore
              pop
              swap1
              jump
            tag_620:
                /* "contracts/RewardsController.sol":19676:19682  market */
              dup6
              sub(shl(0xa0, 0x01), 0x01)
                /* "contracts/RewardsController.sol":19676:19708  market.totalFloatingBorrowAssets */
              and
              0xeee8c9e0
                /* "contracts/RewardsController.sol":19676:19710  market.totalFloatingBorrowAssets() */
              mload(0x40)
              dup2
              0xffffffff
              and
              0xe0
              shl
              dup2
              mstore
              0x04
              add
              0x20
              mload(0x40)
              dup1
              dup4
              sub
              dup2
              dup7
              gas
              staticcall
              iszero
              dup1
              iszero
              tag_623
              jumpi
              returndatasize
              0x00
              dup1
              returndatacopy
              revert(0x00, returndatasize)
            tag_623:
              pop
              pop
              pop
              pop
              mload(0x40)
              returndatasize
              not(0x1f)
              0x1f
              dup3
              add
              and
              dup3
              add
              dup1
              0x40
              mstore
              pop
              dup2
              add
              swap1
              tag_624
              swap2
              swap1
              tag_183
              jump	// in
            tag_624:
                /* "contracts/RewardsController.sol":19667:19668  m */
              dup2
                /* "contracts/RewardsController.sol":19667:19673  m.debt */
              0x00
              add
                /* "contracts/RewardsController.sol":19667:19710  m.debt = market.totalFloatingBorrowAssets() */
              dup2
              dup2
              mstore
              pop
              pop
                /* "contracts/RewardsController.sol":19727:19733  market */
              dup6
              sub(shl(0xa0, 0x01), 0x01)
                /* "contracts/RewardsController.sol":19727:19745  market.totalAssets */
              and
              0x01e1d114
                /* "contracts/RewardsController.sol":19727:19747  market.totalAssets() */
              mload(0x40)
              dup2
              0xffffffff
              and
              0xe0
              shl
              dup2
              mstore
              0x04
              add
              0x20
              mload(0x40)
              dup1
              dup4
              sub
              dup2
              dup7
              gas
              staticcall
              iszero
              dup1
              iszero
              tag_626
              jumpi
              returndatasize
              0x00
              dup1
              returndatacopy
              revert(0x00, returndatasize)
            tag_626:
              pop
              pop
              pop
              pop
              mload(0x40)
              returndatasize
              not(0x1f)
              0x1f
              dup3
              add
              and
              dup3
              add
              dup1
              0x40
              mstore
              pop
              dup2
              add
              swap1
              tag_627
              swap2
              swap1
              tag_183
              jump	// in
            tag_627:
                /* "contracts/RewardsController.sol":19716:19717  m */
              dup2
                /* "contracts/RewardsController.sol":19716:19724  m.supply */
              0x20
              add
                /* "contracts/RewardsController.sol":19716:19747  m.supply = market.totalAssets() */
              dup2
              dup2
              mstore
              pop
              pop
                /* "contracts/RewardsController.sol":19753:19770  TimeVars memory t */
              tag_628
              mload(0x40)
              dup1
              0x60
              add
              0x40
              mstore
              dup1
              0x00
              dup2
              mstore
              0x20
              add
              0x00
              dup2
              mstore
              0x20
              add
              0x00
              dup2
              mstore
              pop
              swap1
              jump
            tag_628:
                /* "contracts/RewardsController.sol":19786:19802  rewardData.start */
              0x08
              dup9
              add
              sload
              0xffffffff
              dup1
              dup3
              and
                /* "contracts/RewardsController.sol":19776:19802  t.start = rewardData.start */
              dup1
              dup5
              mstore
                /* "contracts/RewardsController.sol":19816:19830  rewardData.end */
              0x0100000000
              swap1
              swap3
              div
              and
                /* "contracts/RewardsController.sol":19808:19813  t.end */
              0x20
              dup4
              add
                /* "contracts/RewardsController.sol":19808:19830  t.end = rewardData.end */
              mstore
                /* "contracts/RewardsController.sol":19786:19802  rewardData.start */
              0x00
              swap1
                /* "contracts/utils/FixedLib.sol":306:313  4 weeks */
              0x24ea00
              swap1
                /* "contracts/RewardsController.sol":19879:19906  t.start % FixedLib.INTERVAL */
              tag_630
              swap1
                /* "contracts/utils/FixedLib.sol":306:313  4 weeks */
              dup3
              swap1
                /* "contracts/RewardsController.sol":19879:19906  t.start % FixedLib.INTERVAL */
              tag_589
              jump	// in
            tag_630:
                /* "contracts/RewardsController.sol":19868:19875  t.start */
              dup4
              mload
                /* "contracts/RewardsController.sol":19868:19907  t.start - (t.start % FixedLib.INTERVAL) */
              tag_631
              swap2
              swap1
              tag_427
              jump	// in
            tag_631:
                /* "contracts/RewardsController.sol":19868:19927  t.start - (t.start % FixedLib.INTERVAL) + FixedLib.INTERVAL */
              tag_632
              swap2
              swap1
              tag_230
              jump	// in
            tag_632:
                /* "contracts/RewardsController.sol":19844:19927  uint256 firstMaturity = t.start - (t.start % FixedLib.INTERVAL) + FixedLib.INTERVAL */
              swap1
              pop
                /* "contracts/RewardsController.sol":19935:19954  uint256 maxMaturity */
              0x00
                /* "contracts/RewardsController.sol":20052:20058  market */
              dup9
              sub(shl(0xa0, 0x01), 0x01)
                /* "contracts/RewardsController.sol":20052:20073  market.maxFuturePools */
              and
              0x0e52dbec
                /* "contracts/RewardsController.sol":20052:20075  market.maxFuturePools() */
              mload(0x40)
              dup2
              0xffffffff
              and
              0xe0
              shl
              dup2
              mstore
              0x04
              add
              0x20
              mload(0x40)
              dup1
              dup4
              sub
              dup2
              dup7
              gas
              staticcall
              iszero
              dup1
              iszero
              tag_634
              jumpi
              returndatasize
              0x00
              dup1
              returndatacopy
              revert(0x00, returndatasize)
            tag_634:
              pop
              pop
              pop
              pop
              mload(0x40)
              returndatasize
              not(0x1f)
              0x1f
              dup3
              add
              and
              dup3
              add
              dup1
              0x40
              mstore
              pop
              dup2
              add
              swap1
              tag_635
              swap2
              swap1
              tag_397
              jump	// in
            tag_635:
                /* "contracts/RewardsController.sol":20032:20075  FixedLib.INTERVAL * market.maxFuturePools() */
              tag_636
              swap1
              0xff
              and
                /* "contracts/utils/FixedLib.sol":306:313  4 weeks */
              0x24ea00
                /* "contracts/RewardsController.sol":20032:20075  FixedLib.INTERVAL * market.maxFuturePools() */
              tag_429
              jump	// in
            tag_636:
                /* "contracts/RewardsController.sol":19984:20019  block.timestamp % FixedLib.INTERVAL */
              tag_637
                /* "contracts/utils/FixedLib.sol":306:313  4 weeks */
              0x24ea00
                /* "contracts/RewardsController.sol":19984:19999  block.timestamp */
              timestamp
                /* "contracts/RewardsController.sol":19984:20019  block.timestamp % FixedLib.INTERVAL */
              tag_589
              jump	// in
            tag_637:
                /* "contracts/RewardsController.sol":19957:20020  block.timestamp -... */
              tag_638
              swap1
                /* "contracts/RewardsController.sol":19957:19972  block.timestamp */
              timestamp
                /* "contracts/RewardsController.sol":19957:20020  block.timestamp -... */
              tag_427
              jump	// in
            tag_638:
                /* "contracts/RewardsController.sol":19957:20076  block.timestamp -... */
              tag_639
              swap2
              swap1
              tag_230
              jump	// in
            tag_639:
                /* "contracts/RewardsController.sol":19935:20076  uint256 maxMaturity = block.timestamp -... */
              swap1
              pop
                /* "contracts/RewardsController.sol":20084:20101  uint256 fixedDebt */
              0x00
                /* "contracts/RewardsController.sol":20133:20146  firstMaturity */
              dup3
                /* "contracts/RewardsController.sol":20109:20398  for (uint256 maturity = firstMaturity; maturity <= maxMaturity; ) {... */
            tag_640:
                /* "contracts/RewardsController.sol":20160:20171  maxMaturity */
              dup3
                /* "contracts/RewardsController.sol":20148:20156  maturity */
              dup2
                /* "contracts/RewardsController.sol":20148:20171  maturity <= maxMaturity */
              gt
                /* "contracts/RewardsController.sol":20109:20398  for (uint256 maturity = firstMaturity; maturity <= maxMaturity; ) {... */
              tag_641
              jumpi
                /* "contracts/RewardsController.sol":20224:20257  market.fixedPoolBalance(maturity) */
              mload(0x40)
              shl(0xe3, 0x0156d37d)
              dup2
              mstore
              0x04
              dup2
              add
                /* "#utility.yul":1963:1988   */
              dup3
              swap1
              mstore
                /* "contracts/RewardsController.sol":20186:20202  uint256 borrowed */
              0x00
              swap1
              dup2
              swap1
              sub(shl(0xa0, 0x01), 0x01)
                /* "contracts/RewardsController.sol":20224:20247  market.fixedPoolBalance */
              dup15
              and
              swap1
              0x0ab69be8
              swap1
                /* "#utility.yul":1936:1954   */
              0x24
              add
                /* "contracts/RewardsController.sol":20224:20257  market.fixedPoolBalance(maturity) */
              0x40
              dup1
              mload
              dup1
              dup4
              sub
              dup2
              dup7
              gas
              staticcall
              iszero
              dup1
              iszero
              tag_645
              jumpi
              returndatasize
              0x00
              dup1
              returndatacopy
              revert(0x00, returndatasize)
            tag_645:
              pop
              pop
              pop
              pop
              mload(0x40)
              returndatasize
              not(0x1f)
              0x1f
              dup3
              add
              and
              dup3
              add
              dup1
              0x40
              mstore
              pop
              dup2
              add
              swap1
              tag_646
              swap2
              swap1
              tag_607
              jump	// in
            tag_646:
                /* "contracts/RewardsController.sol":20185:20257  (uint256 borrowed, uint256 supplied) = market.fixedPoolBalance(maturity) */
              swap1
              swap3
              pop
              swap1
              pop
                /* "contracts/RewardsController.sol":20267:20288  fixedDebt += borrowed */
              tag_647
                /* "contracts/RewardsController.sol":20185:20257  (uint256 borrowed, uint256 supplied) = market.fixedPoolBalance(maturity) */
              dup3
                /* "contracts/RewardsController.sol":20267:20288  fixedDebt += borrowed */
              dup6
              tag_230
              jump	// in
            tag_647:
              swap4
              pop
                /* "contracts/RewardsController.sol":20310:20318  supplied */
              dup1
                /* "contracts/RewardsController.sol":20298:20299  m */
              dup9
                /* "contracts/RewardsController.sol":20298:20306  m.supply */
              0x20
              add
                /* "contracts/RewardsController.sol":20298:20318  m.supply += supplied */
              dup2
              dup2
              mload
              tag_648
              swap2
              swap1
              tag_230
              jump	// in
            tag_648:
              swap1
              mstore
              pop
              pop
              pop
                /* "contracts/utils/FixedLib.sol":306:313  4 weeks */
              0x24ea00
                /* "contracts/RewardsController.sol":20350:20379  maturity += FixedLib.INTERVAL */
              add
                /* "contracts/RewardsController.sol":20109:20398  for (uint256 maturity = firstMaturity; maturity <= maxMaturity; ) {... */
              jump(tag_640)
            tag_641:
              pop
                /* "contracts/RewardsController.sol":20415:20424  fixedDebt */
              dup1
                /* "contracts/RewardsController.sol":20405:20406  m */
              dup6
                /* "contracts/RewardsController.sol":20405:20411  m.debt */
              0x00
              add
                /* "contracts/RewardsController.sol":20405:20424  m.debt += fixedDebt */
              dup2
              dup2
              mload
              tag_649
              swap2
              swap1
              tag_230
              jump	// in
            tag_649:
              swap1
              mstore
              pop
                /* "contracts/RewardsController.sol":20454:20484  market.previewRepay(fixedDebt) */
              mload(0x40)
              shl(0xe1, 0x5fb91651)
              dup2
              mstore
              0x04
              dup2
              add
                /* "#utility.yul":1963:1988   */
              dup3
              swap1
              mstore
              sub(shl(0xa0, 0x01), 0x01)
                /* "contracts/RewardsController.sol":20454:20473  market.previewRepay */
              dup12
              and
              swap1
              0xbf722ca2
              swap1
                /* "#utility.yul":1936:1954   */
              0x24
              add
                /* "contracts/RewardsController.sol":20454:20484  market.previewRepay(fixedDebt) */
              0x20
              mload(0x40)
              dup1
              dup4
              sub
              dup2
              dup7
              gas
              staticcall
              iszero
              dup1
              iszero
              tag_652
              jumpi
              returndatasize
              0x00
              dup1
              returndatacopy
              revert(0x00, returndatasize)
            tag_652:
              pop
              pop
              pop
              pop
              mload(0x40)
              returndatasize
              not(0x1f)
              0x1f
              dup3
              add
              and
              dup3
              add
              dup1
              0x40
              mstore
              pop
              dup2
              add
              swap1
              tag_653
              swap2
              swap1
              tag_183
              jump	// in
            tag_653:
                /* "contracts/RewardsController.sol":20432:20451  m.fixedBorrowShares */
              0x40
              dup7
              add
                /* "contracts/RewardsController.sol":20432:20484  m.fixedBorrowShares = market.previewRepay(fixedDebt) */
              mstore
              pop
              pop
                /* "contracts/RewardsController.sol":20545:20566  rewardData.targetDebt */
              dup9
              sload
                /* "contracts/RewardsController.sol":20583:20589  m.debt */
              dup4
              mload
                /* "contracts/RewardsController.sol":20496:20510  uint256 target */
              0x00
              swap3
              pop
                /* "contracts/RewardsController.sol":20583:20602  m.debt < targetDebt */
              dup2
              gt
                /* "contracts/RewardsController.sol":20583:20641  m.debt < targetDebt ? m.debt.divWadDown(targetDebt) : 1e18 */
              tag_654
              jumpi
                /* "contracts/RewardsController.sol":20637:20641  1e18 */
              0x0de0b6b3a7640000
                /* "contracts/RewardsController.sol":20583:20641  m.debt < targetDebt ? m.debt.divWadDown(targetDebt) : 1e18 */
              jump(tag_656)
            tag_654:
                /* "contracts/RewardsController.sol":20605:20611  m.debt */
              dup4
              mload
                /* "contracts/RewardsController.sol":20605:20634  m.debt.divWadDown(targetDebt) */
              tag_656
              swap1
                /* "contracts/RewardsController.sol":20623:20633  targetDebt */
              dup3
                /* "contracts/RewardsController.sol":20605:20622  m.debt.divWadDown */
              tag_657
                /* "contracts/RewardsController.sol":20605:20634  m.debt.divWadDown(targetDebt) */
              jump	// in
            tag_656:
                /* "contracts/RewardsController.sol":20704:20726  rewardData.releaseRate */
              0x01
              dup12
              add
              sload
                /* "contracts/RewardsController.sol":20762:20790  rewardData.lastUndistributed */
              0x04
              dup13
              add
              sload
                /* "contracts/RewardsController.sol":20817:20824  t.start */
              dup6
              mload
                /* "contracts/RewardsController.sol":20809:20814  t.end */
              0x20
              dup8
              add
              mload
                /* "contracts/RewardsController.sol":20574:20641  target = m.debt < targetDebt ? m.debt.divWadDown(targetDebt) : 1e18 */
              swap4
              swap6
              pop
                /* "contracts/RewardsController.sol":20653:20668  uint256 rewards */
              0x00
              swap5
              pop
                /* "contracts/RewardsController.sol":20704:20726  rewardData.releaseRate */
              swap2
              swap3
                /* "contracts/RewardsController.sol":20762:20790  rewardData.lastUndistributed */
              swap1
              swap2
                /* "contracts/RewardsController.sol":20809:20824  t.end - t.start */
              tag_658
              swap2
              tag_427
              jump	// in
            tag_658:
                /* "contracts/RewardsController.sol":20798:20806  t.period */
              0x40
              dup7
              add
                /* "contracts/RewardsController.sol":20798:20824  t.period = t.end - t.start */
              dup2
              swap1
              mstore
                /* "contracts/RewardsController.sol":20832:20858  uint256 distributionFactor */
              0x00
              swap1
                /* "contracts/RewardsController.sol":20861:20962  t.period > 0... */
              tag_659
              jumpi
                /* "contracts/RewardsController.sol":20961:20962  0 */
              0x00
                /* "contracts/RewardsController.sol":20861:20962  t.period > 0... */
              jump(tag_661)
            tag_659:
                /* "contracts/RewardsController.sol":20884:20950  rewardData.undistributedFactor.mulDivDown(target, t.period * 1e18) */
              tag_661
                /* "contracts/RewardsController.sol":20926:20932  target */
              dup6
                /* "contracts/RewardsController.sol":20934:20935  t */
              dup8
                /* "contracts/RewardsController.sol":20934:20942  t.period */
              0x40
              add
              mload
                /* "contracts/RewardsController.sol":20945:20949  1e18 */
              0x0de0b6b3a7640000
                /* "contracts/RewardsController.sol":20934:20949  t.period * 1e18 */
              tag_662
              swap2
              swap1
              tag_429
              jump	// in
            tag_662:
                /* "contracts/RewardsController.sol":20884:20894  rewardData */
              dup16
                /* "contracts/RewardsController.sol":20884:20914  rewardData.undistributedFactor */
              0x03
              add
              sload
                /* "contracts/RewardsController.sol":20884:20925  rewardData.undistributedFactor.mulDivDown */
              tag_663
              swap1
                /* "contracts/RewardsController.sol":20884:20950  rewardData.undistributedFactor.mulDivDown(target, t.period * 1e18) */
              swap3
              swap2
              swap1
              0xffffffff
              and
              jump	// in
            tag_661:
                /* "contracts/RewardsController.sol":20832:20962  uint256 distributionFactor = t.period > 0... */
              swap1
              pop
                /* "contracts/RewardsController.sol":20993:20994  t */
              dup6
                /* "contracts/RewardsController.sol":20993:20998  t.end */
              0x20
              add
              mload
                /* "contracts/RewardsController.sol":20974:20989  block.timestamp */
              timestamp
                /* "contracts/RewardsController.sol":20974:20998  block.timestamp <= t.end */
              gt
                /* "contracts/RewardsController.sol":20970:22705  if (block.timestamp <= t.end) {... */
              tag_664
              jumpi
                /* "contracts/RewardsController.sol":21014:21036  distributionFactor > 0 */
              dup1
              iszero
                /* "contracts/RewardsController.sol":21010:21444  if (distributionFactor > 0) {... */
              tag_665
              jumpi
                /* "contracts/RewardsController.sol":21050:21069  uint256 exponential */
              0x00
                /* "contracts/RewardsController.sol":21080:21130  (-int256(distributionFactor * deltaTime)).expWad() */
              tag_666
                /* "contracts/RewardsController.sol":21089:21119  distributionFactor * deltaTime */
              tag_667
                /* "contracts/RewardsController.sol":21110:21119  deltaTime */
              dup14
                /* "contracts/RewardsController.sol":21089:21107  distributionFactor */
              dup5
                /* "contracts/RewardsController.sol":21089:21119  distributionFactor * deltaTime */
              tag_429
              jump	// in
            tag_667:
                /* "contracts/RewardsController.sol":21081:21120  -int256(distributionFactor * deltaTime) */
              tag_668
              swap1
              tag_669
              jump	// in
            tag_668:
                /* "contracts/RewardsController.sol":21080:21128  (-int256(distributionFactor * deltaTime)).expWad */
              tag_670
                /* "contracts/RewardsController.sol":21080:21130  (-int256(distributionFactor * deltaTime)).expWad() */
              jump	// in
            tag_666:
                /* "contracts/RewardsController.sol":21050:21131  uint256 exponential = uint256((-int256(distributionFactor * deltaTime)).expWad()) */
              swap1
              pop
                /* "contracts/RewardsController.sol":21230:21316  releaseRate.mulDivDown(1e18 - target, distributionFactor).mulWadUp(1e18 - exponential) */
              tag_671
                /* "contracts/RewardsController.sol":21297:21315  1e18 - exponential */
              tag_672
                /* "contracts/RewardsController.sol":21050:21131  uint256 exponential = uint256((-int256(distributionFactor * deltaTime)).expWad()) */
              dup3
                /* "contracts/RewardsController.sol":21297:21301  1e18 */
              0x0de0b6b3a7640000
                /* "contracts/RewardsController.sol":21297:21315  1e18 - exponential */
              tag_427
              jump	// in
            tag_672:
                /* "contracts/RewardsController.sol":21230:21287  releaseRate.mulDivDown(1e18 - target, distributionFactor) */
              tag_673
                /* "contracts/RewardsController.sol":21253:21266  1e18 - target */
              tag_674
                /* "contracts/RewardsController.sol":21260:21266  target */
              dup10
                /* "contracts/RewardsController.sol":21253:21257  1e18 */
              0x0de0b6b3a7640000
                /* "contracts/RewardsController.sol":21253:21266  1e18 - target */
              tag_427
              jump	// in
            tag_674:
                /* "contracts/RewardsController.sol":21230:21241  releaseRate */
              dup8
              swap1
                /* "contracts/RewardsController.sol":21268:21286  distributionFactor */
              dup7
                /* "contracts/RewardsController.sol":21230:21252  releaseRate.mulDivDown */
              tag_663
                /* "contracts/RewardsController.sol":21230:21287  releaseRate.mulDivDown(1e18 - target, distributionFactor) */
              jump	// in
            tag_673:
                /* "contracts/RewardsController.sol":21230:21296  releaseRate.mulDivDown(1e18 - target, distributionFactor).mulWadUp */
              swap1
              tag_675
                /* "contracts/RewardsController.sol":21230:21316  releaseRate.mulDivDown(1e18 - target, distributionFactor).mulWadUp(1e18 - exponential) */
              jump	// in
            tag_671:
                /* "contracts/RewardsController.sol":21174:21215  lastUndistributed.mulWadDown(exponential) */
              tag_676
                /* "contracts/RewardsController.sol":21174:21191  lastUndistributed */
              dup5
                /* "contracts/RewardsController.sol":21203:21214  exponential */
              dup4
                /* "contracts/RewardsController.sol":21174:21202  lastUndistributed.mulWadDown */
              tag_677
                /* "contracts/RewardsController.sol":21174:21215  lastUndistributed.mulWadDown(exponential) */
              jump	// in
            tag_676:
                /* "contracts/RewardsController.sol":21174:21316  lastUndistributed.mulWadDown(exponential) +... */
              tag_678
              swap2
              swap1
              tag_230
              jump	// in
            tag_678:
                /* "contracts/RewardsController.sol":21143:21316  newUndistributed =... */
              swap9
              pop
                /* "contracts/RewardsController.sol":21038:21327  {... */
              pop
                /* "contracts/RewardsController.sol":21010:21444  if (distributionFactor > 0) {... */
              jump(tag_679)
            tag_665:
                /* "contracts/RewardsController.sol":21424:21433  deltaTime */
              dup11
                /* "contracts/RewardsController.sol":21384:21421  releaseRate.mulWadDown(1e18 - target) */
              tag_680
                /* "contracts/RewardsController.sol":21407:21420  1e18 - target */
              tag_681
                /* "contracts/RewardsController.sol":21414:21420  target */
              dup8
                /* "contracts/RewardsController.sol":21407:21411  1e18 */
              0x0de0b6b3a7640000
                /* "contracts/RewardsController.sol":21407:21420  1e18 - target */
              tag_427
              jump	// in
            tag_681:
                /* "contracts/RewardsController.sol":21384:21395  releaseRate */
              dup6
              swap1
                /* "contracts/RewardsController.sol":21384:21406  releaseRate.mulWadDown */
              tag_677
                /* "contracts/RewardsController.sol":21384:21421  releaseRate.mulWadDown(1e18 - target) */
              jump	// in
            tag_680:
                /* "contracts/RewardsController.sol":21384:21433  releaseRate.mulWadDown(1e18 - target) * deltaTime */
              tag_682
              swap2
              swap1
              tag_429
              jump	// in
            tag_682:
                /* "contracts/RewardsController.sol":21364:21433  lastUndistributed + releaseRate.mulWadDown(1e18 - target) * deltaTime */
              tag_683
              swap1
                /* "contracts/RewardsController.sol":21364:21381  lastUndistributed */
              dup4
                /* "contracts/RewardsController.sol":21364:21433  lastUndistributed + releaseRate.mulWadDown(1e18 - target) * deltaTime */
              tag_230
              jump	// in
            tag_683:
                /* "contracts/RewardsController.sol":21345:21433  newUndistributed = lastUndistributed + releaseRate.mulWadDown(1e18 - target) * deltaTime */
              swap8
              pop
                /* "contracts/RewardsController.sol":21010:21444  if (distributionFactor > 0) {... */
            tag_679:
                /* "contracts/RewardsController.sol":21506:21558  int256(newUndistributed) - int256(lastUndistributed) */
              tag_684
                /* "contracts/RewardsController.sol":21540:21557  lastUndistributed */
              dup3
                /* "contracts/RewardsController.sol":21513:21529  newUndistributed */
              dup10
                /* "contracts/RewardsController.sol":21506:21558  int256(newUndistributed) - int256(lastUndistributed) */
              tag_685
              jump	// in
            tag_684:
                /* "contracts/RewardsController.sol":21478:21501  releaseRate * deltaTime */
              tag_686
                /* "contracts/RewardsController.sol":21492:21501  deltaTime */
              dup13
                /* "contracts/RewardsController.sol":21478:21489  releaseRate */
              dup6
                /* "contracts/RewardsController.sol":21478:21501  releaseRate * deltaTime */
              tag_429
              jump	// in
            tag_686:
                /* "contracts/RewardsController.sol":21471:21559  int256(releaseRate * deltaTime) - (int256(newUndistributed) - int256(lastUndistributed)) */
              tag_687
              swap2
              swap1
              tag_685
              jump	// in
            tag_687:
                /* "contracts/RewardsController.sol":21453:21560  rewards = uint256(int256(releaseRate * deltaTime) - (int256(newUndistributed) - int256(lastUndistributed))) */
              swap4
              pop
                /* "contracts/RewardsController.sol":20970:22705  if (block.timestamp <= t.end) {... */
              jump(tag_698)
            tag_664:
                /* "contracts/RewardsController.sol":21603:21608  t.end */
              0x20
              dup7
              add
              mload
                /* "contracts/RewardsController.sol":21579:21600  rewardData.lastUpdate */
              0x08
              dup15
              add
              sload
              shl(0x40, 0x01)
              swap1
              div
              0xffffffff
              and
                /* "contracts/RewardsController.sol":21579:21608  rewardData.lastUpdate > t.end */
              gt
                /* "contracts/RewardsController.sol":21575:22705  if (rewardData.lastUpdate > t.end) {... */
              iszero
              tag_689
              jumpi
                /* "contracts/RewardsController.sol":21679:21773  lastUndistributed.mulWadUp(1e18 - uint256((-int256(distributionFactor * deltaTime)).expWad())) */
              tag_690
                /* "contracts/RewardsController.sol":21721:21771  (-int256(distributionFactor * deltaTime)).expWad() */
              tag_691
                /* "contracts/RewardsController.sol":21730:21760  distributionFactor * deltaTime */
              tag_667
                /* "contracts/RewardsController.sol":21751:21760  deltaTime */
              dup14
                /* "contracts/RewardsController.sol":21730:21748  distributionFactor */
              dup5
                /* "contracts/RewardsController.sol":21730:21760  distributionFactor * deltaTime */
              tag_429
              jump	// in
                /* "contracts/RewardsController.sol":21721:21771  (-int256(distributionFactor * deltaTime)).expWad() */
            tag_691:
                /* "contracts/RewardsController.sol":21706:21772  1e18 - uint256((-int256(distributionFactor * deltaTime)).expWad()) */
              tag_694
              swap1
                /* "contracts/RewardsController.sol":21706:21710  1e18 */
              0x0de0b6b3a7640000
                /* "contracts/RewardsController.sol":21706:21772  1e18 - uint256((-int256(distributionFactor * deltaTime)).expWad()) */
              tag_427
              jump	// in
            tag_694:
                /* "contracts/RewardsController.sol":21679:21696  lastUndistributed */
              dup4
              swap1
                /* "contracts/RewardsController.sol":21679:21705  lastUndistributed.mulWadUp */
              tag_675
                /* "contracts/RewardsController.sol":21679:21773  lastUndistributed.mulWadUp(1e18 - uint256((-int256(distributionFactor * deltaTime)).expWad())) */
              jump	// in
            tag_690:
                /* "contracts/RewardsController.sol":21649:21773  lastUndistributed -... */
              tag_695
              swap1
                /* "contracts/RewardsController.sol":21649:21666  lastUndistributed */
              dup4
                /* "contracts/RewardsController.sol":21649:21773  lastUndistributed -... */
              tag_427
              jump	// in
            tag_695:
                /* "contracts/RewardsController.sol":21620:21773  newUndistributed =... */
              swap8
              pop
                /* "contracts/RewardsController.sol":21803:21855  int256(newUndistributed) - int256(lastUndistributed) */
              tag_696
                /* "contracts/RewardsController.sol":21837:21854  lastUndistributed */
              dup3
                /* "contracts/RewardsController.sol":21620:21773  newUndistributed =... */
              dup10
                /* "contracts/RewardsController.sol":21803:21855  int256(newUndistributed) - int256(lastUndistributed) */
              tag_685
              jump	// in
            tag_696:
                /* "contracts/RewardsController.sol":21801:21856  -(int256(newUndistributed) - int256(lastUndistributed)) */
              tag_687
              swap1
              tag_669
              jump	// in
                /* "contracts/RewardsController.sol":21575:22705  if (rewardData.lastUpdate > t.end) {... */
            tag_689:
                /* "contracts/RewardsController.sol":21931:21952  rewardData.lastUpdate */
              0x08
              dup14
              add
              sload
                /* "contracts/RewardsController.sol":21923:21928  t.end */
              0x20
              dup8
              add
              mload
                /* "contracts/RewardsController.sol":21882:21901  uint256 exponential */
              0x00
              swap2
                /* "contracts/RewardsController.sol":21923:21952  t.end - rewardData.lastUpdate */
              tag_699
              swap2
              shl(0x40, 0x01)
                /* "contracts/RewardsController.sol":21931:21952  rewardData.lastUpdate */
              swap1
              swap2
              div
              0xffffffff
              and
              swap1
                /* "contracts/RewardsController.sol":21923:21952  t.end - rewardData.lastUpdate */
              tag_427
              jump	// in
            tag_699:
                /* "contracts/RewardsController.sol":21911:21952  deltaTime = t.end - rewardData.lastUpdate */
              swap12
              pop
                /* "contracts/RewardsController.sol":21966:21988  distributionFactor > 0 */
              dup2
              iszero
                /* "contracts/RewardsController.sol":21962:22388  if (distributionFactor > 0) {... */
              tag_700
              jumpi
                /* "contracts/RewardsController.sol":22024:22074  (-int256(distributionFactor * deltaTime)).expWad() */
              tag_701
                /* "contracts/RewardsController.sol":22033:22063  distributionFactor * deltaTime */
              tag_667
                /* "contracts/RewardsController.sol":22054:22063  deltaTime */
              dup14
                /* "contracts/RewardsController.sol":22033:22051  distributionFactor */
              dup5
                /* "contracts/RewardsController.sol":22033:22063  distributionFactor * deltaTime */
              tag_429
              jump	// in
                /* "contracts/RewardsController.sol":22024:22074  (-int256(distributionFactor * deltaTime)).expWad() */
            tag_701:
                /* "contracts/RewardsController.sol":22002:22075  exponential = uint256((-int256(distributionFactor * deltaTime)).expWad()) */
              swap1
              pop
                /* "contracts/RewardsController.sol":22174:22260  releaseRate.mulDivDown(1e18 - target, distributionFactor).mulWadUp(1e18 - exponential) */
              tag_704
                /* "contracts/RewardsController.sol":22241:22259  1e18 - exponential */
              tag_672
                /* "contracts/RewardsController.sol":22002:22075  exponential = uint256((-int256(distributionFactor * deltaTime)).expWad()) */
              dup3
                /* "contracts/RewardsController.sol":22241:22245  1e18 */
              0x0de0b6b3a7640000
                /* "contracts/RewardsController.sol":22241:22259  1e18 - exponential */
              tag_427
              jump	// in
                /* "contracts/RewardsController.sol":22174:22260  releaseRate.mulDivDown(1e18 - target, distributionFactor).mulWadUp(1e18 - exponential) */
            tag_704:
                /* "contracts/RewardsController.sol":22118:22159  lastUndistributed.mulWadDown(exponential) */
              tag_708
                /* "contracts/RewardsController.sol":22118:22135  lastUndistributed */
              dup5
                /* "contracts/RewardsController.sol":22147:22158  exponential */
              dup4
                /* "contracts/RewardsController.sol":22118:22146  lastUndistributed.mulWadDown */
              tag_677
                /* "contracts/RewardsController.sol":22118:22159  lastUndistributed.mulWadDown(exponential) */
              jump	// in
            tag_708:
                /* "contracts/RewardsController.sol":22118:22260  lastUndistributed.mulWadDown(exponential) +... */
              tag_709
              swap2
              swap1
              tag_230
              jump	// in
            tag_709:
                /* "contracts/RewardsController.sol":22087:22260  newUndistributed =... */
              swap9
              pop
                /* "contracts/RewardsController.sol":21962:22388  if (distributionFactor > 0) {... */
              jump(tag_710)
            tag_700:
                /* "contracts/RewardsController.sol":22368:22377  deltaTime */
              dup12
                /* "contracts/RewardsController.sol":22328:22365  releaseRate.mulWadDown(1e18 - target) */
              tag_711
                /* "contracts/RewardsController.sol":22351:22364  1e18 - target */
              tag_712
                /* "contracts/RewardsController.sol":22358:22364  target */
              dup9
                /* "contracts/RewardsController.sol":22351:22355  1e18 */
              0x0de0b6b3a7640000
                /* "contracts/RewardsController.sol":22351:22364  1e18 - target */
              tag_427
              jump	// in
            tag_712:
                /* "contracts/RewardsController.sol":22328:22339  releaseRate */
              dup7
              swap1
                /* "contracts/RewardsController.sol":22328:22350  releaseRate.mulWadDown */
              tag_677
                /* "contracts/RewardsController.sol":22328:22365  releaseRate.mulWadDown(1e18 - target) */
              jump	// in
            tag_711:
                /* "contracts/RewardsController.sol":22328:22377  releaseRate.mulWadDown(1e18 - target) * deltaTime */
              tag_713
              swap2
              swap1
              tag_429
              jump	// in
            tag_713:
                /* "contracts/RewardsController.sol":22308:22377  lastUndistributed + releaseRate.mulWadDown(1e18 - target) * deltaTime */
              tag_714
              swap1
                /* "contracts/RewardsController.sol":22308:22325  lastUndistributed */
              dup5
                /* "contracts/RewardsController.sol":22308:22377  lastUndistributed + releaseRate.mulWadDown(1e18 - target) * deltaTime */
              tag_230
              jump	// in
            tag_714:
                /* "contracts/RewardsController.sol":22289:22377  newUndistributed = lastUndistributed + releaseRate.mulWadDown(1e18 - target) * deltaTime */
              swap9
              pop
                /* "contracts/RewardsController.sol":21962:22388  if (distributionFactor > 0) {... */
            tag_710:
                /* "contracts/RewardsController.sol":22419:22485  (-int256(distributionFactor * (block.timestamp - t.end))).expWad() */
              tag_715
                /* "contracts/RewardsController.sol":22468:22469  t */
              dup8
                /* "contracts/RewardsController.sol":22468:22473  t.end */
              0x20
              add
              mload
                /* "contracts/RewardsController.sol":22450:22465  block.timestamp */
              timestamp
                /* "contracts/RewardsController.sol":22450:22473  block.timestamp - t.end */
              tag_716
              swap2
              swap1
              tag_427
              jump	// in
            tag_716:
                /* "contracts/RewardsController.sol":22428:22474  distributionFactor * (block.timestamp - t.end) */
              tag_667
              swap1
                /* "contracts/RewardsController.sol":22428:22446  distributionFactor */
              dup5
                /* "contracts/RewardsController.sol":22428:22474  distributionFactor * (block.timestamp - t.end) */
              tag_429
              jump	// in
                /* "contracts/RewardsController.sol":22419:22485  (-int256(distributionFactor * (block.timestamp - t.end))).expWad() */
            tag_715:
                /* "contracts/RewardsController.sol":22397:22486  exponential = uint256((-int256(distributionFactor * (block.timestamp - t.end))).expWad()) */
              swap1
              pop
                /* "contracts/RewardsController.sol":22534:22579  newUndistributed.mulWadUp(1e18 - exponential) */
              tag_719
                /* "contracts/RewardsController.sol":22560:22578  1e18 - exponential */
              tag_720
                /* "contracts/RewardsController.sol":22397:22486  exponential = uint256((-int256(distributionFactor * (block.timestamp - t.end))).expWad()) */
              dup3
                /* "contracts/RewardsController.sol":22560:22564  1e18 */
              0x0de0b6b3a7640000
                /* "contracts/RewardsController.sol":22560:22578  1e18 - exponential */
              tag_427
              jump	// in
            tag_720:
                /* "contracts/RewardsController.sol":22534:22550  newUndistributed */
              dup11
              swap1
                /* "contracts/RewardsController.sol":22534:22559  newUndistributed.mulWadUp */
              tag_675
                /* "contracts/RewardsController.sol":22534:22579  newUndistributed.mulWadUp(1e18 - exponential) */
              jump	// in
            tag_719:
                /* "contracts/RewardsController.sol":22515:22579  newUndistributed - newUndistributed.mulWadUp(1e18 - exponential) */
              tag_721
              swap1
                /* "contracts/RewardsController.sol":22515:22531  newUndistributed */
              dup11
                /* "contracts/RewardsController.sol":22515:22579  newUndistributed - newUndistributed.mulWadUp(1e18 - exponential) */
              tag_427
              jump	// in
            tag_721:
                /* "contracts/RewardsController.sol":22496:22579  newUndistributed = newUndistributed - newUndistributed.mulWadUp(1e18 - exponential) */
              swap9
              pop
                /* "contracts/RewardsController.sol":22642:22694  int256(newUndistributed) - int256(lastUndistributed) */
              tag_722
                /* "contracts/RewardsController.sol":22676:22693  lastUndistributed */
              dup4
                /* "contracts/RewardsController.sol":22496:22579  newUndistributed = newUndistributed - newUndistributed.mulWadUp(1e18 - exponential) */
              dup11
                /* "contracts/RewardsController.sol":22642:22694  int256(newUndistributed) - int256(lastUndistributed) */
              tag_685
              jump	// in
            tag_722:
                /* "contracts/RewardsController.sol":22614:22637  releaseRate * deltaTime */
              tag_723
                /* "contracts/RewardsController.sol":22628:22637  deltaTime */
              dup14
                /* "contracts/RewardsController.sol":22614:22625  releaseRate */
              dup7
                /* "contracts/RewardsController.sol":22614:22637  releaseRate * deltaTime */
              tag_429
              jump	// in
            tag_723:
                /* "contracts/RewardsController.sol":22607:22695  int256(releaseRate * deltaTime) - (int256(newUndistributed) - int256(lastUndistributed)) */
              tag_724
              swap2
              swap1
              tag_685
              jump	// in
            tag_724:
                /* "contracts/RewardsController.sol":22589:22696  rewards = uint256(int256(releaseRate * deltaTime) - (int256(newUndistributed) - int256(lastUndistributed))) */
              swap5
              pop
                /* "contracts/RewardsController.sol":21872:22705  {... */
              pop
                /* "contracts/RewardsController.sol":21575:22705  if (rewardData.lastUpdate > t.end) {... */
            tag_698:
                /* "contracts/RewardsController.sol":22716:22723  rewards */
              dup4
                /* "contracts/RewardsController.sol":22727:22728  0 */
              0x00
                /* "contracts/RewardsController.sol":22716:22728  rewards == 0 */
              sub
                /* "contracts/RewardsController.sol":22712:22804  if (rewards == 0) return (rewardData.borrowIndex, rewardData.depositIndex, newUndistributed) */
              tag_725
              jumpi
              pop
              pop
              pop
                /* "contracts/RewardsController.sol":22738:22760  rewardData.borrowIndex */
              0x07
              dup11
              add
              sload
              sub(shl(0x80, 0x01), 0x01)
              dup1
              dup3
              and
              swap9
              pop
              shl(0x80, 0x01)
                /* "contracts/RewardsController.sol":22762:22785  rewardData.depositIndex */
              swap1
              swap2
              div
              and
              swap6
              pop
                /* "contracts/RewardsController.sol":22730:22804  return (rewardData.borrowIndex, rewardData.depositIndex, newUndistributed) */
              tag_502
              swap4
              pop
              pop
              pop
              pop
              jump
                /* "contracts/RewardsController.sol":22712:22804  if (rewards == 0) return (rewardData.borrowIndex, rewardData.depositIndex, newUndistributed) */
            tag_725:
                /* "contracts/RewardsController.sol":20674:22811  {... */
              pop
              pop
              pop
                /* "contracts/RewardsController.sol":22824:22847  AllocationVars memory v */
              tag_726
              mload(0x40)
              dup1
              0x0120
              add
              0x40
              mstore
              dup1
              0x00
              dup2
              mstore
              0x20
              add
              0x00
              dup2
              mstore
              0x20
              add
              0x00
              dup2
              mstore
              0x20
              add
              0x00
              dup2
              mstore
              0x20
              add
              0x00
              dup2
              mstore
              0x20
              add
              0x00
              dup2
              mstore
              0x20
              add
              0x00
              dup2
              mstore
              0x20
              add
              0x00
              dup2
              mstore
              0x20
              add
              0x00
              dup2
              mstore
              pop
              swap1
              jump
            tag_726:
                /* "contracts/RewardsController.sol":22882:22883  0 */
              0x00
                /* "contracts/RewardsController.sol":22871:22872  m */
              dup6
                /* "contracts/RewardsController.sol":22871:22879  m.supply */
              0x20
              add
              mload
                /* "contracts/RewardsController.sol":22871:22883  m.supply > 0 */
              gt
                /* "contracts/RewardsController.sol":22871:22944  m.supply > 0 ? Math.min(m.debt.divWadDown(m.supply), UTILIZATION_CAP) : 0 */
              tag_728
              jumpi
                /* "contracts/RewardsController.sol":22943:22944  0 */
              0x00
                /* "contracts/RewardsController.sol":22871:22944  m.supply > 0 ? Math.min(m.debt.divWadDown(m.supply), UTILIZATION_CAP) : 0 */
              jump(tag_730)
            tag_728:
                /* "contracts/RewardsController.sol":22913:22921  m.supply */
              0x20
              dup6
              add
              mload
                /* "contracts/RewardsController.sol":22895:22901  m.debt */
              dup6
              mload
                /* "contracts/RewardsController.sol":22886:22940  Math.min(m.debt.divWadDown(m.supply), UTILIZATION_CAP) */
              tag_730
              swap2
                /* "contracts/RewardsController.sol":22895:22922  m.debt.divWadDown(m.supply) */
              tag_731
              swap2
                /* "contracts/RewardsController.sol":22895:22901  m.debt */
              swap1
                /* "contracts/RewardsController.sol":22895:22912  m.debt.divWadDown */
              tag_657
                /* "contracts/RewardsController.sol":22895:22922  m.debt.divWadDown(m.supply) */
              jump	// in
            tag_731:
                /* "contracts/RewardsController.sol":1151:1159  1e18 - 1 */
              0x0de0b6b3a763ffff
                /* "contracts/RewardsController.sol":22886:22894  Math.min */
              tag_732
                /* "contracts/RewardsController.sol":22886:22940  Math.min(m.debt.divWadDown(m.supply), UTILIZATION_CAP) */
              jump	// in
            tag_730:
                /* "contracts/RewardsController.sol":22855:22944  v.utilization = m.supply > 0 ? Math.min(m.debt.divWadDown(m.supply), UTILIZATION_CAP) : 0 */
              dup1
              dup3
              mstore
                /* "contracts/RewardsController.sol":22973:23000  rewardData.transitionFactor */
              0x05
              dup13
              add
              sload
              sub(shl(0x40, 0x01), 0x01)
              shl(0xc0, 0x01)
              dup3
              div
              dup2
              and
                /* "contracts/RewardsController.sol":22952:22970  v.transitionFactor */
              0xc0
              dup6
              add
                /* "contracts/RewardsController.sol":22952:23000  v.transitionFactor = rewardData.transitionFactor */
              mstore
                /* "contracts/RewardsController.sol":23022:23042  rewardData.flipSpeed */
              0x0f
              swap2
              swap1
              swap2
              signextend
                /* "contracts/RewardsController.sol":23008:23019  v.flipSpeed */
              0xe0
              dup5
              add
                /* "contracts/RewardsController.sol":23008:23042  v.flipSpeed = rewardData.flipSpeed */
              mstore
                /* "contracts/RewardsController.sol":23083:23122  rewardData.borrowAllocationWeightFactor */
              0x06
              dup14
              add
              sload
              and
                /* "contracts/RewardsController.sol":22973:23000  rewardData.transitionFactor */
              0x0100
                /* "contracts/RewardsController.sol":23050:23080  v.borrowAllocationWeightFactor */
              dup4
              add
                /* "contracts/RewardsController.sol":23050:23122  v.borrowAllocationWeightFactor = rewardData.borrowAllocationWeightFactor */
              mstore
                /* "contracts/RewardsController.sol":23142:23492  v.utilization > 0... */
              tag_733
              jumpi
                /* "contracts/RewardsController.sol":23491:23492  0 */
              0x00
                /* "contracts/RewardsController.sol":23142:23492  v.utilization > 0... */
              jump(tag_735)
            tag_733:
                /* "contracts/RewardsController.sol":23170:23480  uint256(1e18).divWadDown(... */
              tag_735
                /* "contracts/RewardsController.sol":23248:23456  (-(v.flipSpeed *... */
              tag_736
                /* "contracts/RewardsController.sol":23442:23446  1e18 */
              0x0de0b6b3a7640000
                /* "contracts/RewardsController.sol":23365:23437  int256(v.transitionFactor.divWadDown(1e18 - v.transitionFactor)).lnWad() */
              tag_737
                /* "contracts/RewardsController.sol":23372:23428  v.transitionFactor.divWadDown(1e18 - v.transitionFactor) */
              tag_738
                /* "contracts/RewardsController.sol":23409:23410  v */
              dup6
                /* "contracts/RewardsController.sol":23409:23427  v.transitionFactor */
              0xc0
              add
              mload
                /* "contracts/RewardsController.sol":23402:23406  1e18 */
              0x0de0b6b3a7640000
                /* "contracts/RewardsController.sol":23402:23427  1e18 - v.transitionFactor */
              tag_739
              swap2
              swap1
              tag_427
              jump	// in
            tag_739:
                /* "contracts/RewardsController.sol":23372:23390  v.transitionFactor */
              0xc0
              dup8
              add
              mload
              swap1
                /* "contracts/RewardsController.sol":23372:23401  v.transitionFactor.divWadDown */
              tag_657
                /* "contracts/RewardsController.sol":23372:23428  v.transitionFactor.divWadDown(1e18 - v.transitionFactor) */
              jump	// in
            tag_738:
                /* "contracts/RewardsController.sol":23365:23435  int256(v.transitionFactor.divWadDown(1e18 - v.transitionFactor)).lnWad */
              tag_740
                /* "contracts/RewardsController.sol":23365:23437  int256(v.transitionFactor.divWadDown(1e18 - v.transitionFactor)).lnWad() */
              jump	// in
            tag_737:
                /* "contracts/RewardsController.sol":23321:23334  v.utilization */
              dup5
              mload
                /* "contracts/RewardsController.sol":23282:23344  int256(v.utilization.divWadDown(1e18 - v.utilization)).lnWad() */
              tag_741
              swap1
                /* "contracts/RewardsController.sol":23289:23335  v.utilization.divWadDown(1e18 - v.utilization) */
              tag_738
              swap1
                /* "contracts/RewardsController.sol":23314:23334  1e18 - v.utilization */
              tag_743
              swap1
                /* "contracts/RewardsController.sol":23314:23318  1e18 */
              0x0de0b6b3a7640000
                /* "contracts/RewardsController.sol":23314:23334  1e18 - v.utilization */
              tag_427
              jump	// in
            tag_743:
                /* "contracts/RewardsController.sol":23289:23302  v.utilization */
              dup8
              mload
              swap1
                /* "contracts/RewardsController.sol":23289:23313  v.utilization.divWadDown */
              tag_657
                /* "contracts/RewardsController.sol":23289:23335  v.utilization.divWadDown(1e18 - v.utilization) */
              jump	// in
                /* "contracts/RewardsController.sol":23282:23344  int256(v.utilization.divWadDown(1e18 - v.utilization)).lnWad() */
            tag_741:
                /* "contracts/RewardsController.sol":23282:23437  int256(v.utilization.divWadDown(1e18 - v.utilization)).lnWad() -... */
              tag_744
              swap2
              swap1
              tag_685
              jump	// in
            tag_744:
                /* "contracts/RewardsController.sol":23251:23252  v */
              dup5
                /* "contracts/RewardsController.sol":23251:23262  v.flipSpeed */
              0xe0
              add
              mload
                /* "contracts/RewardsController.sol":23251:23438  v.flipSpeed *... */
              tag_745
              swap2
              swap1
              tag_746
              jump	// in
            tag_745:
                /* "contracts/RewardsController.sol":23249:23439  -(v.flipSpeed *... */
              tag_747
              swap1
              tag_669
              jump	// in
            tag_747:
                /* "contracts/RewardsController.sol":23249:23446  -(v.flipSpeed *... */
              tag_668
              swap2
              swap1
              tag_749
              jump	// in
                /* "contracts/RewardsController.sol":23248:23456  (-(v.flipSpeed *... */
            tag_736:
                /* "contracts/RewardsController.sol":23206:23470  1e18 +... */
              tag_750
              swap1
                /* "contracts/RewardsController.sol":23206:23210  1e18 */
              0x0de0b6b3a7640000
                /* "contracts/RewardsController.sol":23206:23470  1e18 +... */
              tag_230
              jump	// in
            tag_750:
                /* "contracts/RewardsController.sol":23178:23182  1e18 */
              0x0de0b6b3a7640000
              swap1
                /* "contracts/RewardsController.sol":23170:23194  uint256(1e18).divWadDown */
              tag_657
                /* "contracts/RewardsController.sol":23170:23480  uint256(1e18).divWadDown(... */
              jump	// in
            tag_735:
                /* "contracts/RewardsController.sol":23130:23139  v.sigmoid */
              0x20
              dup3
              add
                /* "contracts/RewardsController.sol":23130:23492  v.sigmoid = v.utilization > 0... */
              dup2
              swap1
              mstore
                /* "contracts/RewardsController.sol":23521:23825  rewardData... */
              tag_751
              swap1
                /* "contracts/RewardsController.sol":23808:23824  1e18 - v.sigmoid */
              tag_752
              swap1
                /* "contracts/RewardsController.sol":23808:23812  1e18 */
              0x0de0b6b3a7640000
                /* "contracts/RewardsController.sol":23808:23824  1e18 - v.sigmoid */
              tag_427
              jump	// in
            tag_752:
                /* "contracts/RewardsController.sol":23521:23787  rewardData... */
              tag_768
                /* "contracts/RewardsController.sol":23747:23748  v */
              dup4
                /* "contracts/RewardsController.sol":23747:23777  v.borrowAllocationWeightFactor */
              0x0100
              add
              mload
                /* "contracts/RewardsController.sol":23591:23744  market.interestRateModel().floatingRate(v.utilization).mulWadDown(... */
              tag_754
                /* "contracts/RewardsController.sol":23677:23732  v.utilization.mulWadUp(1e18 - market.treasuryFeeRate()) */
              tag_755
                /* "contracts/RewardsController.sol":23707:23713  market */
              dup16
              sub(shl(0xa0, 0x01), 0x01)
                /* "contracts/RewardsController.sol":23707:23729  market.treasuryFeeRate */
              and
              0x66601032
                /* "contracts/RewardsController.sol":23707:23731  market.treasuryFeeRate() */
              mload(0x40)
              dup2
              0xffffffff
              and
              0xe0
              shl
              dup2
              mstore
              0x04
              add
              0x20
              mload(0x40)
              dup1
              dup4
              sub
              dup2
              dup7
              gas
              staticcall
              iszero
              dup1
              iszero
              tag_757
              jumpi
              returndatasize
              0x00
              dup1
              returndatacopy
              revert(0x00, returndatasize)
            tag_757:
              pop
              pop
              pop
              pop
              mload(0x40)
              returndatasize
              not(0x1f)
              0x1f
              dup3
              add
              and
              dup3
              add
              dup1
              0x40
              mstore
              pop
              dup2
              add
              swap1
              tag_758
              swap2
              swap1
              tag_183
              jump	// in
            tag_758:
                /* "contracts/RewardsController.sol":23700:23731  1e18 - market.treasuryFeeRate() */
              tag_759
              swap1
                /* "contracts/RewardsController.sol":23700:23704  1e18 */
              0x0de0b6b3a7640000
                /* "contracts/RewardsController.sol":23700:23731  1e18 - market.treasuryFeeRate() */
              tag_427
              jump	// in
            tag_759:
                /* "contracts/RewardsController.sol":23677:23690  v.utilization */
              dup8
              mload
              swap1
                /* "contracts/RewardsController.sol":23677:23699  v.utilization.mulWadUp */
              tag_675
                /* "contracts/RewardsController.sol":23677:23732  v.utilization.mulWadUp(1e18 - market.treasuryFeeRate()) */
              jump	// in
            tag_755:
                /* "contracts/RewardsController.sol":23670:23732  1e18 - v.utilization.mulWadUp(1e18 - market.treasuryFeeRate()) */
              tag_760
              swap1
                /* "contracts/RewardsController.sol":23670:23674  1e18 */
              0x0de0b6b3a7640000
                /* "contracts/RewardsController.sol":23670:23732  1e18 - v.utilization.mulWadUp(1e18 - market.treasuryFeeRate()) */
              tag_427
              jump	// in
            tag_760:
                /* "contracts/RewardsController.sol":23591:23597  market */
              dup16
              sub(shl(0xa0, 0x01), 0x01)
                /* "contracts/RewardsController.sol":23591:23615  market.interestRateModel */
              and
              0xf3fdb15a
                /* "contracts/RewardsController.sol":23591:23617  market.interestRateModel() */
              mload(0x40)
              dup2
              0xffffffff
              and
              0xe0
              shl
              dup2
              mstore
              0x04
              add
              0x20
              mload(0x40)
              dup1
              dup4
              sub
              dup2
              dup7
              gas
              staticcall
              iszero
              dup1
              iszero
              tag_762
              jumpi
              returndatasize
              0x00
              dup1
              returndatacopy
              revert(0x00, returndatasize)
            tag_762:
              pop
              pop
              pop
              pop
              mload(0x40)
              returndatasize
              not(0x1f)
              0x1f
              dup3
              add
              and
              dup3
              add
              dup1
              0x40
              mstore
              pop
              dup2
              add
              swap1
              tag_763
              swap2
              swap1
              tag_764
              jump	// in
            tag_763:
                /* "contracts/RewardsController.sol":23631:23644  v.utilization */
              dup8
              mload
                /* "contracts/RewardsController.sol":23591:23645  market.interestRateModel().floatingRate(v.utilization) */
              mload(0x40)
              shl(0xe1, 0x42543a33)
              dup2
              mstore
              sub(shl(0xa0, 0x01), 0x01)
                /* "contracts/RewardsController.sol":23591:23630  market.interestRateModel().floatingRate */
              swap3
              swap1
              swap3
              and
              swap2
              0x84a87466
              swap2
                /* "contracts/RewardsController.sol":23591:23645  market.interestRateModel().floatingRate(v.utilization) */
              tag_765
              swap2
              0x04
              add
                /* "#utility.yul":1963:1988   */
              swap1
              dup2
              mstore
                /* "#utility.yul":1951:1953   */
              0x20
                /* "#utility.yul":1936:1954   */
              add
              swap1
                /* "#utility.yul":1817:1994   */
              jump
                /* "contracts/RewardsController.sol":23591:23645  market.interestRateModel().floatingRate(v.utilization) */
            tag_765:
              0x20
              mload(0x40)
              dup1
              dup4
              sub
              dup2
              dup7
              gas
              staticcall
              iszero
              dup1
              iszero
              tag_767
              jumpi
              returndatasize
              0x00
              dup1
              returndatacopy
              revert(0x00, returndatasize)
            tag_767:
              pop
              pop
              pop
              pop
              mload(0x40)
              returndatasize
              not(0x1f)
              0x1f
              dup3
              add
              and
              dup3
              add
              dup1
              0x40
              mstore
              pop
              dup2
              add
              swap1
              tag_768
              swap2
              swap1
              tag_183
              jump	// in
            tag_768:
                /* "contracts/RewardsController.sol":23591:23656  market.interestRateModel().floatingRate(v.utilization).mulWadDown */
              swap1
              tag_677
                /* "contracts/RewardsController.sol":23591:23744  market.interestRateModel().floatingRate(v.utilization).mulWadDown(... */
              jump	// in
            tag_754:
                /* "contracts/RewardsController.sol":23591:23777  market.interestRateModel().floatingRate(v.utilization).mulWadDown(... */
              tag_769
              swap2
              swap1
              tag_230
              jump	// in
            tag_769:
                /* "contracts/RewardsController.sol":23521:23559  rewardData... */
              0x05
              dup16
              add
              sload
              shl(0x80, 0x01)
              swap1
              div
              sub(shl(0x40, 0x01), 0x01)
              and
              swap1
                /* "contracts/RewardsController.sol":23521:23579  rewardData... */
              tag_677
                /* "contracts/RewardsController.sol":23521:23787  rewardData... */
              jump	// in
                /* "contracts/RewardsController.sol":23521:23825  rewardData... */
            tag_751:
                /* "contracts/RewardsController.sol":23500:23518  v.borrowRewardRule */
              0x40
              dup3
              add
                /* "contracts/RewardsController.sol":23500:23825  v.borrowRewardRule = rewardData... */
              mstore
                /* "contracts/RewardsController.sol":23995:24004  v.sigmoid */
              0x20
              dup2
              add
              mload
                /* "contracts/RewardsController.sol":23943:23983  rewardData.depositAllocationWeightFactor */
              0x06
              dup13
              add
              sload
                /* "contracts/RewardsController.sol":23943:24005  rewardData.depositAllocationWeightFactor.mulWadDown(v.sigmoid) */
              tag_770
              swap2
              shl(0x80, 0x01)
                /* "contracts/RewardsController.sol":23943:23983  rewardData.depositAllocationWeightFactor */
              swap1
              swap2
              div
              sub(shl(0x40, 0x01), 0x01)
              and
              swap1
                /* "contracts/RewardsController.sol":23943:23994  rewardData.depositAllocationWeightFactor.mulWadDown */
              tag_677
                /* "contracts/RewardsController.sol":23943:24005  rewardData.depositAllocationWeightFactor.mulWadDown(v.sigmoid) */
              jump	// in
            tag_770:
                /* "contracts/RewardsController.sol":23863:23932  rewardData.depositAllocationWeightAddend.mulWadDown(1e18 - v.sigmoid) */
              tag_771
                /* "contracts/RewardsController.sol":23922:23923  v */
              dup3
                /* "contracts/RewardsController.sol":23922:23931  v.sigmoid */
              0x20
              add
              mload
                /* "contracts/RewardsController.sol":23915:23919  1e18 */
              0x0de0b6b3a7640000
                /* "contracts/RewardsController.sol":23915:23931  1e18 - v.sigmoid */
              tag_772
              swap2
              swap1
              tag_427
              jump	// in
            tag_772:
                /* "contracts/RewardsController.sol":23863:23903  rewardData.depositAllocationWeightAddend */
              0x06
              dup15
              add
              sload
              shl(0x40, 0x01)
              swap1
              div
              sub(shl(0x40, 0x01), 0x01)
              and
              swap1
                /* "contracts/RewardsController.sol":23863:23914  rewardData.depositAllocationWeightAddend.mulWadDown */
              tag_677
                /* "contracts/RewardsController.sol":23863:23932  rewardData.depositAllocationWeightAddend.mulWadDown(1e18 - v.sigmoid) */
              jump	// in
            tag_771:
                /* "contracts/RewardsController.sol":23863:24005  rewardData.depositAllocationWeightAddend.mulWadDown(1e18 - v.sigmoid) +... */
              tag_773
              swap2
              swap1
              tag_230
              jump	// in
            tag_773:
                /* "contracts/RewardsController.sol":23833:23852  v.depositRewardRule */
              0x60
              dup3
              add
                /* "contracts/RewardsController.sol":23833:24005  v.depositRewardRule =... */
              dup2
              swap1
              mstore
                /* "contracts/RewardsController.sol":24064:24082  v.borrowRewardRule */
              0x40
              dup3
              add
              mload
                /* "contracts/RewardsController.sol":24034:24105  v.borrowRewardRule.divWadDown(v.borrowRewardRule + v.depositRewardRule) */
              tag_774
              swap2
                /* "contracts/RewardsController.sol":24064:24104  v.borrowRewardRule + v.depositRewardRule */
              tag_775
              swap2
              tag_230
              jump	// in
            tag_775:
                /* "contracts/RewardsController.sol":24034:24052  v.borrowRewardRule */
              0x40
              dup4
              add
              mload
              swap1
                /* "contracts/RewardsController.sol":24034:24063  v.borrowRewardRule.divWadDown */
              tag_657
                /* "contracts/RewardsController.sol":24034:24105  v.borrowRewardRule.divWadDown(v.borrowRewardRule + v.depositRewardRule) */
              jump	// in
            tag_774:
                /* "contracts/RewardsController.sol":24013:24031  v.borrowAllocation */
              0x80
              dup3
              add
                /* "contracts/RewardsController.sol":24013:24105  v.borrowAllocation = v.borrowRewardRule.divWadDown(v.borrowRewardRule + v.depositRewardRule) */
              dup2
              swap1
              mstore
                /* "contracts/RewardsController.sol":24135:24160  1e18 - v.borrowAllocation */
              tag_776
              swap1
                /* "contracts/RewardsController.sol":24135:24139  1e18 */
              0x0de0b6b3a7640000
                /* "contracts/RewardsController.sol":24135:24160  1e18 - v.borrowAllocation */
              tag_427
              jump	// in
            tag_776:
                /* "contracts/RewardsController.sol":24113:24114  v */
              dup2
                /* "contracts/RewardsController.sol":24113:24132  v.depositAllocation */
              0xa0
              add
                /* "contracts/RewardsController.sol":24113:24160  v.depositAllocation = 1e18 - v.borrowAllocation */
              dup2
              dup2
              mstore
              pop
              pop
                /* "contracts/RewardsController.sol":24178:24204  uint256 totalDepositSupply */
              0x00
                /* "contracts/RewardsController.sol":24207:24213  market */
              dup11
              sub(shl(0xa0, 0x01), 0x01)
                /* "contracts/RewardsController.sol":24207:24225  market.totalSupply */
              and
              0x18160ddd
                /* "contracts/RewardsController.sol":24207:24227  market.totalSupply() */
              mload(0x40)
              dup2
              0xffffffff
              and
              0xe0
              shl
              dup2
              mstore
              0x04
              add
              0x20
              mload(0x40)
              dup1
              dup4
              sub
              dup2
              dup7
              gas
              staticcall
              iszero
              dup1
              iszero
              tag_778
              jumpi
              returndatasize
              0x00
              dup1
              returndatacopy
              revert(0x00, returndatasize)
            tag_778:
              pop
              pop
              pop
              pop
              mload(0x40)
              returndatasize
              not(0x1f)
              0x1f
              dup3
              add
              and
              dup3
              add
              dup1
              0x40
              mstore
              pop
              dup2
              add
              swap1
              tag_779
              swap2
              swap1
              tag_183
              jump	// in
            tag_779:
                /* "contracts/RewardsController.sol":24178:24227  uint256 totalDepositSupply = market.totalSupply() */
              swap1
              pop
                /* "contracts/RewardsController.sol":24237:24262  uint256 totalBorrowSupply */
              0x00
                /* "contracts/RewardsController.sol":24302:24303  m */
              dup7
                /* "contracts/RewardsController.sol":24302:24321  m.fixedBorrowShares */
              0x40
              add
              mload
                /* "contracts/RewardsController.sol":24265:24271  market */
              dup13
              sub(shl(0xa0, 0x01), 0x01)
                /* "contracts/RewardsController.sol":24265:24297  market.totalFloatingBorrowShares */
              and
              0x8d0e5f02
                /* "contracts/RewardsController.sol":24265:24299  market.totalFloatingBorrowShares() */
              mload(0x40)
              dup2
              0xffffffff
              and
              0xe0
              shl
              dup2
              mstore
              0x04
              add
              0x20
              mload(0x40)
              dup1
              dup4
              sub
              dup2
              dup7
              gas
              staticcall
              iszero
              dup1
              iszero
              tag_781
              jumpi
              returndatasize
              0x00
              dup1
              returndatacopy
              revert(0x00, returndatasize)
            tag_781:
              pop
              pop
              pop
              pop
              mload(0x40)
              returndatasize
              not(0x1f)
              0x1f
              dup3
              add
              and
              dup3
              add
              dup1
              0x40
              mstore
              pop
              dup2
              add
              swap1
              tag_782
              swap2
              swap1
              tag_183
              jump	// in
            tag_782:
                /* "contracts/RewardsController.sol":24265:24321  market.totalFloatingBorrowShares() + m.fixedBorrowShares */
              tag_783
              swap2
              swap1
              tag_230
              jump	// in
            tag_783:
              sub(shl(0xa0, 0x01), 0x01)
                /* "contracts/RewardsController.sol":24350:24370  distribution[market] */
              dup14
              and
                /* "contracts/RewardsController.sol":24331:24347  uint256 baseUnit */
              0x00
                /* "contracts/RewardsController.sol":24350:24370  distribution[market] */
              swap1
              dup2
              mstore
                /* "contracts/RewardsController.sol":24350:24362  distribution */
              0x97
                /* "contracts/RewardsController.sol":24350:24370  distribution[market] */
              0x20
              mstore
              0x40
              swap1
              keccak256
                /* "contracts/RewardsController.sol":24350:24379  distribution[market].baseUnit */
              0x03
              add
              sload
                /* "contracts/RewardsController.sol":24237:24321  uint256 totalBorrowSupply = market.totalFloatingBorrowShares() + m.fixedBorrowShares */
              swap1
              swap2
              pop
                /* "contracts/RewardsController.sol":24449:24470  totalBorrowSupply > 0 */
              dup2
                /* "contracts/RewardsController.sol":24449:24555  totalBorrowSupply > 0 ? rewards.mulWadDown(v.borrowAllocation).mulDivDown(baseUnit, totalBorrowSupply) : 0 */
              tag_784
              jumpi
                /* "contracts/RewardsController.sol":24554:24555  0 */
              0x00
                /* "contracts/RewardsController.sol":24449:24555  totalBorrowSupply > 0 ? rewards.mulWadDown(v.borrowAllocation).mulDivDown(baseUnit, totalBorrowSupply) : 0 */
              jump(tag_786)
            tag_784:
                /* "contracts/RewardsController.sol":24473:24551  rewards.mulWadDown(v.borrowAllocation).mulDivDown(baseUnit, totalBorrowSupply) */
              tag_786
                /* "contracts/RewardsController.sol":24523:24531  baseUnit */
              dup2
                /* "contracts/RewardsController.sol":24533:24550  totalBorrowSupply */
              dup4
                /* "contracts/RewardsController.sol":24473:24511  rewards.mulWadDown(v.borrowAllocation) */
              tag_787
                /* "contracts/RewardsController.sol":24492:24493  v */
              dup8
                /* "contracts/RewardsController.sol":24492:24510  v.borrowAllocation */
              0x80
              add
              mload
                /* "contracts/RewardsController.sol":24473:24480  rewards */
              dup10
                /* "contracts/RewardsController.sol":24473:24491  rewards.mulWadDown */
              tag_677
              swap1
                /* "contracts/RewardsController.sol":24473:24511  rewards.mulWadDown(v.borrowAllocation) */
              swap2
              swap1
              0xffffffff
              and
              jump	// in
            tag_787:
                /* "contracts/RewardsController.sol":24473:24522  rewards.mulWadDown(v.borrowAllocation).mulDivDown */
              swap2
                /* "contracts/RewardsController.sol":24473:24551  rewards.mulWadDown(v.borrowAllocation).mulDivDown(baseUnit, totalBorrowSupply) */
              swap1
                /* "contracts/RewardsController.sol":24473:24522  rewards.mulWadDown(v.borrowAllocation).mulDivDown */
              tag_663
                /* "contracts/RewardsController.sol":24473:24551  rewards.mulWadDown(v.borrowAllocation).mulDivDown(baseUnit, totalBorrowSupply) */
              jump	// in
            tag_786:
                /* "contracts/RewardsController.sol":24413:24435  rewardData.borrowIndex */
              0x07
              dup16
              add
              sload
                /* "contracts/RewardsController.sol":24413:24556  rewardData.borrowIndex +... */
              tag_788
              swap2
              swap1
              sub(shl(0x80, 0x01), 0x01)
                /* "contracts/RewardsController.sol":24413:24435  rewardData.borrowIndex */
              and
                /* "contracts/RewardsController.sol":24413:24556  rewardData.borrowIndex +... */
              tag_230
              jump	// in
            tag_788:
                /* "contracts/RewardsController.sol":24389:24556  borrowIndex =... */
              swap11
              pop
                /* "contracts/RewardsController.sol":24662:24663  0 */
              0x00
                /* "contracts/RewardsController.sol":24641:24659  totalDepositSupply */
              dup4
                /* "contracts/RewardsController.sol":24641:24663  totalDepositSupply > 0 */
              gt
                /* "contracts/RewardsController.sol":24641:24778  totalDepositSupply > 0... */
              tag_789
              jumpi
                /* "contracts/RewardsController.sol":24777:24778  0 */
              0x00
                /* "contracts/RewardsController.sol":24641:24778  totalDepositSupply > 0... */
              jump(tag_791)
            tag_789:
                /* "contracts/RewardsController.sol":24680:24760  rewards.mulWadDown(v.depositAllocation).mulDivDown(baseUnit, totalDepositSupply) */
              tag_791
                /* "contracts/RewardsController.sol":24731:24739  baseUnit */
              dup2
                /* "contracts/RewardsController.sol":24741:24759  totalDepositSupply */
              dup5
                /* "contracts/RewardsController.sol":24680:24719  rewards.mulWadDown(v.depositAllocation) */
              tag_787
                /* "contracts/RewardsController.sol":24699:24700  v */
              dup8
                /* "contracts/RewardsController.sol":24699:24718  v.depositAllocation */
              0xa0
              add
              mload
                /* "contracts/RewardsController.sol":24680:24687  rewards */
              dup10
                /* "contracts/RewardsController.sol":24680:24698  rewards.mulWadDown */
              tag_677
              swap1
                /* "contracts/RewardsController.sol":24680:24719  rewards.mulWadDown(v.depositAllocation) */
              swap2
              swap1
              0xffffffff
              and
              jump	// in
                /* "contracts/RewardsController.sol":24680:24760  rewards.mulWadDown(v.depositAllocation).mulDivDown(baseUnit, totalDepositSupply) */
            tag_791:
                /* "contracts/RewardsController.sol":24591:24614  rewardData.depositIndex */
              0x07
              dup16
              add
              sload
                /* "contracts/RewardsController.sol":24591:24790  rewardData.depositIndex +... */
              tag_793
              swap2
              swap1
              shl(0x80, 0x01)
                /* "contracts/RewardsController.sol":24591:24614  rewardData.depositIndex */
              swap1
              div
              sub(shl(0x80, 0x01), 0x01)
              and
                /* "contracts/RewardsController.sol":24591:24790  rewardData.depositIndex +... */
              tag_230
              jump	// in
            tag_793:
                /* "contracts/RewardsController.sol":24566:24790  depositIndex =... */
              swap10
              pop
                /* "contracts/RewardsController.sol":24168:24799  {... */
              pop
              pop
              pop
                /* "contracts/RewardsController.sol":22816:24805  {... */
              pop
                /* "contracts/RewardsController.sol":19628:24809  {... */
              pop
              pop
              pop
              pop
                /* "contracts/RewardsController.sol":19428:24809  function previewAllocation(... */
              swap4
              pop
              swap4
              pop
              swap4
              swap1
              pop
              jump	// out
                /* "contracts/RewardsController.sol":17911:18139  function accountRewards(... */
            tag_523:
                /* "contracts/RewardsController.sol":18056:18063  uint256 */
              0x00
                /* "contracts/RewardsController.sol":18078:18134  balance.mulDivDown(globalIndex - accountIndex, baseUnit) */
              tag_795
                /* "contracts/RewardsController.sol":18097:18123  globalIndex - accountIndex */
              tag_796
                /* "contracts/RewardsController.sol":18111:18123  accountIndex */
              dup5
                /* "contracts/RewardsController.sol":18097:18108  globalIndex */
              dup7
                /* "contracts/RewardsController.sol":18097:18123  globalIndex - accountIndex */
              tag_427
              jump	// in
            tag_796:
                /* "contracts/RewardsController.sol":18078:18085  balance */
              dup7
              swap1
                /* "contracts/RewardsController.sol":18125:18133  baseUnit */
              dup5
                /* "contracts/RewardsController.sol":18078:18096  balance.mulDivDown */
              tag_663
                /* "contracts/RewardsController.sol":18078:18134  balance.mulDivDown(globalIndex - accountIndex, baseUnit) */
              jump	// in
            tag_795:
                /* "contracts/RewardsController.sol":18071:18134  return balance.mulDivDown(globalIndex - accountIndex, baseUnit) */
              swap6
                /* "contracts/RewardsController.sol":17911:18139  function accountRewards(... */
              swap5
              pop
              pop
              pop
              pop
              pop
              jump	// out
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":4026:4527  function _checkRole(bytes32 role, address account) internal view virtual {... */
            tag_532:
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":4114:4136  hasRole(role, account) */
              tag_798
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":4122:4126  role */
              dup3
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":4128:4135  account */
              dup3
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":4114:4121  hasRole */
              tag_113
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":4114:4136  hasRole(role, account) */
              jump	// in
            tag_798:
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":4109:4521  if (!hasRole(role, account)) {... */
              tag_213
              jumpi
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":4297:4336  StringsUpgradeable.toHexString(account) */
              tag_800
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":4328:4335  account */
              dup2
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":4297:4327  StringsUpgradeable.toHexString */
              tag_801
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":4297:4336  StringsUpgradeable.toHexString(account) */
              jump	// in
            tag_800:
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":4407:4456  StringsUpgradeable.toHexString(uint256(role), 32) */
              tag_802
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":4446:4450  role */
              dup4
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":4453:4455  32 */
              0x20
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":4407:4437  StringsUpgradeable.toHexString */
              tag_803
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":4407:4456  StringsUpgradeable.toHexString(uint256(role), 32) */
              jump	// in
            tag_802:
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":4204:4478  abi.encodePacked(... */
              add(0x20, mload(0x40))
              tag_804
              swap3
              swap2
              swap1
              tag_805
              jump	// in
            tag_804:
              mload(0x40)
              0x20
              dup2
              dup4
              sub
              sub
              dup2
              mstore
              swap1
              0x40
              mstore
                /* "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":4152:4510  revert(... */
              0x00
              dup1
              revert
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":874:1038  function divWadDown(uint256 x, uint256 y) internal pure returns (uint256) {... */
            tag_657:
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":939:946  uint256 */
              0x00
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":965:986  mulDivDown(x, WAD, y) */
              tag_281
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":976:977  x */
              dup4
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":491:495  1e18 */
              0x0de0b6b3a7640000
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":984:985  y */
              dup5
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":7741:8276  function mulDivDown(... */
            tag_663:
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":7947:7956  mul(x, y) */
              dup3
              dup3
              mul
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":8078:8097  iszero(denominator) */
              dup2
              iszero
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":8071:8098  iszero(iszero(denominator)) */
              iszero
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":8103:8112  iszero(x) */
              dup5
              iszero
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":8117:8126  div(z, x) */
              dup6
              dup4
              div
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":8114:8130  eq(div(z, x), y) */
              dup6
              eq
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":8100:8131  or(iszero(x), eq(div(z, x), y)) */
              or
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":8067:8132  and(iszero(iszero(denominator)), or(iszero(x), eq(div(z, x), y))) */
              and
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":8057:8178  if iszero(and(iszero(iszero(denominator)), or(iszero(x), eq(div(z, x), y)))) {... */
              tag_809
              jumpi
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":8162:8163  0 */
              0x00
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":8159:8160  0 */
              dup1
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":8152:8164  revert(0, 0) */
              revert
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":8057:8178  if iszero(and(iszero(iszero(denominator)), or(iszero(x), eq(div(z, x), y)))) {... */
            tag_809:
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":8241:8260  div(z, denominator) */
              div
              swap3
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":7741:8276  function mulDivDown(... */
              swap2
              pop
              pop
              jump	// out
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":1487:4590  function expWad(int256 x) internal pure returns (int256 r) {... */
            tag_670:
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":1536:1544  int256 r */
              0x00
              not(0x0248ce36a70cb26b3e)
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":1713:1714  x */
              dup3
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":1713:1739  x <= -42139678854452767551 */
              sgt
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":1709:1749  if (x <= -42139678854452767551) return 0 */
              tag_811
              jumpi
              pop
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":1748:1749  0 */
              0x00
              swap2
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":1487:4590  function expWad(int256 x) internal pure returns (int256 r) {... */
              swap1
              pop
              jump	// out
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":1709:1749  if (x <= -42139678854452767551) return 0 */
            tag_811:
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":1948:1969  135305999368893231589 */
              0x0755bf798b4a1bf1e5
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":1943:1944  x */
              dup3
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":1943:1969  x >= 135305999368893231589 */
              slt
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":1939:1993  if (x >= 135305999368893231589) revert("EXP_OVERFLOW") */
              tag_812
              jumpi
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":1971:1993  revert("EXP_OVERFLOW") */
              0x00
              dup1
              revert
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":1939:1993  if (x >= 135305999368893231589) revert("EXP_OVERFLOW") */
            tag_812:
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":2266:2271  5**18 */
              0x03782dace9d9
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":2260:2262  78 */
              0x4e
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":2255:2262  x << 78 */
              dup4
              swap1
              shl
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":2254:2271  (x << 78) / 5**18 */
              sdiv
              swap2
              pop
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":2535:2543  int256 k */
              0x00
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":2601:2603  96 */
              0x60
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":2559:2588  54916777467707473351141471128 */
              0xb17217f7d1cf79abc9e3b398
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":2548:2555  x << 96 */
              dup5
              dup3
              shl
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":2547:2588  (x << 96) / 54916777467707473351141471128 */
              sdiv
              shl(0x5f, 0x01)
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":2547:2596  (x << 96) / 54916777467707473351141471128 + 2**95 */
              add
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":2546:2603  ((x << 96) / 54916777467707473351141471128 + 2**95) >> 96 */
              swap1
              sar
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":2629:2658  54916777467707473351141471128 */
              0xb17217f7d1cf79abc9e3b398
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":2625:2658  k * 54916777467707473351141471128 */
              dup2
              mul
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":2621:2658  x - k * 54916777467707473351141471128 */
              swap1
              swap4
              sub
              not(0x240c330e9fb2d9cbaf0fd5aafb)
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":3300:3335  x - 2855989394907223263936484059900 */
              dup2
              add
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":3355:3360  q * x */
              dup2
              mul
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":2935:2937  96 */
              0x60
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":3354:3367  (q * x) >> 96 */
              swap1
              dup2
              sar
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":3371:3403  50020603652535783019961831881945 */
              0x0277594991cfc85f6e2461837cd9
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":3353:3403  ((q * x) >> 96) + 50020603652535783019961831881945 */
              add
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":3423:3428  q * x */
              dup3
              mul
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":3422:3435  (q * x) >> 96 */
              dup2
              sar
              not(0x1a521255e34f6a5061b25ef1c9c3)
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":3421:3472  ((q * x) >> 96) - 533845033583426703283633433725380 */
              add
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":3492:3497  q * x */
              dup3
              mul
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":3491:3504  (q * x) >> 96 */
              dup2
              sar
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":3508:3542  3604857256930695427073651918091429 */
              0xb1bbb201f443cf962f1a1d3db4a5
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":3490:3542  ((q * x) >> 96) + 3604857256930695427073651918091429 */
              add
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":3562:3567  q * x */
              dup3
              mul
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":3561:3574  (q * x) >> 96 */
              dup2
              sar
              not(0x02c72388d9f74f51a9331fed693f14)
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":3560:3613  ((q * x) >> 96) - 14423608567350463180887372962807573 */
              add
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":3633:3638  q * x */
              dup3
              mul
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":3632:3645  (q * x) >> 96 */
              dup2
              sar
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":3649:3684  26449188498355588339934803723976023 */
              0x05180bb14799ab47a8a8cb2a527d57
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":3631:3684  ((q * x) >> 96) + 26449188498355588339934803723976023 */
              add
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":2941:2973  57155421227552351082224309758442 */
              0x02d16720577bd19bf614176fe9ea
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":2874:2905  1346386616545796478920950773328 */
              0x10fe68e7fd37d0007b713f7650
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":2870:2905  x + 1346386616545796478920950773328 */
              dup5
              add
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":2925:2930  y * x */
              dup5
              mul
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":2924:2937  (y * x) >> 96 */
              dup4
              sar
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":2923:2973  ((y * x) >> 96) + 57155421227552351082224309758442 */
              swap1
              dup2
              add
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":2998:3003  y + x */
              swap1
              dup5
              add
              not(0x01d3967ed30fc4f89c02bab57081)
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":2998:3038  y + x - 94201549194550492254356042504812 */
              add
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":3058:3063  p * y */
              mul
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":3057:3070  (p * y) >> 96 */
              swap1
              swap2
              sar
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":3074:3109  28719021644029726153956944680412240 */
              0x0587f503bb6ea29d25fcb740196450
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":3056:3109  ((p * y) >> 96) + 28719021644029726153956944680412240 */
              add
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":3127:3132  p * x */
              swap1
              swap2
              mul
              shl(0x62, 0x360d7aeea093263ecc6e0ecb2917)
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":3127:3177  p * x + (4385272521454847904659076985693276 << 96) */
              add
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":4002:4012  sdiv(p, q) */
              sdiv
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":4502:4551  3822833074963236453042738258902158003155416615667 */
              0x029d9dc38563c32e5c2f6dc192ee70ef65f9978af3
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":4489:4551  uint256(r) * 3822833074963236453042738258902158003155416615667 */
              mul
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":4564:4567  195 */
              0xc3
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":4564:4571  195 - k */
              swap4
              swap1
              swap4
              sub
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":4488:4572  (uint256(r) * 3822833074963236453042738258902158003155416615667) >> uint256(195 - k) */
              swap3
              swap1
              swap3
              shr
              swap3
              swap2
              pop
              pop
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":1487:4590  function expWad(int256 x) internal pure returns (int256 r) {... */
              jump	// out
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":710:868  function mulWadUp(uint256 x, uint256 y) internal pure returns (uint256) {... */
            tag_675:
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":773:780  uint256 */
              0x00
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":799:818  mulDivUp(x, y, WAD) */
              tag_281
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":808:809  x */
              dup4
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":811:812  y */
              dup4
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":491:495  1e18 */
              0x0de0b6b3a7640000
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":799:807  mulDivUp */
              tag_820
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":799:818  mulDivUp(x, y, WAD) */
              jump	// in
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":540:704  function mulWadDown(uint256 x, uint256 y) internal pure returns (uint256) {... */
            tag_677:
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":605:612  uint256 */
              0x00
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":631:652  mulDivDown(x, y, WAD) */
              tag_281
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":642:643  x */
              dup4
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":645:646  y */
              dup4
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":491:495  1e18 */
              0x0de0b6b3a7640000
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":631:641  mulDivDown */
              tag_663
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":631:652  mulDivDown(x, y, WAD) */
              jump	// in
                /* "node_modules/@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol":599:703  function min(uint256 a, uint256 b) internal pure returns (uint256) {... */
            tag_732:
                /* "node_modules/@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol":657:664  uint256 */
              0x00
                /* "node_modules/@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol":687:688  b */
              dup2
                /* "node_modules/@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol":683:684  a */
              dup4
                /* "node_modules/@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol":683:688  a < b */
              lt
                /* "node_modules/@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol":683:696  a < b ? a : b */
              tag_824
              jumpi
                /* "node_modules/@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol":695:696  b */
              dup2
                /* "node_modules/@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol":683:696  a < b ? a : b */
              jump(tag_281)
            tag_824:
              pop
                /* "node_modules/@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol":691:692  a */
              swap1
              swap2
                /* "node_modules/@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol":599:703  function min(uint256 a, uint256 b) internal pure returns (uint256) {... */
              swap1
              pop
              jump	// out
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":4596:7543  function lnWad(int256 x) internal pure returns (int256 r) {... */
            tag_740:
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":4644:4652  int256 r */
              0x00
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":4700:4701  0 */
              dup1
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":4696:4697  x */
              dup3
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":4696:4701  x > 0 */
              sgt
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":4688:4715  require(x > 0, "UNDEFINED") */
              tag_827
              jumpi
              0x00
              dup1
              revert
            tag_827:
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":5107:5115  int256 k */
              0x00
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":5145:5147  96 */
              0x60
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":5125:5141  log2(uint256(x)) */
              tag_828
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":5138:5139  x */
              dup5
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":5125:5129  log2 */
              tag_829
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":5125:5141  log2(uint256(x)) */
              jump	// in
            tag_828:
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":5118:5147  int256(log2(uint256(x))) - 96 */
              sub
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":5175:5178  159 */
              0x9f
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":5175:5182  159 - k */
              dup2
              dup2
              sub
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":5161:5183  x <<= uint256(159 - k) */
              swap5
              swap1
              swap5
              shl
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":5208:5225  uint256(x) >> 159 */
              swap1
              swap4
              shr
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":6001:6032  5573035233440673466300451813936 */
              0x465772b2bbbb5f824b15207a30
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":5997:6032  x + 5573035233440673466300451813936 */
              dup2
              add
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":6052:6057  q * x */
              dup2
              mul
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":5459:5461  96 */
              0x60
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":6051:6064  (q * x) >> 96 */
              swap1
              dup2
              sar
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":6068:6100  71694874799317883764090561454958 */
              0x0388eaa27412d5aca026815d636e
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":6050:6100  ((q * x) >> 96) + 71694874799317883764090561454958 */
              add
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":6120:6125  q * x */
              dup3
              mul
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":6119:6132  (q * x) >> 96 */
              dup2
              sar
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":6136:6169  283447036172924575727196451306956 */
              0x0df99ac502031bf953eff472fdcc
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":6118:6169  ((q * x) >> 96) + 283447036172924575727196451306956 */
              add
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":6189:6194  q * x */
              dup3
              mul
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":6188:6201  (q * x) >> 96 */
              dup2
              sar
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":6205:6238  401686690394027663651624208769553 */
              0x13cdffb29d51d99322bdff5f2211
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":6187:6238  ((q * x) >> 96) + 401686690394027663651624208769553 */
              add
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":6258:6263  q * x */
              dup3
              mul
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":6257:6270  (q * x) >> 96 */
              dup2
              sar
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":6274:6307  204048457590392012362485061816622 */
              0x0a0f742023def783a307a986912e
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":6256:6307  ((q * x) >> 96) + 204048457590392012362485061816622 */
              add
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":6327:6332  q * x */
              dup3
              mul
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":6326:6339  (q * x) >> 96 */
              dup2
              sar
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":6343:6375  31853899698501571402653359427138 */
              0x01920d8043ca89b5239253284e42
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":6325:6375  ((q * x) >> 96) + 31853899698501571402653359427138 */
              add
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":6395:6400  q * x */
              dup3
              mul
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":6394:6407  (q * x) >> 96 */
              dup2
              sar
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":6411:6441  909429971244387300277376558375 */
              0x0b7a86d7375468fac667a0a527
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":6393:6441  ((q * x) >> 96) + 909429971244387300277376558375 */
              add
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":5398:5429  3273285459638523848632254066296 */
              0x29508e458543d8aa4df2abee78
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":5394:5429  x + 3273285459638523848632254066296 */
              dup4
              add
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":5449:5454  p * x */
              dup4
              mul
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":5448:5461  (p * x) >> 96 */
              dup3
              sar
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":5465:5497  24828157081833163892658089445524 */
              0x0139601a2efabe717e604cbb4894
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":5447:5497  ((p * x) >> 96) + 24828157081833163892658089445524 */
              add
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":5517:5522  p * x */
              dup4
              mul
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":5516:5529  (p * x) >> 96 */
              dup3
              sar
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":5533:5565  43456485725739037958740375743393 */
              0x02247f7a7b6594320649aa03aba1
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":5515:5565  ((p * x) >> 96) + 43456485725739037958740375743393 */
              add
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":5585:5590  p * x */
              dup4
              mul
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":5584:5597  (p * x) >> 96 */
              dup3
              sar
              not(0x8c3f38e95a6b1ff2ab1c3b3436)
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":5583:5633  ((p * x) >> 96) - 11111509109440967052023855526967 */
              add
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":5653:5658  p * x */
              dup4
              mul
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":5652:5665  (p * x) >> 96 */
              dup3
              sar
              not(0x02384773bdf1ac5676facced6090)
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":5651:5701  ((p * x) >> 96) - 45023709667254063763336534515857 */
              add
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":5721:5726  p * x */
              dup4
              mul
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":5720:5733  (p * x) >> 96 */
              swap1
              swap2
              sar
              not(0xb9a025d814b29c212b8b1a07cd)
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":5719:5769  ((p * x) >> 96) - 14706773417378608786704636184526 */
              add
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":5787:5792  p * x */
              swap1
              swap2
              mul
              not(0x0a09507084cc699bb0e71ea869ffffffffffffffffffffffff)
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":5787:5833  p * x - (795164235651350426258249787498 << 96) */
              add
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":6735:6745  sdiv(p, q) */
              sdiv
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":7125:7168  1677202110996718588342820967067443963516166 */
              0x1340daa0d5f769dba1915cef59f0815a5506
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":7120:7168  r *= 1677202110996718588342820967067443963516166 */
              mul
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":7232:7303  16597577552685614221487285958193947469193820559219878177908093499208371 */
              0x0267a36c0c95b3975ab3ee5b203a7614a3f75373f047d803ae7b6687f2b3
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":7232:7307  16597577552685614221487285958193947469193820559219878177908093499208371 * k */
              swap4
              swap1
              swap4
              mul
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":7227:7307  r += 16597577552685614221487285958193947469193820559219878177908093499208371 * k */
              swap3
              swap1
              swap3
              add
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":7380:7452  600920179829731861736702779321621459595472258049074101567377883020018308 */
              0x57115e47018c7177eebf7cd370a3356a1b7863008a5ae8028c72b8864284
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":7375:7452  r += 600920179829731861736702779321621459595472258049074101567377883020018308 */
              add
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":7523:7526  174 */
              0xae
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":7517:7526  r >>= 174 */
              sar
              swap3
              swap2
              pop
              pop
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":4596:7543  function lnWad(int256 x) internal pure returns (int256 r) {... */
              jump	// out
                /* "node_modules/@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol":2146:2295  function toHexString(address addr) internal pure returns (string memory) {... */
            tag_801:
                /* "node_modules/@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol":2204:2217  string memory */
              0x60
                /* "node_modules/@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol":2236:2288  toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH) */
              tag_194
              sub(shl(0xa0, 0x01), 0x01)
                /* "node_modules/@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol":2248:2270  uint256(uint160(addr)) */
              dup4
              and
                /* "node_modules/@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol":333:335  20 */
              0x14
                /* "node_modules/@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol":1557:1994  function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {... */
            tag_803:
                /* "node_modules/@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol":1632:1645  string memory */
              0x60
                /* "node_modules/@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol":1657:1676  bytes memory buffer */
              0x00
                /* "node_modules/@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol":1689:1699  2 * length */
              tag_833
                /* "node_modules/@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol":1693:1699  length */
              dup4
                /* "node_modules/@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol":1689:1690  2 */
              0x02
                /* "node_modules/@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol":1689:1699  2 * length */
              tag_429
              jump	// in
            tag_833:
                /* "node_modules/@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol":1689:1703  2 * length + 2 */
              tag_834
              swap1
                /* "node_modules/@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol":1702:1703  2 */
              0x02
                /* "node_modules/@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol":1689:1703  2 * length + 2 */
              tag_230
              jump	// in
            tag_834:
              sub(shl(0x40, 0x01), 0x01)
                /* "node_modules/@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol":1679:1704  new bytes(2 * length + 2) */
              dup2
              gt
              iszero
              tag_836
              jumpi
              tag_836
              tag_173
              jump	// in
            tag_836:
              mload(0x40)
              swap1
              dup1
              dup3
              mstore
              dup1
              0x1f
              add
              not(0x1f)
              and
              0x20
              add
              dup3
              add
              0x40
              mstore
              dup1
              iszero
              tag_837
              jumpi
              0x20
              dup3
              add
              dup2
              dup1
              calldatasize
              dup4
              calldatacopy
              add
              swap1
              pop
            tag_837:
              pop
                /* "node_modules/@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol":1657:1704  bytes memory buffer = new bytes(2 * length + 2) */
              swap1
              pop
              shl(0xfc, 0x03)
                /* "node_modules/@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol":1714:1720  buffer */
              dup2
                /* "node_modules/@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol":1721:1722  0 */
              0x00
                /* "node_modules/@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol":1714:1723  buffer[0] */
              dup2
              mload
              dup2
              lt
              tag_839
              jumpi
              tag_839
              tag_186
              jump	// in
            tag_839:
              0x20
              add
              add
                /* "node_modules/@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol":1714:1729  buffer[0] = "0" */
              swap1
              not(sub(shl(0xf8, 0x01), 0x01))
              and
              swap1
              dup2
              0x00
              byte
              swap1
              mstore8
              pop
              shl(0xfb, 0x0f)
                /* "node_modules/@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol":1739:1745  buffer */
              dup2
                /* "node_modules/@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol":1746:1747  1 */
              0x01
                /* "node_modules/@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol":1739:1748  buffer[1] */
              dup2
              mload
              dup2
              lt
              tag_841
              jumpi
              tag_841
              tag_186
              jump	// in
            tag_841:
              0x20
              add
              add
                /* "node_modules/@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol":1739:1754  buffer[1] = "x" */
              swap1
              not(sub(shl(0xf8, 0x01), 0x01))
              and
              swap1
              dup2
              0x00
              byte
              swap1
              mstore8
              pop
                /* "node_modules/@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol":1769:1778  uint256 i */
              0x00
                /* "node_modules/@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol":1781:1791  2 * length */
              tag_845
                /* "node_modules/@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol":1785:1791  length */
              dup5
                /* "node_modules/@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol":1781:1782  2 */
              0x02
                /* "node_modules/@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol":1781:1791  2 * length */
              tag_429
              jump	// in
            tag_845:
                /* "node_modules/@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol":1781:1795  2 * length + 1 */
              tag_846
              swap1
                /* "node_modules/@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol":1794:1795  1 */
              0x01
                /* "node_modules/@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol":1781:1795  2 * length + 1 */
              tag_230
              jump	// in
            tag_846:
                /* "node_modules/@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol":1769:1795  uint256 i = 2 * length + 1 */
              swap1
              pop
                /* "node_modules/@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol":1764:1892  for (uint256 i = 2 * length + 1; i > 1; --i) {... */
            tag_842:
                /* "node_modules/@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol":1801:1802  1 */
              0x01
                /* "node_modules/@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol":1797:1798  i */
              dup2
                /* "node_modules/@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol":1797:1802  i > 1 */
              gt
                /* "node_modules/@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol":1764:1892  for (uint256 i = 2 * length + 1; i > 1; --i) {... */
              iszero
              tag_843
              jumpi
              shl(0x81, 0x181899199a1a9b1b9c1cb0b131b232b3)
                /* "node_modules/@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol":1844:1849  value */
              dup6
                /* "node_modules/@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol":1852:1855  0xf */
              0x0f
                /* "node_modules/@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol":1844:1855  value & 0xf */
              and
                /* "node_modules/@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol":1835:1856  _SYMBOLS[value & 0xf] */
              0x10
              dup2
              lt
              tag_848
              jumpi
              tag_848
              tag_186
              jump	// in
            tag_848:
              byte
              0xf8
              shl
                /* "node_modules/@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol":1823:1829  buffer */
              dup3
                /* "node_modules/@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol":1830:1831  i */
              dup3
                /* "node_modules/@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol":1823:1832  buffer[i] */
              dup2
              mload
              dup2
              lt
              tag_850
              jumpi
              tag_850
              tag_186
              jump	// in
            tag_850:
              0x20
              add
              add
                /* "node_modules/@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol":1823:1856  buffer[i] = _SYMBOLS[value & 0xf] */
              swap1
              not(sub(shl(0xf8, 0x01), 0x01))
              and
              swap1
              dup2
              0x00
              byte
              swap1
              mstore8
              pop
                /* "node_modules/@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol":1880:1881  4 */
              0x04
                /* "node_modules/@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol":1870:1881  value >>= 4 */
              swap5
              swap1
              swap5
              shr
              swap4
                /* "node_modules/@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol":1804:1807  --i */
              tag_851
              dup2
              tag_852
              jump	// in
            tag_851:
              swap1
              pop
                /* "node_modules/@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol":1764:1892  for (uint256 i = 2 * length + 1; i > 1; --i) {... */
              jump(tag_842)
            tag_843:
              pop
                /* "node_modules/@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol":1909:1919  value == 0 */
              dup4
              iszero
                /* "node_modules/@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol":1901:1956  require(value == 0, "Strings: hex length insufficient") */
              tag_281
              jumpi
              0x00
              dup1
              revert
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":8282:9034  function mulDivUp(... */
            tag_820:
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":8486:8495  mul(x, y) */
              dup3
              dup3
              mul
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":8617:8636  iszero(denominator) */
              dup2
              iszero
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":8610:8637  iszero(iszero(denominator)) */
              iszero
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":8642:8651  iszero(x) */
              dup5
              iszero
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":8656:8665  div(z, x) */
              dup6
              dup4
              div
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":8653:8669  eq(div(z, x), y) */
              dup6
              eq
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":8639:8670  or(iszero(x), eq(div(z, x), y)) */
              or
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":8606:8671  and(iszero(iszero(denominator)), or(iszero(x), eq(div(z, x), y))) */
              and
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":8596:8717  if iszero(and(iszero(iszero(denominator)), or(iszero(x), eq(div(z, x), y)))) {... */
              tag_855
              jumpi
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":8701:8702  0 */
              0x00
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":8698:8699  0 */
              dup1
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":8691:8703  revert(0, 0) */
              revert
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":8596:8717  if iszero(and(iszero(iszero(denominator)), or(iszero(x), eq(div(z, x), y)))) {... */
            tag_855:
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":9015:9016  1 */
              0x01
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":9001:9012  denominator */
              dup3
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":8997:8998  1 */
              0x01
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":8994:8995  z */
              dup4
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":8990:8999  sub(z, 1) */
              sub
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":8986:9013  div(sub(z, 1), denominator) */
              div
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":8982:9017  add(div(sub(z, 1), denominator), 1) */
              add
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":8977:8978  z */
              dup2
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":8970:8979  iszero(z) */
              iszero
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":8963:8980  iszero(iszero(z)) */
              iszero
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":8959:9018  mul(iszero(iszero(z)), add(div(sub(z, 1), denominator), 1)) */
              mul
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":8954:9018  z := mul(iszero(iszero(z)), add(div(sub(z, 1), denominator), 1)) */
              swap1
              pop
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":8282:9034  function mulDivUp(... */
              swap4
              swap3
              pop
              pop
              pop
              jump	// out
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":15328:15903  function log2(uint256 x) internal pure returns (uint256 r) {... */
            tag_829:
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":15376:15385  uint256 r */
              0x00
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":15409:15410  0 */
              dup1
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":15405:15406  x */
              dup3
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":15405:15410  x > 0 */
              gt
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":15397:15424  require(x > 0, "UNDEFINED") */
              tag_857
              jumpi
              0x00
              dup1
              revert
            tag_857:
              pop
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":15821:15822  1 */
              0x01
              sub(shl(0x80, 0x01), 0x01)
              dup3
              gt
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":15467:15468  7 */
              0x07
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":15463:15512  shl(7, lt(0xffffffffffffffffffffffffffffffff, x)) */
              shl
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":15566:15575  shr(r, x) */
              dup3
              dup2
              shr
              sub(shl(0x40, 0x01), 0x01)
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":15543:15576  lt(0xffffffffffffffff, shr(r, x)) */
              lt
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":15540:15541  6 */
              0x06
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":15536:15577  shl(6, lt(0xffffffffffffffff, shr(r, x))) */
              shl
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":15530:15578  or(r, shl(6, lt(0xffffffffffffffff, shr(r, x)))) */
              or
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":15624:15633  shr(r, x) */
              dup3
              dup2
              shr
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":15612:15622  0xffffffff */
              0xffffffff
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":15609:15634  lt(0xffffffff, shr(r, x)) */
              lt
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":15606:15607  5 */
              0x05
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":15602:15635  shl(5, lt(0xffffffff, shr(r, x))) */
              shl
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":15596:15636  or(r, shl(5, lt(0xffffffff, shr(r, x)))) */
              or
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":15678:15687  shr(r, x) */
              dup3
              dup2
              shr
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":15670:15676  0xffff */
              0xffff
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":15667:15688  lt(0xffff, shr(r, x)) */
              lt
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":15664:15665  4 */
              0x04
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":15660:15689  shl(4, lt(0xffff, shr(r, x))) */
              shl
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":15654:15690  or(r, shl(4, lt(0xffff, shr(r, x)))) */
              or
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":15730:15739  shr(r, x) */
              dup3
              dup2
              shr
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":15724:15728  0xff */
              0xff
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":15721:15740  lt(0xff, shr(r, x)) */
              lt
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":15718:15719  3 */
              0x03
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":15714:15741  shl(3, lt(0xff, shr(r, x))) */
              swap1
              dup2
              shl
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":15708:15742  or(r, shl(3, lt(0xff, shr(r, x)))) */
              swap1
              swap2
              or
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":15781:15790  shr(r, x) */
              dup4
              dup2
              shr
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":15776:15779  0xf */
              0x0f
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":15773:15791  lt(0xf, shr(r, x)) */
              lt
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":15770:15771  2 */
              0x02
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":15766:15792  shl(2, lt(0xf, shr(r, x))) */
              shl
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":15760:15793  or(r, shl(2, lt(0xf, shr(r, x)))) */
              or
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":15832:15841  shr(r, x) */
              dup4
              dup2
              shr
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":15824:15842  lt(0x3, shr(r, x)) */
              swap1
              swap2
              lt
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":15817:15843  shl(1, lt(0x3, shr(r, x))) */
              dup3
              shl
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":15811:15844  or(r, shl(1, lt(0x3, shr(r, x)))) */
              or
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":15876:15885  shr(r, x) */
              swap2
              dup3
              shr
              gt
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":15862:15887  or(r, lt(0x1, shr(r, x))) */
              or
              swap1
                /* "node_modules/solmate/src/utils/FixedPointMathLib.sol":15328:15903  function log2(uint256 x) internal pure returns (uint256 r) {... */
              jump	// out
                /* "#utility.yul":14:145   */
            tag_858:
              sub(shl(0xa0, 0x01), 0x01)
                /* "#utility.yul":89:120   */
              dup2
              and
                /* "#utility.yul":79:121   */
              dup2
              eq
                /* "#utility.yul":69:139   */
              tag_277
              jumpi
                /* "#utility.yul":135:136   */
              0x00
                /* "#utility.yul":132:133   */
              dup1
                /* "#utility.yul":125:137   */
              revert
                /* "#utility.yul":150:397   */
            tag_41:
                /* "#utility.yul":209:215   */
              0x00
                /* "#utility.yul":262:264   */
              0x20
                /* "#utility.yul":250:259   */
              dup3
                /* "#utility.yul":241:248   */
              dup5
                /* "#utility.yul":237:260   */
              sub
                /* "#utility.yul":233:265   */
              slt
                /* "#utility.yul":230:282   */
              iszero
              tag_882
              jumpi
                /* "#utility.yul":278:279   */
              0x00
                /* "#utility.yul":275:276   */
              dup1
                /* "#utility.yul":268:280   */
              revert
                /* "#utility.yul":230:282   */
            tag_882:
                /* "#utility.yul":317:326   */
              dup2
                /* "#utility.yul":304:327   */
              calldataload
                /* "#utility.yul":336:367   */
              tag_281
                /* "#utility.yul":361:366   */
              dup2
                /* "#utility.yul":336:367   */
              tag_858
              jump	// in
                /* "#utility.yul":402:688   */
            tag_45:
                /* "#utility.yul":460:466   */
              0x00
                /* "#utility.yul":513:515   */
              0x20
                /* "#utility.yul":501:510   */
              dup3
                /* "#utility.yul":492:499   */
              dup5
                /* "#utility.yul":488:511   */
              sub
                /* "#utility.yul":484:516   */
              slt
                /* "#utility.yul":481:533   */
              iszero
              tag_885
              jumpi
                /* "#utility.yul":529:530   */
              0x00
                /* "#utility.yul":526:527   */
              dup1
                /* "#utility.yul":519:531   */
              revert
                /* "#utility.yul":481:533   */
            tag_885:
                /* "#utility.yul":555:578   */
              dup2
              calldataload
              not(sub(shl(0xe0, 0x01), 0x01))
                /* "#utility.yul":607:639   */
              dup2
              and
                /* "#utility.yul":597:640   */
              dup2
              eq
                /* "#utility.yul":587:658   */
              tag_281
              jumpi
                /* "#utility.yul":654:655   */
              0x00
                /* "#utility.yul":651:652   */
              dup1
                /* "#utility.yul":644:656   */
              revert
                /* "#utility.yul":885:1065   */
            tag_51:
                /* "#utility.yul":944:950   */
              0x00
                /* "#utility.yul":997:999   */
              0x20
                /* "#utility.yul":985:994   */
              dup3
                /* "#utility.yul":976:983   */
              dup5
                /* "#utility.yul":972:995   */
              sub
                /* "#utility.yul":968:1000   */
              slt
                /* "#utility.yul":965:1017   */
              iszero
              tag_889
              jumpi
                /* "#utility.yul":1013:1014   */
              0x00
                /* "#utility.yul":1010:1011   */
              dup1
                /* "#utility.yul":1003:1015   */
              revert
                /* "#utility.yul":965:1017   */
            tag_889:
              pop
                /* "#utility.yul":1036:1059   */
              calldataload
              swap2
                /* "#utility.yul":885:1065   */
              swap1
              pop
              jump	// out
                /* "#utility.yul":1999:2141   */
            tag_860:
                /* "#utility.yul":2075:2095   */
              dup1
              calldataload
                /* "#utility.yul":2104:2135   */
              tag_897
                /* "#utility.yul":2075:2095   */
              dup2
                /* "#utility.yul":2104:2135   */
              tag_858
              jump	// in
            tag_897:
                /* "#utility.yul":1999:2141   */
              swap2
              swap1
              pop
              jump	// out
                /* "#utility.yul":2146:2306   */
            tag_861:
                /* "#utility.yul":2211:2231   */
              dup1
              calldataload
                /* "#utility.yul":2267:2280   */
              dup1
              iszero
                /* "#utility.yul":2260:2281   */
              iszero
                /* "#utility.yul":2250:2282   */
              dup2
              eq
                /* "#utility.yul":2240:2300   */
              tag_897
              jumpi
                /* "#utility.yul":2296:2297   */
              0x00
                /* "#utility.yul":2293:2294   */
              dup1
                /* "#utility.yul":2286:2298   */
              revert
                /* "#utility.yul":2311:2939   */
            tag_68:
                /* "#utility.yul":2424:2430   */
              0x00
                /* "#utility.yul":2432:2438   */
              dup1
                /* "#utility.yul":2440:2446   */
              0x00
                /* "#utility.yul":2448:2454   */
              dup1
                /* "#utility.yul":2501:2504   */
              0x80
                /* "#utility.yul":2489:2498   */
              dup6
                /* "#utility.yul":2480:2487   */
              dup8
                /* "#utility.yul":2476:2499   */
              sub
                /* "#utility.yul":2472:2505   */
              slt
                /* "#utility.yul":2469:2522   */
              iszero
              tag_901
              jumpi
                /* "#utility.yul":2518:2519   */
              0x00
                /* "#utility.yul":2515:2516   */
              dup1
                /* "#utility.yul":2508:2520   */
              revert
                /* "#utility.yul":2469:2522   */
            tag_901:
                /* "#utility.yul":2557:2566   */
              dup5
                /* "#utility.yul":2544:2567   */
              calldataload
                /* "#utility.yul":2576:2607   */
              tag_902
                /* "#utility.yul":2601:2606   */
              dup2
                /* "#utility.yul":2576:2607   */
              tag_858
              jump	// in
            tag_902:
                /* "#utility.yul":2626:2631   */
              swap4
              pop
                /* "#utility.yul":2683:2685   */
              0x20
                /* "#utility.yul":2668:2686   */
              dup6
              add
                /* "#utility.yul":2655:2687   */
              calldataload
                /* "#utility.yul":2696:2729   */
              tag_903
                /* "#utility.yul":2655:2687   */
              dup2
                /* "#utility.yul":2696:2729   */
              tag_858
              jump	// in
            tag_903:
                /* "#utility.yul":2748:2755   */
              swap3
              pop
                /* "#utility.yul":2774:2809   */
              tag_904
                /* "#utility.yul":2805:2807   */
              0x40
                /* "#utility.yul":2790:2808   */
              dup7
              add
                /* "#utility.yul":2774:2809   */
              tag_861
              jump	// in
            tag_904:
                /* "#utility.yul":2764:2809   */
              swap2
              pop
                /* "#utility.yul":2861:2863   */
              0x60
                /* "#utility.yul":2850:2859   */
              dup6
                /* "#utility.yul":2846:2864   */
              add
                /* "#utility.yul":2833:2865   */
              calldataload
                /* "#utility.yul":2874:2907   */
              tag_905
                /* "#utility.yul":2899:2906   */
              dup2
                /* "#utility.yul":2874:2907   */
              tag_858
              jump	// in
            tag_905:
                /* "#utility.yul":2311:2939   */
              swap4
              swap7
              swap3
              swap6
              pop
              swap1
              swap4
              pop
              pop
              jump	// out
                /* "#utility.yul":3197:3512   */
            tag_74:
                /* "#utility.yul":3265:3271   */
              0x00
                /* "#utility.yul":3273:3279   */
              dup1
                /* "#utility.yul":3326:3328   */
              0x40
                /* "#utility.yul":3314:3323   */
              dup4
                /* "#utility.yul":3305:3312   */
              dup6
                /* "#utility.yul":3301:3324   */
              sub
                /* "#utility.yul":3297:3329   */
              slt
                /* "#utility.yul":3294:3346   */
              iszero
              tag_908
              jumpi
                /* "#utility.yul":3342:3343   */
              0x00
                /* "#utility.yul":3339:3340   */
              dup1
                /* "#utility.yul":3332:3344   */
              revert
                /* "#utility.yul":3294:3346   */
            tag_908:
                /* "#utility.yul":3378:3387   */
              dup3
                /* "#utility.yul":3365:3388   */
              calldataload
                /* "#utility.yul":3355:3388   */
              swap2
              pop
                /* "#utility.yul":3438:3440   */
              0x20
                /* "#utility.yul":3427:3436   */
              dup4
                /* "#utility.yul":3423:3441   */
              add
                /* "#utility.yul":3410:3442   */
              calldataload
                /* "#utility.yul":3451:3482   */
              tag_909
                /* "#utility.yul":3476:3481   */
              dup2
                /* "#utility.yul":3451:3482   */
              tag_858
              jump	// in
            tag_909:
                /* "#utility.yul":3501:3506   */
              dup1
                /* "#utility.yul":3491:3506   */
              swap2
              pop
              pop
                /* "#utility.yul":3197:3512   */
              swap3
              pop
              swap3
              swap1
              pop
              jump	// out
                /* "#utility.yul":3517:3644   */
            tag_173:
                /* "#utility.yul":3578:3588   */
              0x4e487b71
                /* "#utility.yul":3573:3576   */
              0xe0
                /* "#utility.yul":3569:3589   */
              shl
                /* "#utility.yul":3566:3567   */
              0x00
                /* "#utility.yul":3559:3590   */
              mstore
                /* "#utility.yul":3609:3613   */
              0x41
                /* "#utility.yul":3606:3607   */
              0x04
                /* "#utility.yul":3599:3614   */
              mstore
                /* "#utility.yul":3633:3637   */
              0x24
                /* "#utility.yul":3630:3631   */
              0x00
                /* "#utility.yul":3623:3638   */
              revert
                /* "#utility.yul":3649:3906   */
            tag_862:
                /* "#utility.yul":3721:3725   */
              0x40
                /* "#utility.yul":3715:3726   */
              dup1
              mload
              swap1
                /* "#utility.yul":3753:3770   */
              dup2
              add
              sub(shl(0x40, 0x01), 0x01)
                /* "#utility.yul":3785:3819   */
              dup2
              gt
                /* "#utility.yul":3821:3843   */
              dup3
              dup3
              lt
                /* "#utility.yul":3782:3844   */
              or
                /* "#utility.yul":3779:3867   */
              iszero
              tag_913
              jumpi
                /* "#utility.yul":3847:3865   */
              tag_913
              tag_173
              jump	// in
            tag_913:
                /* "#utility.yul":3883:3887   */
              0x40
                /* "#utility.yul":3876:3900   */
              mstore
                /* "#utility.yul":3649:3906   */
              swap1
              jump	// out
                /* "#utility.yul":3911:4166   */
            tag_863:
                /* "#utility.yul":3983:3985   */
              0x40
                /* "#utility.yul":3977:3986   */
              mload
                /* "#utility.yul":4025:4031   */
              0x01c0
                /* "#utility.yul":4013:4032   */
              dup2
              add
              sub(shl(0x40, 0x01), 0x01)
                /* "#utility.yul":4047:4081   */
              dup2
              gt
                /* "#utility.yul":4083:4105   */
              dup3
              dup3
              lt
                /* "#utility.yul":4044:4106   */
              or
                /* "#utility.yul":4041:4129   */
              iszero
              tag_913
              jumpi
                /* "#utility.yul":4109:4127   */
              tag_913
              tag_173
              jump	// in
                /* "#utility.yul":4171:4446   */
            tag_864:
                /* "#utility.yul":4242:4244   */
              0x40
                /* "#utility.yul":4236:4245   */
              mload
                /* "#utility.yul":4307:4309   */
              0x1f
                /* "#utility.yul":4288:4301   */
              dup3
              add
              not(0x1f)
                /* "#utility.yul":4284:4311   */
              and
                /* "#utility.yul":4272:4312   */
              dup2
              add
              sub(shl(0x40, 0x01), 0x01)
                /* "#utility.yul":4327:4361   */
              dup2
              gt
                /* "#utility.yul":4363:4385   */
              dup3
              dup3
              lt
                /* "#utility.yul":4324:4386   */
              or
                /* "#utility.yul":4321:4409   */
              iszero
              tag_919
              jumpi
                /* "#utility.yul":4389:4407   */
              tag_919
              tag_173
              jump	// in
            tag_919:
                /* "#utility.yul":4425:4427   */
              0x40
                /* "#utility.yul":4418:4440   */
              mstore
                /* "#utility.yul":4171:4446   */
              swap2
              swap1
              pop
              jump	// out
                /* "#utility.yul":4451:4649   */
            tag_865:
                /* "#utility.yul":4526:4530   */
              0x00
              sub(shl(0x40, 0x01), 0x01)
                /* "#utility.yul":4551:4557   */
              dup3
                /* "#utility.yul":4548:4578   */
              gt
                /* "#utility.yul":4545:4601   */
              iszero
              tag_922
              jumpi
                /* "#utility.yul":4581:4599   */
              tag_922
              tag_173
              jump	// in
            tag_922:
              pop
                /* "#utility.yul":4626:4627   */
              0x05
                /* "#utility.yul":4622:4636   */
              shl
                /* "#utility.yul":4638:4642   */
              0x20
                /* "#utility.yul":4618:4643   */
              add
              swap1
                /* "#utility.yul":4451:4649   */
              jump	// out
                /* "#utility.yul":4654:7014   */
            tag_866:
                /* "#utility.yul":4723:4728   */
              0x00
                /* "#utility.yul":4776:4779   */
              dup3
                /* "#utility.yul":4769:4773   */
              0x1f
                /* "#utility.yul":4761:4767   */
              dup4
                /* "#utility.yul":4757:4774   */
              add
                /* "#utility.yul":4753:4780   */
              slt
                /* "#utility.yul":4743:4798   */
              tag_924
              jumpi
                /* "#utility.yul":4794:4795   */
              0x00
                /* "#utility.yul":4791:4792   */
              dup1
                /* "#utility.yul":4784:4796   */
              revert
                /* "#utility.yul":4743:4798   */
            tag_924:
                /* "#utility.yul":4830:4836   */
              dup2
                /* "#utility.yul":4817:4837   */
              calldataload
                /* "#utility.yul":4856:4860   */
              0x20
                /* "#utility.yul":4880:4955   */
              tag_925
                /* "#utility.yul":4896:4954   */
              tag_926
                /* "#utility.yul":4951:4953   */
              dup4
                /* "#utility.yul":4896:4954   */
              tag_865
              jump	// in
            tag_926:
                /* "#utility.yul":4880:4955   */
              tag_864
              jump	// in
            tag_925:
                /* "#utility.yul":4989:5004   */
              dup3
              dup2
              mstore
                /* "#utility.yul":5051:5052   */
              0x05
                /* "#utility.yul":5091:5102   */
              swap3
              dup4
              shl
                /* "#utility.yul":5079:5103   */
              dup6
              add
                /* "#utility.yul":5075:5108   */
              dup3
              add
              swap3
                /* "#utility.yul":5020:5032   */
              dup3
              dup3
              add
              swap2
                /* "#utility.yul":4977:4980   */
              swap1
                /* "#utility.yul":5120:5135   */
              dup8
              dup6
              gt
                /* "#utility.yul":5117:5152   */
              iszero
              tag_927
              jumpi
                /* "#utility.yul":5148:5149   */
              0x00
                /* "#utility.yul":5145:5146   */
              dup1
                /* "#utility.yul":5138:5150   */
              revert
                /* "#utility.yul":5117:5152   */
            tag_927:
                /* "#utility.yul":5184:5186   */
              dup4
                /* "#utility.yul":5176:5182   */
              dup8
                /* "#utility.yul":5172:5187   */
              add
                /* "#utility.yul":5196:6985   */
            tag_928:
                /* "#utility.yul":5212:5218   */
              dup6
                /* "#utility.yul":5207:5210   */
              dup2
                /* "#utility.yul":5204:5219   */
              lt
                /* "#utility.yul":5196:6985   */
              iszero
              tag_930
              jumpi
                /* "#utility.yul":5298:5301   */
              dup1
                /* "#utility.yul":5285:5302   */
              calldataload
              sub(shl(0x40, 0x01), 0x01)
                /* "#utility.yul":5375:5377   */
              dup1
                /* "#utility.yul":5362:5373   */
              dup3
                /* "#utility.yul":5359:5378   */
              gt
                /* "#utility.yul":5356:5465   */
              iszero
              tag_931
              jumpi
                /* "#utility.yul":5419:5420   */
              0x00
                /* "#utility.yul":5448:5450   */
              dup1
                /* "#utility.yul":5444:5446   */
              dup2
                /* "#utility.yul":5437:5451   */
              revert
                /* "#utility.yul":5356:5465   */
            tag_931:
                /* "#utility.yul":5488:5512   */
              swap1
              dup10
              add
              swap1
                /* "#utility.yul":5535:5539   */
              0x40
                /* "#utility.yul":5563:5575   */
              dup3
              dup13
              sub
              not(0x1f)
                /* "#utility.yul":5559:5585   */
              add
                /* "#utility.yul":5555:5590   */
              dup2
              sgt
                /* "#utility.yul":5552:5677   */
              iszero
              tag_932
              jumpi
                /* "#utility.yul":5631:5632   */
              0x00
                /* "#utility.yul":5660:5662   */
              dup1
                /* "#utility.yul":5656:5658   */
              dup2
                /* "#utility.yul":5649:5663   */
              revert
                /* "#utility.yul":5552:5677   */
            tag_932:
                /* "#utility.yul":5703:5725   */
              tag_933
              tag_862
              jump	// in
            tag_933:
                /* "#utility.yul":5774:5776   */
              dup9
                /* "#utility.yul":5770:5772   */
              dup5
                /* "#utility.yul":5766:5777   */
              add
                /* "#utility.yul":5753:5778   */
              calldataload
                /* "#utility.yul":5791:5824   */
              tag_934
                /* "#utility.yul":5816:5823   */
              dup2
                /* "#utility.yul":5791:5824   */
              tag_858
              jump	// in
            tag_934:
                /* "#utility.yul":5837:5859   */
              dup2
              mstore
                /* "#utility.yul":5901:5912   */
              dup4
              dup3
              add
                /* "#utility.yul":5888:5913   */
              calldataload
                /* "#utility.yul":5929:5945   */
              dup4
              dup2
              gt
                /* "#utility.yul":5926:6032   */
              iszero
              tag_935
              jumpi
                /* "#utility.yul":5986:5987   */
              0x00
                /* "#utility.yul":6015:6017   */
              dup1
                /* "#utility.yul":6011:6013   */
              dup2
                /* "#utility.yul":6004:6018   */
              revert
                /* "#utility.yul":5926:6032   */
            tag_935:
                /* "#utility.yul":6064:6072   */
              dup1
                /* "#utility.yul":6060:6062   */
              dup6
                /* "#utility.yul":6056:6073   */
              add
                /* "#utility.yul":6045:6073   */
              swap5
              pop
              pop
                /* "#utility.yul":6114:6117   */
              dup13
                /* "#utility.yul":6109:6111   */
              0x3f
                /* "#utility.yul":6104:6107   */
              dup6
                /* "#utility.yul":6100:6112   */
              add
                /* "#utility.yul":6096:6118   */
              slt
                /* "#utility.yul":6086:6209   */
              tag_936
              jumpi
                /* "#utility.yul":6161:6162   */
              0x00
                /* "#utility.yul":6150:6162   */
              swap3
              pop
                /* "#utility.yul":6191:6194   */
              dup3
                /* "#utility.yul":6186:6189   */
              dup4
                /* "#utility.yul":6179:6195   */
              revert
                /* "#utility.yul":6086:6209   */
            tag_936:
                /* "#utility.yul":6255:6257   */
              dup9
                /* "#utility.yul":6250:6253   */
              dup5
                /* "#utility.yul":6246:6258   */
              add
                /* "#utility.yul":6233:6259   */
              calldataload
                /* "#utility.yul":6222:6259   */
              swap3
              pop
                /* "#utility.yul":6285:6361   */
              tag_937
                /* "#utility.yul":6301:6360   */
              tag_926
                /* "#utility.yul":6356:6359   */
              dup5
                /* "#utility.yul":6301:6360   */
              tag_865
              jump	// in
                /* "#utility.yul":6285:6361   */
            tag_937:
                /* "#utility.yul":6405:6423   */
              dup4
              dup2
              mstore
                /* "#utility.yul":6501:6513   */
              swap3
              dup7
              shl
                /* "#utility.yul":6492:6514   */
              dup5
              add
                /* "#utility.yul":6488:6519   */
              dup3
              add
              swap3
                /* "#utility.yul":6445:6459   */
              dup10
              dup2
              add
              swap1
                /* "#utility.yul":6535:6552   */
              dup15
              dup6
              gt
                /* "#utility.yul":6532:6642   */
              iszero
              tag_939
              jumpi
                /* "#utility.yul":6594:6595   */
              0x00
                /* "#utility.yul":6624:6627   */
              dup1
                /* "#utility.yul":6619:6622   */
              dup2
                /* "#utility.yul":6612:6628   */
              revert
                /* "#utility.yul":6532:6642   */
            tag_939:
                /* "#utility.yul":6668:6680   */
              swap5
              dup4
              add
              swap5
                /* "#utility.yul":6693:6870   */
            tag_940:
                /* "#utility.yul":6711:6719   */
              dup5
                /* "#utility.yul":6704:6709   */
              dup7
                /* "#utility.yul":6701:6720   */
              lt
                /* "#utility.yul":6693:6870   */
              iszero
              tag_942
              jumpi
                /* "#utility.yul":6793:6815   */
              tag_943
                /* "#utility.yul":6809:6814   */
              dup7
                /* "#utility.yul":6793:6815   */
              tag_861
              jump	// in
            tag_943:
                /* "#utility.yul":6779:6816   */
              dup3
              mstore
                /* "#utility.yul":6732:6746   */
              swap5
              dup11
              add
              swap5
                /* "#utility.yul":6842:6856   */
              swap1
              dup11
              add
              swap1
                /* "#utility.yul":6693:6870   */
              jump(tag_940)
            tag_942:
                /* "#utility.yul":6890:6904   */
              dup3
              dup12
              add
                /* "#utility.yul":6883:6912   */
              mstore
              pop
                /* "#utility.yul":6925:6943   */
              dup8
              mstore
              pop
              pop
              pop
                /* "#utility.yul":6963:6975   */
              swap3
              dup5
              add
              swap3
                /* "#utility.yul":5229:5241   */
              dup5
              add
                /* "#utility.yul":5196:6985   */
              jump(tag_928)
            tag_930:
              pop
                /* "#utility.yul":7003:7008   */
              swap1
              swap8
                /* "#utility.yul":4654:7014   */
              swap7
              pop
              pop
              pop
              pop
              pop
              pop
              pop
              jump	// out
                /* "#utility.yul":7019:7706   */
            tag_81:
                /* "#utility.yul":7169:7175   */
              0x00
                /* "#utility.yul":7177:7183   */
              dup1
                /* "#utility.yul":7185:7191   */
              0x00
                /* "#utility.yul":7238:7240   */
              0x60
                /* "#utility.yul":7226:7235   */
              dup5
                /* "#utility.yul":7217:7224   */
              dup7
                /* "#utility.yul":7213:7236   */
              sub
                /* "#utility.yul":7209:7241   */
              slt
                /* "#utility.yul":7206:7258   */
              iszero
              tag_945
              jumpi
                /* "#utility.yul":7254:7255   */
              0x00
                /* "#utility.yul":7251:7252   */
              dup1
                /* "#utility.yul":7244:7256   */
              revert
                /* "#utility.yul":7206:7258   */
            tag_945:
                /* "#utility.yul":7294:7303   */
              dup4
                /* "#utility.yul":7281:7304   */
              calldataload
              sub(shl(0x40, 0x01), 0x01)
                /* "#utility.yul":7319:7325   */
              dup2
                /* "#utility.yul":7316:7346   */
              gt
                /* "#utility.yul":7313:7363   */
              iszero
              tag_946
              jumpi
                /* "#utility.yul":7359:7360   */
              0x00
                /* "#utility.yul":7356:7357   */
              dup1
                /* "#utility.yul":7349:7361   */
              revert
                /* "#utility.yul":7313:7363   */
            tag_946:
                /* "#utility.yul":7382:7458   */
              tag_947
                /* "#utility.yul":7450:7457   */
              dup7
                /* "#utility.yul":7441:7447   */
              dup3
                /* "#utility.yul":7430:7439   */
              dup8
                /* "#utility.yul":7426:7448   */
              add
                /* "#utility.yul":7382:7458   */
              tag_866
              jump	// in
            tag_947:
                /* "#utility.yul":7372:7458   */
              swap4
              pop
              pop
                /* "#utility.yul":7508:7510   */
              0x20
                /* "#utility.yul":7497:7506   */
              dup5
                /* "#utility.yul":7493:7511   */
              add
                /* "#utility.yul":7480:7512   */
              calldataload
                /* "#utility.yul":7521:7552   */
              tag_948
                /* "#utility.yul":7546:7551   */
              dup2
                /* "#utility.yul":7521:7552   */
              tag_858
              jump	// in
            tag_948:
                /* "#utility.yul":7571:7576   */
              swap2
              pop
                /* "#utility.yul":7628:7630   */
              0x40
                /* "#utility.yul":7613:7631   */
              dup5
              add
                /* "#utility.yul":7600:7632   */
              calldataload
                /* "#utility.yul":7641:7674   */
              tag_949
                /* "#utility.yul":7600:7632   */
              dup2
                /* "#utility.yul":7641:7674   */
              tag_858
              jump	// in
            tag_949:
                /* "#utility.yul":7693:7700   */
              dup1
                /* "#utility.yul":7683:7700   */
              swap2
              pop
              pop
                /* "#utility.yul":7019:7706   */
              swap3
              pop
              swap3
              pop
              swap3
              jump	// out
                /* "#utility.yul":7893:8311   */
            tag_87:
                /* "#utility.yul":7991:7997   */
              0x00
                /* "#utility.yul":7999:8005   */
              dup1
                /* "#utility.yul":8052:8054   */
              0x40
                /* "#utility.yul":8040:8049   */
              dup4
                /* "#utility.yul":8031:8038   */
              dup6
                /* "#utility.yul":8027:8050   */
              sub
                /* "#utility.yul":8023:8055   */
              slt
                /* "#utility.yul":8020:8072   */
              iszero
              tag_952
              jumpi
                /* "#utility.yul":8068:8069   */
              0x00
                /* "#utility.yul":8065:8066   */
              dup1
                /* "#utility.yul":8058:8070   */
              revert
                /* "#utility.yul":8020:8072   */
            tag_952:
                /* "#utility.yul":8107:8116   */
              dup3
                /* "#utility.yul":8094:8117   */
              calldataload
                /* "#utility.yul":8126:8157   */
              tag_953
                /* "#utility.yul":8151:8156   */
              dup2
                /* "#utility.yul":8126:8157   */
              tag_858
              jump	// in
            tag_953:
                /* "#utility.yul":8176:8181   */
              swap2
              pop
                /* "#utility.yul":8233:8235   */
              0x20
                /* "#utility.yul":8218:8236   */
              dup4
              add
                /* "#utility.yul":8205:8237   */
              calldataload
                /* "#utility.yul":8246:8279   */
              tag_909
                /* "#utility.yul":8205:8237   */
              dup2
                /* "#utility.yul":8246:8279   */
              tag_858
              jump	// in
                /* "#utility.yul":9113:9581   */
            tag_868:
                /* "#utility.yul":9173:9176   */
              0x00
                /* "#utility.yul":9211:9216   */
              dup2
                /* "#utility.yul":9205:9217   */
              mload
                /* "#utility.yul":9238:9244   */
              dup1
                /* "#utility.yul":9233:9236   */
              dup5
                /* "#utility.yul":9226:9245   */
              mstore
                /* "#utility.yul":9264:9268   */
              0x20
                /* "#utility.yul":9293:9295   */
              dup1
                /* "#utility.yul":9288:9291   */
              dup6
                /* "#utility.yul":9284:9296   */
              add
                /* "#utility.yul":9277:9296   */
              swap5
              pop
                /* "#utility.yul":9330:9332   */
              dup1
                /* "#utility.yul":9323:9328   */
              dup5
                /* "#utility.yul":9319:9333   */
              add
                /* "#utility.yul":9351:9352   */
              0x00
                /* "#utility.yul":9361:9556   */
            tag_959:
                /* "#utility.yul":9375:9381   */
              dup4
                /* "#utility.yul":9372:9373   */
              dup2
                /* "#utility.yul":9369:9382   */
              lt
                /* "#utility.yul":9361:9556   */
              iszero
              tag_961
              jumpi
                /* "#utility.yul":9440:9453   */
              dup2
              mload
              sub(shl(0xa0, 0x01), 0x01)
                /* "#utility.yul":9436:9475   */
              and
                /* "#utility.yul":9424:9476   */
              dup8
              mstore
                /* "#utility.yul":9496:9508   */
              swap6
              dup3
              add
              swap6
                /* "#utility.yul":9531:9546   */
              swap1
              dup3
              add
              swap1
                /* "#utility.yul":9472:9473   */
              0x01
                /* "#utility.yul":9390:9399   */
              add
                /* "#utility.yul":9361:9556   */
              jump(tag_959)
            tag_961:
              pop
                /* "#utility.yul":9572:9575   */
              swap5
              swap6
                /* "#utility.yul":9113:9581   */
              swap5
              pop
              pop
              pop
              pop
              pop
              jump	// out
                /* "#utility.yul":9586:10412   */
            tag_103:
                /* "#utility.yul":9858:9860   */
              0x40
                /* "#utility.yul":9847:9856   */
              dup2
                /* "#utility.yul":9840:9861   */
              mstore
                /* "#utility.yul":9821:9825   */
              0x00
                /* "#utility.yul":9884:9947   */
              tag_963
                /* "#utility.yul":9943:9945   */
              0x40
                /* "#utility.yul":9932:9941   */
              dup4
                /* "#utility.yul":9928:9946   */
              add
                /* "#utility.yul":9920:9926   */
              dup6
                /* "#utility.yul":9884:9947   */
              tag_868
              jump	// in
            tag_963:
                /* "#utility.yul":10004:10026   */
              dup3
              dup2
              sub
                /* "#utility.yul":9966:9968   */
              0x20
                /* "#utility.yul":9984:10002   */
              dup5
              dup2
              add
                /* "#utility.yul":9977:10027   */
              swap2
              swap1
              swap2
              mstore
                /* "#utility.yul":10076:10089   */
              dup5
              mload
                /* "#utility.yul":10098:10120   */
              dup1
              dup4
              mstore
                /* "#utility.yul":10174:10189   */
              dup6
              dup3
              add
              swap3
                /* "#utility.yul":10136:10151   */
              dup3
              add
              swap1
                /* "#utility.yul":10207:10208   */
              0x00
                /* "#utility.yul":10217:10386   */
            tag_964:
                /* "#utility.yul":10231:10237   */
              dup2
                /* "#utility.yul":10228:10229   */
              dup2
                /* "#utility.yul":10225:10238   */
              lt
                /* "#utility.yul":10217:10386   */
              iszero
              tag_930
              jumpi
                /* "#utility.yul":10292:10305   */
              dup5
              mload
                /* "#utility.yul":10280:10306   */
              dup4
              mstore
                /* "#utility.yul":10361:10376   */
              swap4
              dup4
              add
              swap4
                /* "#utility.yul":10326:10338   */
              swap2
              dup4
              add
              swap2
                /* "#utility.yul":10253:10254   */
              0x01
                /* "#utility.yul":10246:10255   */
              add
                /* "#utility.yul":10217:10386   */
              jump(tag_964)
                /* "#utility.yul":10825:12387   */
            tag_121:
                /* "#utility.yul":11033:11037   */
              0x00
                /* "#utility.yul":11062:11064   */
              0x20
                /* "#utility.yul":11102:11104   */
              dup1
                /* "#utility.yul":11091:11100   */
              dup4
                /* "#utility.yul":11087:11105   */
              add
                /* "#utility.yul":11132:11134   */
              dup2
                /* "#utility.yul":11121:11130   */
              dup5
                /* "#utility.yul":11114:11135   */
              mstore
                /* "#utility.yul":11155:11161   */
              dup1
                /* "#utility.yul":11190:11196   */
              dup6
                /* "#utility.yul":11184:11197   */
              mload
                /* "#utility.yul":11221:11227   */
              dup1
                /* "#utility.yul":11213:11219   */
              dup4
                /* "#utility.yul":11206:11228   */
              mstore
                /* "#utility.yul":11247:11249   */
              0x40
                /* "#utility.yul":11237:11249   */
              swap3
              pop
                /* "#utility.yul":11280:11282   */
              dup3
                /* "#utility.yul":11269:11278   */
              dup7
                /* "#utility.yul":11265:11283   */
              add
                /* "#utility.yul":11258:11283   */
              swap2
              pop
                /* "#utility.yul":11342:11344   */
              dup3
                /* "#utility.yul":11332:11338   */
              dup2
                /* "#utility.yul":11329:11330   */
              0x05
                /* "#utility.yul":11325:11339   */
              shl
                /* "#utility.yul":11314:11323   */
              dup8
                /* "#utility.yul":11310:11340   */
              add
                /* "#utility.yul":11306:11345   */
              add
                /* "#utility.yul":11380:11382   */
              dup5
                /* "#utility.yul":11372:11378   */
              dup9
                /* "#utility.yul":11368:11383   */
              add
                /* "#utility.yul":11401:11402   */
              0x00
                /* "#utility.yul":11422:11423   */
              dup1
                /* "#utility.yul":11432:12358   */
            tag_972:
                /* "#utility.yul":11448:11454   */
              dup5
                /* "#utility.yul":11443:11446   */
              dup2
                /* "#utility.yul":11440:11455   */
              lt
                /* "#utility.yul":11432:12358   */
              iszero
              tag_974
              jumpi
                /* "#utility.yul":11517:11539   */
              dup10
              dup5
              sub
              not(0x3f)
                /* "#utility.yul":11513:11549   */
              add
                /* "#utility.yul":11501:11550   */
              dup7
              mstore
                /* "#utility.yul":11573:11586   */
              dup3
              mload
                /* "#utility.yul":11660:11669   */
              dup1
              mload
              sub(shl(0xa0, 0x01), 0x01)
                /* "#utility.yul":11656:11691   */
              and
                /* "#utility.yul":11641:11692   */
              dup6
              mstore
                /* "#utility.yul":11731:11742   */
              dup9
              add
                /* "#utility.yul":11725:11743   */
              mload
                /* "#utility.yul":11763:11778   */
              dup9
              dup6
              add
                /* "#utility.yul":11756:11783   */
              dup9
              swap1
              mstore
                /* "#utility.yul":11844:11863   */
              dup1
              mload
                /* "#utility.yul":11613:11628   */
              dup9
              dup7
              add
                /* "#utility.yul":11876:11900   */
              dup2
              swap1
              mstore
                /* "#utility.yul":11966:11987   */
              swap1
              dup10
              add
              swap1
                /* "#utility.yul":12011:12012   */
              dup4
              swap1
                /* "#utility.yul":11934:11936   */
              0x60
                /* "#utility.yul":11922:11937   */
              dup8
              add
              swap1
                /* "#utility.yul":12025:12250   */
            tag_975:
                /* "#utility.yul":12041:12049   */
              dup1
                /* "#utility.yul":12036:12039   */
              dup4
                /* "#utility.yul":12033:12050   */
              lt
                /* "#utility.yul":12025:12250   */
              iszero
              tag_977
              jumpi
                /* "#utility.yul":12132:12147   */
              dup4
              mload
                /* "#utility.yul":12125:12148   */
              iszero
                /* "#utility.yul":12118:12149   */
              iszero
                /* "#utility.yul":12104:12150   */
              dup3
              mstore
                /* "#utility.yul":12219:12236   */
              swap3
              dup12
              add
              swap3
                /* "#utility.yul":12069:12070   */
              0x01
                /* "#utility.yul":12060:12071   */
              swap3
              swap1
              swap3
              add
              swap2
                /* "#utility.yul":12176:12190   */
              swap1
              dup12
              add
              swap1
                /* "#utility.yul":12025:12250   */
              jump(tag_975)
            tag_977:
              pop
                /* "#utility.yul":12336:12348   */
              swap8
              dup11
              add
              swap8
                /* "#utility.yul":12273:12278   */
              swap6
              pop
              pop
              pop
                /* "#utility.yul":12301:12316   */
              swap2
              dup8
              add
              swap2
                /* "#utility.yul":11474:11475   */
              0x01
                /* "#utility.yul":11465:11476   */
              add
                /* "#utility.yul":11432:12358   */
              jump(tag_972)
            tag_974:
              pop
                /* "#utility.yul":12375:12381   */
              swap2
              swap10
                /* "#utility.yul":10825:12387   */
              swap9
              pop
              pop
              pop
              pop
              pop
              pop
              pop
              pop
              pop
              jump	// out
                /* "#utility.yul":12659:12942   */
            tag_130:
                /* "#utility.yul":12853:12855   */
              0x20
                /* "#utility.yul":12842:12851   */
              dup2
                /* "#utility.yul":12835:12856   */
              mstore
                /* "#utility.yul":12816:12820   */
              0x00
                /* "#utility.yul":12873:12936   */
              tag_281
                /* "#utility.yul":12932:12934   */
              0x20
                /* "#utility.yul":12921:12930   */
              dup4
                /* "#utility.yul":12917:12935   */
              add
                /* "#utility.yul":12909:12915   */
              dup5
                /* "#utility.yul":12873:12936   */
              tag_868
              jump	// in
                /* "#utility.yul":13207:14639   */
            tag_138:
                /* "#utility.yul":13382:13388   */
              0x00
                /* "#utility.yul":13390:13396   */
              dup1
                /* "#utility.yul":13398:13404   */
              0x00
                /* "#utility.yul":13451:13453   */
              0x60
                /* "#utility.yul":13439:13448   */
              dup5
                /* "#utility.yul":13430:13437   */
              dup7
                /* "#utility.yul":13426:13449   */
              sub
                /* "#utility.yul":13422:13454   */
              slt
                /* "#utility.yul":13419:13471   */
              iszero
              tag_985
              jumpi
                /* "#utility.yul":13467:13468   */
              0x00
                /* "#utility.yul":13464:13465   */
              dup1
                /* "#utility.yul":13457:13469   */
              revert
                /* "#utility.yul":13419:13471   */
            tag_985:
                /* "#utility.yul":13507:13516   */
              dup4
                /* "#utility.yul":13494:13517   */
              calldataload
              sub(shl(0x40, 0x01), 0x01)
                /* "#utility.yul":13577:13579   */
              dup1
                /* "#utility.yul":13569:13575   */
              dup3
                /* "#utility.yul":13566:13580   */
              gt
                /* "#utility.yul":13563:13597   */
              iszero
              tag_986
              jumpi
                /* "#utility.yul":13593:13594   */
              0x00
                /* "#utility.yul":13590:13591   */
              dup1
                /* "#utility.yul":13583:13595   */
              revert
                /* "#utility.yul":13563:13597   */
            tag_986:
                /* "#utility.yul":13616:13692   */
              tag_987
                /* "#utility.yul":13684:13691   */
              dup8
                /* "#utility.yul":13675:13681   */
              dup4
                /* "#utility.yul":13664:13673   */
              dup9
                /* "#utility.yul":13660:13682   */
              add
                /* "#utility.yul":13616:13692   */
              tag_866
              jump	// in
            tag_987:
                /* "#utility.yul":13606:13692   */
              swap5
              pop
                /* "#utility.yul":13711:13713   */
              0x20
                /* "#utility.yul":13701:13713   */
              swap2
              pop
                /* "#utility.yul":13763:13765   */
              dup2
                /* "#utility.yul":13752:13761   */
              dup7
                /* "#utility.yul":13748:13766   */
              add
                /* "#utility.yul":13735:13767   */
              calldataload
                /* "#utility.yul":13776:13807   */
              tag_988
                /* "#utility.yul":13801:13806   */
              dup2
                /* "#utility.yul":13776:13807   */
              tag_858
              jump	// in
            tag_988:
                /* "#utility.yul":13826:13831   */
              swap4
              pop
                /* "#utility.yul":13884:13886   */
              0x40
                /* "#utility.yul":13869:13887   */
              dup7
              add
                /* "#utility.yul":13856:13888   */
              calldataload
                /* "#utility.yul":13900:13916   */
              dup2
              dup2
              gt
                /* "#utility.yul":13897:13933   */
              iszero
              tag_989
              jumpi
                /* "#utility.yul":13929:13930   */
              0x00
                /* "#utility.yul":13926:13927   */
              dup1
                /* "#utility.yul":13919:13931   */
              revert
                /* "#utility.yul":13897:13933   */
            tag_989:
                /* "#utility.yul":13952:13976   */
              dup7
              add
              swap1
              pop
                /* "#utility.yul":14007:14011   */
              0x1f
                /* "#utility.yul":13999:14012   */
              dup2
              add
                /* "#utility.yul":13995:14022   */
              dup8
              sgt
                /* "#utility.yul":13985:14040   */
              tag_990
              jumpi
                /* "#utility.yul":14036:14037   */
              0x00
                /* "#utility.yul":14033:14034   */
              dup1
                /* "#utility.yul":14026:14038   */
              revert
                /* "#utility.yul":13985:14040   */
            tag_990:
                /* "#utility.yul":14072:14074   */
              dup1
                /* "#utility.yul":14059:14075   */
              calldataload
                /* "#utility.yul":14095:14170   */
              tag_991
                /* "#utility.yul":14111:14169   */
              tag_926
                /* "#utility.yul":14166:14168   */
              dup3
                /* "#utility.yul":14111:14169   */
              tag_865
              jump	// in
                /* "#utility.yul":14095:14170   */
            tag_991:
                /* "#utility.yul":14204:14219   */
              dup2
              dup2
              mstore
                /* "#utility.yul":14286:14287   */
              0x05
                /* "#utility.yul":14282:14292   */
              swap2
              swap1
              swap2
              shl
                /* "#utility.yul":14274:14293   */
              dup3
              add
                /* "#utility.yul":14270:14298   */
              dup4
              add
              swap1
                /* "#utility.yul":14235:14247   */
              dup4
              dup2
              add
              swap1
                /* "#utility.yul":14310:14329   */
              dup10
              dup4
              gt
                /* "#utility.yul":14307:14346   */
              iszero
              tag_993
              jumpi
                /* "#utility.yul":14342:14343   */
              0x00
                /* "#utility.yul":14339:14340   */
              dup1
                /* "#utility.yul":14332:14344   */
              revert
                /* "#utility.yul":14307:14346   */
            tag_993:
                /* "#utility.yul":14366:14377   */
              swap3
              dup5
              add
              swap3
                /* "#utility.yul":14386:14609   */
            tag_994:
                /* "#utility.yul":14402:14408   */
              dup3
                /* "#utility.yul":14397:14400   */
              dup5
                /* "#utility.yul":14394:14409   */
              lt
                /* "#utility.yul":14386:14609   */
              iszero
              tag_996
              jumpi
                /* "#utility.yul":14484:14487   */
              dup4
                /* "#utility.yul":14471:14488   */
              calldataload
                /* "#utility.yul":14501:14534   */
              tag_997
                /* "#utility.yul":14526:14533   */
              dup2
                /* "#utility.yul":14501:14534   */
              tag_858
              jump	// in
            tag_997:
                /* "#utility.yul":14547:14567   */
              dup3
              mstore
                /* "#utility.yul":14419:14431   */
              swap3
              dup5
              add
              swap3
                /* "#utility.yul":14587:14599   */
              swap1
              dup5
              add
              swap1
                /* "#utility.yul":14386:14609   */
              jump(tag_994)
            tag_996:
                /* "#utility.yul":14628:14633   */
              dup1
                /* "#utility.yul":14618:14633   */
              swap6
              pop
              pop
              pop
              pop
              pop
              pop
                /* "#utility.yul":13207:14639   */
              swap3
              pop
              swap3
              pop
              swap3
              jump	// out
                /* "#utility.yul":14644:14807   */
            tag_869:
                /* "#utility.yul":14711:14731   */
              dup1
              calldataload
                /* "#utility.yul":14771:14781   */
              0xffffffff
                /* "#utility.yul":14760:14782   */
              dup2
              and
                /* "#utility.yul":14750:14783   */
              dup2
              eq
                /* "#utility.yul":14740:14801   */
              tag_897
              jumpi
                /* "#utility.yul":14797:14798   */
              0x00
                /* "#utility.yul":14794:14795   */
              dup1
                /* "#utility.yul":14787:14799   */
              revert
                /* "#utility.yul":14812:14974   */
            tag_870:
                /* "#utility.yul":14879:14899   */
              dup1
              calldataload
                /* "#utility.yul":14939:14941   */
              0x0f
                /* "#utility.yul":14928:14949   */
              dup2
              swap1
              signextend
                /* "#utility.yul":14918:14950   */
              dup2
              eq
                /* "#utility.yul":14908:14968   */
              tag_897
              jumpi
                /* "#utility.yul":14964:14965   */
              0x00
                /* "#utility.yul":14961:14962   */
              dup1
                /* "#utility.yul":14954:14966   */
              revert
                /* "#utility.yul":14979:15150   */
            tag_871:
                /* "#utility.yul":15046:15066   */
              dup1
              calldataload
              sub(shl(0x40, 0x01), 0x01)
                /* "#utility.yul":15095:15125   */
              dup2
              and
                /* "#utility.yul":15085:15126   */
              dup2
              eq
                /* "#utility.yul":15075:15144   */
              tag_897
              jumpi
                /* "#utility.yul":15140:15141   */
              0x00
                /* "#utility.yul":15137:15138   */
              dup1
                /* "#utility.yul":15130:15142   */
              revert
                /* "#utility.yul":15155:17551   */
            tag_149:
                /* "#utility.yul":15263:15269   */
              0x00
                /* "#utility.yul":15294:15296   */
              0x20
                /* "#utility.yul":15337:15339   */
              dup1
                /* "#utility.yul":15325:15334   */
              dup4
                /* "#utility.yul":15316:15323   */
              dup6
                /* "#utility.yul":15312:15335   */
              sub
                /* "#utility.yul":15308:15340   */
              slt
                /* "#utility.yul":15305:15357   */
              iszero
              tag_1005
              jumpi
                /* "#utility.yul":15353:15354   */
              0x00
                /* "#utility.yul":15350:15351   */
              dup1
                /* "#utility.yul":15343:15355   */
              revert
                /* "#utility.yul":15305:15357   */
            tag_1005:
                /* "#utility.yul":15393:15402   */
              dup3
                /* "#utility.yul":15380:15403   */
              calldataload
              sub(shl(0x40, 0x01), 0x01)
                /* "#utility.yul":15418:15424   */
              dup2
                /* "#utility.yul":15415:15445   */
              gt
                /* "#utility.yul":15412:15462   */
              iszero
              tag_1006
              jumpi
                /* "#utility.yul":15458:15459   */
              0x00
                /* "#utility.yul":15455:15456   */
              dup1
                /* "#utility.yul":15448:15460   */
              revert
                /* "#utility.yul":15412:15462   */
            tag_1006:
                /* "#utility.yul":15481:15503   */
              dup4
              add
                /* "#utility.yul":15534:15538   */
              0x1f
                /* "#utility.yul":15526:15539   */
              dup2
              add
                /* "#utility.yul":15522:15549   */
              dup6
              sgt
                /* "#utility.yul":15512:15567   */
              tag_1007
              jumpi
                /* "#utility.yul":15563:15564   */
              0x00
                /* "#utility.yul":15560:15561   */
              dup1
                /* "#utility.yul":15553:15565   */
              revert
                /* "#utility.yul":15512:15567   */
            tag_1007:
                /* "#utility.yul":15599:15601   */
              dup1
                /* "#utility.yul":15586:15602   */
              calldataload
                /* "#utility.yul":15622:15697   */
              tag_1008
                /* "#utility.yul":15638:15696   */
              tag_926
                /* "#utility.yul":15693:15695   */
              dup3
                /* "#utility.yul":15638:15696   */
              tag_865
              jump	// in
                /* "#utility.yul":15622:15697   */
            tag_1008:
                /* "#utility.yul":15731:15746   */
              dup2
              dup2
              mstore
                /* "#utility.yul":15793:15799   */
              0x01c0
                /* "#utility.yul":15834:15845   */
              swap2
              dup3
              mul
                /* "#utility.yul":15826:15846   */
              dup4
              add
                /* "#utility.yul":15822:15851   */
              dup5
              add
              swap2
                /* "#utility.yul":15762:15774   */
              dup5
              dup3
              add
              swap2
                /* "#utility.yul":15719:15722   */
              swap1
                /* "#utility.yul":15863:15882   */
              dup9
              dup5
              gt
                /* "#utility.yul":15860:15899   */
              iszero
              tag_1010
              jumpi
                /* "#utility.yul":15895:15896   */
              0x00
                /* "#utility.yul":15892:15893   */
              dup1
                /* "#utility.yul":15885:15897   */
              revert
                /* "#utility.yul":15860:15899   */
            tag_1010:
                /* "#utility.yul":15919:15930   */
              swap4
              dup6
              add
              swap4
                /* "#utility.yul":15939:17521   */
            tag_1011:
                /* "#utility.yul":15955:15961   */
              dup4
                /* "#utility.yul":15950:15953   */
              dup6
                /* "#utility.yul":15947:15962   */
              lt
                /* "#utility.yul":15939:17521   */
              iszero
              tag_1013
              jumpi
                /* "#utility.yul":16035:16037   */
              dup1
                /* "#utility.yul":16029:16032   */
              dup6
                /* "#utility.yul":16020:16027   */
              dup11
                /* "#utility.yul":16016:16033   */
              sub
                /* "#utility.yul":16012:16038   */
              slt
                /* "#utility.yul":16009:16125   */
              iszero
              tag_1014
              jumpi
                /* "#utility.yul":16079:16080   */
              0x00
                /* "#utility.yul":16108:16110   */
              dup1
                /* "#utility.yul":16104:16106   */
              dup2
                /* "#utility.yul":16097:16111   */
              revert
                /* "#utility.yul":16009:16125   */
            tag_1014:
                /* "#utility.yul":16151:16173   */
              tag_1015
              tag_863
              jump	// in
            tag_1015:
                /* "#utility.yul":16200:16231   */
              tag_1016
                /* "#utility.yul":16227:16230   */
              dup7
                /* "#utility.yul":16200:16231   */
              tag_860
              jump	// in
            tag_1016:
                /* "#utility.yul":16193:16198   */
              dup2
                /* "#utility.yul":16186:16232   */
              mstore
                /* "#utility.yul":16268:16308   */
              tag_1017
                /* "#utility.yul":16304:16306   */
              dup8
                /* "#utility.yul":16299:16302   */
              dup8
                /* "#utility.yul":16295:16307   */
              add
                /* "#utility.yul":16268:16308   */
              tag_860
              jump	// in
            tag_1017:
                /* "#utility.yul":16263:16265   */
              dup8
                /* "#utility.yul":16256:16261   */
              dup3
                /* "#utility.yul":16252:16266   */
              add
                /* "#utility.yul":16245:16309   */
              mstore
                /* "#utility.yul":16332:16334   */
              0x40
                /* "#utility.yul":16370:16410   */
              tag_1018
                /* "#utility.yul":16406:16408   */
              dup2
                /* "#utility.yul":16401:16404   */
              dup9
                /* "#utility.yul":16397:16409   */
              add
                /* "#utility.yul":16370:16410   */
              tag_860
              jump	// in
            tag_1018:
                /* "#utility.yul":16354:16368   */
              swap1
              dup3
              add
                /* "#utility.yul":16347:16411   */
              mstore
                /* "#utility.yul":16434:16436   */
              0x60
                /* "#utility.yul":16472:16503   */
              tag_1019
                /* "#utility.yul":16490:16502   */
              dup8
              dup3
              add
                /* "#utility.yul":16472:16503   */
              tag_869
              jump	// in
            tag_1019:
                /* "#utility.yul":16456:16470   */
              swap1
              dup3
              add
                /* "#utility.yul":16449:16504   */
              mstore
                /* "#utility.yul":16527:16530   */
              0x80
                /* "#utility.yul":16579:16591   */
              dup7
              dup2
              add
                /* "#utility.yul":16566:16592   */
              calldataload
                /* "#utility.yul":16550:16564   */
              swap1
              dup3
              add
                /* "#utility.yul":16543:16593   */
              mstore
                /* "#utility.yul":16616:16619   */
              0xa0
                /* "#utility.yul":16668:16680   */
              dup1
              dup8
              add
                /* "#utility.yul":16655:16681   */
              calldataload
                /* "#utility.yul":16639:16653   */
              swap1
              dup3
              add
                /* "#utility.yul":16632:16682   */
              mstore
                /* "#utility.yul":16706:16709   */
              0xc0
                /* "#utility.yul":16759:16772   */
              dup1
              dup8
              add
                /* "#utility.yul":16746:16773   */
              calldataload
                /* "#utility.yul":16729:16744   */
              swap1
              dup3
              add
                /* "#utility.yul":16722:16774   */
              mstore
                /* "#utility.yul":16798:16801   */
              0xe0
                /* "#utility.yul":16851:16864   */
              dup1
              dup8
              add
                /* "#utility.yul":16838:16865   */
              calldataload
                /* "#utility.yul":16821:16836   */
              swap1
              dup3
              add
                /* "#utility.yul":16814:16866   */
              mstore
                /* "#utility.yul":16890:16893   */
              0x0100
                /* "#utility.yul":16930:16962   */
              tag_1020
                /* "#utility.yul":16948:16961   */
              dup2
              dup9
              add
                /* "#utility.yul":16930:16962   */
              tag_870
              jump	// in
            tag_1020:
                /* "#utility.yul":16913:16928   */
              swap1
              dup3
              add
                /* "#utility.yul":16906:16963   */
              mstore
                /* "#utility.yul":16987:16990   */
              0x0120
                /* "#utility.yul":17027:17059   */
              tag_1021
                /* "#utility.yul":17045:17058   */
              dup8
              dup3
              add
                /* "#utility.yul":17027:17059   */
              tag_871
              jump	// in
            tag_1021:
                /* "#utility.yul":17010:17025   */
              swap1
              dup3
              add
                /* "#utility.yul":17003:17060   */
              mstore
                /* "#utility.yul":17084:17087   */
              0x0140
                /* "#utility.yul":17124:17156   */
              tag_1022
                /* "#utility.yul":17142:17155   */
              dup8
              dup3
              add
                /* "#utility.yul":17124:17156   */
              tag_871
              jump	// in
            tag_1022:
                /* "#utility.yul":17107:17122   */
              swap1
              dup3
              add
                /* "#utility.yul":17100:17157   */
              mstore
                /* "#utility.yul":17181:17184   */
              0x0160
                /* "#utility.yul":17221:17253   */
              tag_1023
                /* "#utility.yul":17239:17252   */
              dup8
              dup3
              add
                /* "#utility.yul":17221:17253   */
              tag_871
              jump	// in
            tag_1023:
                /* "#utility.yul":17204:17219   */
              swap1
              dup3
              add
                /* "#utility.yul":17197:17254   */
              mstore
                /* "#utility.yul":17278:17281   */
              0x0180
                /* "#utility.yul":17318:17350   */
              tag_1024
                /* "#utility.yul":17336:17349   */
              dup8
              dup3
              add
                /* "#utility.yul":17318:17350   */
              tag_871
              jump	// in
            tag_1024:
                /* "#utility.yul":17301:17316   */
              swap1
              dup3
              add
                /* "#utility.yul":17294:17351   */
              mstore
                /* "#utility.yul":17375:17378   */
              0x01a0
                /* "#utility.yul":17415:17447   */
              tag_1025
                /* "#utility.yul":17433:17446   */
              dup8
              dup3
              add
                /* "#utility.yul":17415:17447   */
              tag_871
              jump	// in
            tag_1025:
                /* "#utility.yul":17398:17413   */
              swap1
              dup3
              add
                /* "#utility.yul":17391:17448   */
              mstore
                /* "#utility.yul":17461:17479   */
              dup4
              mstore
                /* "#utility.yul":15972:15984   */
              swap4
              dup5
              add
              swap4
                /* "#utility.yul":17499:17511   */
              swap2
              dup6
              add
              swap2
                /* "#utility.yul":15939:17521   */
              jump(tag_1011)
            tag_1013:
              pop
                /* "#utility.yul":17540:17545   */
              swap8
                /* "#utility.yul":15155:17551   */
              swap7
              pop
              pop
              pop
              pop
              pop
              pop
              pop
              jump	// out
                /* "#utility.yul":18028:19741   */
            tag_160:
                /* "#utility.yul":18249:18262   */
              dup2
              mload
              sub(shl(0xa0, 0x01), 0x01)
                /* "#utility.yul":1143:1174   */
              and
                /* "#utility.yul":1131:1175   */
              dup2
              mstore
                /* "#utility.yul":18210:18213   */
              0x01c0
                /* "#utility.yul":18195:18214   */
              dup2
              add
                /* "#utility.yul":18321:18325   */
              0x20
                /* "#utility.yul":18313:18319   */
              dup4
                /* "#utility.yul":18309:18326   */
              add
                /* "#utility.yul":18303:18327   */
              mload
                /* "#utility.yul":18336:18397   */
              tag_1033
                /* "#utility.yul":18391:18395   */
              0x20
                /* "#utility.yul":18380:18389   */
              dup5
                /* "#utility.yul":18376:18396   */
              add
                /* "#utility.yul":18362:18374   */
              dup3
              sub(shl(0xa0, 0x01), 0x01)
                /* "#utility.yul":1143:1174   */
              and
                /* "#utility.yul":1131:1175   */
              swap1
              mstore
                /* "#utility.yul":1070:1181   */
              jump
                /* "#utility.yul":18336:18397   */
            tag_1033:
              pop
                /* "#utility.yul":18446:18450   */
              0x40
                /* "#utility.yul":18438:18444   */
              dup4
                /* "#utility.yul":18434:18451   */
              add
                /* "#utility.yul":18428:18452   */
              mload
                /* "#utility.yul":18461:18524   */
              tag_1034
                /* "#utility.yul":18518:18522   */
              0x40
                /* "#utility.yul":18507:18516   */
              dup5
                /* "#utility.yul":18503:18523   */
              add
                /* "#utility.yul":18487:18501   */
              dup3
              sub(shl(0xa0, 0x01), 0x01)
                /* "#utility.yul":1143:1174   */
              and
                /* "#utility.yul":1131:1175   */
              swap1
              mstore
                /* "#utility.yul":1070:1181   */
              jump
                /* "#utility.yul":18461:18524   */
            tag_1034:
              pop
                /* "#utility.yul":18573:18577   */
              0x60
                /* "#utility.yul":18565:18571   */
              dup4
                /* "#utility.yul":18561:18578   */
              add
                /* "#utility.yul":18555:18579   */
              mload
                /* "#utility.yul":18588:18643   */
              tag_1035
                /* "#utility.yul":18637:18641   */
              0x60
                /* "#utility.yul":18626:18635   */
              dup5
                /* "#utility.yul":18622:18642   */
              add
                /* "#utility.yul":18606:18620   */
              dup3
                /* "#utility.yul":8716:8726   */
              0xffffffff
                /* "#utility.yul":8705:8727   */
              and
                /* "#utility.yul":8693:8728   */
              swap1
              mstore
                /* "#utility.yul":8640:8734   */
              jump
                /* "#utility.yul":18588:18643   */
            tag_1035:
              pop
                /* "#utility.yul":18699:18703   */
              0x80
                /* "#utility.yul":18691:18697   */
              dup4
                /* "#utility.yul":18687:18704   */
              add
                /* "#utility.yul":18681:18705   */
              mload
                /* "#utility.yul":18674:18678   */
              0x80
                /* "#utility.yul":18663:18672   */
              dup4
                /* "#utility.yul":18659:18679   */
              add
                /* "#utility.yul":18652:18706   */
              mstore
                /* "#utility.yul":18762:18766   */
              0xa0
                /* "#utility.yul":18754:18760   */
              dup4
                /* "#utility.yul":18750:18767   */
              add
                /* "#utility.yul":18744:18768   */
              mload
                /* "#utility.yul":18737:18741   */
              0xa0
                /* "#utility.yul":18726:18735   */
              dup4
                /* "#utility.yul":18722:18742   */
              add
                /* "#utility.yul":18715:18769   */
              mstore
                /* "#utility.yul":18825:18829   */
              0xc0
                /* "#utility.yul":18817:18823   */
              dup4
                /* "#utility.yul":18813:18830   */
              add
                /* "#utility.yul":18807:18831   */
              mload
                /* "#utility.yul":18800:18804   */
              0xc0
                /* "#utility.yul":18789:18798   */
              dup4
                /* "#utility.yul":18785:18805   */
              add
                /* "#utility.yul":18778:18832   */
              mstore
                /* "#utility.yul":18888:18892   */
              0xe0
                /* "#utility.yul":18880:18886   */
              dup4
                /* "#utility.yul":18876:18893   */
              add
                /* "#utility.yul":18870:18894   */
              mload
                /* "#utility.yul":18863:18867   */
              0xe0
                /* "#utility.yul":18852:18861   */
              dup4
                /* "#utility.yul":18848:18868   */
              add
                /* "#utility.yul":18841:18895   */
              mstore
                /* "#utility.yul":18914:18920   */
              0x0100
                /* "#utility.yul":18969:18971   */
              dup1
                /* "#utility.yul":18961:18967   */
              dup5
                /* "#utility.yul":18957:18972   */
              add
                /* "#utility.yul":18951:18973   */
              mload
                /* "#utility.yul":18982:19035   */
              tag_1036
                /* "#utility.yul":19031:19033   */
              dup3
                /* "#utility.yul":19020:19029   */
              dup6
                /* "#utility.yul":19016:19034   */
              add
                /* "#utility.yul":19000:19014   */
              dup3
                /* "#utility.yul":17899:17901   */
              0x0f
                /* "#utility.yul":17888:17909   */
              signextend
                /* "#utility.yul":17876:17910   */
              swap1
              mstore
                /* "#utility.yul":17823:17916   */
              jump
                /* "#utility.yul":18982:19035   */
            tag_1036:
              pop
              pop
                /* "#utility.yul":19054:19060   */
              0x0120
                /* "#utility.yul":19097:19112   */
              dup4
              dup2
              add
                /* "#utility.yul":19091:19113   */
              mload
              sub(shl(0x40, 0x01), 0x01)
                /* "#utility.yul":17986:18016   */
              swap1
              dup2
              and
                /* "#utility.yul":19156:19174   */
              swap2
              dup5
              add
                /* "#utility.yul":17974:18017   */
              swap2
              swap1
              swap2
              mstore
                /* "#utility.yul":19194:19200   */
              0x0140
                /* "#utility.yul":19237:19252   */
              dup1
              dup6
              add
                /* "#utility.yul":19231:19253   */
              mload
                /* "#utility.yul":17986:18016   */
              dup3
              and
                /* "#utility.yul":19296:19314   */
              swap1
              dup5
              add
                /* "#utility.yul":17974:18017   */
              mstore
                /* "#utility.yul":19334:19340   */
              0x0160
                /* "#utility.yul":19377:19392   */
              dup1
              dup6
              add
                /* "#utility.yul":19371:19393   */
              mload
                /* "#utility.yul":17986:18016   */
              dup3
              and
                /* "#utility.yul":19436:19454   */
              swap1
              dup5
              add
                /* "#utility.yul":17974:18017   */
              mstore
                /* "#utility.yul":19474:19480   */
              0x0180
                /* "#utility.yul":19517:19532   */
              dup1
              dup6
              add
                /* "#utility.yul":19511:19533   */
              mload
                /* "#utility.yul":17986:18016   */
              dup3
              and
                /* "#utility.yul":19576:19594   */
              swap1
              dup5
              add
                /* "#utility.yul":17974:18017   */
              mstore
                /* "#utility.yul":19614:19620   */
              0x01a0
                /* "#utility.yul":19657:19672   */
              swap4
              dup5
              add
                /* "#utility.yul":19651:19673   */
              mload
                /* "#utility.yul":17986:18016   */
              and
                /* "#utility.yul":19716:19734   */
              swap3
              swap1
              swap2
              add
                /* "#utility.yul":17974:18017   */
              swap2
              swap1
              swap2
              mstore
                /* "#utility.yul":18028:19741   */
              swap1
              jump	// out
                /* "#utility.yul":20154:20640   */
            tag_167:
                /* "#utility.yul":20261:20267   */
              0x00
                /* "#utility.yul":20269:20275   */
              dup1
                /* "#utility.yul":20277:20283   */
              0x00
                /* "#utility.yul":20330:20332   */
              0x60
                /* "#utility.yul":20318:20327   */
              dup5
                /* "#utility.yul":20309:20316   */
              dup7
                /* "#utility.yul":20305:20328   */
              sub
                /* "#utility.yul":20301:20333   */
              slt
                /* "#utility.yul":20298:20350   */
              iszero
              tag_1047
              jumpi
                /* "#utility.yul":20346:20347   */
              0x00
                /* "#utility.yul":20343:20344   */
              dup1
                /* "#utility.yul":20336:20348   */
              revert
                /* "#utility.yul":20298:20350   */
            tag_1047:
                /* "#utility.yul":20385:20394   */
              dup4
                /* "#utility.yul":20372:20395   */
              calldataload
                /* "#utility.yul":20404:20435   */
              tag_1048
                /* "#utility.yul":20429:20434   */
              dup2
                /* "#utility.yul":20404:20435   */
              tag_858
              jump	// in
            tag_1048:
                /* "#utility.yul":20454:20459   */
              swap3
              pop
                /* "#utility.yul":20511:20513   */
              0x20
                /* "#utility.yul":20496:20514   */
              dup5
              add
                /* "#utility.yul":20483:20515   */
              calldataload
                /* "#utility.yul":20524:20557   */
              tag_1049
                /* "#utility.yul":20483:20515   */
              dup2
                /* "#utility.yul":20524:20557   */
              tag_858
              jump	// in
            tag_1049:
                /* "#utility.yul":20154:20640   */
              swap3
              swap6
                /* "#utility.yul":20576:20583   */
              swap3
              swap5
              pop
              pop
              pop
                /* "#utility.yul":20630:20632   */
              0x40
                /* "#utility.yul":20615:20633   */
              swap2
              swap1
              swap2
              add
                /* "#utility.yul":20602:20634   */
              calldataload
              swap1
                /* "#utility.yul":20154:20640   */
              jump	// out
                /* "#utility.yul":20853:21037   */
            tag_183:
                /* "#utility.yul":20923:20929   */
              0x00
                /* "#utility.yul":20976:20978   */
              0x20
                /* "#utility.yul":20964:20973   */
              dup3
                /* "#utility.yul":20955:20962   */
              dup5
                /* "#utility.yul":20951:20974   */
              sub
                /* "#utility.yul":20947:20979   */
              slt
                /* "#utility.yul":20944:20996   */
              iszero
              tag_1052
              jumpi
                /* "#utility.yul":20992:20993   */
              0x00
                /* "#utility.yul":20989:20990   */
              dup1
                /* "#utility.yul":20982:20994   */
              revert
                /* "#utility.yul":20944:20996   */
            tag_1052:
              pop
                /* "#utility.yul":21015:21031   */
              mload
              swap2
                /* "#utility.yul":20853:21037   */
              swap1
              pop
              jump	// out
                /* "#utility.yul":21042:21169   */
            tag_186:
                /* "#utility.yul":21103:21113   */
              0x4e487b71
                /* "#utility.yul":21098:21101   */
              0xe0
                /* "#utility.yul":21094:21114   */
              shl
                /* "#utility.yul":21091:21092   */
              0x00
                /* "#utility.yul":21084:21115   */
              mstore
                /* "#utility.yul":21134:21138   */
              0x32
                /* "#utility.yul":21131:21132   */
              0x04
                /* "#utility.yul":21124:21139   */
              mstore
                /* "#utility.yul":21158:21162   */
              0x24
                /* "#utility.yul":21155:21156   */
              0x00
                /* "#utility.yul":21148:21163   */
              revert
                /* "#utility.yul":21174:21301   */
            tag_874:
                /* "#utility.yul":21235:21245   */
              0x4e487b71
                /* "#utility.yul":21230:21233   */
              0xe0
                /* "#utility.yul":21226:21246   */
              shl
                /* "#utility.yul":21223:21224   */
              0x00
                /* "#utility.yul":21216:21247   */
              mstore
                /* "#utility.yul":21266:21270   */
              0x11
                /* "#utility.yul":21263:21264   */
              0x04
                /* "#utility.yul":21256:21271   */
              mstore
                /* "#utility.yul":21290:21294   */
              0x24
                /* "#utility.yul":21287:21288   */
              0x00
                /* "#utility.yul":21280:21295   */
              revert
                /* "#utility.yul":21306:21431   */
            tag_230:
                /* "#utility.yul":21371:21380   */
              dup1
              dup3
              add
                /* "#utility.yul":21392:21402   */
              dup1
              dup3
              gt
                /* "#utility.yul":21389:21425   */
              iszero
              tag_194
              jumpi
                /* "#utility.yul":21405:21423   */
              tag_194
              tag_874
              jump	// in
                /* "#utility.yul":21436:21742   */
            tag_250:
                /* "#utility.yul":21524:21530   */
              0x00
                /* "#utility.yul":21532:21538   */
              dup1
                /* "#utility.yul":21540:21546   */
              0x00
                /* "#utility.yul":21593:21595   */
              0x60
                /* "#utility.yul":21581:21590   */
              dup5
                /* "#utility.yul":21572:21579   */
              dup7
                /* "#utility.yul":21568:21591   */
              sub
                /* "#utility.yul":21564:21596   */
              slt
                /* "#utility.yul":21561:21613   */
              iszero
              tag_1059
              jumpi
                /* "#utility.yul":21609:21610   */
              0x00
                /* "#utility.yul":21606:21607   */
              dup1
                /* "#utility.yul":21599:21611   */
              revert
                /* "#utility.yul":21561:21613   */
            tag_1059:
                /* "#utility.yul":21638:21647   */
              dup4
                /* "#utility.yul":21632:21648   */
              mload
                /* "#utility.yul":21622:21648   */
              swap3
              pop
                /* "#utility.yul":21688:21690   */
              0x20
                /* "#utility.yul":21677:21686   */
              dup5
                /* "#utility.yul":21673:21691   */
              add
                /* "#utility.yul":21667:21692   */
              mload
                /* "#utility.yul":21657:21692   */
              swap2
              pop
                /* "#utility.yul":21732:21734   */
              0x40
                /* "#utility.yul":21721:21730   */
              dup5
                /* "#utility.yul":21717:21735   */
              add
                /* "#utility.yul":21711:21736   */
              mload
                /* "#utility.yul":21701:21736   */
              swap1
              pop
                /* "#utility.yul":21436:21742   */
              swap3
              pop
              swap3
              pop
              swap3
              jump	// out
                /* "#utility.yul":21946:22121   */
            tag_391:
                /* "#utility.yul":21983:21986   */
              0x00
                /* "#utility.yul":22027:22031   */
              0xff
                /* "#utility.yul":22020:22025   */
              dup3
                /* "#utility.yul":22016:22032   */
              and
                /* "#utility.yul":22056:22060   */
              0xff
                /* "#utility.yul":22047:22054   */
              dup2
                /* "#utility.yul":22044:22061   */
              sub
                /* "#utility.yul":22041:22084   */
              tag_1063
              jumpi
                /* "#utility.yul":22064:22082   */
              tag_1063
              tag_874
              jump	// in
            tag_1063:
                /* "#utility.yul":22113:22114   */
              0x01
                /* "#utility.yul":22100:22115   */
              add
              swap3
                /* "#utility.yul":21946:22121   */
              swap2
              pop
              pop
              jump	// out
                /* "#utility.yul":22126:22399   */
            tag_397:
                /* "#utility.yul":22194:22200   */
              0x00
                /* "#utility.yul":22247:22249   */
              0x20
                /* "#utility.yul":22235:22244   */
              dup3
                /* "#utility.yul":22226:22233   */
              dup5
                /* "#utility.yul":22222:22245   */
              sub
                /* "#utility.yul":22218:22250   */
              slt
                /* "#utility.yul":22215:22267   */
              iszero
              tag_1065
              jumpi
                /* "#utility.yul":22263:22264   */
              0x00
                /* "#utility.yul":22260:22261   */
              dup1
                /* "#utility.yul":22253:22265   */
              revert
                /* "#utility.yul":22215:22267   */
            tag_1065:
                /* "#utility.yul":22295:22304   */
              dup2
                /* "#utility.yul":22289:22305   */
              mload
                /* "#utility.yul":22345:22349   */
              0xff
                /* "#utility.yul":22338:22343   */
              dup2
                /* "#utility.yul":22334:22350   */
              and
                /* "#utility.yul":22327:22332   */
              dup2
                /* "#utility.yul":22324:22351   */
              eq
                /* "#utility.yul":22314:22369   */
              tag_281
              jumpi
                /* "#utility.yul":22365:22366   */
              0x00
                /* "#utility.yul":22362:22363   */
              dup1
                /* "#utility.yul":22355:22367   */
              revert
                /* "#utility.yul":22404:22826   */
            tag_875:
                /* "#utility.yul":22493:22494   */
              0x01
                /* "#utility.yul":22536:22541   */
              dup2
                /* "#utility.yul":22493:22494   */
              dup2
                /* "#utility.yul":22550:22820   */
            tag_1068:
                /* "#utility.yul":22571:22578   */
              dup1
                /* "#utility.yul":22561:22569   */
              dup6
                /* "#utility.yul":22558:22579   */
              gt
                /* "#utility.yul":22550:22820   */
              iszero
              tag_1070
              jumpi
                /* "#utility.yul":22630:22634   */
              dup2
                /* "#utility.yul":22626:22627   */
              0x00
                /* "#utility.yul":22622:22628   */
              not
                /* "#utility.yul":22618:22635   */
              div
                /* "#utility.yul":22612:22616   */
              dup3
                /* "#utility.yul":22609:22636   */
              gt
                /* "#utility.yul":22606:22659   */
              iszero
              tag_1072
              jumpi
                /* "#utility.yul":22639:22657   */
              tag_1072
              tag_874
              jump	// in
            tag_1072:
                /* "#utility.yul":22689:22696   */
              dup1
                /* "#utility.yul":22679:22687   */
              dup6
                /* "#utility.yul":22675:22697   */
              and
                /* "#utility.yul":22672:22727   */
              iszero
              tag_1073
              jumpi
                /* "#utility.yul":22709:22725   */
              swap2
              dup2
              mul
              swap2
                /* "#utility.yul":22672:22727   */
            tag_1073:
                /* "#utility.yul":22788:22810   */
              swap4
              dup5
              shr
              swap4
                /* "#utility.yul":22748:22763   */
              swap1
              dup1
              mul
              swap1
                /* "#utility.yul":22550:22820   */
              jump(tag_1068)
            tag_1070:
                /* "#utility.yul":22554:22557   */
              pop
                /* "#utility.yul":22404:22826   */
              swap3
              pop
              swap3
              swap1
              pop
              jump	// out
                /* "#utility.yul":22831:23637   */
            tag_876:
                /* "#utility.yul":22880:22885   */
              0x00
                /* "#utility.yul":22910:22918   */
              dup3
                /* "#utility.yul":22900:22980   */
              tag_1075
              jumpi
              pop
                /* "#utility.yul":22951:22952   */
              0x01
                /* "#utility.yul":22965:22970   */
              jump(tag_194)
                /* "#utility.yul":22900:22980   */
            tag_1075:
                /* "#utility.yul":22999:23003   */
              dup2
                /* "#utility.yul":22989:23065   */
              tag_1076
              jumpi
              pop
                /* "#utility.yul":23036:23037   */
              0x00
                /* "#utility.yul":23050:23055   */
              jump(tag_194)
                /* "#utility.yul":22989:23065   */
            tag_1076:
                /* "#utility.yul":23081:23085   */
              dup2
                /* "#utility.yul":23099:23100   */
              0x01
                /* "#utility.yul":23094:23153   */
              dup2
              eq
              tag_1078
              jumpi
                /* "#utility.yul":23167:23168   */
              0x02
                /* "#utility.yul":23162:23292   */
              dup2
              eq
              tag_1079
              jumpi
                /* "#utility.yul":23074:23292   */
              jump(tag_1077)
                /* "#utility.yul":23094:23153   */
            tag_1078:
                /* "#utility.yul":23124:23125   */
              0x01
                /* "#utility.yul":23115:23125   */
              swap2
              pop
                /* "#utility.yul":23138:23143   */
              pop
              jump(tag_194)
                /* "#utility.yul":23162:23292   */
            tag_1079:
                /* "#utility.yul":23199:23202   */
              0xff
                /* "#utility.yul":23189:23197   */
              dup5
                /* "#utility.yul":23186:23203   */
              gt
                /* "#utility.yul":23183:23226   */
              iszero
              tag_1081
              jumpi
                /* "#utility.yul":23206:23224   */
              tag_1081
              tag_874
              jump	// in
            tag_1081:
              pop
              pop
                /* "#utility.yul":23262:23263   */
              0x01
                /* "#utility.yul":23248:23264   */
              dup3
              shl
                /* "#utility.yul":23277:23282   */
              jump(tag_194)
                /* "#utility.yul":23074:23292   */
            tag_1077:
              pop
                /* "#utility.yul":23376:23378   */
              0x20
                /* "#utility.yul":23366:23374   */
              dup4
                /* "#utility.yul":23363:23379   */
              lt
                /* "#utility.yul":23357:23360   */
              0x0133
                /* "#utility.yul":23351:23355   */
              dup4
                /* "#utility.yul":23348:23361   */
              lt
                /* "#utility.yul":23344:23380   */
              and
                /* "#utility.yul":23338:23340   */
              0x4e
                /* "#utility.yul":23328:23336   */
              dup5
                /* "#utility.yul":23325:23341   */
              lt
                /* "#utility.yul":23320:23322   */
              0x0b
                /* "#utility.yul":23314:23318   */
              dup5
                /* "#utility.yul":23311:23323   */
              lt
                /* "#utility.yul":23307:23342   */
              and
                /* "#utility.yul":23304:23381   */
              or
                /* "#utility.yul":23301:23460   */
              iszero
              tag_1082
              jumpi
              pop
                /* "#utility.yul":23413:23432   */
              dup2
              dup2
              exp
                /* "#utility.yul":23445:23450   */
              jump(tag_194)
                /* "#utility.yul":23301:23460   */
            tag_1082:
                /* "#utility.yul":23492:23526   */
              tag_1083
                /* "#utility.yul":23517:23525   */
              dup4
                /* "#utility.yul":23511:23515   */
              dup4
                /* "#utility.yul":23492:23526   */
              tag_875
              jump	// in
            tag_1083:
                /* "#utility.yul":23562:23568   */
              dup1
                /* "#utility.yul":23558:23559   */
              0x00
                /* "#utility.yul":23554:23560   */
              not
                /* "#utility.yul":23550:23569   */
              div
                /* "#utility.yul":23541:23548   */
              dup3
                /* "#utility.yul":23538:23570   */
              gt
                /* "#utility.yul":23535:23593   */
              iszero
              tag_1085
              jumpi
                /* "#utility.yul":23573:23591   */
              tag_1085
              tag_874
              jump	// in
            tag_1085:
                /* "#utility.yul":23611:23631   */
              mul
              swap4
                /* "#utility.yul":22831:23637   */
              swap3
              pop
              pop
              pop
              jump	// out
                /* "#utility.yul":23642:23782   */
            tag_399:
                /* "#utility.yul":23700:23705   */
              0x00
                /* "#utility.yul":23729:23776   */
              tag_281
                /* "#utility.yul":23770:23774   */
              0xff
                /* "#utility.yul":23760:23768   */
              dup5
                /* "#utility.yul":23756:23775   */
              and
                /* "#utility.yul":23750:23754   */
              dup4
                /* "#utility.yul":23729:23776   */
              tag_876
              jump	// in
                /* "#utility.yul":23787:23914   */
            tag_815:
                /* "#utility.yul":23848:23858   */
              0x4e487b71
                /* "#utility.yul":23843:23846   */
              0xe0
                /* "#utility.yul":23839:23859   */
              shl
                /* "#utility.yul":23836:23837   */
              0x00
                /* "#utility.yul":23829:23860   */
              mstore
                /* "#utility.yul":23879:23883   */
              0x12
                /* "#utility.yul":23876:23877   */
              0x04
                /* "#utility.yul":23869:23884   */
              mstore
                /* "#utility.yul":23903:23907   */
              0x24
                /* "#utility.yul":23900:23901   */
              0x00
                /* "#utility.yul":23893:23908   */
              revert
                /* "#utility.yul":23919:24039   */
            tag_409:
                /* "#utility.yul":23959:23960   */
              0x00
                /* "#utility.yul":23985:23986   */
              dup3
                /* "#utility.yul":23975:24010   */
              tag_1091
              jumpi
                /* "#utility.yul":23990:24008   */
              tag_1091
              tag_815
              jump	// in
            tag_1091:
              pop
                /* "#utility.yul":24024:24033   */
              div
              swap1
                /* "#utility.yul":23919:24039   */
              jump	// out
                /* "#utility.yul":24044:24172   */
            tag_427:
                /* "#utility.yul":24111:24120   */
              dup2
              dup2
              sub
                /* "#utility.yul":24132:24143   */
              dup2
              dup2
              gt
                /* "#utility.yul":24129:24166   */
              iszero
              tag_194
              jumpi
                /* "#utility.yul":24146:24164   */
              tag_194
              tag_874
              jump	// in
                /* "#utility.yul":24177:24345   */
            tag_429:
                /* "#utility.yul":24250:24259   */
              dup1
              dup3
              mul
                /* "#utility.yul":24281:24290   */
              dup2
              iszero
                /* "#utility.yul":24298:24313   */
              dup3
              dup3
              div
                /* "#utility.yul":24292:24314   */
              dup5
              eq
                /* "#utility.yul":24278:24315   */
              or
                /* "#utility.yul":24268:24339   */
              tag_194
              jumpi
                /* "#utility.yul":24319:24337   */
              tag_194
              tag_874
              jump	// in
                /* "#utility.yul":24350:24522   */
            tag_461:
                /* "#utility.yul":24417:24427   */
              0xffffffff
                /* "#utility.yul":24447:24457   */
              dup2
              dup2
              and
                /* "#utility.yul":24459:24469   */
              dup4
              dup3
              and
                /* "#utility.yul":24443:24470   */
              add
              swap1
                /* "#utility.yul":24482:24493   */
              dup1
              dup3
              gt
                /* "#utility.yul":24479:24516   */
              iszero
              tag_1100
              jumpi
                /* "#utility.yul":24496:24514   */
              tag_1100
              tag_874
              jump	// in
            tag_1100:
                /* "#utility.yul":24479:24516   */
              pop
                /* "#utility.yul":24350:24522   */
              swap3
              swap2
              pop
              pop
              jump	// out
                /* "#utility.yul":24527:24702   */
            tag_493:
                /* "#utility.yul":24595:24605   */
              0xffffffff
                /* "#utility.yul":24638:24648   */
              dup3
              dup2
              and
                /* "#utility.yul":24626:24636   */
              dup3
              dup3
              and
                /* "#utility.yul":24622:24649   */
              sub
              swap1
                /* "#utility.yul":24661:24673   */
              dup1
              dup3
              gt
                /* "#utility.yul":24658:24696   */
              iszero
              tag_1100
              jumpi
                /* "#utility.yul":24676:24694   */
              tag_1100
              tag_874
              jump	// in
                /* "#utility.yul":25103:25300   */
            tag_525:
              sub(shl(0x80, 0x01), 0x01)
                /* "#utility.yul":25225:25235   */
              dup2
              dup2
              and
                /* "#utility.yul":25237:25247   */
              dup4
              dup3
              and
                /* "#utility.yul":25221:25248   */
              add
              swap1
                /* "#utility.yul":25260:25271   */
              dup1
              dup3
              gt
                /* "#utility.yul":25257:25294   */
              iszero
              tag_1100
              jumpi
                /* "#utility.yul":25274:25292   */
              tag_1100
              tag_874
              jump	// in
                /* "#utility.yul":25711:25823   */
            tag_589:
                /* "#utility.yul":25743:25744   */
              0x00
                /* "#utility.yul":25769:25770   */
              dup3
                /* "#utility.yul":25759:25794   */
              tag_1111
              jumpi
                /* "#utility.yul":25774:25792   */
              tag_1111
              tag_815
              jump	// in
            tag_1111:
              pop
                /* "#utility.yul":25808:25817   */
              mod
              swap1
                /* "#utility.yul":25711:25823   */
              jump	// out
                /* "#utility.yul":26107:26352   */
            tag_607:
                /* "#utility.yul":26186:26192   */
              0x00
                /* "#utility.yul":26194:26200   */
              dup1
                /* "#utility.yul":26247:26249   */
              0x40
                /* "#utility.yul":26235:26244   */
              dup4
                /* "#utility.yul":26226:26233   */
              dup6
                /* "#utility.yul":26222:26245   */
              sub
                /* "#utility.yul":26218:26250   */
              slt
                /* "#utility.yul":26215:26267   */
              iszero
              tag_1114
              jumpi
                /* "#utility.yul":26263:26264   */
              0x00
                /* "#utility.yul":26260:26261   */
              dup1
                /* "#utility.yul":26253:26265   */
              revert
                /* "#utility.yul":26215:26267   */
            tag_1114:
              pop
              pop
                /* "#utility.yul":26286:26302   */
              dup1
              mload
                /* "#utility.yul":26342:26344   */
              0x20
                /* "#utility.yul":26327:26345   */
              swap1
              swap2
              add
                /* "#utility.yul":26321:26346   */
              mload
                /* "#utility.yul":26286:26302   */
              swap1
              swap3
                /* "#utility.yul":26321:26346   */
              swap1
              swap2
              pop
                /* "#utility.yul":26107:26352   */
              jump	// out
                /* "#utility.yul":26357:26493   */
            tag_669:
                /* "#utility.yul":26392:26395   */
              0x00
              shl(0xff, 0x01)
                /* "#utility.yul":26413:26435   */
              dup3
              add
                /* "#utility.yul":26410:26458   */
              tag_1117
              jumpi
                /* "#utility.yul":26438:26456   */
              tag_1117
              tag_874
              jump	// in
            tag_1117:
              pop
                /* "#utility.yul":26478:26479   */
              0x00
                /* "#utility.yul":26474:26487   */
              sub
              swap1
                /* "#utility.yul":26357:26493   */
              jump	// out
                /* "#utility.yul":26498:26698   */
            tag_685:
                /* "#utility.yul":26564:26573   */
              dup2
              dup2
              sub
                /* "#utility.yul":26537:26541   */
              0x00
                /* "#utility.yul":26592:26601   */
              dup4
              slt
                /* "#utility.yul":26620:26630   */
              dup1
              iszero
                /* "#utility.yul":26632:26644   */
              dup4
              dup4
              sgt
                /* "#utility.yul":26616:26645   */
              and
                /* "#utility.yul":26655:26667   */
              dup4
              dup4
              slt
                /* "#utility.yul":26647:26668   */
              dup3
              and
                /* "#utility.yul":26613:26669   */
              or
                /* "#utility.yul":26610:26692   */
              iszero
              tag_1100
              jumpi
                /* "#utility.yul":26672:26690   */
              tag_1100
              tag_874
              jump	// in
                /* "#utility.yul":26703:26940   */
            tag_746:
                /* "#utility.yul":26775:26784   */
              dup1
              dup3
              mul
                /* "#utility.yul":26742:26749   */
              0x00
                /* "#utility.yul":26800:26809   */
              dup3
              slt
              shl(0xff, 0x01)
                /* "#utility.yul":26811:26829   */
              dup5
              eq
                /* "#utility.yul":26796:26830   */
              and
                /* "#utility.yul":26793:26853   */
              iszero
              tag_1123
              jumpi
                /* "#utility.yul":26833:26851   */
              tag_1123
              tag_874
              jump	// in
            tag_1123:
                /* "#utility.yul":26906:26907   */
              dup2
                /* "#utility.yul":26897:26904   */
              dup2
                /* "#utility.yul":26892:26908   */
              sdiv
                /* "#utility.yul":26889:26890   */
              dup4
                /* "#utility.yul":26886:26909   */
              eq
                /* "#utility.yul":26882:26883   */
              dup3
                /* "#utility.yul":26875:26884   */
              iszero
                /* "#utility.yul":26872:26910   */
              or
                /* "#utility.yul":26862:26934   */
              tag_194
              jumpi
                /* "#utility.yul":26914:26932   */
              tag_194
              tag_874
              jump	// in
                /* "#utility.yul":26945:27138   */
            tag_749:
                /* "#utility.yul":26984:26985   */
              0x00
                /* "#utility.yul":27010:27011   */
              dup3
                /* "#utility.yul":27000:27035   */
              tag_1128
              jumpi
                /* "#utility.yul":27015:27033   */
              tag_1128
              tag_815
              jump	// in
            tag_1128:
              shl(0xff, 0x01)
                /* "#utility.yul":27051:27069   */
              dup3
              eq
              not(0x00)
                /* "#utility.yul":27071:27084   */
              dup5
              eq
                /* "#utility.yul":27047:27085   */
              and
                /* "#utility.yul":27044:27108   */
              iszero
              tag_1130
              jumpi
                /* "#utility.yul":27088:27106   */
              tag_1130
              tag_874
              jump	// in
            tag_1130:
              pop
                /* "#utility.yul":27122:27132   */
              sdiv
              swap1
                /* "#utility.yul":26945:27138   */
              jump	// out
                /* "#utility.yul":27143:27420   */
            tag_764:
                /* "#utility.yul":27239:27245   */
              0x00
                /* "#utility.yul":27292:27294   */
              0x20
                /* "#utility.yul":27280:27289   */
              dup3
                /* "#utility.yul":27271:27278   */
              dup5
                /* "#utility.yul":27267:27290   */
              sub
                /* "#utility.yul":27263:27295   */
              slt
                /* "#utility.yul":27260:27312   */
              iszero
              tag_1132
              jumpi
                /* "#utility.yul":27308:27309   */
              0x00
                /* "#utility.yul":27305:27306   */
              dup1
                /* "#utility.yul":27298:27310   */
              revert
                /* "#utility.yul":27260:27312   */
            tag_1132:
                /* "#utility.yul":27340:27349   */
              dup2
                /* "#utility.yul":27334:27350   */
              mload
                /* "#utility.yul":27359:27390   */
              tag_281
                /* "#utility.yul":27384:27389   */
              dup2
                /* "#utility.yul":27359:27390   */
              tag_858
              jump	// in
                /* "#utility.yul":27425:27748   */
            tag_877:
                /* "#utility.yul":27467:27470   */
              0x00
                /* "#utility.yul":27505:27510   */
              dup2
                /* "#utility.yul":27499:27511   */
              mload
                /* "#utility.yul":27529:27530   */
              0x00
                /* "#utility.yul":27539:27667   */
            tag_1135:
                /* "#utility.yul":27553:27559   */
              dup2
                /* "#utility.yul":27550:27551   */
              dup2
                /* "#utility.yul":27547:27560   */
              lt
                /* "#utility.yul":27539:27667   */
              iszero
              tag_1137
              jumpi
                /* "#utility.yul":27650:27654   */
              0x20
                /* "#utility.yul":27635:27648   */
              dup2
              dup6
              add
                /* "#utility.yul":27631:27655   */
              dup2
              add
                /* "#utility.yul":27625:27656   */
              mload
                /* "#utility.yul":27612:27623   */
              dup7
              dup4
              add
                /* "#utility.yul":27605:27657   */
              mstore
                /* "#utility.yul":27568:27580   */
              add
                /* "#utility.yul":27539:27667   */
              jump(tag_1135)
            tag_1137:
              pop
                /* "#utility.yul":27722:27723   */
              0x00
                /* "#utility.yul":27686:27702   */
              swap4
              add
                /* "#utility.yul":27711:27724   */
              swap3
              dup4
              mstore
              pop
                /* "#utility.yul":27686:27702   */
              swap1
              swap2
                /* "#utility.yul":27425:27748   */
              swap1
              pop
              jump	// out
                /* "#utility.yul":27753:28348   */
            tag_805:
                /* "#utility.yul":28164:28189   */
              0x416363657373436f6e74726f6c3a206163636f756e7420000000000000000000
                /* "#utility.yul":28159:28162   */
              dup2
                /* "#utility.yul":28152:28190   */
              mstore
                /* "#utility.yul":28134:28137   */
              0x00
                /* "#utility.yul":28209:28248   */
              tag_1139
                /* "#utility.yul":28244:28246   */
              0x17
                /* "#utility.yul":28239:28242   */
              dup4
                /* "#utility.yul":28235:28247   */
              add
                /* "#utility.yul":28227:28233   */
              dup6
                /* "#utility.yul":28209:28248   */
              tag_877
              jump	// in
            tag_1139:
              shl(0x7d, 0x01034b99036b4b9b9b4b733903937b6329)
                /* "#utility.yul":28264:28266   */
              dup2
                /* "#utility.yul":28257:28288   */
              mstore
                /* "#utility.yul":28304:28342   */
              tag_795
                /* "#utility.yul":28338:28340   */
              0x11
                /* "#utility.yul":28334:28336   */
              dup3
                /* "#utility.yul":28330:28341   */
              add
                /* "#utility.yul":28322:28328   */
              dup6
                /* "#utility.yul":28304:28342   */
              tag_877
              jump	// in
                /* "#utility.yul":28353:28489   */
            tag_852:
                /* "#utility.yul":28392:28395   */
              0x00
                /* "#utility.yul":28420:28425   */
              dup2
                /* "#utility.yul":28410:28449   */
              tag_1143
              jumpi
                /* "#utility.yul":28429:28447   */
              tag_1143
              tag_874
              jump	// in
            tag_1143:
              pop
              not(0x00)
                /* "#utility.yul":28465:28483   */
              add
              swap1
                /* "#utility.yul":28353:28489   */
              jump	// out

            auxdata: 0xa2646970667358221220cffad097f7b04de722feb429764cc441c0b0252312ed41c802e23537064e4e0864736f6c63430008110033
        }
    }

    auxdata: 0xa2646970667358221220ae3a9546f77ed351a7cf8e974f1e50fe9e61a462224f594156e84b389236d9fa64736f6c63430008110033
}

